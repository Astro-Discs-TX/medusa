{
	"id": 56456,
	"name": "workflows",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 57864,
			"name": "IDistributedTransactionStorage",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 57865,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57866,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57867,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57868,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 56833,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											},
											{
												"type": "reference",
												"target": 58027,
												"name": "StepFeatures",
												"package": "@medusajs/orchestration"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 57869,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 57870,
															"name": "isCancelling",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
																	"line": 13,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																57870
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
															"line": 12,
															"character": 52
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 57907,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57871,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57872,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 57907,
											"name": "TransactionCheckpoint",
											"package": "@medusajs/orchestration"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57873,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57874,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57875,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57876,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57907,
										"name": "TransactionCheckpoint",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57877,
									"name": "ttl",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 57878,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58009,
										"name": "TransactionOptions",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57879,
					"name": "scheduleRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57880,
							"name": "scheduleRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57881,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57882,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57800,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57883,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 57884,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57885,
					"name": "clearRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57886,
							"name": "clearRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57887,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57888,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57800,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57889,
					"name": "scheduleTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57890,
							"name": "scheduleTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57891,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57892,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 57893,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57894,
					"name": "scheduleStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57895,
							"name": "scheduleStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57896,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57897,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57800,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57898,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 57899,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57900,
					"name": "clearTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57901,
							"name": "clearTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57902,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57903,
					"name": "clearStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57904,
							"name": "clearStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57905,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57906,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57800,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						57865,
						57871,
						57873,
						57879,
						57885,
						57889,
						57894,
						57900,
						57903
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
					"line": 11,
					"character": 17
				}
			]
		},
		{
			"id": 56984,
			"name": "TransactionMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56985,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 56986,
							"name": "model_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 56987,
							"name": "idempotency_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 56988,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 56989,
							"name": "action_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57254,
								"name": "TransactionHandlerType",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 56990,
							"name": "attempt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 56991,
							"name": "timestamp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								56986,
								56987,
								56988,
								56989,
								56990,
								56991
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 14,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 57007,
			"name": "TransactionContext",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 57013,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing the initial payload."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 57014,
					"name": "invoke",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing responses of Invoke handlers on steps flagged with saveResponse."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 57015,
					"name": "compensate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing responses of Compensate handlers on steps flagged with saveResponse."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 57008,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57009,
							"name": "TransactionContext",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57010,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 57011,
									"name": "invoke",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 57012,
									"name": "compensate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57007,
								"name": "TransactionContext",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						57008
					]
				},
				{
					"title": "Properties",
					"children": [
						57013,
						57014,
						57015
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 28,
					"character": 21
				}
			]
		},
		{
			"id": 57946,
			"name": "TransactionStepError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 57952,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57953,
					"name": "handlerType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57254,
						"name": "TransactionHandlerType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 57954,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57947,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57948,
							"name": "TransactionStepError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57949,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57950,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57254,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 57951,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57946,
								"name": "TransactionStepError",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						57947
					]
				},
				{
					"title": "Properties",
					"children": [
						57952,
						57953,
						57954
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 34,
					"character": 21
				}
			]
		},
		{
			"id": 57907,
			"name": "TransactionCheckpoint",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 57913,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57916,
						"name": "TransactionFlow",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 57914,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57007,
						"name": "TransactionContext",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 57915,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 57946,
							"name": "TransactionStepError",
							"package": "@medusajs/orchestration"
						}
					}
				},
				{
					"id": 57908,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57909,
							"name": "TransactionCheckpoint",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 44,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57910,
									"name": "flow",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57916,
										"name": "TransactionFlow",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57911,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57007,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57912,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 57946,
											"name": "TransactionStepError",
											"package": "@medusajs/orchestration"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57907,
								"name": "TransactionCheckpoint",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						57908
					]
				},
				{
					"title": "Properties",
					"children": [
						57913,
						57914,
						57915
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 40,
					"character": 21
				}
			]
		},
		{
			"id": 58000,
			"name": "TransactionPayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 58006,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 56984,
						"name": "TransactionMetadata",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58007,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 58008,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57007,
						"name": "TransactionContext",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58001,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 55,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58002,
							"name": "TransactionPayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58003,
									"name": "metadata",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The metadata of the transaction."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 56984,
										"name": "TransactionMetadata",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58004,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The initial payload data to begin a transation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 58005,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object gathering responses of all steps flagged with saveResponse."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 57007,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58000,
								"name": "TransactionPayload",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58001
					]
				},
				{
					"title": "Properties",
					"children": [
						58006,
						58007,
						58008
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 46,
					"character": 21
				}
			]
		},
		{
			"id": 57422,
			"name": "DistributedTransaction",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "DistributedTransaction represents a distributed transaction, which is a transaction that is composed of multiple steps that are executed in a specific order."
					}
				]
			},
			"children": [
				{
					"id": 57442,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57443,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 62,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57444,
					"name": "handler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57627,
						"name": "TransactionStepHandler",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 57445,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 64,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57446,
					"name": "modelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57447,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 66,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57448,
					"name": "runId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 67,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57449,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 68,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57450,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 69,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57423,
					"name": "keyValueStore",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 70,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57424,
					"name": "setStorage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 71,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 57425,
							"name": "setStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 71,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 57426,
									"name": "storage",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57864,
										"name": "IDistributedTransactionStorage",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 57427,
					"name": "keyPrefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 72,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57435,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57436,
							"name": "DistributedTransaction",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 73,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57437,
									"name": "flow",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57916,
										"name": "TransactionFlow",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57438,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57627,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57439,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 57440,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 57946,
											"name": "TransactionStepError",
											"package": "@medusajs/orchestration"
										}
									}
								},
								{
									"id": 57441,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57007,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57422,
								"name": "DistributedTransaction",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 57451,
					"name": "getFlow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 74,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57452,
							"name": "getFlow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57916,
								"name": "TransactionFlow",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57453,
					"name": "getContext",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 75,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57454,
							"name": "getContext",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57007,
								"name": "TransactionContext",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57455,
					"name": "getErrors",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 76,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57456,
							"name": "getErrors",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 76,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57457,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57254,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 57946,
									"name": "TransactionStepError",
									"package": "@medusajs/orchestration"
								}
							}
						}
					]
				},
				{
					"id": 57458,
					"name": "addError",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 77,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57459,
							"name": "addError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 77,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57460,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57461,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57254,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 57462,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 57463,
					"name": "addResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 78,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57464,
							"name": "addResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 78,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57465,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57466,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57254,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 57467,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 57468,
					"name": "hasFinished",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 79,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57469,
							"name": "hasFinished",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 79,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57470,
					"name": "getState",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 80,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57471,
							"name": "getState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57955,
								"name": "TransactionState",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 57472,
					"name": "isPartiallyCompleted",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 81,
							"character": 8
						}
					],
					"getSignature": {
						"id": 57473,
						"name": "isPartiallyCompleted",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
								"line": 81,
								"character": 8
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 57474,
					"name": "canInvoke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 82,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57475,
							"name": "canInvoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 82,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57476,
					"name": "canRevert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 83,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57477,
							"name": "canRevert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 83,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57478,
					"name": "hasTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 84,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57479,
							"name": "hasTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57480,
					"name": "getTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57481,
							"name": "getTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 85,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 57482,
					"name": "saveCheckpoint",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 86,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57483,
							"name": "saveCheckpoint",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 86,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57484,
									"name": "ttl",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 57907,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57428,
					"name": "loadTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 87,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 57429,
							"name": "loadTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 87,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 57430,
									"name": "modelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57431,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57432,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57433,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 57434,
													"name": "isCancelling",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
															"line": 88,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														57434
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
													"line": 87,
													"character": 77
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 57907,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57485,
					"name": "scheduleRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 90,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57486,
							"name": "scheduleRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 90,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57487,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57800,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57488,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57489,
					"name": "clearRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 91,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57490,
							"name": "clearRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 91,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57491,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57800,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57492,
					"name": "scheduleTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 92,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57493,
							"name": "scheduleTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 92,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57494,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57495,
					"name": "clearTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 93,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57496,
							"name": "clearTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 93,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57497,
					"name": "scheduleStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 94,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57498,
							"name": "scheduleStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57499,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57800,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57500,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57501,
					"name": "clearStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 95,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57502,
							"name": "clearStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 95,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57503,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57800,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57504,
					"name": "setTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 96,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57505,
							"name": "setTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 96,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57506,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57507,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 57508,
					"name": "getTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 97,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57509,
							"name": "getTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 97,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57510,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 57511,
					"name": "hasTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 98,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57512,
							"name": "hasTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 98,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57513,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						57435
					]
				},
				{
					"title": "Properties",
					"children": [
						57442,
						57443,
						57444,
						57445,
						57446,
						57447,
						57448,
						57449,
						57450,
						57423,
						57427
					]
				},
				{
					"title": "Accessors",
					"children": [
						57472
					]
				},
				{
					"title": "Methods",
					"children": [
						57424,
						57451,
						57453,
						57455,
						57458,
						57463,
						57468,
						57470,
						57474,
						57476,
						57478,
						57480,
						57482,
						57428,
						57485,
						57489,
						57492,
						57495,
						57497,
						57501,
						57504,
						57508,
						57511
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 60,
					"character": 14
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 57221,
			"name": "BaseStepErrror",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 57227,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57222,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57223,
							"name": "BaseStepErrror",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57224,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 57225,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57226,
									"name": "stepResponse",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57221,
								"name": "BaseStepErrror",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.constructor"
					}
				},
				{
					"id": 57228,
					"name": "getStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57229,
							"name": "getStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						57222
					]
				},
				{
					"title": "Properties",
					"children": [
						57227
					]
				},
				{
					"title": "Methods",
					"children": [
						57228
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
					"line": 1,
					"character": 14
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Error"
					},
					"name": "Error",
					"package": "typescript"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 56841,
					"name": "SkipStepResponse"
				}
			]
		},
		{
			"id": 56841,
			"name": "SkipStepResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 56849,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 57227,
						"name": "BaseStepErrror.#private"
					}
				},
				{
					"id": 56850,
					"name": "getStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56851,
							"name": "getStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 57229,
								"name": "BaseStepErrror.getStepResponse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 57228,
						"name": "BaseStepErrror.getStepResponse"
					}
				},
				{
					"id": 56842,
					"name": "isSkipStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 11,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 56843,
							"name": "isSkipStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 11,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 56844,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "error",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 56841,
									"name": "SkipStepResponse",
									"package": "@medusajs/orchestration"
								}
							}
						}
					]
				},
				{
					"id": 56845,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56846,
							"name": "SkipStepResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 56847,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56848,
									"name": "stepResponse",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56841,
								"name": "SkipStepResponse",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": 57223,
								"name": "BaseStepErrror.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 57222,
						"name": "BaseStepErrror.constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						56845
					]
				},
				{
					"title": "Properties",
					"children": [
						56849
					]
				},
				{
					"title": "Methods",
					"children": [
						56850,
						56842
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
					"line": 10,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 57221,
					"name": "BaseStepErrror",
					"package": "@medusajs/orchestration"
				}
			]
		},
		{
			"id": 57230,
			"name": "InternalStep",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the structure and behavior of a single step within a transaction workflow."
					}
				]
			},
			"children": [
				{
					"id": 57231,
					"name": "next",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the next step(s) to execute after this step. Can be a single step or an array of steps."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 57230,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 57230,
									"name": "InternalStep",
									"package": "@medusajs/orchestration"
								}
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.next"
					}
				},
				{
					"id": 57232,
					"name": "depth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 57233,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 57230,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						]
					}
				},
				{
					"id": 57234,
					"name": "uuid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier for the transaction step.\nThis is set automatically when declaring a workflow with \"createWorkflow\""
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.uuid"
					}
				},
				{
					"id": 57235,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the action to be performed in this step.\n\"name\" is an alias for action when creating a workflow with \"createWorkflow\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.action"
					}
				},
				{
					"id": 57236,
					"name": "continueOnPermanentFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the workflow should continue even if there is a permanent failure in this step.\nIn case it is set to true, the the current step will be marked as TransactionStepState.PERMANENT_FAILURE and the next steps will be executed."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.continueOnPermanentFailure"
					}
				},
				{
					"id": 57237,
					"name": "skipOnPermanentFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the workflow should skip all subsequent steps in case of a permanent failure in this step.\nIn case it is set to true, the next steps of the workflow will not be executed and their status will be marked as TransactionStepState.SKIPPED_FAILURE.\nIn case it is a string, the next steps until the step name provided will be skipped and the workflow will be resumed from the step provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.skipOnPermanentFailure"
					}
				},
				{
					"id": 57238,
					"name": "noCompensation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, no compensation action will be triggered for this step in case of a failure."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.noCompensation"
					}
				},
				{
					"id": 57239,
					"name": "maxRetries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of times this step should be retried in case of temporary failures.\nThe default is 0 (no retries)."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.maxRetries"
					}
				},
				{
					"id": 57240,
					"name": "retryInterval",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The interval (in seconds) between retry attempts after a temporary failure.\nThe default is to retry immediately."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.retryInterval"
					}
				},
				{
					"id": 57241,
					"name": "retryIntervalAwaiting",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The interval (in seconds) to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.retryIntervalAwaiting"
					}
				},
				{
					"id": 57242,
					"name": "timeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum amount of time (in seconds) to wait for this step to complete.\nThis is NOT an execution timeout, the step will always be executed and wait for its response.\nIf the response is not received within the timeout set, it will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted as soon as it receives the response."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.timeout"
					}
				},
				{
					"id": 57243,
					"name": "async",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the step is executed asynchronously. This means that the workflow will not wait for the response of this step.\nAsync steps require to have their responses set using \"setStepSuccess\" or \"setStepFailure\", unless it is combined with \"backgroundExecution: true\".\nIf combined with a timeout, and any response is not set within that interval, the step will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted immediately."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 59,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.async"
					}
				},
				{
					"id": 57244,
					"name": "nested",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "It flags where the step contains a sub transaction inside itself."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.nested"
					}
				},
				{
					"id": 57245,
					"name": "backgroundExecution",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "It applies to \"async\" steps only, allowing them to run in the background and automatically complete without external intervention.\nIt is ideal for time-consuming tasks that will be complete after the execution, contrasting with standard \"async\" operations that require a response to be set in a later stage."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 68,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.backgroundExecution"
					}
				},
				{
					"id": 57246,
					"name": "compensateAsync",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the compensation function for this step is executed asynchronously. Which means, the response has to be set using \"setStepSuccess\" or \"setStepFailure\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 72,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.compensateAsync"
					}
				},
				{
					"id": 57247,
					"name": "noWait",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the workflow will not wait for their sibling steps to complete before moving to the next step."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 76,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.noWait"
					}
				},
				{
					"id": 57248,
					"name": "saveResponse",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the response of this step will be stored.\nDefault is true."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 81,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.saveResponse"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						57231,
						57232,
						57233,
						57234,
						57235,
						57236,
						57237,
						57238,
						57239,
						57240,
						57241,
						57242,
						57243,
						57244,
						57245,
						57246,
						57247,
						57248
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
					"line": 2,
					"character": 10
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 56815,
					"name": "TransactionStepsDefinition",
					"package": "@medusajs/orchestration"
				}
			]
		},
		{
			"id": 56870,
			"name": "OrchestratorBuilder",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 56874,
					"name": "steps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 8,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 57230,
						"name": "InternalStep",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 56875,
					"name": "hasChanges_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 9,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 56876,
					"name": "hasChanges",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 10,
							"character": 8
						}
					],
					"getSignature": {
						"id": 56877,
						"name": "hasChanges",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
								"line": 10,
								"character": 8
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 56871,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56872,
							"name": "OrchestratorBuilder",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 56873,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 56815,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 56878,
					"name": "load",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56879,
							"name": "load",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 56880,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 56815,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 56881,
					"name": "addAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56882,
							"name": "addAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 56883,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56884,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 56815,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 56885,
					"name": "replaceAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56886,
							"name": "replaceAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 56887,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56888,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56889,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 56815,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 56890,
					"name": "insertActionBefore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56891,
							"name": "insertActionBefore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 56892,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56893,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56894,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 56815,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 56895,
					"name": "insertActionAfter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56896,
							"name": "insertActionAfter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 56897,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56898,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56899,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 56815,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 56900,
					"name": "appendTo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 17,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 56901,
							"name": "appendTo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 17,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 56902,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 57230,
												"name": "InternalStep",
												"package": "@medusajs/orchestration"
											}
										]
									}
								},
								{
									"id": 56903,
									"name": "newStep",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57230,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 56904,
					"name": "appendAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56905,
							"name": "appendAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 56906,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56907,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56908,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 56815,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 56909,
					"name": "move",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 19,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 56910,
							"name": "move",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 19,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 56911,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56912,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56913,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 56914,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 56915,
													"name": "runInParallel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
															"line": 20,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 56916,
													"name": "mergeNext",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
															"line": 21,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														56915,
														56916
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
													"line": 19,
													"character": 95
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 56917,
					"name": "moveAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56918,
							"name": "moveAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 56919,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56920,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 56921,
					"name": "moveAndMergeNextAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56922,
							"name": "moveAndMergeNextAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 56923,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56924,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 56925,
					"name": "mergeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56926,
							"name": "mergeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 56927,
									"name": "where",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56928,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 56929,
					"name": "deleteAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56930,
							"name": "deleteAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 56931,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56932,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57230,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 56933,
					"name": "pruneAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56934,
							"name": "pruneAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 56935,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 56936,
					"name": "findStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 28,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 56937,
							"name": "findStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 28,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 56938,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56939,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57230,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 57230,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					]
				},
				{
					"id": 56940,
					"name": "findOrThrowStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 29,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 56941,
							"name": "findOrThrowStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 29,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 56942,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56943,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57230,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57230,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 56944,
					"name": "findParentStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 30,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 56945,
							"name": "findParentStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 30,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 56946,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56947,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57230,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 57230,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					]
				},
				{
					"id": 56948,
					"name": "findLastStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 31,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 56949,
							"name": "findLastStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 31,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 56950,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57230,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57230,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 56951,
					"name": "updateDepths",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 32,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 56952,
							"name": "updateDepths",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 32,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 56953,
									"name": "startingStep",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57230,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 56954,
									"name": "parent",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 56955,
									"name": "incr",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 56956,
									"name": "beginFrom",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 56957,
					"name": "build",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 56958,
							"name": "build",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 56815,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						56871
					]
				},
				{
					"title": "Properties",
					"children": [
						56874,
						56875
					]
				},
				{
					"title": "Accessors",
					"children": [
						56876
					]
				},
				{
					"title": "Methods",
					"children": [
						56878,
						56881,
						56885,
						56890,
						56895,
						56900,
						56904,
						56909,
						56917,
						56921,
						56925,
						56929,
						56933,
						56936,
						56940,
						56944,
						56948,
						56951,
						56957
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
					"line": 7,
					"character": 21
				}
			]
		},
		{
			"id": 57636,
			"name": "TransactionOrchestrator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "TransactionOrchestrator is responsible for managing and executing distributed transactions.\nIt is based on a single transaction definition, which is used to execute all the transaction steps"
					}
				]
			},
			"children": [
				{
					"id": 57704,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57637,
					"name": "ROOT_STEP",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 11,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57638,
					"name": "DEFAULT_TTL",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 12,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 57705,
					"name": "invokeSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57706,
					"name": "compensateSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57707,
					"name": "definition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 15,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57708,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57639,
					"name": "DEFAULT_RETRIES",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 17,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 57640,
					"name": "workflowOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 18,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57641,
					"name": "getWorkflowOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 19,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 57642,
							"name": "getWorkflowOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 19,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 57643,
									"name": "modelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58009,
								"name": "TransactionOptions",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57644,
					"name": "traceTransaction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trace workflow transaction for instrumentation"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 57645,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 23,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 57646,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
											"line": 23,
											"character": 30
										}
									],
									"parameters": [
										{
											"id": 57647,
											"name": "transactionResume",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 57648,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 23,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 57649,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 23,
																	"character": 50
																}
															],
															"parameters": [
																{
																	"id": 57650,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 57651,
											"name": "metadata",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 57652,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 57653,
															"name": "model_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 24,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 57654,
															"name": "transaction_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 25,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 57655,
															"name": "flow_metadata",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 26,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 57656,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 57657,
																					"name": "eventGroupId",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 223,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 57658,
																					"name": "parentIdempotencyKey",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 224,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 57659,
																					"name": "sourcePath",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 225,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 57660,
																					"name": "preventReleaseEvents",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 226,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				},
																				{
																					"id": 57661,
																					"name": "parentStepIdempotencyKey",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 227,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						57657,
																						57658,
																						57659,
																						57660,
																						57661
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																					"line": 222,
																					"character": 15
																				}
																			],
																			"indexSignatures": [
																				{
																					"id": 57662,
																					"name": "__index",
																					"variant": "signature",
																					"kind": 8192,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 228,
																							"character": 8
																						}
																					],
																					"parameters": [
																						{
																							"id": 57663,
																							"name": "key",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																57653,
																57654,
																57655
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 23,
															"character": 95
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 57664,
					"name": "traceStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trace workflow steps for instrumentation"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 31,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 57665,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 31,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 57666,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
											"line": 31,
											"character": 23
										}
									],
									"parameters": [
										{
											"id": 57667,
											"name": "handler",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 57668,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 31,
															"character": 33
														}
													],
													"signatures": [
														{
															"id": 57669,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 31,
																	"character": 33
																}
															],
															"parameters": [
																{
																	"id": 57670,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 57671,
											"name": "metadata",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 57672,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 57673,
															"name": "action",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 32,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 57674,
															"name": "type",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 33,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "invoke"
																	},
																	{
																		"type": "literal",
																		"value": "compensate"
																	}
																]
															}
														},
														{
															"id": 57675,
															"name": "step_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 34,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 57676,
															"name": "step_uuid",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 35,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 57677,
															"name": "attempts",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 36,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 57678,
															"name": "failures",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 37,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 57679,
															"name": "async",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 38,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 57680,
															"name": "idempotency_key",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 39,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																57673,
																57674,
																57675,
																57676,
																57677,
																57678,
																57679,
																57680
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 31,
															"character": 77
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 57696,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57697,
							"name": "TransactionOrchestrator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57698,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57699,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 57700,
													"name": "id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 42,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57701,
													"name": "definition",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 56815,
														"name": "TransactionStepsDefinition",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 57702,
													"name": "options",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 44,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 56833,
														"name": "TransactionModelOptions",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 57703,
													"name": "isClone",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 45,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														57700,
														57701,
														57702,
														57703
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 41,
													"character": 55
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57636,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 57681,
					"name": "clone",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 47,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 57682,
							"name": "clone",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 47,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 57683,
									"name": "orchestrator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57636,
										"name": "TransactionOrchestrator",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57636,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57684,
					"name": "SEPARATOR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 48,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57685,
					"name": "getKeyName",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 49,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 57686,
							"name": "getKeyName",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 49,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 57687,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 57709,
					"name": "getPreviousStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 50,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57710,
					"name": "getOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 51,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57711,
							"name": "getOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 56833,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57712,
					"name": "getInvokeSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 52,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57713,
					"name": "getCompensationSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 53,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57714,
					"name": "canMoveForward",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 54,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57715,
					"name": "canMoveBackward",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 55,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57716,
					"name": "canContinue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 56,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57717,
					"name": "hasExpired",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 57,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57718,
					"name": "checkTransactionTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 58,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57719,
					"name": "checkStepTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 59,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57720,
					"name": "checkAllSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 60,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57721,
					"name": "computeCurrentTransactionState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 61,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57722,
					"name": "flagStepsToRevert",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 62,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57688,
					"name": "setStepSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 63,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57689,
					"name": "skipStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 64,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57690,
					"name": "setStepTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 65,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57691,
					"name": "setStepFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 66,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57723,
					"name": "executeNext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 67,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57724,
					"name": "finalizeTransaction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Finalize the transaction when all steps are complete"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 71,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57725,
					"name": "prepareStepForExecution",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prepare a step for execution by setting state and incrementing attempts"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 75,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57726,
					"name": "createStepPayload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create the payload for a step execution"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 79,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57727,
					"name": "prepareHandlerArgs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prepare handler arguments for step execution"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 83,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57728,
					"name": "createStepExecutionPromise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create the step execution promise with optional tracing"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 87,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57729,
					"name": "executeSyncStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Execute a synchronous step and handle its result"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 91,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57730,
					"name": "executeAsyncStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Execute an asynchronous step and handle its result"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 95,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57731,
					"name": "handleStepExpiration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if step or transaction has expired and handle timeouts"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 99,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57732,
					"name": "handleStepSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle successful step completion"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 103,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57733,
					"name": "handleStepFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle step failure"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 107,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57734,
					"name": "resume",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 112,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57735,
							"name": "resume",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Start a new transaction or resume a transaction that has been previously started"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 112,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57736,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to resume"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57737,
					"name": "cancelTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 117,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57738,
							"name": "cancelTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Cancel and revert a transaction compensating all its executed steps. It can be an ongoing transaction or a completed one"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57739,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to be reverted"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57740,
					"name": "parseFlowOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 118,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57741,
					"name": "createTransactionFlow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 119,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57692,
					"name": "loadTransactionById",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 120,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57693,
					"name": "buildSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 121,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57742,
					"name": "beginTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 128,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57743,
							"name": "beginTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new transaction"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 128,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57744,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57745,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 57746,
													"name": "transactionId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 129,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57747,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 130,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 57627,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 57748,
													"name": "payload",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 131,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 57749,
													"name": "flowMetadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 132,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57750,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57751,
																	"name": "eventGroupId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 223,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 57752,
																	"name": "parentIdempotencyKey",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 224,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 57753,
																	"name": "sourcePath",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 225,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 57754,
																	"name": "preventReleaseEvents",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 226,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 57755,
																	"name": "parentStepIdempotencyKey",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 227,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57751,
																		57752,
																		57753,
																		57754,
																		57755
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 222,
																	"character": 15
																}
															],
															"indexSignatures": [
																{
																	"id": 57756,
																	"name": "__index",
																	"variant": "signature",
																	"kind": 8192,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 228,
																			"character": 8
																		}
																	],
																	"parameters": [
																		{
																			"id": 57757,
																			"name": "key",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 57758,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 133,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57759,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 133,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 57760,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 133,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 57761,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 57422,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														57746,
														57747,
														57748,
														57749,
														57758
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 128,
													"character": 81
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57762,
					"name": "retrieveExistingTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 139,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57763,
							"name": "retrieveExistingTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an existing transaction"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 139,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57764,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "unique identifier of the transaction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57765,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "function to handle action of the transaction"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 57627,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57766,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57767,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 57768,
													"name": "isCancelling",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 140,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														57768
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 139,
													"character": 98
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57694,
					"name": "getStepByAction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 142,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57695,
					"name": "getTransactionAndStepFromIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 143,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57769,
					"name": "skipStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 149,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57770,
							"name": "skipStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Skip the execution of a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 149,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57771,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57772,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 57773,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 150,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57774,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 151,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 57627,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 57775,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 152,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 57422,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														57773,
														57774,
														57775
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 149,
													"character": 64
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57776,
					"name": "registerStepSuccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 160,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57777,
							"name": "registerStepSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a step success for a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 160,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57778,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57779,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 57780,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 161,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57781,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 162,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 57627,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 57782,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 163,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 57422,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 57783,
													"name": "response",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 164,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 57784,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 165,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57785,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 165,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 57786,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 165,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 57787,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 57422,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														57780,
														57781,
														57782,
														57783,
														57784
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 160,
													"character": 93
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57788,
					"name": "registerStepFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 175,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57789,
							"name": "registerStepFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a step failure for a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 175,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57790,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57791,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 57792,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 176,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57793,
													"name": "error",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 177,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 57794,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 178,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 57627,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 57795,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 179,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 57422,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 57796,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 180,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57797,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 180,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 57798,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 180,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 57799,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 57422,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														57792,
														57793,
														57794,
														57795,
														57796
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 175,
													"character": 90
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						57696
					]
				},
				{
					"title": "Properties",
					"children": [
						57704,
						57637,
						57638,
						57705,
						57706,
						57707,
						57708,
						57639,
						57640,
						57644,
						57664,
						57684,
						57709,
						57712,
						57713,
						57714,
						57715,
						57716,
						57717,
						57718,
						57719,
						57720,
						57721,
						57722,
						57688,
						57689,
						57690,
						57691,
						57723,
						57724,
						57725,
						57726,
						57727,
						57728,
						57729,
						57730,
						57731,
						57732,
						57733,
						57740,
						57741,
						57692,
						57693,
						57694,
						57695
					]
				},
				{
					"title": "Methods",
					"children": [
						57641,
						57681,
						57685,
						57710,
						57734,
						57737,
						57742,
						57762,
						57769,
						57776,
						57788
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
					"line": 9,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 57627,
			"name": "TransactionStepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
					"line": 5,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57628,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 5,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 57629,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 57630,
									"name": "actionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57631,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57254,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 57632,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58000,
										"name": "TransactionPayload",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57633,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransactionType",
										"package": "@medusajs/orchestration",
										"qualifiedName": "DistributedTransaction"
									}
								},
								{
									"id": 57634,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57800,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57635,
									"name": "orchestrator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57636,
										"name": "TransactionOrchestrator",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 57800,
			"name": "TransactionStep",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "TransactionStep"
					}
				],
				"blockTags": [
					{
						"tag": "@classdesc",
						"content": [
							{
								"kind": "text",
								"text": "A class representing a single step in a transaction flow"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 57801,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 57802,
							"name": "TransactionStep",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 57800,
								"name": "TransactionStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57803,
					"name": "stepFailed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "id - The id of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "depth - The depth of the step in the flow"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "definition - The definition of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "invoke - The current state and status of the invoke action of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "compensate - The current state and status of the compensate action of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "attempts - The number of attempts made to execute the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "failures - The number of failures encountered while executing the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "lastAttempt - The timestamp of the last attempt made to execute the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "hasScheduledRetry - A flag indicating if a retry has been scheduled"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "retryRescheduledAt - The timestamp of the last retry scheduled"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "next - The ids of the next steps in the flow"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "saveResponse - A flag indicating if the response of a step should be shared in the transaction context and available to subsequent steps - default is true"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 25,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57804,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57805,
					"name": "uuid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57806,
					"name": "depth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 57807,
					"name": "definition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 56815,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 57808,
					"name": "invoke",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 57809,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57810,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 31,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 58010,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 57811,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 32,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 58021,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57810,
										57811
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 30,
									"character": 12
								}
							]
						}
					}
				},
				{
					"id": 57812,
					"name": "compensate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 57813,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57814,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 35,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 58010,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 57815,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 36,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 58021,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57814,
										57815
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 34,
									"character": 16
								}
							]
						}
					}
				},
				{
					"id": 57816,
					"name": "attempts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 57817,
					"name": "failures",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 57818,
					"name": "lastAttempt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 57819,
					"name": "retryRescheduledAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 57820,
					"name": "hasScheduledRetry",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 57821,
					"name": "timedOutAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 57822,
					"name": "startedAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 57823,
					"name": "next",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 57824,
					"name": "saveResponse",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 46,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 57825,
					"name": "getStates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57826,
							"name": "getStates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57827,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 57828,
											"name": "state",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
													"line": 48,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 58010,
												"name": "TransactionStepState",
												"package": "@medusajs/utils"
											}
										},
										{
											"id": 57829,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
													"line": 49,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 58021,
												"name": "TransactionStepStatus",
												"package": "@medusajs/utils"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												57828,
												57829
											]
										}
									],
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 47,
											"character": 17
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 57830,
					"name": "beginCompensation",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 51,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57831,
							"name": "beginCompensation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 57832,
					"name": "isCompensating",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57833,
							"name": "isCompensating",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57834,
					"name": "isInvoking",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57835,
							"name": "isInvoking",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 53,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57836,
					"name": "changeState",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 54,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57837,
							"name": "changeState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 54,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57838,
									"name": "toState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58010,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 57839,
					"name": "changeStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 55,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57840,
							"name": "changeStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57841,
									"name": "toStatus",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58021,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 57842,
					"name": "hasRetryScheduled",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 56,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57843,
							"name": "hasRetryScheduled",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57844,
					"name": "hasRetryInterval",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57845,
							"name": "hasRetryInterval",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 57,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57846,
					"name": "hasTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 58,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57847,
							"name": "hasTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 58,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57848,
					"name": "getTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 59,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57849,
							"name": "getTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 59,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 57850,
					"name": "canRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 60,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57851,
							"name": "canRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57852,
					"name": "hasAwaitingRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57853,
							"name": "hasAwaitingRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 61,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57854,
					"name": "canRetryAwaiting",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 62,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57855,
							"name": "canRetryAwaiting",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57856,
					"name": "canInvoke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57857,
							"name": "canInvoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57858,
									"name": "flowState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57955,
										"name": "TransactionState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57859,
					"name": "canCompensate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 64,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57860,
							"name": "canCompensate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 64,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57861,
									"name": "flowState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57955,
										"name": "TransactionState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 57862,
					"name": "canCancel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57863,
							"name": "canCancel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 65,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						57801
					]
				},
				{
					"title": "Properties",
					"children": [
						57803,
						57804,
						57805,
						57806,
						57807,
						57808,
						57812,
						57816,
						57817,
						57818,
						57819,
						57820,
						57821,
						57822,
						57823,
						57824
					]
				},
				{
					"title": "Methods",
					"children": [
						57825,
						57830,
						57832,
						57834,
						57836,
						57839,
						57842,
						57844,
						57846,
						57848,
						57850,
						57852,
						57854,
						57856,
						57859,
						57862
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
					"line": 10,
					"character": 21
				}
			]
		},
		{
			"id": 56815,
			"name": "TransactionStepsDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the structure and behavior of a single step within a transaction workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56816,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 56817,
							"name": "uuid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for the transaction step.\nThis is set automatically when declaring a workflow with \"createWorkflow\""
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 56818,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the action to be performed in this step.\n\"name\" is an alias for action when creating a workflow with \"createWorkflow\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 56819,
							"name": "continueOnPermanentFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the workflow should continue even if there is a permanent failure in this step.\nIn case it is set to true, the the current step will be marked as TransactionStepState.PERMANENT_FAILURE and the next steps will be executed."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 56820,
							"name": "skipOnPermanentFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the workflow should skip all subsequent steps in case of a permanent failure in this step.\nIn case it is set to true, the next steps of the workflow will not be executed and their status will be marked as TransactionStepState.SKIPPED_FAILURE.\nIn case it is a string, the next steps until the step name provided will be skipped and the workflow will be resumed from the step provided."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 56821,
							"name": "noCompensation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, no compensation action will be triggered for this step in case of a failure."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 56822,
							"name": "maxRetries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of times this step should be retried in case of temporary failures.\nThe default is 0 (no retries)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 56823,
							"name": "retryInterval",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The interval (in seconds) between retry attempts after a temporary failure.\nThe default is to retry immediately."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 43,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 56824,
							"name": "retryIntervalAwaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The interval (in seconds) to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 56825,
							"name": "timeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum amount of time (in seconds) to wait for this step to complete.\nThis is NOT an execution timeout, the step will always be executed and wait for its response.\nIf the response is not received within the timeout set, it will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted as soon as it receives the response."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 53,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 56826,
							"name": "async",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the step is executed asynchronously. This means that the workflow will not wait for the response of this step.\nAsync steps require to have their responses set using \"setStepSuccess\" or \"setStepFailure\", unless it is combined with \"backgroundExecution: true\".\nIf combined with a timeout, and any response is not set within that interval, the step will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted immediately."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 59,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 56827,
							"name": "nested",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "It flags where the step contains a sub transaction inside itself."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 56828,
							"name": "backgroundExecution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "It applies to \"async\" steps only, allowing them to run in the background and automatically complete without external intervention.\nIt is ideal for time-consuming tasks that will be complete after the execution, contrasting with standard \"async\" operations that require a response to be set in a later stage."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 56829,
							"name": "compensateAsync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the compensation function for this step is executed asynchronously. Which means, the response has to be set using \"setStepSuccess\" or \"setStepFailure\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 56830,
							"name": "noWait",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the workflow will not wait for their sibling steps to complete before moving to the next step."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 76,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 56831,
							"name": "saveResponse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the response of this step will be stored.\nDefault is true."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 81,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 56832,
							"name": "next",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the next step(s) to execute after this step. Can be a single step or an array of steps."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 85,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 56815,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 56815,
											"name": "TransactionStepsDefinition",
											"package": "@medusajs/orchestration"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								56817,
								56818,
								56819,
								56820,
								56821,
								56822,
								56823,
								56824,
								56825,
								56826,
								56827,
								56828,
								56829,
								56830,
								56831,
								56832
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 8,
							"character": 41
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 57230,
					"name": "InternalStep"
				}
			]
		},
		{
			"id": 56833,
			"name": "TransactionModelOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the options for a transaction model, which are applicable to the entire workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 90,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56834,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 56835,
							"name": "timeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The global timeout for the entire transaction workflow (in seconds)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 56836,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the state of the transaction will be persisted.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/store-executions)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 100,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 56837,
							"name": "retentionTime",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of seconds that the workflow execution should be stored in the database.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/store-executions)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 106,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 56838,
							"name": "storeExecution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the execution details of each step will be stored."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "no longer needed."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 111,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 56839,
							"name": "idempotent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the workflow will use the transaction ID as the key to ensure only-once execution"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 56840,
							"name": "schedule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the workflow as a scheduled workflow that executes based on the cron configuration passed.\nThe value can either by a cron expression string, or an object that also allows to define the concurrency behavior."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 120,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 57213,
										"name": "SchedulerOptions",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								56835,
								56836,
								56837,
								56838,
								56839,
								56840
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 90,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 57213,
			"name": "SchedulerOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 122,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 57214,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57215,
									"name": "concurrency",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Setting whether to allow concurrent executions (eg. if the previous execution is still running, should the new one be allowed to run or not)\nBy default concurrent executions are not allowed."
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 127,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "allow"
											},
											{
												"type": "literal",
												"value": "forbid"
											}
										]
									}
								},
								{
									"id": 57216,
									"name": "numberOfExecutions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optionally limit the number of executions for the scheduled workflow. If not set, the workflow will run indefinitely."
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 131,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57215,
										57216
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 122,
									"character": 31
								}
							]
						}
					},
					{
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 57217,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 57218,
											"name": "cron",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The cron expression to schedule the workflow execution."
													}
												]
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 136,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												57218
											]
										}
									],
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 132,
											"character": 5
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 57219,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 57220,
											"name": "interval",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The interval (in ms) to schedule the workflow execution."
													}
												]
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 141,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												57220
											]
										}
									],
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 137,
											"character": 4
										}
									]
								}
							}
						]
					}
				]
			}
		},
		{
			"id": 57339,
			"name": "DistributedTransactionEvents",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 163,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57340,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57341,
							"name": "onBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 164,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57342,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 164,
											"character": 14
										}
									],
									"signatures": [
										{
											"id": 57343,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57344,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57345,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57346,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 165,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57422,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57346
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 164,
																	"character": 21
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 57347,
							"name": "onResume",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 167,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57348,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 167,
											"character": 15
										}
									],
									"signatures": [
										{
											"id": 57349,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57350,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57351,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57352,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 168,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57422,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57352
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 167,
																	"character": 22
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 57353,
							"name": "onFinish",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 170,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57354,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 170,
											"character": 15
										}
									],
									"signatures": [
										{
											"id": 57355,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57356,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57357,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57358,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 171,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57422,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																},
																{
																	"id": 57359,
																	"name": "result",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 172,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																},
																{
																	"id": 57360,
																	"name": "errors",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 173,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "unknown"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57358,
																		57359,
																		57360
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 170,
																	"character": 22
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 57361,
							"name": "onTimeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 175,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57362,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 175,
											"character": 16
										}
									],
									"signatures": [
										{
											"id": 57363,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57364,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57365,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57366,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 176,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57422,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57366
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 175,
																	"character": 23
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 57367,
							"name": "onStepBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 178,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57368,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 178,
											"character": 18
										}
									],
									"signatures": [
										{
											"id": 57369,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57370,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57371,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57372,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 179,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57800,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 57373,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 180,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57422,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57372,
																		57373
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 178,
																	"character": 25
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 57374,
							"name": "onStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 182,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57375,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 182,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 57376,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57377,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57378,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57379,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 183,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57800,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 57380,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 184,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57422,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57379,
																		57380
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 182,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 57381,
							"name": "onStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 186,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57382,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 186,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 57383,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57384,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57385,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57386,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 187,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57800,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 57387,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 188,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57422,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57386,
																		57387
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 186,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 57388,
							"name": "onStepAwaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 190,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57389,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 190,
											"character": 21
										}
									],
									"signatures": [
										{
											"id": 57390,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57391,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57392,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57393,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 191,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57800,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 57394,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 192,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57422,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57393,
																		57394
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 190,
																	"character": 28
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 57395,
							"name": "onCompensateBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 194,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57396,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 194,
											"character": 24
										}
									],
									"signatures": [
										{
											"id": 57397,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57398,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57399,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57400,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 195,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57422,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57400
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 194,
																	"character": 31
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 57401,
							"name": "onCompensateStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 197,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57402,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 197,
											"character": 30
										}
									],
									"signatures": [
										{
											"id": 57403,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57404,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57405,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57406,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 198,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57800,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 57407,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 199,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57422,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57406,
																		57407
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 197,
																	"character": 37
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 57408,
							"name": "onCompensateStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 201,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57409,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 201,
											"character": 30
										}
									],
									"signatures": [
										{
											"id": 57410,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57411,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57412,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57413,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 202,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57800,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 57414,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 203,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57422,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57413,
																		57414
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 201,
																	"character": 37
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 57415,
							"name": "onStepSkipped",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 205,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57416,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 205,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 57417,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57418,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57419,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57420,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 206,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57800,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 57421,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 207,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57422,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57420,
																		57421
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 205,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57341,
								57347,
								57353,
								57361,
								57367,
								57374,
								57381,
								57388,
								57395,
								57401,
								57408,
								57415
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 163,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 58027,
			"name": "StepFeatures",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 210,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58028,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58029,
							"name": "hasAsyncSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 211,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58030,
							"name": "hasStepTimeouts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 212,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58031,
							"name": "hasRetriesTimeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 213,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58029,
								58030,
								58031
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 210,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 58009,
			"name": "TransactionOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 215,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 56833,
						"name": "TransactionModelOptions",
						"package": "@medusajs/orchestration"
					},
					{
						"type": "reference",
						"target": 58027,
						"name": "StepFeatures",
						"package": "@medusajs/orchestration"
					}
				]
			}
		},
		{
			"id": 57916,
			"name": "TransactionFlow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 216,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57917,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57918,
							"name": "modelId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 217,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57919,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 218,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 56833,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 57920,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 219,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 56815,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 57921,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 220,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57922,
							"name": "runId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 221,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57923,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 222,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57924,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 57925,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 223,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 57926,
											"name": "parentIdempotencyKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 224,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 57927,
											"name": "sourcePath",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 225,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 57928,
											"name": "preventReleaseEvents",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 226,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 57929,
											"name": "parentStepIdempotencyKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 227,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												57925,
												57926,
												57927,
												57928,
												57929
											]
										}
									],
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 222,
											"character": 15
										}
									],
									"indexSignatures": [
										{
											"id": 57930,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 228,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 57931,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 57932,
							"name": "hasAsyncSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 230,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57933,
							"name": "hasFailedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 231,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57934,
							"name": "hasSkippedOnFailureSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 232,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57935,
							"name": "hasWaitingSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 233,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57936,
							"name": "hasSkippedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 234,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57937,
							"name": "hasRevertedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 235,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57938,
							"name": "timedOutAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 236,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 57939,
							"name": "startedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 237,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 57940,
							"name": "cancelledAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 238,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 57941,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 239,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57955,
								"name": "TransactionState",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 57942,
							"name": "steps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 240,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57943,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 240,
											"character": 11
										}
									],
									"indexSignatures": [
										{
											"id": 57944,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 241,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 57945,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 57800,
												"name": "TransactionStep",
												"package": "@medusajs/orchestration"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57918,
								57919,
								57920,
								57921,
								57922,
								57923,
								57932,
								57933,
								57934,
								57935,
								57936,
								57937,
								57938,
								57939,
								57940,
								57941,
								57942
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 216,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 57335,
			"name": "StepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
					"line": 5,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57336,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57337,
							"name": "invoke",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57249,
								"name": "WorkflowStepHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 57338,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57249,
								"name": "WorkflowStepHandler",
								"package": "@medusajs/orchestration"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57337,
								57338
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 5,
							"character": 19
						}
					]
				}
			}
		},
		{
			"id": 57052,
			"name": "LocalWorkflow",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 57060,
					"name": "container_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 10,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 56963,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 57061,
					"name": "workflowId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 11,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57062,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 12,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 56870,
						"name": "OrchestratorBuilder",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 57063,
					"name": "customOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 13,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 56833,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 57064,
					"name": "workflow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 14,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 57319,
						"name": "WorkflowDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 57065,
					"name": "handlers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 15,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 57335,
								"name": "StepHandler",
								"package": "@medusajs/orchestration"
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 57066,
					"name": "medusaContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 16,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 56992,
						"name": "Context",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 57067,
					"name": "container",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 17,
							"character": 8
						},
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 18,
							"character": 8
						}
					],
					"getSignature": {
						"id": 57068,
						"name": "container",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
								"line": 17,
								"character": 8
							}
						],
						"type": {
							"type": "reference",
							"target": 56963,
							"name": "MedusaContainer",
							"package": "@medusajs/types"
						}
					},
					"setSignature": {
						"id": 57069,
						"name": "container",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"sources": [
							{
								"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
								"line": 18,
								"character": 8
							}
						],
						"parameters": [
							{
								"id": 57070,
								"name": "modulesLoaded",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 56963,
											"name": "MedusaContainer",
											"package": "@medusajs/types"
										},
										{
											"type": "array",
											"elementType": {
												"type": "reflection",
												"declaration": {
													"id": 57071,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 57072,
															"name": "__joinerConfig",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																	"line": 90,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"target": 57016,
																"name": "ModuleJoinerConfig",
																"package": "@medusajs/types"
															}
														},
														{
															"id": 57073,
															"name": "__definition",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																	"line": 91,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"target": 57041,
																"name": "ModuleDefinition",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																57072,
																57073
															]
														}
													],
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 89,
															"character": 37
														}
													]
												}
											}
										}
									]
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 57053,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57054,
							"name": "LocalWorkflow",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57055,
									"name": "workflowId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57056,
									"name": "modulesLoaded",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 56963,
												"name": "MedusaContainer",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 57057,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 57058,
																"name": "__joinerConfig",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																		"line": 90,
																		"character": 4
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 57016,
																	"name": "ModuleJoinerConfig",
																	"package": "@medusajs/types"
																}
															},
															{
																"id": 57059,
																"name": "__definition",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																		"line": 91,
																		"character": 4
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 57041,
																	"name": "ModuleDefinition",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	57058,
																	57059
																]
															}
														],
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 89,
																"character": 37
															}
														]
													}
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57052,
								"name": "LocalWorkflow",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57074,
					"name": "resolveContainer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 20,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57075,
					"name": "contextualizedMedusaModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57076,
					"name": "commit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 22,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 57077,
							"name": "commit",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 22,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 57078,
					"name": "getFlow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57079,
							"name": "getFlow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 56815,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57080,
					"name": "registerEventCallbacks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 24,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 57081,
					"name": "run",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57082,
							"name": "run",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57083,
									"name": "uniqueTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57084,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 57085,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 56992,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 57086,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57339,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57087,
									"name": "flowMetadata",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57088,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 57089,
													"name": "eventGroupId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 223,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57090,
													"name": "parentIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 224,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57091,
													"name": "sourcePath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 225,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57092,
													"name": "preventReleaseEvents",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 226,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 57093,
													"name": "parentStepIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 227,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														57089,
														57090,
														57091,
														57092,
														57093
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 222,
													"character": 15
												}
											],
											"indexSignatures": [
												{
													"id": 57094,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 228,
															"character": 8
														}
													],
													"parameters": [
														{
															"id": 57095,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57096,
					"name": "getRunningTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57097,
							"name": "getRunningTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57098,
									"name": "uniqueTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57099,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 56992,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57100,
					"name": "cancel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57101,
							"name": "cancel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57102,
									"name": "transactionOrTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 57422,
												"name": "DistributedTransaction",
												"package": "@medusajs/orchestration"
											}
										]
									}
								},
								{
									"id": 57103,
									"name": "_",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 57104,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 56992,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 57105,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57339,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57106,
					"name": "registerStepSuccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57107,
							"name": "registerStepSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57108,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57109,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 57110,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 56992,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 57111,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57339,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57112,
					"name": "registerStepFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57113,
							"name": "registerStepFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57114,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57115,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 57116,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 56992,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 57117,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57339,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 57422,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57118,
					"name": "setOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57119,
							"name": "setOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 31,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57120,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 56833,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 57121,
					"name": "addAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57122,
							"name": "addAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57123,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57124,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57335,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57125,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 56815,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57126,
					"name": "replaceAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57127,
							"name": "replaceAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57128,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57129,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57130,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57335,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57131,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 56815,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57132,
					"name": "insertActionBefore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57133,
							"name": "insertActionBefore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 34,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57134,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57135,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57136,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57335,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57137,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 56815,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57138,
					"name": "insertActionAfter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57139,
							"name": "insertActionAfter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 35,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57140,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57141,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57142,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57335,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57143,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 56815,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57144,
					"name": "appendAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57145,
							"name": "appendAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 36,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57146,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57147,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57148,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57335,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57149,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 56815,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57150,
					"name": "moveAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57151,
							"name": "moveAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57152,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57153,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57154,
					"name": "moveAndMergeNextAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57155,
							"name": "moveAndMergeNextAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57156,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57157,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57158,
					"name": "mergeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57159,
							"name": "mergeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 39,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57160,
									"name": "where",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57161,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57162,
					"name": "deleteAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57163,
							"name": "deleteAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 40,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57164,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57165,
									"name": "parentSteps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57166,
					"name": "pruneAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57167,
							"name": "pruneAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57168,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57169,
					"name": "assertHandler",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 42,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 57170,
							"name": "assertHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 42,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 57171,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57335,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57172,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 57173,
					"name": "onLoad",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 43,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						57053
					]
				},
				{
					"title": "Properties",
					"children": [
						57060,
						57061,
						57062,
						57063,
						57064,
						57065,
						57066,
						57074,
						57075,
						57080,
						57173
					]
				},
				{
					"title": "Accessors",
					"children": [
						57067
					]
				},
				{
					"title": "Methods",
					"children": [
						57076,
						57078,
						57081,
						57096,
						57100,
						57106,
						57112,
						57118,
						57121,
						57126,
						57132,
						57138,
						57144,
						57150,
						57154,
						57158,
						57162,
						57166,
						57169
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
					"line": 9,
					"character": 21
				}
			]
		},
		{
			"id": 57319,
			"name": "WorkflowDefinition",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 57320,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57321,
					"name": "handler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 57322,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 57323,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 5,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 57324,
											"name": "container",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 56963,
												"name": "MedusaContainer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 57325,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 56992,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 57627,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								}
							]
						}
					}
				},
				{
					"id": 57326,
					"name": "orchestrator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57636,
						"name": "TransactionOrchestrator",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 57327,
					"name": "flow_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 56815,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 57328,
					"name": "handlers_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 57329,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 57330,
											"name": "invoke",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 9,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 57249,
												"name": "WorkflowStepHandler",
												"package": "@medusajs/orchestration"
											}
										},
										{
											"id": 57331,
											"name": "compensate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 10,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 57249,
												"name": "WorkflowStepHandler",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												57330,
												57331
											]
										}
									],
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 8,
											"character": 27
										}
									]
								}
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 57332,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 56833,
						"name": "TransactionModelOptions",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 57333,
					"name": "requiredModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				},
				{
					"id": 57334,
					"name": "optionalModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						57320,
						57321,
						57326,
						57327,
						57328,
						57332,
						57333,
						57334
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 56959,
			"name": "WorkflowHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 16,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
					"qualifiedName": "Map"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 56960,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 56961,
									"name": "invoke",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 17,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 57249,
										"name": "WorkflowStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 56962,
									"name": "compensate",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 18,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 57249,
										"name": "WorkflowStepHandler",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										56961,
										56962
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 16,
									"character": 42
								}
							]
						}
					}
				],
				"name": "Map",
				"package": "typescript"
			}
		},
		{
			"id": 57550,
			"name": "WorkflowStepHandlerArguments",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 20,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57551,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57552,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 56963,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 57553,
							"name": "payload",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 57554,
							"name": "invoke",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57555,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 23,
											"character": 12
										}
									],
									"indexSignatures": [
										{
											"id": 57556,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 24,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 57557,
													"name": "actions",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 57558,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57559,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 26,
											"character": 16
										}
									],
									"indexSignatures": [
										{
											"id": 57560,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 57561,
													"name": "actions",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 57562,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 56984,
								"name": "TransactionMetadata",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 57563,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57422,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 57564,
							"name": "step",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 31,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57800,
								"name": "TransactionStep",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 57565,
							"name": "orchestrator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57636,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 57566,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 56992,
								"name": "Context",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57552,
								57553,
								57554,
								57558,
								57562,
								57563,
								57564,
								57565,
								57566
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 20,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 57249,
			"name": "WorkflowStepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 35,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57250,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 35,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 57251,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 57252,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57550,
										"name": "WorkflowStepHandlerArguments",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 57253,
			"name": "ModuleImplementations",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The following interface acts as a bucket that other modules or the\nutils package can fill using declaration merging"
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/common/medusa-container.d.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 56963,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/common/medusa-container.d.ts",
					"line": 12,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 56983,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": 57253,
						"name": "ModuleImplementations",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 56964,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 56965,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 13,
											"character": 4
										},
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 14,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 56966,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 13,
													"character": 4
												}
											],
											"typeParameters": [
												{
													"id": 56967,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 56968,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 56967,
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 56969,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 56967,
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 56983,
													"name": "Cradle",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 56970,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 14,
													"character": 4
												}
											],
											"typeParameters": [
												{
													"id": 56971,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 56972,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 56973,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 56971,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								},
								{
									"id": 56974,
									"name": "registerAdd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 18,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 56975,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 18,
													"character": 17
												}
											],
											"signatures": [
												{
													"id": 56976,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 56979,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 56977,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 56978,
															"name": "registration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 56979,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 56963,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								},
								{
									"id": 56980,
									"name": "createScope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 22,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 56981,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 22,
													"character": 17
												}
											],
											"signatures": [
												{
													"id": 56982,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 56963,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										56974,
										56980
									]
								},
								{
									"title": "Methods",
									"children": [
										56965
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/common/medusa-container.d.ts",
									"line": 12,
									"character": 112
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58032,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 13,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58033,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58034,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the event's group. Grouped events are useful when you have distributed transactions\nwhere you need to explicitly group, release and clear events upon lifecycle events of a transaction.\n\nWhen set, you must release the grouped events using the Event Module's "
											},
											{
												"kind": "code",
												"text": "`releaseGroupedEvents`"
											},
											{
												"kind": "text",
												"text": " method to emit the events."
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
											"line": 20,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58034
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 13,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 57975,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 22,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57980,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57976,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57977,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event's name."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nuser.created\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57978,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional meadata to pass with the event."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58032,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 57979,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data payload that subscribers receive. For example, the ID or IDs of the created user. (e.g. { id: \"123\" } or { ids: [\"123\", \"456\"] })"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57980,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57977,
								57978,
								57979
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
							"line": 22,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 57567,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of an event to emit."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 42,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57570,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 57975,
						"typeArguments": [
							{
								"type": "reference",
								"target": 57570,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57568,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57569,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
											"line": 43,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57569
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 42,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 57578,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 45,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57587,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57579,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57580,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 46,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57581,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57587,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 57582,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57583,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57584,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 50,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57585,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 56992,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 57586,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57580,
								57581,
								57582,
								57583,
								57584,
								57585,
								57586
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/event-bus/common.d.ts",
							"line": 45,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 57593,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57594,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57595,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 2,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57596,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57597,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57598,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57599,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57600,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57601,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57602,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57595,
								57596,
								57597,
								57598,
								57599,
								57600,
								57601,
								57602
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 1,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 57588,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 57589,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 57590,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57591,
					"name": "filterable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 57592,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						57589,
						57590,
						57591,
						57592
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 20,
					"character": 17
				}
			]
		},
		{
			"id": 57271,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 57272,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57273,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 57588,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 57588,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 57274,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 57275,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 57276,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
															"line": 39,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57277,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
															"line": 40,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														57276,
														57277
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
													"line": 38,
													"character": 41
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 57278,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 57279,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 57593,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 57280,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 57281,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 57282,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 45,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 57283,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 46,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 57284,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 47,
												"character": 8
											}
										],
										"type": {
											"type": "reference",
											"target": 57593,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											57282,
											57283,
											57284
										]
									}
								],
								"sources": [
									{
										"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
										"line": 44,
										"character": 14
									}
								]
							}
						}
					}
				},
				{
					"id": 57285,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						57272,
						57273,
						57274,
						57278,
						57279,
						57280,
						57285
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 29,
					"character": 17
				}
			]
		},
		{
			"id": 58035,
			"name": "Logger",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 58036,
					"name": "panic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58037,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 2,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 58038,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 2,
											"character": 11
										}
									],
									"parameters": [
										{
											"id": 58039,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 58040,
					"name": "shouldLog",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58041,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 3,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 58042,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 3,
											"character": 15
										}
									],
									"parameters": [
										{
											"id": 58043,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 58044,
					"name": "setLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58045,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 4,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 58046,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 4,
											"character": 17
										}
									],
									"parameters": [
										{
											"id": 58047,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 58048,
					"name": "unsetLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58049,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 5,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 58050,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 5,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 58051,
					"name": "activity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58052,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 6,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 58053,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 6,
											"character": 14
										}
									],
									"parameters": [
										{
											"id": 58054,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 58055,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 58056,
					"name": "progress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58057,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 7,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 58058,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 7,
											"character": 14
										}
									],
									"parameters": [
										{
											"id": 58059,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 58060,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 58061,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58062,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 8,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 58063,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 8,
											"character": 11
										}
									],
									"parameters": [
										{
											"id": 58064,
											"name": "messageOrError",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 58065,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 58066,
					"name": "failure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58067,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 9,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 58068,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 9,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 58069,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 58070,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 58071,
					"name": "success",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58072,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 10,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 58073,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 10,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 58074,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 58075,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 58076,
					"name": "debug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58077,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 11,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 58078,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 11,
											"character": 11
										}
									],
									"parameters": [
										{
											"id": 58079,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 58080,
					"name": "info",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58081,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 12,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 58082,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 12,
											"character": 10
										}
									],
									"parameters": [
										{
											"id": 58083,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 58084,
					"name": "warn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58085,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 13,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 58086,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 13,
											"character": 10
										}
									],
									"parameters": [
										{
											"id": 58087,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 58088,
					"name": "log",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58089,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 14,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 58090,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 14,
											"character": 9
										}
									],
									"parameters": [
										{
											"id": 58091,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58036,
						58040,
						58044,
						58048,
						58051,
						58056,
						58061,
						58066,
						58071,
						58076,
						58080,
						58084,
						58088
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/logger/index.d.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 57993,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 8,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57999,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57994,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 8,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 57995,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 57998,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 57999,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 57996,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 8,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 57997,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 57999,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 57603,
			"name": "CustomModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57604,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57605,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57606,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57607,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57608,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57605,
								57606,
								57607,
								57608
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 17,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 57297,
			"name": "InternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 23,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57298,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57299,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "literal",
								"value": "internal"
							}
						},
						{
							"id": 57300,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 57301,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57603,
								"name": "CustomModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 57302,
							"name": "resolve",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 57609,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 57303,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 28,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 57304,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57305,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 36,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57306,
							"name": "worker_mode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57299,
								57300,
								57301,
								57302,
								57303,
								57304,
								57305,
								57306
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 23,
							"character": 40
						}
					]
				}
			}
		},
		{
			"id": 57307,
			"name": "ExternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 39,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57308,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57309,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 40,
									"character": 4
								}
							],
							"type": {
								"type": "literal",
								"value": "external"
							}
						},
						{
							"id": 57310,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57603,
								"name": "CustomModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 57311,
							"name": "server",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57312,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 57313,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 43,
													"character": 8
												}
											],
											"type": {
												"type": "literal",
												"value": "http"
											}
										},
										{
											"id": 57314,
											"name": "url",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 44,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 57315,
											"name": "keepAlive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 45,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												57313,
												57314,
												57315
											]
										}
									],
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 42,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 57316,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 57317,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57318,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57309,
								57310,
								57311,
								57316,
								57317,
								57318
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 39,
							"character": 40
						}
					]
				}
			}
		},
		{
			"id": 57041,
			"name": "ModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 65,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57042,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57043,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 66,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57044,
							"name": "defaultPackage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 67,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 57045,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57046,
							"name": "resolvePath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57047,
							"name": "isRequired",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 70,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57048,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 71,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57049,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 57050,
							"name": "__passSharedContainer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "only used in exceptional cases - relying on the shared contrainer breaks encapsulation"
									}
								],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57051,
							"name": "defaultModuleDeclaration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 57297,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 57307,
										"name": "ExternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57043,
								57044,
								57045,
								57046,
								57047,
								57048,
								57049,
								57050,
								57051
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 65,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 57971,
			"name": "LoadedModule",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 89,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "intrinsic",
						"name": "unknown"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57972,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57973,
									"name": "__joinerConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 90,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 57016,
										"name": "ModuleJoinerConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 57974,
									"name": "__definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 91,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 57041,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57973,
										57974
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 89,
									"character": 37
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 57986,
			"name": "LoaderOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 93,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57992,
					"name": "TOptions",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57987,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57988,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 56963,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 57989,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 95,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57992,
								"name": "TOptions",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 57990,
							"name": "logger",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 96,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58035,
								"name": "Logger",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 57991,
							"name": "dataLoaderOnly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 97,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57988,
								57989,
								57990,
								57991
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 93,
							"character": 64
						}
					]
				}
			}
		},
		{
			"id": 57981,
			"name": "ModuleLoaderFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 99,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57982,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 99,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 57983,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 57984,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57986,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderOptions",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 57985,
									"name": "moduleDeclaration",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57297,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 57291,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 104,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57292,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57293,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 105,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 57294,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 106,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57295,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 107,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 57296,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 111,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57293,
										57294,
										57295,
										57296
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 104,
									"character": 52
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 57016,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 125,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 57271,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57017,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57018,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 129,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57019,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 130,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 57286,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 57020,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 131,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 57021,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 57022,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 132,
																"character": 8
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 57023,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 133,
																"character": 8
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 57024,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 134,
																"character": 8
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 57025,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 57026,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 135,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 57027,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 136,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 57028,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 137,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							57026,
																							57027,
																							57028
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																						"line": 134,
																						"character": 45
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 57029,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 139,
																"character": 8
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Omit"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 57286,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																},
																{
																	"type": "literal",
																	"value": "hasMany"
																}
															],
															"name": "Omit",
															"package": "typescript"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															57022,
															57023,
															57024,
															57029
														]
													}
												],
												"sources": [
													{
														"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
														"line": 131,
														"character": 14
													}
												]
											}
										}
									}
								},
								{
									"id": 57030,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 141,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57031,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 142,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 57032,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 146,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 57033,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 150,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 57034,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 154,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 57035,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 159,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 57036,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 160,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57037,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 57038,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 164,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57039,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 168,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57040,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 169,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 57291,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														57038,
														57039,
														57040
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 160,
													"character": 21
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57018,
										57019,
										57020,
										57030,
										57031,
										57032,
										57033,
										57034,
										57035,
										57036
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 125,
									"character": 122
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 57286,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 172,
					"character": 20
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 57593,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57287,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57288,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 176,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 57289,
									"name": "filterable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fields to be filterable by the Index module using query.index"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 180,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 57290,
									"name": "hasMany",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allow multiple relationships to exist for this\nentity"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 185,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57288,
										57289,
										57290
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 172,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 57609,
			"name": "ModuleExports",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 187,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57626,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": 57993,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Constructor",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57610,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57611,
							"name": "service",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 188,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57626,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 57612,
							"name": "loaders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 189,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 57981,
									"name": "ModuleLoaderFunction",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 57613,
							"name": "runMigrations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 190,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 57614,
									"name": "runMigrations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 190,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 57615,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 57986,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 57616,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 57297,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 57617,
							"name": "revertMigration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 191,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 57618,
									"name": "revertMigration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 191,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 57619,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 57986,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 57620,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 57297,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 57621,
							"name": "generateMigration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 192,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 57622,
									"name": "generateMigration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 192,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 57623,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 57986,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 57624,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 57297,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 57625,
							"name": "discoveryPath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Explicitly set the the true location of the module resources.\nCan be used to re-export the module from a different location and specify its original location."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 197,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57611,
								57612,
								57625
							]
						},
						{
							"title": "Methods",
							"children": [
								57613,
								57617,
								57621
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 187,
							"character": 50
						}
					]
				}
			}
		},
		{
			"id": 57571,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 57572,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 57573,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 57574,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"indexSignatures": [
								{
									"id": 57575,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
											"line": 6,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 57576,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 57577,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						57572,
						57573,
						57577
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 57257,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 57258,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57259,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57260,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 57567,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 57567,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 57261,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57262,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57263,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57571,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 57567,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57264,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57265,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 57266,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57267,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"typeParameters": [
								{
									"id": 57268,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 57269,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 57578,
												"typeArguments": [
													{
														"type": "reference",
														"target": 57268,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 57578,
													"typeArguments": [
														{
															"type": "reference",
															"target": 57268,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 57270,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						57258,
						57261,
						57264,
						57266
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 56992,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 56993,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 56994,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57006,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 56995,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57006,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 56996,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 56997,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 56998,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 56999,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57000,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57257,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 57001,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57002,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57003,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57004,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "preventReleaseEvents"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 69,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 57005,
					"name": "isCancelling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether the current workflow execution is being cancelled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						56993,
						56994,
						56995,
						56996,
						56997,
						56998,
						56999,
						57000,
						57001,
						57002,
						57003,
						57004,
						57005
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 24,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57006,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 56852,
			"name": "SymbolWorkflowHook",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/symbol.d.ts",
					"line": 5,
					"character": 21
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 57254,
			"name": "TransactionHandlerType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 57255,
					"name": "INVOKE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoke"
					}
				},
				{
					"id": 57256,
					"name": "COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensate"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						57255,
						57256
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 1,
					"character": 20
				}
			]
		},
		{
			"id": 57955,
			"name": "TransactionState",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 57956,
					"name": "NOT_STARTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "not_started"
					}
				},
				{
					"id": 57957,
					"name": "INVOKING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoking"
					}
				},
				{
					"id": 57958,
					"name": "WAITING_TO_COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "waiting_to_compensate"
					}
				},
				{
					"id": 57959,
					"name": "COMPENSATING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensating"
					}
				},
				{
					"id": 57960,
					"name": "DONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "done"
					}
				},
				{
					"id": 57961,
					"name": "REVERTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "reverted"
					}
				},
				{
					"id": 57962,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "failed"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						57956,
						57957,
						57958,
						57959,
						57960,
						57961,
						57962
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 5,
					"character": 20
				}
			]
		},
		{
			"id": 58010,
			"name": "TransactionStepState",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 58011,
					"name": "NOT_STARTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "not_started"
					}
				},
				{
					"id": 58012,
					"name": "INVOKING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoking"
					}
				},
				{
					"id": 58013,
					"name": "COMPENSATING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensating"
					}
				},
				{
					"id": 58014,
					"name": "DONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "done"
					}
				},
				{
					"id": 58015,
					"name": "REVERTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "reverted"
					}
				},
				{
					"id": 58016,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "failed"
					}
				},
				{
					"id": 58017,
					"name": "DORMANT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "dormant"
					}
				},
				{
					"id": 58018,
					"name": "SKIPPED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "skipped"
					}
				},
				{
					"id": 58019,
					"name": "SKIPPED_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "skipped_failure"
					}
				},
				{
					"id": 58020,
					"name": "TIMEOUT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "timeout"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						58011,
						58012,
						58013,
						58014,
						58015,
						58016,
						58017,
						58018,
						58019,
						58020
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 14,
					"character": 20
				}
			]
		},
		{
			"id": 58021,
			"name": "TransactionStepStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 58022,
					"name": "IDLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "idle"
					}
				},
				{
					"id": 58023,
					"name": "OK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ok"
					}
				},
				{
					"id": 58024,
					"name": "WAITING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "waiting_response"
					}
				},
				{
					"id": 58025,
					"name": "TEMPORARY_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "temp_failure"
					}
				},
				{
					"id": 58026,
					"name": "PERMANENT_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "permanent_failure"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						58022,
						58023,
						58024,
						58025,
						58026
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 26,
					"character": 20
				}
			]
		},
		{
			"id": 57963,
			"name": "BaseFlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 9,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57964,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57965,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 56992,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 57966,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 57967,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 12,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57968,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57969,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 57339,
								"name": "DistributedTransactionEvents",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 57970,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 57971,
											"name": "LoadedModule",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 56963,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57965,
								57966,
								57967,
								57968,
								57969,
								57970
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 9,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 57520,
			"name": "FlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 18,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57523,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 57963,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57521,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57522,
									"name": "input",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 19,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 57523,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57522
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 18,
									"character": 67
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 57524,
			"name": "FlowRegisterStepSuccessOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 22,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57528,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 57963,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57525,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57526,
									"name": "idempotencyKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 24,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57527,
									"name": "response",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 25,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 57528,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57526,
										57527
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 23,
									"character": 23
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 57529,
			"name": "FlowRegisterStepFailureOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 28,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57533,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 57963,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57530,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57531,
									"name": "idempotencyKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 30,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57532,
									"name": "response",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 31,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 57533,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57531,
										57532
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 29,
									"character": 23
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 57534,
			"name": "FlowCancelOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 34,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57535,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57536,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 57422,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 57537,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57538,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 37,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 56992,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 57539,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57540,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57541,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 57339,
								"name": "DistributedTransactionEvents",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 57542,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 57971,
											"name": "LoadedModule",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 56963,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57536,
								57537,
								57538,
								57539,
								57540,
								57541,
								57542
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 34,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 57514,
			"name": "WorkflowResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a workflow's execution."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 47,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57519,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57515,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57516,
							"name": "errors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Any errors that occured in the workflow."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 51,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 57946,
									"name": "TransactionStepError",
									"package": "@medusajs/orchestration"
								}
							}
						},
						{
							"id": 57517,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transaction details of the workflow's execution."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 57422,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 57518,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The result returned by the workflow."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 57519,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57516,
								57517,
								57518
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 47,
							"character": 48
						}
					]
				}
			}
		},
		{
			"id": 57174,
			"name": "ExportedWorkflow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 62,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57192,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 57193,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 57194,
					"name": "TDataOverride",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				},
				{
					"id": 57195,
					"name": "TResultOverride",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57175,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57176,
							"name": "run",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57177,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 68,
											"character": 7
										}
									],
									"signatures": [
										{
											"id": 57178,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57179,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 57520,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 57194,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 57192,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 57194,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRunOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 57514,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 57195,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 57193,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 57195,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 57180,
							"name": "registerStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57181,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 77,
											"character": 23
										}
									],
									"signatures": [
										{
											"id": 57182,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57183,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 57524,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 57194,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 57192,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 57194,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRegisterStepSuccessOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 57514,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 57195,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 57193,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 57195,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 57184,
							"name": "registerStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57185,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 86,
											"character": 23
										}
									],
									"signatures": [
										{
											"id": 57186,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57187,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 57529,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 57194,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 57192,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 57194,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRegisterStepFailureOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 57514,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 57195,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 57193,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 57195,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 57188,
							"name": "cancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 95,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57189,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 95,
											"character": 10
										}
									],
									"signatures": [
										{
											"id": 57190,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57191,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 57534,
														"name": "FlowCancelOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 57514,
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57176,
								57180,
								57184,
								57188
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 67,
							"character": 4
						}
					]
				}
			}
		},
		{
			"id": 56573,
			"name": "Hook",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Representation of a hook definition."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
					"line": 13,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L13"
				}
			],
			"typeParameters": [
				{
					"id": 56581,
					"name": "Name",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 56582,
					"name": "Input",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 56583,
					"name": "Output",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56574,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 56575,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L14"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 56852,
									"name": "OrchestrationUtils.SymbolWorkflowHook",
									"package": "@medusajs/utils",
									"qualifiedName": "SymbolWorkflowHook"
								}
							}
						},
						{
							"id": 56576,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L15"
								}
							],
							"type": {
								"type": "reference",
								"target": 56581,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 56577,
							"name": "getResult",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L20"
								}
							],
							"signatures": [
								{
									"id": 56578,
									"name": "getResult",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the result of the hook"
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
											"line": 20,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L20"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 56583,
												"name": "Output",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										]
									}
								}
							]
						},
						{
							"id": 56579,
							"name": " output",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By prefixing a key with a space, we remove it from the\nintellisense of TypeScript. This is needed because\ninput is not set at runtime. It is a type-only\nproperty to infer input data type of a hook"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L28"
								}
							],
							"type": {
								"type": "reference",
								"target": 56583,
								"name": "Output",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 56580,
							"name": " input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"target": 56582,
								"name": "Input",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								56575,
								56576,
								56579,
								56580
							]
						},
						{
							"title": "Methods",
							"children": [
								56577
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
							"line": 13,
							"character": 55,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L13"
						}
					]
				}
			}
		},
		{
			"id": 56563,
			"name": "createHook",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
					"line": 67,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L67"
				}
			],
			"signatures": [
				{
					"id": 56564,
					"name": "createHook",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expose a hook in your workflow where you can inject custom functionality as a step function.\n\nA handler hook can later be registered to consume the hook and perform custom functionality.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/workflow-hooks)."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A workflow hook."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createStep,\n  createHook,\n  createWorkflow,\n  WorkflowResponse,\n} from \"@medusajs/framework/workflows-sdk\"\nimport { createProductStep } from \"./steps/create-product\"\n\nexport const myWorkflow = createWorkflow(\n  \"my-workflow\",\n  function (input) {\n    const product = createProductStep(input)\n    const productCreatedHook = createHook(\n      \"productCreated\",\n      { productId: product.id }\n    )\n\n    return new WorkflowResponse(product, {\n      hooks: [productCreatedHook],\n    })\n  }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
							"line": 67,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L67"
						}
					],
					"typeParameters": [
						{
							"id": 56565,
							"name": "Name",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 56566,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 56567,
							"name": "TInvokeOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 56568,
							"name": "name",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The hook's name. This is used when the hook handler is registered to consume the workflow."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 56565,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 56569,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input to pass to the hook handler."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 56566,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 56570,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 56571,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 56572,
											"name": "resultValidator",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
													"line": 71,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L71"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodType"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 56567,
														"name": "TInvokeOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
															"qualifiedName": "ZodTypeDef"
														},
														"name": "ZodTypeDef",
														"package": "zod"
													},
													{
														"type": "reference",
														"target": 56567,
														"name": "TInvokeOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ZodType",
												"package": "zod"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												56572
											]
										}
									],
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
											"line": 70,
											"character": 11,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L70"
										}
									]
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": 56573,
						"typeArguments": [
							{
								"type": "reference",
								"target": 56565,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 56566,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 56567,
								"name": "TInvokeOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "Hook",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 56474,
			"name": "InvokeFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of invocation function passed to a step."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 29,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L29"
				}
			],
			"typeParameters": [
				{
					"id": 56479,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the function expects."
							}
						]
					}
				},
				{
					"id": 56480,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output that the function returns."
							}
						]
					}
				},
				{
					"id": 56481,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the compensation function expects."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56475,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 29,
							"character": 58,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 56476,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The expected output based on the type parameter "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 56477,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 56479,
										"name": "TInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 56478,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 56739,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": 56517,
										"typeArguments": [
											{
												"type": "reference",
												"target": 56480,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 56481,
													"name": "TCompensateInput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "undefined"
												},
												"trueType": {
													"type": "reference",
													"target": 56480,
													"name": "TOutput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												"falseType": {
													"type": "reference",
													"target": 56481,
													"name": "TCompensateInput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "StepResponse",
										"package": "@medusajs/workflows-sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 56517,
														"typeArguments": [
															{
																"type": "reference",
																"target": 56480,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 56481,
																	"name": "TCompensateInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 56480,
																	"name": "TOutput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 56481,
																	"name": "TCompensateInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "StepResponse",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 56482,
			"name": "CompensateFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of compensation function passed to a step."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 57,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L57"
				}
			],
			"typeParameters": [
				{
					"id": 56487,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the argument passed to the compensation function. If not specified, then it will be the same type as the invocation function's output."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56483,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 57,
							"character": 30,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 56484,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There's no expected type to be returned by the compensation function."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 56485,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 56487,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 56486,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 56739,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 56488,
			"name": "LocalStepConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 68,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 56489,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 56490,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
											"line": 68,
											"character": 32,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										56490
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
									"line": 68,
									"character": 30,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 56815,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "next"
									},
									{
										"type": "literal",
										"value": "uuid"
									},
									{
										"type": "literal",
										"value": "action"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 56491,
			"name": "ApplyStepOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 56492,
					"name": "stepName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 81,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L81"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 56493,
					"name": "stepConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 82,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L82"
						}
					],
					"type": {
						"type": "reference",
						"target": 56815,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 56494,
					"name": "input",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 83,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L83"
						}
					],
					"type": {
						"type": "reference",
						"target": 56497,
						"name": "TStepInputs",
						"package": "@medusajs/workflows-sdk",
						"qualifiedName": "ApplyStepOptions.TStepInputs",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 56495,
					"name": "invokeFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 84,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L84"
						}
					],
					"type": {
						"type": "reference",
						"target": 56474,
						"typeArguments": [
							{
								"type": "reference",
								"target": 56498,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeInput",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 56499,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultOutput",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 56500,
								"name": "TInvokeResultCompensateInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput",
								"refersToTypeParameter": true
							}
						],
						"name": "InvokeFn",
						"package": "@medusajs/workflows-sdk"
					}
				},
				{
					"id": 56496,
					"name": "compensateFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 89,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L89"
						}
					],
					"type": {
						"type": "reference",
						"target": 56482,
						"typeArguments": [
							{
								"type": "reference",
								"target": 56500,
								"name": "TInvokeResultCompensateInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput",
								"refersToTypeParameter": true
							}
						],
						"name": "CompensateFn",
						"package": "@medusajs/workflows-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						56492,
						56493,
						56494,
						56495,
						56496
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 73,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L73"
				}
			],
			"typeParameters": [
				{
					"id": 56497,
					"name": "TStepInputs",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 56498,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeInput",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "reference",
							"target": 56699,
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 56498,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "ApplyStepOptions.TInvokeInput",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "WorkflowData",
							"package": "@medusajs/workflows-sdk"
						}
					}
				},
				{
					"id": 56498,
					"name": "TInvokeInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 56499,
					"name": "TInvokeResultOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 56500,
					"name": "TInvokeResultCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 56464,
			"name": "createStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 370,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L370"
				}
			],
			"signatures": [
				{
					"id": 56465,
					"name": "createStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "StepFunction",
								"target": 56665
							},
							{
								"kind": "text",
								"text": " that can be used as a step in a workflow constructed by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 56501
							},
							{
								"kind": "text",
								"text": " function."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A step function to be used in a workflow."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createStep,\n  StepResponse\n} from \"@medusajs/framework/workflows-sdk\"\n\ninterface CreateProductInput {\n  title: string\n}\n\nexport const createProductStep = createStep(\n  \"createProductStep\",\n  async function (\n    input: CreateProductInput,\n    { container }\n  ) {\n    const productModuleService = container.resolve(\n      \"product\"\n    )\n    const product = await productModuleService.createProducts(input)\n    return new StepResponse({\n      product\n    }, {\n      product_id: product.id\n    })\n  },\n  async function (\n    input,\n    { container }\n  ) {\n    if (!input) {\n      return\n    }\n    const productModuleService = container.resolve(\n      \"product\"\n    )\n    await productModuleService.deleteProducts([input.product_id])\n  }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 370,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L370"
						}
					],
					"typeParameters": [
						{
							"id": 56466,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the invocation function."
									}
								]
							}
						},
						{
							"id": 56467,
							"name": "TInvokeResultOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected output parameter of the invocation function."
									}
								]
							}
						},
						{
							"id": 56468,
							"name": "TInvokeResultCompensateInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the compensation function."
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 56469,
							"name": "nameOrConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the step or its configuration."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 56470,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 56471,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
																	"line": 380,
																	"character": 9,
																	"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L380"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																56471
															]
														}
													],
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
															"line": 380,
															"character": 7,
															"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L380"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 56815,
														"name": "TransactionStepsDefinition",
														"package": "@medusajs/orchestration"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "next"
															},
															{
																"type": "literal",
																"value": "uuid"
															},
															{
																"type": "literal",
																"value": "action"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										]
									}
								]
							}
						},
						{
							"id": 56472,
							"name": "invokeFn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An invocation function that will be executed when the workflow is executed. The function must return an instance of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 56517
									},
									{
										"kind": "text",
										"text": ". The constructor of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 56517
									},
									{
										"kind": "text",
										"text": "\naccepts the output of the step as a first argument, and optionally as a second argument the data to be passed to the compensation function as a parameter."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 56474,
								"typeArguments": [
									{
										"type": "reference",
										"target": 56466,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 56467,
										"name": "TInvokeResultOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 56468,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "InvokeFn",
								"package": "@medusajs/workflows-sdk"
							}
						},
						{
							"id": 56473,
							"name": "compensateFn",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A compensation function that's executed if an error occurs in the workflow. It's used to roll-back actions when errors occur.\nIt accepts as a parameter the second argument passed to the constructor of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 56517
									},
									{
										"kind": "text",
										"text": " instance returned by the invocation function. If the\ninvocation function doesn't pass the second argument to "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor, the compensation function receives the first argument\npassed to the "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor instead."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 56482,
								"typeArguments": [
									{
										"type": "reference",
										"target": 56468,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "CompensateFn",
								"package": "@medusajs/workflows-sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 56665,
						"typeArguments": [
							{
								"type": "reference",
								"target": 56466,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 56467,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "StepFunction",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 56501,
			"name": "createWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
					"line": 88,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L88"
				}
			],
			"signatures": [
				{
					"id": 56502,
					"name": "createWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a workflow with the provided name and a constructor function.\nThe constructor function builds the workflow from steps created by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createStep",
								"target": 56464
							},
							{
								"kind": "text",
								"text": " function.\nThe returned workflow is an exported workflow of type "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ReturnWorkflow",
								"target": 56764
							},
							{
								"kind": "text",
								"text": ", meaning it's not executed right away. To execute it,\ninvoke the exported workflow, then run its "
							},
							{
								"kind": "code",
								"text": "`run`"
							},
							{
								"kind": "text",
								"text": " method."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The created workflow. You can later execute the workflow by invoking it, then using its "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport { MedusaRequest, MedusaResponse } from \"@medusajs/framework/http\"\nimport {\n  createProductStep,\n  getProductStep,\n} from \"./steps\"\n\ninterface WorkflowInput {\n title: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"my-workflow\",\n  (input: WorkflowInput) => {\n   // Everything here will be executed and resolved later\n   // during the execution. Including the data access.\n\n    const product = createProductStep(input)\n    return new WorkflowResponse(getProductStep(product.id))\n  }\n)\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result: product } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        title: \"Shirt\"\n      }\n    })\n\n  res.json({\n    product\n  })\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
							"line": 88,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L88"
						}
					],
					"typeParameters": [
						{
							"id": 56503,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the input passed to the composer function."
									}
								]
							}
						},
						{
							"id": 56504,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the output returned by the composer function."
									}
								]
							}
						},
						{
							"id": 56505,
							"name": "THooks",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of hooks defined in the workflow."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 56506,
							"name": "nameOrConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the workflow or its configuration."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 56507,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 56508,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
																	"line": 92,
																	"character": 28,
																	"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L92"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																56508
															]
														}
													],
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
															"line": 92,
															"character": 26,
															"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L92"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": 56833,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										]
									}
								]
							}
						},
						{
							"id": 56509,
							"name": "composer",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor function that is executed when the "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ReturnWorkflow",
										"target": 56764
									},
									{
										"kind": "text",
										"text": " is used.\nThe function can't be an arrow function or an asynchronus function. It also can't directly manipulate data.\nYou'll have to use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "transform",
										"target": 56588
									},
									{
										"kind": "text",
										"text": " function if you need to directly manipulate data."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 56510,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
											"line": 98,
											"character": 12,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L98"
										}
									],
									"signatures": [
										{
											"id": 56511,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
													"line": 98,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L98"
												}
											],
											"parameters": [
												{
													"id": 56512,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 56699,
														"typeArguments": [
															{
																"type": "reference",
																"target": 56503,
																"name": "TData",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 56547,
														"typeArguments": [
															{
																"type": "reference",
																"target": 56504,
																"name": "TResult",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 56505,
																"name": "THooks",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowResponse",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 56764,
						"typeArguments": [
							{
								"type": "reference",
								"target": 56503,
								"name": "TData",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 56504,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 56505,
								"name": "THooks",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "ReturnWorkflow",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 56517,
			"name": "StepResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This class is used to create the response returned by a step. A step return its data by returning an instance of "
					},
					{
						"kind": "code",
						"text": "`StepResponse`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 56524,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 56525,
							"name": "StepResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor of the StepResponse"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L28"
								}
							],
							"typeParameters": [
								{
									"id": 56526,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the output of the step."
											}
										]
									}
								},
								{
									"id": 56527,
									"name": "TCompensateInput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
											},
											{
												"kind": "code",
												"text": "`TCompensateInput`"
											},
											{
												"kind": "text",
												"text": " is the same\nas that of "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"default": {
										"type": "reference",
										"target": 56526,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 56528,
									"name": "output",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The output of the step."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 56526,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 56529,
									"name": "compensateInput",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The input to be passed as a parameter to the step's compensation function. If not provided, the "
											},
											{
												"kind": "code",
												"text": "`output`"
											},
											{
												"kind": "text",
												"text": " will be provided instead."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 56527,
										"name": "TCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TCompensateInput",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56517,
								"typeArguments": [
									{
										"type": "reference",
										"target": 56526,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 56527,
										"name": "TCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TCompensateInput",
										"refersToTypeParameter": true
									}
								],
								"name": "StepResponse",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				},
				{
					"id": 56518,
					"name": "permanentFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 118,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L118"
						}
					],
					"signatures": [
						{
							"id": 56519,
							"name": "permanentFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a StepResponse that indicates that the step has failed and the retry mechanism should not kick in anymore."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { Product } from \"@medusajs/medusa\"\nimport {\n  createStep,\n  StepResponse,\n  createWorkflow\n} from \"@medusajs/workflows-sdk\"\n\ninterface CreateProductInput {\n  title: string\n}\n\nexport const createProductStep = createStep(\n  \"createProductStep\",\n  async function (\n    input: CreateProductInput,\n    context\n  ) {\n    const productService = context.container.resolve(\n      \"productService\"\n    )\n\n    try {\n      const product = await productService.createProducts(input)\n      return new StepResponse({\n        product\n      }, {\n        product_id: product.id\n      })\n    } catch (e) {\n      return StepResponse.permanentFailure(`Couldn't create the product: ${e}`)\n    }\n  }\n)\n\ninterface WorkflowInput {\n title: string\n}\n\nconst myWorkflow = createWorkflow<\n    WorkflowInput,\n    Product\n  >(\"my-workflow\", (input) => {\n   // Everything here will be executed and resolved later\n   // during the execution. Including the data access.\n\n    const product = createProductStep(input)\n  }\n)\n\nmyWorkflow()\n  .run({\n    input: {\n      title: \"Shirt\"\n    }\n  })\n  .then(({ errors, result }) => {\n    if (errors.length) {\n      errors.forEach((err) => {\n        if (typeof err.error === \"object\" && \"message\" in err.error) {\n          console.error(err.error.message)\n        } else {\n          console.error(err.error)\n        }\n      })\n    }\n    console.log(result)\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 118,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L118"
								}
							],
							"parameters": [
								{
									"id": 56520,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An optional message to be logged."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Permanent failure\""
								},
								{
									"id": 56521,
									"name": "compensateInput",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 56522,
					"name": "skip",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 128,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L128"
						}
					],
					"signatures": [
						{
							"id": 56523,
							"name": "skip",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 128,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L128"
								}
							],
							"type": {
								"type": "reference",
								"target": 56841,
								"name": "SkipStepResponse",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						56524
					]
				},
				{
					"title": "Methods",
					"children": [
						56518,
						56522
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
					"line": 15,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 56545,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					}
				},
				{
					"id": 56546,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
							},
							{
								"kind": "code",
								"text": "`TCompensateInput`"
							},
							{
								"kind": "text",
								"text": " is the same\nas that of "
							},
							{
								"kind": "code",
								"text": "`TOutput`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"default": {
						"type": "reference",
						"target": 56526,
						"name": "TOutput",
						"package": "@medusajs/workflows-sdk",
						"qualifiedName": "StepResponse.TOutput",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 56547,
			"name": "WorkflowResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Workflow response class encapsulates the return value of a workflow"
					}
				]
			},
			"children": [
				{
					"id": 56556,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "OrchestrationUtils.SymbolMedusaWorkflowResponse"
				},
				{
					"id": 56548,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 56549,
							"name": "WorkflowResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L14"
								}
							],
							"typeParameters": [
								{
									"id": 56550,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 56551,
									"name": "THooks",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									},
									"default": {
										"type": "tuple"
									}
								}
							],
							"parameters": [
								{
									"id": 56552,
									"name": "$result",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 56699,
												"typeArguments": [
													{
														"type": "reference",
														"target": 56550,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "union",
													"types": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 56550,
																"name": "TResult",
																"package": "@medusajs/workflows-sdk",
																"qualifiedName": "WorkflowResponse.TResult",
																"refersToTypeParameter": true
															}
														},
														{
															"type": "reference",
															"target": 56694,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 56550,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"qualifiedName": "WorkflowResponse.TResult",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "WorkflowDataProperties",
															"package": "@medusajs/workflows-sdk"
														},
														{
															"type": "reference",
															"target": 56699,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 56550,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"qualifiedName": "WorkflowResponse.TResult",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 56553,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 56554,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 56555,
													"name": "hooks",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"line": 23,
															"character": 23,
															"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
														}
													],
													"type": {
														"type": "reference",
														"target": 56551,
														"name": "THooks",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.THooks",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														56555
													]
												}
											],
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
													"line": 23,
													"character": 21,
													"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56547,
								"typeArguments": [
									{
										"type": "reference",
										"target": 56550,
										"name": "TResult",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.TResult",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 56551,
										"name": "THooks",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.THooks",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowResponse",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				},
				{
					"id": 56557,
					"name": "$result",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 15,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L15"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 56699,
								"typeArguments": [
									{
										"type": "reference",
										"target": 56550,
										"name": "TResult",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.TResult",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 56550,
												"name": "TResult",
												"package": "@medusajs/workflows-sdk",
												"qualifiedName": "WorkflowResponse.TResult",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 56694,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 56550,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowDataProperties",
											"package": "@medusajs/workflows-sdk"
										},
										{
											"type": "reference",
											"target": 56699,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 56550,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 56558,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 23,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 56559,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 56560,
									"name": "hooks",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
											"line": 23,
											"character": 23,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
										}
									],
									"type": {
										"type": "reference",
										"target": 56551,
										"name": "THooks",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.THooks",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										56560
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
									"line": 23,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						56548
					]
				},
				{
					"title": "Properties",
					"children": [
						56556,
						56557,
						56558
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L7"
				}
			],
			"typeParameters": [
				{
					"id": 56561,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 56562,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			]
		},
		{
			"id": 56584,
			"name": "parallelize",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/parallelize.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 56585,
					"name": "parallelize",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function is used to run multiple steps in parallel. The result of each step will be returned as part of the result array."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The step results. The results are ordered in the array by the order they're passed in the function's parameter."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  parallelize,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  createProductStep,\n  createPricesStep,\n  attachProductToSalesChannelStep\n} from \"./steps\"\n\ninterface WorkflowInput {\n  title: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"my-workflow\",\n  (input: WorkflowInput) => {\n   const product = createProductStep(input)\n\n   const [prices, productSalesChannel] = parallelize(\n     createPricesStep(product),\n     attachProductToSalesChannelStep(product)\n   )\n\n   return new WorkflowResponse({\n    prices,\n    productSalesChannel\n   })\n }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
							"line": 44,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/parallelize.ts#L44"
						}
					],
					"typeParameters": [
						{
							"id": 56586,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "undefined"
										},
										{
											"type": "reference",
											"target": 56699,
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							}
						}
					],
					"parameters": [
						{
							"id": 56587,
							"name": "steps",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "reference",
								"target": 56586,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 56586,
						"name": "TResult",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 56853,
			"name": "Func1",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
					"line": 11,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 56859,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "reference",
								"target": 56699,
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				},
				{
					"id": 56860,
					"name": "U",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56854,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
							"line": 11,
							"character": 49
						}
					],
					"signatures": [
						{
							"id": 56855,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 56856,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 56859,
											"name": "T",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": 56699,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "U"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": 56859,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 56859,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 56859,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "reference",
														"target": 56699,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "U"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													},
													"trueType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 56859,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												}
											},
											"falseType": {
												"type": "reflection",
												"declaration": {
													"id": 56857,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
															"line": 16,
															"character": 6
														}
													]
												}
											}
										}
									}
								},
								{
									"id": 56858,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 56739,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 56860,
										"name": "U",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 56860,
												"name": "U",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 56861,
			"name": "Func",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
					"line": 20,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 56866,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 56867,
					"name": "U",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56862,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
							"line": 20,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 56863,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 56864,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 56866,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 56865,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 56739,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 56867,
										"name": "U",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 56867,
												"name": "U",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 56588,
			"name": "transform",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/transform.ts",
					"line": 63,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/transform.ts#L63"
				}
			],
			"signatures": [
				{
					"id": 56589,
					"name": "transform",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function transforms the output of other utility functions.\n\nFor example, if you're using the value(s) of some step(s) as an input to a later step. As you can't directly manipulate data in the  workflow constructor function passed to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 56501
							},
							{
								"kind": "text",
								"text": ",\nthe "
							},
							{
								"kind": "code",
								"text": "`transform`"
							},
							{
								"kind": "text",
								"text": " function provides access to the runtime value of the step(s) output so that you can manipulate them.\n\nAnother example is if you're using the runtime value of some step(s) as the output of a workflow.\n\nIf you're also retrieving the output of a hook and want to check if its value is set, you must use a workflow to get the runtime value of that hook."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "There's no expected value to be returned by the "
									},
									{
										"kind": "code",
										"text": "`transform`"
									},
									{
										"kind": "text",
										"text": " function."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  transform,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport { step1, step2 } from \"./steps\"\n\ntype WorkflowInput = {\n  name: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"hello-world\",\n  (input: WorkflowInput) => {\n    const str1 = step1(input)\n    const str2 = step2(input)\n\n    const message = transform({\n      str1,\n      str2\n    }, (input) => `${input.str1}${input.str2}`)\n\n    return new WorkflowResponse(message)\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/transform.ts",
							"line": 63,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/transform.ts#L63"
						}
					],
					"typeParameters": [
						{
							"id": 56590,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "object"
									},
									{
										"type": "reference",
										"target": 56699,
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						},
						{
							"id": 56591,
							"name": "RFinal",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 56592,
							"name": "values",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The output(s) of other step functions."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 56590,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 56593,
							"name": "func",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transform function used to perform action on the runtime values of the provided "
									},
									{
										"kind": "code",
										"text": "`values`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": 56853,
										"typeArguments": [
											{
												"type": "reference",
												"target": 56590,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 56591,
												"name": "RFinal",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Func1",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 56699,
						"typeArguments": [
							{
								"type": "reference",
								"target": 56591,
								"name": "RFinal",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowData",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 56645,
			"name": "StepFunctionResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 15,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 56649,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56646,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 56647,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 56648,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 56707,
										"name": "CreateWorkflowComposerContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 56699,
								"typeArguments": [
									{
										"type": "reference",
										"target": 56649,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				}
			}
		},
		{
			"id": 56650,
			"name": "StepFunctionReturnConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 18,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L18"
				}
			],
			"typeParameters": [
				{
					"id": 56657,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56651,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 56652,
							"name": "config",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L19"
								}
							],
							"signatures": [
								{
									"id": 56653,
									"name": "config",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L19"
										}
									],
									"parameters": [
										{
											"id": 56654,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 56655,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 56656,
																	"name": "name",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 20,
																			"character": 14,
																			"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L20"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		56656
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 20,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L20"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Omit"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 56815,
																"name": "TransactionStepsDefinition",
																"package": "@medusajs/orchestration"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "next"
																	},
																	{
																		"type": "literal",
																		"value": "uuid"
																	},
																	{
																		"type": "literal",
																		"value": "action"
																	}
																]
															}
														],
														"name": "Omit",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 56699,
										"typeArguments": [
											{
												"type": "reference",
												"target": 56657,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								56652
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 18,
							"character": 48,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L18"
						}
					]
				}
			}
		},
		{
			"id": 56868,
			"name": "KeysOfUnion",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 27,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 56869,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 56869,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 56869,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"trueType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 56869,
						"name": "T",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 56658,
			"name": "HookHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 28,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L28"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56659,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 28,
							"character": 26,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 56660,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 56661,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 57543,
			"name": "ConvertHookToObject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 30,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 57549,
					"name": "THook",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 57549,
					"name": "THook",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 56573,
					"typeArguments": [
						{
							"type": "inferred",
							"name": "Name"
						},
						{
							"type": "inferred",
							"name": "Input"
						},
						{
							"type": "inferred",
							"name": "Output"
						}
					],
					"name": "Hook",
					"package": "@medusajs/workflows-sdk"
				},
				"trueType": {
					"type": "mapped",
					"parameter": "K",
					"parameterType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
							"qualifiedName": "Name"
						},
						"name": "Name",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					},
					"templateType": {
						"type": "reflection",
						"declaration": {
							"id": 57544,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
									"line": 36,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 57545,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 57548,
											"name": "TCompensateInput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 57546,
											"name": "invoke",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 56474,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Input"
														},
														"name": "Input",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Output"
														},
														"name": "Output",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 57548,
														"name": "TCompensateInput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "InvokeFn",
												"package": "@medusajs/workflows-sdk"
											}
										},
										{
											"id": 57547,
											"name": "compensate",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 56482,
												"typeArguments": [
													{
														"type": "reference",
														"target": 57548,
														"name": "TCompensateInput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "CompensateFn",
												"package": "@medusajs/workflows-sdk"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 57196,
			"name": "ConvertHooksToFunctions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Helper to convert an array of hooks to functions"
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 46,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 57198,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 57198,
					"name": "THooks",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "A"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "R"
							}
						}
					]
				},
				"trueType": {
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 57543,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
										"qualifiedName": "A"
									},
									"name": "A",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "ConvertHookToObject",
							"package": "@medusajs/workflows-sdk"
						},
						{
							"type": "reference",
							"target": 57196,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
										"qualifiedName": "R"
									},
									"name": "R",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "ConvertHooksToFunctions",
							"package": "@medusajs/workflows-sdk"
						}
					]
				},
				"falseType": {
					"type": "reflection",
					"declaration": {
						"id": 57197,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"sources": [
							{
								"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
								"line": 51,
								"character": 4
							}
						]
					}
				}
			}
		},
		{
			"id": 56662,
			"name": "Void",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 53,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56663,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 56664,
							"name": " $$type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 53,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
								}
							],
							"type": {
								"type": "literal",
								"value": "void"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								56664
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 53,
							"character": 19,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
						}
					]
				}
			}
		},
		{
			"id": 56665,
			"name": "StepFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A step function to be used in a workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 61,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L61"
				}
			],
			"typeParameters": [
				{
					"id": 56692,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input of the step."
							}
						]
					}
				},
				{
					"id": 56693,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 56868,
							"typeArguments": [
								{
									"type": "reference",
									"target": 56692,
									"name": "TInput",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "KeysOfUnion",
							"package": "@medusajs/workflows-sdk"
						},
						"extendsType": {
							"type": "tuple"
						},
						"trueType": {
							"type": "reflection",
							"declaration": {
								"id": 56666,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "workflows-sdk/src/utils/composer/type.ts",
										"line": 66,
										"character": 4,
										"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L66"
									}
								],
								"signatures": [
									{
										"id": 56667,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "workflows-sdk/src/utils/composer/type.ts",
												"line": 67,
												"character": 6,
												"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L67"
											}
										],
										"type": {
											"type": "conditional",
											"checkType": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 56693,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 56668,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "never"
											},
											"trueType": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 56669,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 56670,
																	"name": " $$type",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 53,
																			"character": 21,
																			"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": "void"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		56670
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 91,
																	"character": 4,
																	"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L91"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 56662,
														"name": "Void",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reference",
														"target": 56694,
														"typeArguments": [
															{
																"type": "reference",
																"target": 56662,
																"name": "Void",
																"package": "@medusajs/workflows-sdk"
															}
														],
														"name": "WorkflowDataProperties",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 56671,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 56672,
																	"name": "config",
																	"variant": "declaration",
																	"kind": 2048,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 97,
																			"character": 4,
																			"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																		}
																	],
																	"signatures": [
																		{
																			"id": 56673,
																			"name": "config",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 97,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																				}
																			],
																			"parameters": [
																				{
																					"id": 56674,
																					"name": "config",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 56675,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 56676,
																											"name": "name",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {
																												"isOptional": true
																											},
																											"sources": [
																												{
																													"fileName": "workflows-sdk/src/utils/composer/type.ts",
																													"line": 98,
																													"character": 16,
																													"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												56676
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "workflows-sdk/src/utils/composer/type.ts",
																											"line": 98,
																											"character": 14,
																											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																										}
																									]
																								}
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Omit"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 56815,
																										"name": "TransactionStepsDefinition",
																										"package": "@medusajs/orchestration"
																									},
																									{
																										"type": "union",
																										"types": [
																											{
																												"type": "literal",
																												"value": "next"
																											},
																											{
																												"type": "literal",
																												"value": "uuid"
																											},
																											{
																												"type": "literal",
																												"value": "action"
																											}
																										]
																									}
																								],
																								"name": "Omit",
																								"package": "typescript"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 56699,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 56662,
																						"name": "Void",
																						"package": "@medusajs/workflows-sdk"
																					}
																				],
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Methods",
																	"children": [
																		56672
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 96,
																	"character": 30,
																	"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 56650,
														"typeArguments": [
															{
																"type": "reference",
																"target": 56693,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "StepFunctionReturnConfig",
														"package": "@medusajs/workflows-sdk"
													}
												]
											},
											"falseType": {
												"type": "intersection",
												"types": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 56693,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																	"qualifiedName": "Item"
																},
																"name": "Item",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "Item"
																		},
																		"name": "Item",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 56699,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																					"qualifiedName": "Item"
																				},
																				"name": "Item",
																				"package": "@medusajs/workflows-sdk",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														"falseType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": 56693,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "intrinsic",
																"name": "object"
															},
															"trueType": {
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "unknown",
																				"name": "..."
																			},
																			"objectType": {
																				"type": "unknown",
																				"name": "..."
																			}
																		},
																		{
																			"type": "reference",
																			"target": 56699,
																			"typeArguments": [
																				{
																					"type": "unknown",
																					"name": "..."
																				}
																			],
																			"name": "WorkflowData",
																			"package": "@medusajs/workflows-sdk"
																		}
																	]
																}
															},
															"falseType": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": 56693,
																		"name": "TOutput",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 56694,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 56693,
																				"name": "TOutput",
																				"package": "@medusajs/workflows-sdk",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "WorkflowDataProperties",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													},
													{
														"type": "reference",
														"target": 56693,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 56694,
														"typeArguments": [
															{
																"type": "reference",
																"target": 56693,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowDataProperties",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 56677,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 56678,
																	"name": "config",
																	"variant": "declaration",
																	"kind": 2048,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 97,
																			"character": 4,
																			"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																		}
																	],
																	"signatures": [
																		{
																			"id": 56679,
																			"name": "config",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 97,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																				}
																			],
																			"parameters": [
																				{
																					"id": 56680,
																					"name": "config",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 56681,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 56682,
																											"name": "name",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {
																												"isOptional": true
																											},
																											"sources": [
																												{
																													"fileName": "workflows-sdk/src/utils/composer/type.ts",
																													"line": 98,
																													"character": 16,
																													"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												56682
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "workflows-sdk/src/utils/composer/type.ts",
																											"line": 98,
																											"character": 14,
																											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																										}
																									]
																								}
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Omit"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 56815,
																										"name": "TransactionStepsDefinition",
																										"package": "@medusajs/orchestration"
																									},
																									{
																										"type": "union",
																										"types": [
																											{
																												"type": "literal",
																												"value": "next"
																											},
																											{
																												"type": "literal",
																												"value": "uuid"
																											},
																											{
																												"type": "literal",
																												"value": "action"
																											}
																										]
																									}
																								],
																								"name": "Omit",
																								"package": "typescript"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 56699,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 56693,
																						"name": "TOutput",
																						"package": "@medusajs/workflows-sdk",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Methods",
																	"children": [
																		56678
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 96,
																	"character": 30,
																	"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 56650,
														"typeArguments": [
															{
																"type": "reference",
																"target": 56693,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "StepFunctionReturnConfig",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									}
								]
							}
						},
						"falseType": {
							"type": "reflection",
							"declaration": {
								"id": 56683,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "workflows-sdk/src/utils/composer/type.ts",
										"line": 72,
										"character": 4,
										"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L72"
									}
								],
								"signatures": [
									{
										"id": 56684,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "workflows-sdk/src/utils/composer/type.ts",
												"line": 73,
												"character": 6,
												"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L73"
											}
										],
										"parameters": [
											{
												"id": 56685,
												"name": "input",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 56692,
															"name": "TInput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": 56699,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 56692,
																	"name": "TInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											}
										],
										"type": {
											"type": "intersection",
											"types": [
												{
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": 56693,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "Item"
															},
															"name": "Item",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"trueType": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																		"qualifiedName": "Item"
																	},
																	"name": "Item",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																{
																	"type": "reference",
																	"target": 56699,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																				"qualifiedName": "Item"
																			},
																			"name": "Item",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "WorkflowData",
																	"package": "@medusajs/workflows-sdk"
																}
															]
														}
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 56693,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 56693,
																			"typeArguments": [
																				{
																					"type": "unknown",
																					"name": "..."
																				}
																			],
																			"name": "TOutput",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	},
																	{
																		"type": "reference",
																		"target": 56699,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "unknown",
																					"name": "..."
																				},
																				"objectType": {
																					"type": "unknown",
																					"name": "..."
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														"falseType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": 56693,
																	"name": "TOutput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																{
																	"type": "reference",
																	"target": 56694,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 56693,
																			"name": "TOutput",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "WorkflowDataProperties",
																	"package": "@medusajs/workflows-sdk"
																}
															]
														}
													}
												},
												{
													"type": "reference",
													"target": 56693,
													"name": "TOutput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												{
													"type": "reference",
													"target": 56694,
													"typeArguments": [
														{
															"type": "reference",
															"target": 56693,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													],
													"name": "WorkflowDataProperties",
													"package": "@medusajs/workflows-sdk"
												},
												{
													"type": "reflection",
													"declaration": {
														"id": 56686,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 56687,
																"name": "config",
																"variant": "declaration",
																"kind": 2048,
																"flags": {},
																"sources": [
																	{
																		"fileName": "workflows-sdk/src/utils/composer/type.ts",
																		"line": 97,
																		"character": 4,
																		"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																	}
																],
																"signatures": [
																	{
																		"id": 56688,
																		"name": "config",
																		"variant": "signature",
																		"kind": 4096,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "workflows-sdk/src/utils/composer/type.ts",
																				"line": 97,
																				"character": 4,
																				"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																			}
																		],
																		"parameters": [
																			{
																				"id": 56689,
																				"name": "config",
																				"variant": "param",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intersection",
																					"types": [
																						{
																							"type": "reflection",
																							"declaration": {
																								"id": 56690,
																								"name": "__type",
																								"variant": "declaration",
																								"kind": 65536,
																								"flags": {},
																								"children": [
																									{
																										"id": 56691,
																										"name": "name",
																										"variant": "declaration",
																										"kind": 1024,
																										"flags": {
																											"isOptional": true
																										},
																										"sources": [
																											{
																												"fileName": "workflows-sdk/src/utils/composer/type.ts",
																												"line": 98,
																												"character": 16,
																												"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																											}
																										],
																										"type": {
																											"type": "intrinsic",
																											"name": "string"
																										}
																									}
																								],
																								"groups": [
																									{
																										"title": "Properties",
																										"children": [
																											56691
																										]
																									}
																								],
																								"sources": [
																									{
																										"fileName": "workflows-sdk/src/utils/composer/type.ts",
																										"line": 98,
																										"character": 14,
																										"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																									}
																								]
																							}
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Omit"
																							},
																							"typeArguments": [
																								{
																									"type": "reference",
																									"target": 56815,
																									"name": "TransactionStepsDefinition",
																									"package": "@medusajs/orchestration"
																								},
																								{
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": "next"
																										},
																										{
																											"type": "literal",
																											"value": "uuid"
																										},
																										{
																											"type": "literal",
																											"value": "action"
																										}
																									]
																								}
																							],
																							"name": "Omit",
																							"package": "typescript"
																						}
																					]
																				}
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 56699,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 56693,
																					"name": "TOutput",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "WorkflowData",
																			"package": "@medusajs/workflows-sdk"
																		}
																	}
																]
															}
														],
														"groups": [
															{
																"title": "Methods",
																"children": [
																	56687
																]
															}
														],
														"sources": [
															{
																"fileName": "workflows-sdk/src/utils/composer/type.ts",
																"line": 96,
																"character": 30,
																"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
															}
														]
													}
												},
												{
													"type": "reference",
													"target": 56650,
													"typeArguments": [
														{
															"type": "reference",
															"target": 56693,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													],
													"name": "StepFunctionReturnConfig",
													"package": "@medusajs/workflows-sdk"
												}
											]
										}
									}
								]
							}
						}
					},
					{
						"type": "reference",
						"target": 56694,
						"typeArguments": [
							{
								"type": "reference",
								"target": 56693,
								"name": "TOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					}
				]
			}
		},
		{
			"id": 56694,
			"name": "WorkflowDataProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 78,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L78"
				}
			],
			"typeParameters": [
				{
					"id": 56698,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56695,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 56696,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L79"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 56697,
							"name": "__step__",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								56696,
								56697
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 78,
							"character": 50,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L78"
						}
					]
				}
			}
		},
		{
			"id": 56699,
			"name": "WorkflowData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This type is used to encapsulate the input or output type of all utils."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 88,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L88"
				}
			],
			"typeParameters": [
				{
					"id": 56706,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of a step's input or result."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 56706,
							"name": "T",
							"package": "@medusajs/workflows-sdk",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "array",
							"elementType": {
								"type": "inferred",
								"name": "Item"
							}
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "Item"
										},
										"name": "Item",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 56699,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "Item"
												},
												"name": "Item",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 56706,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "intrinsic",
								"name": "object"
							},
							"trueType": {
								"type": "mapped",
								"parameter": "Key",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 56706,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 56706,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 56699,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 56706,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							"falseType": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 56706,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 56694,
										"typeArguments": [
											{
												"type": "reference",
												"target": 56706,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowDataProperties",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					},
					{
						"type": "reference",
						"target": 56706,
						"name": "T",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 56694,
						"typeArguments": [
							{
								"type": "reference",
								"target": 56706,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 56700,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 56701,
									"name": "config",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 97,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
										}
									],
									"signatures": [
										{
											"id": 56702,
											"name": "config",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 97,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
												}
											],
											"parameters": [
												{
													"id": 56703,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 56704,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 56705,
																			"name": "name",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 98,
																					"character": 16,
																					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				56705
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 98,
																			"character": 14,
																			"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Omit"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 56815,
																		"name": "TransactionStepsDefinition",
																		"package": "@medusajs/orchestration"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "next"
																			},
																			{
																				"type": "literal",
																				"value": "uuid"
																			},
																			{
																				"type": "literal",
																				"value": "action"
																			}
																		]
																	}
																],
																"name": "Omit",
																"package": "typescript"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 56699,
												"typeArguments": [
													{
														"type": "reference",
														"target": 56706,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										56701
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 96,
									"character": 30,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 56707,
			"name": "CreateWorkflowComposerContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 105,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L105"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 56708,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 56709,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 56710,
							"name": "hooks_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 107,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L107"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 56711,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 56712,
											"name": "declared",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 108,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L108"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 56713,
											"name": "registered",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 109,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L109"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												56712,
												56713
											]
										}
									],
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 107,
											"character": 10,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L107"
										}
									]
								}
							}
						},
						{
							"id": 56714,
							"name": "hooksCallback_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 111,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L111"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 56658,
										"name": "HookHandler",
										"package": "@medusajs/workflows-sdk"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 56715,
							"name": "workflowId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 112,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L112"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 56716,
							"name": "flow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L113"
								}
							],
							"type": {
								"type": "reference",
								"target": 56870,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 56717,
							"name": "isAsync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 114,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L114"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 56718,
							"name": "handlers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 115,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L115"
								}
							],
							"type": {
								"type": "reference",
								"target": 56959,
								"name": "WorkflowHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 56719,
							"name": "stepBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 116,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L116"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 56720,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 116,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L116"
										}
									],
									"signatures": [
										{
											"id": 56721,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 56723,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 56722,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 56645,
														"name": "StepFunctionResult",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 56699,
												"typeArguments": [
													{
														"type": "reference",
														"target": 56723,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							}
						},
						{
							"id": 56724,
							"name": "hookBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L119"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 56725,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 119,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L119"
										}
									],
									"signatures": [
										{
											"id": 56726,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 56727,
													"name": "name",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 56728,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 56729,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 119,
																	"character": 33,
																	"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L119"
																}
															],
															"signatures": [
																{
																	"id": 56730,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 56658,
																		"name": "HookHandler",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 56731,
							"name": "parallelizeBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 120,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 56732,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 120,
											"character": 21,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
										}
									],
									"signatures": [
										{
											"id": 56733,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 56738,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": 56699,
																	"name": "WorkflowData",
																	"package": "@medusajs/workflows-sdk"
																},
																{
																	"type": "intrinsic",
																	"name": "undefined"
																}
															]
														}
													},
													"default": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 56699,
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													}
												}
											],
											"parameters": [
												{
													"id": 56734,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 56735,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 123,
																	"character": 8,
																	"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L123"
																}
															],
															"signatures": [
																{
																	"id": 56736,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 56737,
																			"name": "this",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 56707,
																				"name": "CreateWorkflowComposerContext",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 56738,
																		"name": "TOutput",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 56738,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								56709,
								56710,
								56714,
								56715,
								56716,
								56717,
								56718,
								56719,
								56724,
								56731
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 105,
							"character": 44,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L105"
						}
					]
				}
			}
		},
		{
			"id": 56739,
			"name": "StepExecutionContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The step's context."
					}
				]
			},
			"children": [
				{
					"id": 56740,
					"name": "workflowId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the workflow."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 134,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L134"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 56741,
					"name": "attempt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attempt number of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 139,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L139"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 56742,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The idempoency key of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 144,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L144"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 56743,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The idempoency key of the parent step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 149,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L149"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 56744,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to prevent release events."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 154,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L154"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 56745,
					"name": "stepName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 159,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L159"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 56746,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The action of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 164,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L164"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "invoke"
							},
							{
								"type": "literal",
								"value": "compensate"
							}
						]
					}
				},
				{
					"id": 56747,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The container used to access resources, such as services, in the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 169,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L169"
						}
					],
					"type": {
						"type": "reference",
						"target": 56963,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 56748,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata passed in the input."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 173,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L173"
						}
					],
					"type": {
						"type": "reference",
						"target": 56984,
						"name": "TransactionMetadata",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 56749,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "inline-tag",
								"tag": "@inheritDoc",
								"text": "types!Context"
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 177,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L177"
						}
					],
					"type": {
						"type": "reference",
						"target": 56992,
						"name": "Context",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 56750,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 181,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L181"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 56751,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 185,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L185"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 56752,
					"name": " getStepResult",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 193,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L193"
						}
					],
					"signatures": [
						{
							"id": 56753,
							"name": " getStepResult",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get access to the result returned by a named step. Returns undefined\nwhen step is not found or when nothing was returned.\n\nAdding a space hides the method from the autocomplete"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 193,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L193"
								}
							],
							"parameters": [
								{
									"id": 56754,
									"name": "stepId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 56755,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "invoke"
											},
											{
												"type": "literal",
												"value": "compensate"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						56740,
						56741,
						56742,
						56743,
						56744,
						56745,
						56746,
						56747,
						56748,
						56749,
						56750,
						56751
					]
				},
				{
					"title": "Methods",
					"children": [
						56752
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 130,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L130"
				}
			]
		},
		{
			"id": 56756,
			"name": "WorkflowTransactionContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 196,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L196"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 56739,
						"name": "StepExecutionContext",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reference",
						"target": 57007,
						"name": "OriginalWorkflowTransactionContext",
						"package": "@medusajs/orchestration",
						"qualifiedName": "TransactionContext"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 56757,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 56758,
									"name": "invoke",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 198,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 56759,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 198,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
												}
											],
											"indexSignatures": [
												{
													"id": 56760,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/type.ts",
															"line": 198,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
														}
													],
													"parameters": [
														{
															"id": 56761,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 56762,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 56763,
																	"name": "output",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 198,
																			"character": 31,
																			"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		56763
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 198,
																	"character": 29,
																	"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
																}
															]
														}
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										56758
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 197,
									"character": 39,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L197"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 56764,
			"name": "ReturnWorkflow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An exported workflow, which is the type of a workflow constructed by the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "createWorkflow",
						"target": 56501
					},
					{
						"kind": "text",
						"text": " function. The exported workflow can be invoked to create\nan executable workflow, optionally within a specified container. So, to execute the workflow, you must invoke the exported workflow, then run the\n"
					},
					{
						"kind": "code",
						"text": "`run`"
					},
					{
						"kind": "text",
						"text": " method of the exported workflow."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "To execute a workflow:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nmyWorkflow()\n  .run({\n    input: {\n      name: \"John\"\n    }\n  })\n  .then(({ result }) => {\n    console.log(result)\n  })\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTo specify the container of the workflow, you can pass it as an argument to the call of the exported workflow. This is necessary when executing the workflow\nwithin a Medusa resource such as an API Route or a Subscriber.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nimport type {\n  MedusaRequest,\n  MedusaResponse\n} from \"@medusajs/medusa\";\nimport myWorkflow from \"../../../workflows/hello-world\";\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        name: req.query.name as string\n      }\n    })\n\n  res.send(result)\n}\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 248,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L248"
				}
			],
			"typeParameters": [
				{
					"id": 56794,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 56795,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 56796,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 56765,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 248,
									"character": 67,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L248"
								}
							],
							"signatures": [
								{
									"id": 56766,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 249,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L249"
										}
									],
									"typeParameters": [
										{
											"id": 56767,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 56768,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 56769,
											"name": "container",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 56963,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 56770,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 56771,
																		"name": "__joinerConfig",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 90,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 57016,
																			"name": "ModuleJoinerConfig",
																			"package": "@medusajs/types"
																		}
																	},
																	{
																		"id": 56772,
																		"name": "__definition",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 91,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 57041,
																			"name": "ModuleDefinition",
																			"package": "@medusajs/types"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			56771,
																			56772
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "types/dist/modules-sdk/index.d.ts",
																		"line": 89,
																		"character": 37
																	}
																]
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 57052,
														"name": "LocalWorkflow",
														"package": "@medusajs/orchestration"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "run"
															},
															{
																"type": "literal",
																"value": "registerStepSuccess"
															},
															{
																"type": "literal",
																"value": "registerStepFailure"
															},
															{
																"type": "literal",
																"value": "cancel"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 57174,
												"typeArguments": [
													{
														"type": "reference",
														"target": 56794,
														"name": "TData",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 56795,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 56767,
														"name": "TDataOverride",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 56768,
														"name": "TResultOverride",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ExportedWorkflow",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 56773,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 56774,
									"name": "runAsStep",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/execute-another-workflow)."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 265,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L265"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 56775,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 265,
													"character": 13,
													"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L265"
												}
											],
											"signatures": [
												{
													"id": 56776,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The workflow's result"
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 56777,
															"name": "{\n    input,\n  }",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 56778,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 56779,
																			"name": "input",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The workflow's input."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 271,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L271"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reference",
																						"target": 56794,
																						"name": "TData",
																						"package": "@medusajs/workflows-sdk",
																						"refersToTypeParameter": true
																					},
																					{
																						"type": "reference",
																						"target": 56699,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": 56794,
																								"name": "TData",
																								"package": "@medusajs/workflows-sdk",
																								"refersToTypeParameter": true
																							}
																						],
																						"name": "WorkflowData",
																						"package": "@medusajs/workflows-sdk"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				56779
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 267,
																			"character": 5,
																			"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L267"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 56665,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 56794,
																		"name": "TData",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 56795,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "StepFunction",
																"package": "@medusajs/workflows-sdk"
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 56780,
									"name": "run",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method executes a workflow."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 279,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L279"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 56781,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 279,
													"character": 7,
													"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L279"
												}
											],
											"signatures": [
												{
													"id": 56782,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "Details of the workflow's execution, including its result."
																	}
																]
															}
														]
													},
													"typeParameters": [
														{
															"id": 56784,
															"name": "TDataOverride",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"default": {
																"type": "intrinsic",
																"name": "undefined"
															}
														},
														{
															"id": 56785,
															"name": "TResultOverride",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"default": {
																"type": "intrinsic",
																"name": "undefined"
															}
														}
													],
													"parameters": [
														{
															"id": 56783,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The options to execute the workflow."
																	}
																]
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Parameters"
																},
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "run"
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 57174,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 56794,
																					"name": "TData",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 56795,
																					"name": "TResult",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 56784,
																					"name": "TDataOverride",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 56785,
																					"name": "TResultOverride",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "ExportedWorkflow",
																			"package": "@medusajs/workflows-sdk"
																		}
																	}
																],
																"name": "Parameters",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "run"
																},
																"objectType": {
																	"type": "reference",
																	"target": 57174,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 56794,
																			"name": "TData",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 56795,
																			"name": "TResult",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 56784,
																			"name": "TDataOverride",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 56785,
																			"name": "TResultOverride",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "ExportedWorkflow",
																	"package": "@medusajs/workflows-sdk"
																}
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 56786,
									"name": "getName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the workflow's name."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 289,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L289"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 56787,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 289,
													"character": 11,
													"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L289"
												}
											],
											"signatures": [
												{
													"id": 56788,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 56789,
									"name": "config",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method sets the workflow's configurations."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 293,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L293"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 56790,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 293,
													"character": 10,
													"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L293"
												}
											],
											"signatures": [
												{
													"id": 56791,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 56792,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 56833,
																"name": "TransactionModelOptions",
																"package": "@medusajs/orchestration"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 56793,
									"name": "hooks",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/workflow-hooks#how-to-consume-a-hook)."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 299,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L299"
										}
									],
									"type": {
										"type": "reference",
										"target": 57196,
										"typeArguments": [
											{
												"type": "reference",
												"target": 56796,
												"name": "THooks",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "ConvertHooksToFunctions",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										56774,
										56780,
										56786,
										56789,
										56793
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 256,
									"character": 4,
									"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L256"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 56797,
			"name": "UnwrapWorkflowInputDataType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Extract the raw type of the expected input data of a workflow."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\ntype WorkflowInputData = UnwrapWorkflowInputDataType<typeof myWorkflow>\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 308,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/e09fd61a8f649959a6c0819c1d867abf05ae0dc4/packages/core/workflows-sdk/src/utils/composer/type.ts#L308"
				}
			],
			"typeParameters": [
				{
					"id": 56798,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 56764,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ReturnWorkflow",
						"package": "@medusajs/workflows-sdk"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 56798,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 56764,
					"typeArguments": [
						{
							"type": "inferred",
							"name": "TData"
						},
						{
							"type": "inferred",
							"name": "R"
						},
						{
							"type": "inferred",
							"name": "THooks"
						}
					],
					"name": "ReturnWorkflow",
					"package": "@medusajs/workflows-sdk"
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
						"qualifiedName": "TData"
					},
					"name": "TData",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 57199,
			"name": "ConditionFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
					"line": 7,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 57205,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "reference",
								"target": 56699,
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57200,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
							"line": 7,
							"character": 58
						}
					],
					"signatures": [
						{
							"id": 57201,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 57202,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 57205,
											"name": "T",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": 56699,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "U"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": 57205,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 57205,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 57205,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "reference",
														"target": 56699,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "U"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													},
													"trueType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 57205,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												}
											},
											"falseType": {
												"type": "reflection",
												"declaration": {
													"id": 57203,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
															"line": 12,
															"character": 6
														}
													]
												}
											}
										}
									}
								},
								{
									"id": 57204,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 56739,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			}
		},
		{
			"id": 57206,
			"name": "ThenFunc",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
					"line": 16,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57207,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
							"line": 16,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 57208,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 57210,
									"name": "ThenResolver",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57211,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
													"line": 16,
													"character": 38
												}
											],
											"signatures": [
												{
													"id": 57212,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"parameters": [
								{
									"id": 57209,
									"name": "resolver",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57210,
										"name": "ThenResolver",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "ReturnType"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 57210,
											"name": "ThenResolver",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "ReturnType",
									"package": "typescript"
								},
								"extendsType": {
									"type": "reference",
									"target": 56699,
									"typeArguments": [
										{
											"type": "inferred",
											"name": "ReturnedWorkflowData"
										}
									],
									"name": "WorkflowData",
									"package": "@medusajs/workflows-sdk"
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 56699,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
														"qualifiedName": "ReturnedWorkflowData"
													},
													"name": "ReturnedWorkflowData",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										{
											"type": "intrinsic",
											"name": "undefined"
										}
									]
								},
								"falseType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "ReturnType"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 57210,
											"name": "ThenResolver",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "ReturnType",
									"package": "typescript"
								}
							}
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				57254,
				57955,
				58010,
				58021
			]
		},
		{
			"title": "Classes",
			"children": [
				57007,
				57946,
				57907,
				58000,
				57422,
				57221,
				56841,
				56870,
				57636,
				57800,
				57052,
				56517,
				56547
			]
		},
		{
			"title": "Interfaces",
			"children": [
				57864,
				57230,
				57319,
				57253,
				57588,
				57271,
				58035,
				57571,
				57257,
				56992,
				56491,
				56739
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				56984,
				57627,
				56815,
				56833,
				57213,
				57339,
				58027,
				58009,
				57916,
				57335,
				56959,
				57550,
				57249,
				56963,
				58032,
				57975,
				57567,
				57578,
				57593,
				57993,
				57603,
				57297,
				57307,
				57041,
				57971,
				57986,
				57981,
				57291,
				57016,
				57286,
				57609,
				57963,
				57520,
				57524,
				57529,
				57534,
				57514,
				57174,
				56573,
				56474,
				56482,
				56488,
				56853,
				56861,
				56645,
				56650,
				56868,
				56658,
				57543,
				57196,
				56662,
				56665,
				56694,
				56699,
				56707,
				56756,
				56764,
				56797,
				57199,
				57206
			]
		},
		{
			"title": "Variables",
			"children": [
				56852
			]
		},
		{
			"title": "Functions",
			"children": [
				56563,
				56464,
				56501,
				56584,
				56588
			]
		}
	],
	"packageName": "@medusajs/workflows-sdk",
	"symbolIdMap": {
		"56456": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/index.ts",
			"qualifiedName": ""
		},
		"56464": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"56465": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"56466": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeInput"
		},
		"56467": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultOutput"
		},
		"56468": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultCompensateInput"
		},
		"56469": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "nameOrConfig"
		},
		"56470": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"56471": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type.name"
		},
		"56472": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "invokeFn"
		},
		"56473": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "compensateFn"
		},
		"56474": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "InvokeFn"
		},
		"56475": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"56476": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"56477": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"56478": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"56479": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInput"
		},
		"56480": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TOutput"
		},
		"56481": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TCompensateInput"
		},
		"56482": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "CompensateFn"
		},
		"56483": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"56484": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"56485": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"56486": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"56487": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "T"
		},
		"56488": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "LocalStepConfig"
		},
		"56489": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"56490": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type.name"
		},
		"56491": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions"
		},
		"56492": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.stepName"
		},
		"56493": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.stepConfig"
		},
		"56494": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.input"
		},
		"56495": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.invokeFn"
		},
		"56496": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.compensateFn"
		},
		"56497": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TStepInputs"
		},
		"56498": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeInput"
		},
		"56499": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeResultOutput"
		},
		"56500": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput"
		},
		"56501": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"56502": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"56503": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TData"
		},
		"56504": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TResult"
		},
		"56505": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "THooks"
		},
		"56506": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "nameOrConfig"
		},
		"56507": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"56508": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type.name"
		},
		"56509": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "composer"
		},
		"56510": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"56511": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"56512": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "input"
		},
		"56517": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"56518": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.permanentFailure"
		},
		"56519": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.permanentFailure"
		},
		"56520": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "message"
		},
		"56521": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "compensateInput"
		},
		"56522": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.skip"
		},
		"56523": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.skip"
		},
		"56524": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.__constructor"
		},
		"56525": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"56526": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"56527": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"56528": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "output"
		},
		"56529": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "compensateInput"
		},
		"56545": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"56546": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"56547": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse"
		},
		"56548": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.__constructor"
		},
		"56549": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse"
		},
		"56550": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.TResult"
		},
		"56551": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.THooks"
		},
		"56552": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "$result"
		},
		"56553": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "options"
		},
		"56554": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type"
		},
		"56555": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type.hooks"
		},
		"56556": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.__type"
		},
		"56557": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.$result"
		},
		"56558": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.options"
		},
		"56559": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type"
		},
		"56560": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type.hooks"
		},
		"56561": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.TResult"
		},
		"56562": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.THooks"
		},
		"56563": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "createHook"
		},
		"56564": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "createHook"
		},
		"56565": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Name"
		},
		"56566": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "TInvokeInput"
		},
		"56567": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "TInvokeOutput"
		},
		"56568": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "name"
		},
		"56569": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "input"
		},
		"56570": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "options"
		},
		"56571": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type"
		},
		"56572": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.resultValidator"
		},
		"56573": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Hook"
		},
		"56574": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type"
		},
		"56575": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.__type"
		},
		"56576": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.name"
		},
		"56577": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.getResult"
		},
		"56578": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.getResult"
		},
		"56579": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type. output"
		},
		"56580": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type. input"
		},
		"56581": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Name"
		},
		"56582": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Input"
		},
		"56583": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Output"
		},
		"56584": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"56585": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"56586": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "TResult"
		},
		"56587": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "steps"
		},
		"56588": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"56589": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"56590": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"56591": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "RFinal"
		},
		"56592": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "values"
		},
		"56593": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "func"
		},
		"56645": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunctionResult"
		},
		"56646": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56647": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56648": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"56649": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"56650": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunctionReturnConfig"
		},
		"56651": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56652": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"56653": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"56654": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"56655": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56656": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"56657": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"56658": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "HookHandler"
		},
		"56659": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56660": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56661": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"56662": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "Void"
		},
		"56663": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56664": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type. $$type"
		},
		"56665": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunction"
		},
		"56666": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56667": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56668": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"56669": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56670": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": " $$type"
		},
		"56671": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56672": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"56673": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"56674": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"56675": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56676": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"56677": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56678": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"56679": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"56680": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"56681": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56682": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"56683": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56684": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56685": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"56686": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56687": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"56688": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"56689": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"56690": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56691": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"56692": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TInput"
		},
		"56693": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"56694": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowDataProperties"
		},
		"56695": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56696": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"56697": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"56698": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"56699": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowData"
		},
		"56700": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56701": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"56702": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"56703": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"56704": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56705": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"56706": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"56707": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "CreateWorkflowComposerContext"
		},
		"56708": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56709": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"56710": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks_"
		},
		"56711": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56712": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.declared"
		},
		"56713": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.registered"
		},
		"56714": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooksCallback_"
		},
		"56715": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.workflowId"
		},
		"56716": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.flow"
		},
		"56717": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.isAsync"
		},
		"56718": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.handlers"
		},
		"56719": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.stepBinder"
		},
		"56720": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56721": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56722": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"56723": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"56724": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hookBinder"
		},
		"56725": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56726": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56727": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "name"
		},
		"56728": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"56729": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56730": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56731": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.parallelizeBinder"
		},
		"56732": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56733": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56734": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"56735": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56736": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56737": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"56738": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"56739": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext"
		},
		"56740": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.workflowId"
		},
		"56741": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.attempt"
		},
		"56742": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.idempotencyKey"
		},
		"56743": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.parentStepIdempotencyKey"
		},
		"56744": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.preventReleaseEvents"
		},
		"56745": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.stepName"
		},
		"56746": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.action"
		},
		"56747": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.container"
		},
		"56748": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.metadata"
		},
		"56749": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.context"
		},
		"56750": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.eventGroupId"
		},
		"56751": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.transactionId"
		},
		"56752": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. getStepResult"
		},
		"56753": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. getStepResult"
		},
		"56754": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "stepId"
		},
		"56755": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "action"
		},
		"56756": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowTransactionContext"
		},
		"56757": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56758": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.invoke"
		},
		"56759": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56760": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__index"
		},
		"56762": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56763": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.output"
		},
		"56764": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ReturnWorkflow"
		},
		"56765": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56766": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56767": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"56768": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"56769": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"56770": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"56771": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"56772": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"56773": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56774": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"56775": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56776": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56778": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56779": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"56780": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"56781": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56782": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56783": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"56784": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"56785": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"56786": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"56787": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56788": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56789": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"56790": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56791": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"56792": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"56793": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"56794": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TData"
		},
		"56795": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResult"
		},
		"56796": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THooks"
		},
		"56797": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "UnwrapWorkflowInputDataType"
		},
		"56798": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"56815": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionStepsDefinition"
		},
		"56816": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"56817": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.uuid"
		},
		"56818": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.action"
		},
		"56819": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.continueOnPermanentFailure"
		},
		"56820": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.skipOnPermanentFailure"
		},
		"56821": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noCompensation"
		},
		"56822": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxRetries"
		},
		"56823": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryInterval"
		},
		"56824": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryIntervalAwaiting"
		},
		"56825": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"56826": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.async"
		},
		"56827": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.nested"
		},
		"56828": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.backgroundExecution"
		},
		"56829": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.compensateAsync"
		},
		"56830": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noWait"
		},
		"56831": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.saveResponse"
		},
		"56832": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.next"
		},
		"56833": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionModelOptions"
		},
		"56834": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"56835": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"56836": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.store"
		},
		"56837": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retentionTime"
		},
		"56838": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.storeExecution"
		},
		"56839": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.idempotent"
		},
		"56840": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.schedule"
		},
		"56841": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse"
		},
		"56842": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.isSkipStepResponse"
		},
		"56843": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.isSkipStepResponse"
		},
		"56844": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "error"
		},
		"56845": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.__constructor"
		},
		"56846": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse"
		},
		"56847": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "message"
		},
		"56848": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "stepResponse"
		},
		"56849": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.#private"
		},
		"56850": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"56851": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"56852": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/symbol.ts",
			"qualifiedName": "SymbolWorkflowHook"
		},
		"56853": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "Func1"
		},
		"56854": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"56855": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"56856": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "input"
		},
		"56857": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"56858": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "context"
		},
		"56859": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"56860": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "U"
		},
		"56861": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "Func"
		},
		"56862": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"56863": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"56864": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "input"
		},
		"56865": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "context"
		},
		"56866": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"56867": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "U"
		},
		"56868": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "KeysOfUnion"
		},
		"56869": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"56870": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder"
		},
		"56871": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.__constructor"
		},
		"56872": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder"
		},
		"56873": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"56874": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.steps"
		},
		"56875": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges_"
		},
		"56876": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges"
		},
		"56877": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges"
		},
		"56878": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.load"
		},
		"56879": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.load"
		},
		"56880": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"56881": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.addAction"
		},
		"56882": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.addAction"
		},
		"56883": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"56884": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"56885": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.replaceAction"
		},
		"56886": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.replaceAction"
		},
		"56887": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"56888": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"56889": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"56890": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionBefore"
		},
		"56891": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionBefore"
		},
		"56892": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"56893": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"56894": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"56895": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionAfter"
		},
		"56896": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionAfter"
		},
		"56897": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"56898": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"56899": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"56900": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendTo"
		},
		"56901": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendTo"
		},
		"56902": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"56903": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "newStep"
		},
		"56904": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendAction"
		},
		"56905": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendAction"
		},
		"56906": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"56907": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "to"
		},
		"56908": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"56909": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.move"
		},
		"56910": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.move"
		},
		"56911": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"56912": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"56913": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__2"
		},
		"56914": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type"
		},
		"56915": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type.runInParallel"
		},
		"56916": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type.mergeNext"
		},
		"56917": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAction"
		},
		"56918": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAction"
		},
		"56919": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"56920": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"56921": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAndMergeNextAction"
		},
		"56922": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAndMergeNextAction"
		},
		"56923": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"56924": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"56925": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.mergeActions"
		},
		"56926": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.mergeActions"
		},
		"56927": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "where"
		},
		"56928": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actions"
		},
		"56929": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.deleteAction"
		},
		"56930": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.deleteAction"
		},
		"56931": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"56932": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"56933": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.pruneAction"
		},
		"56934": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.pruneAction"
		},
		"56935": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"56936": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findStepByAction"
		},
		"56937": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findStepByAction"
		},
		"56938": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"56939": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"56940": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findOrThrowStepByAction"
		},
		"56941": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findOrThrowStepByAction"
		},
		"56942": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"56943": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"56944": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findParentStepByAction"
		},
		"56945": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findParentStepByAction"
		},
		"56946": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"56947": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"56948": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findLastStep"
		},
		"56949": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findLastStep"
		},
		"56950": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"56951": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.updateDepths"
		},
		"56952": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.updateDepths"
		},
		"56953": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "startingStep"
		},
		"56954": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "parent"
		},
		"56955": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "incr"
		},
		"56956": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "beginFrom"
		},
		"56957": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.build"
		},
		"56958": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.build"
		},
		"56959": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowHandler"
		},
		"56960": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"56961": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"56962": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"56963": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"56964": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"56965": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"56966": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"56967": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"56968": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"56969": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"56970": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"56971": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"56972": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"56973": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"56974": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"56975": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"56976": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"56977": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "name"
		},
		"56978": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "registration"
		},
		"56979": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"56980": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.createScope"
		},
		"56981": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"56982": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"56983": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"56984": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionMetadata"
		},
		"56985": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"56986": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.model_id"
		},
		"56987": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.idempotency_key"
		},
		"56988": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.action"
		},
		"56989": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.action_type"
		},
		"56990": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.attempt"
		},
		"56991": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.timestamp"
		},
		"56992": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"56993": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"56994": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"56995": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"56996": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"56997": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"56998": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"56999": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"57000": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"57001": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"57002": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"57003": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"57004": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"57005": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"57006": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"57007": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext"
		},
		"57008": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.__constructor"
		},
		"57009": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext"
		},
		"57010": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "payload"
		},
		"57011": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "invoke"
		},
		"57012": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "compensate"
		},
		"57013": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.payload"
		},
		"57014": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.invoke"
		},
		"57015": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.compensate"
		},
		"57016": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"57017": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57018": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"57019": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"57020": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"57021": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57022": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"57023": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"57024": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"57025": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57026": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"57027": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"57028": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"57029": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"57030": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"57031": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"57032": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"57033": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"57034": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"57035": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"57036": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"57037": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57038": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"57039": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"57040": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"57041": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"57042": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57043": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"57044": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"57045": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"57046": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolvePath"
		},
		"57047": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"57048": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"57049": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"57050": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__passSharedContainer"
		},
		"57051": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"57052": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow"
		},
		"57053": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.__constructor"
		},
		"57054": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow"
		},
		"57055": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "workflowId"
		},
		"57056": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "modulesLoaded"
		},
		"57057": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57058": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"57059": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"57060": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container_"
		},
		"57061": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.workflowId"
		},
		"57062": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.flow"
		},
		"57063": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.customOptions"
		},
		"57064": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.workflow"
		},
		"57065": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.handlers"
		},
		"57066": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.medusaContext"
		},
		"57067": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"57068": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"57069": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"57070": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "modulesLoaded"
		},
		"57071": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57072": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"57073": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"57074": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.resolveContainer"
		},
		"57075": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.contextualizedMedusaModules"
		},
		"57076": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.commit"
		},
		"57077": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.commit"
		},
		"57078": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getFlow"
		},
		"57079": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getFlow"
		},
		"57080": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerEventCallbacks"
		},
		"57081": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.run"
		},
		"57082": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.run"
		},
		"57083": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "uniqueTransactionId"
		},
		"57084": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "input"
		},
		"57085": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"57086": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"57087": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "flowMetadata"
		},
		"57088": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57089": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"57090": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"57091": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"57092": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"57093": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"57094": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"57096": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getRunningTransaction"
		},
		"57097": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getRunningTransaction"
		},
		"57098": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "uniqueTransactionId"
		},
		"57099": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"57100": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.cancel"
		},
		"57101": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.cancel"
		},
		"57102": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "transactionOrTransactionId"
		},
		"57103": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "_"
		},
		"57104": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"57105": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"57106": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepSuccess"
		},
		"57107": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepSuccess"
		},
		"57108": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "idempotencyKey"
		},
		"57109": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "response"
		},
		"57110": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"57111": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"57112": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepFailure"
		},
		"57113": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepFailure"
		},
		"57114": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "idempotencyKey"
		},
		"57115": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "error"
		},
		"57116": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"57117": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"57118": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.setOptions"
		},
		"57119": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.setOptions"
		},
		"57120": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"57121": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.addAction"
		},
		"57122": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.addAction"
		},
		"57123": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"57124": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"57125": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"57126": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.replaceAction"
		},
		"57127": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.replaceAction"
		},
		"57128": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"57129": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"57130": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"57131": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"57132": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionBefore"
		},
		"57133": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionBefore"
		},
		"57134": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"57135": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"57136": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"57137": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"57138": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionAfter"
		},
		"57139": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionAfter"
		},
		"57140": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"57141": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"57142": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"57143": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"57144": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.appendAction"
		},
		"57145": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.appendAction"
		},
		"57146": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"57147": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "to"
		},
		"57148": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"57149": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"57150": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAction"
		},
		"57151": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAction"
		},
		"57152": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actionToMove"
		},
		"57153": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "targetAction"
		},
		"57154": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAndMergeNextAction"
		},
		"57155": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAndMergeNextAction"
		},
		"57156": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actionToMove"
		},
		"57157": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "targetAction"
		},
		"57158": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.mergeActions"
		},
		"57159": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.mergeActions"
		},
		"57160": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "where"
		},
		"57161": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actions"
		},
		"57162": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.deleteAction"
		},
		"57163": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.deleteAction"
		},
		"57164": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"57165": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "parentSteps"
		},
		"57166": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.pruneAction"
		},
		"57167": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.pruneAction"
		},
		"57168": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"57169": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.assertHandler"
		},
		"57170": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.assertHandler"
		},
		"57171": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"57172": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"57173": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.onLoad"
		},
		"57174": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "ExportedWorkflow"
		},
		"57175": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57176": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.run"
		},
		"57177": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57178": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57179": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"57180": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.registerStepSuccess"
		},
		"57181": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57182": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57183": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"57184": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.registerStepFailure"
		},
		"57185": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57186": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57187": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"57188": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.cancel"
		},
		"57189": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57190": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57191": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"57192": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"57193": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResult"
		},
		"57194": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"57195": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"57196": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ConvertHooksToFunctions"
		},
		"57197": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57198": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THooks"
		},
		"57199": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ConditionFunction"
		},
		"57200": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"57201": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"57202": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "input"
		},
		"57203": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"57204": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "context"
		},
		"57205": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "T"
		},
		"57206": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ThenFunc"
		},
		"57207": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"57208": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"57209": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "resolver"
		},
		"57210": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ThenResolver"
		},
		"57211": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"57212": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"57213": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "SchedulerOptions"
		},
		"57214": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57215": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.concurrency"
		},
		"57216": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.numberOfExecutions"
		},
		"57217": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57218": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cron"
		},
		"57219": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57220": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.interval"
		},
		"57221": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror"
		},
		"57222": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.__constructor"
		},
		"57223": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror"
		},
		"57224": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "name"
		},
		"57225": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "message"
		},
		"57226": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "stepResponse"
		},
		"57227": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.#private"
		},
		"57228": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"57229": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"57230": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep"
		},
		"57231": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.next"
		},
		"57232": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.depth"
		},
		"57233": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.parent"
		},
		"57234": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.uuid"
		},
		"57235": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.action"
		},
		"57236": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.continueOnPermanentFailure"
		},
		"57237": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.skipOnPermanentFailure"
		},
		"57238": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noCompensation"
		},
		"57239": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxRetries"
		},
		"57240": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryInterval"
		},
		"57241": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryIntervalAwaiting"
		},
		"57242": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"57243": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.async"
		},
		"57244": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.nested"
		},
		"57245": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.backgroundExecution"
		},
		"57246": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.compensateAsync"
		},
		"57247": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noWait"
		},
		"57248": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.saveResponse"
		},
		"57249": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowStepHandler"
		},
		"57250": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"57251": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"57252": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "args"
		},
		"57253": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ModuleImplementations"
		},
		"57254": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType"
		},
		"57255": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType.INVOKE"
		},
		"57256": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType.COMPENSATE"
		},
		"57257": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"57258": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"57259": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"57260": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"57261": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"57262": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"57263": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"57264": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"57265": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"57266": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"57267": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"57268": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"57269": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"57270": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"57271": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"57272": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"57273": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"57274": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"57275": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"57276": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"57277": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"57278": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"57279": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"57280": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"57281": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"57282": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"57283": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"57284": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"57285": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"57286": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"57287": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57288": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"57289": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.filterable"
		},
		"57290": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.hasMany"
		},
		"57291": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"57292": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57293": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"57294": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"57295": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"57296": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"57297": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"57298": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57299": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"57300": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"57301": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"57302": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"57303": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"57304": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"57305": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"57306": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"57307": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"57308": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57309": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"57310": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"57311": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"57312": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57313": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"57314": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"57315": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"57316": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"57317": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"57318": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"57319": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition"
		},
		"57320": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.id"
		},
		"57321": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.handler"
		},
		"57322": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"57323": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"57324": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "container"
		},
		"57325": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "context"
		},
		"57326": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.orchestrator"
		},
		"57327": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.flow_"
		},
		"57328": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.handlers_"
		},
		"57329": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"57330": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"57331": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"57332": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.options"
		},
		"57333": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.requiredModules"
		},
		"57334": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.optionalModules"
		},
		"57335": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "StepHandler"
		},
		"57336": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type"
		},
		"57337": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type.invoke"
		},
		"57338": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type.compensate"
		},
		"57339": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "DistributedTransactionEvents"
		},
		"57340": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57341": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onBegin"
		},
		"57342": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57343": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57344": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"57345": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57346": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"57347": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onResume"
		},
		"57348": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57349": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57350": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"57351": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57352": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"57353": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onFinish"
		},
		"57354": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57355": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57356": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"57357": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57358": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"57359": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.result"
		},
		"57360": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.errors"
		},
		"57361": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onTimeout"
		},
		"57362": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57363": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57364": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"57365": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57366": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"57367": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepBegin"
		},
		"57368": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57369": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57370": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"57371": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57372": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"57373": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"57374": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepSuccess"
		},
		"57375": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57376": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57377": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"57378": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57379": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"57380": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"57381": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepFailure"
		},
		"57382": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57383": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57384": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"57385": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57386": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"57387": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"57388": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepAwaiting"
		},
		"57389": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57390": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57391": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"57392": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57393": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"57394": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"57395": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateBegin"
		},
		"57396": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57397": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57398": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"57399": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57400": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"57401": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateStepSuccess"
		},
		"57402": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57403": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57404": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"57405": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57406": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"57407": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"57408": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateStepFailure"
		},
		"57409": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57410": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57411": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"57412": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57413": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"57414": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"57415": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepSkipped"
		},
		"57416": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57417": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57418": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"57419": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57420": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"57421": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"57422": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction"
		},
		"57423": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.keyValueStore"
		},
		"57424": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setStorage"
		},
		"57425": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setStorage"
		},
		"57426": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "storage"
		},
		"57427": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.keyPrefix"
		},
		"57428": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.loadTransaction"
		},
		"57429": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.loadTransaction"
		},
		"57430": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "modelId"
		},
		"57431": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "transactionId"
		},
		"57432": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "options"
		},
		"57433": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"57434": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"57435": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.__constructor"
		},
		"57436": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction"
		},
		"57437": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "flow"
		},
		"57438": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handler"
		},
		"57439": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "payload"
		},
		"57440": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "errors"
		},
		"57441": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"57442": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.#private"
		},
		"57443": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.flow"
		},
		"57444": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.handler"
		},
		"57445": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.payload"
		},
		"57446": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.modelId"
		},
		"57447": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.transactionId"
		},
		"57448": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.runId"
		},
		"57449": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.errors"
		},
		"57450": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.context"
		},
		"57451": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getFlow"
		},
		"57452": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getFlow"
		},
		"57453": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getContext"
		},
		"57454": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getContext"
		},
		"57455": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getErrors"
		},
		"57456": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getErrors"
		},
		"57457": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"57458": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addError"
		},
		"57459": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addError"
		},
		"57460": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"57461": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"57462": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "error"
		},
		"57463": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addResponse"
		},
		"57464": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addResponse"
		},
		"57465": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"57466": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"57467": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "response"
		},
		"57468": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasFinished"
		},
		"57469": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasFinished"
		},
		"57470": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getState"
		},
		"57471": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getState"
		},
		"57472": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.isPartiallyCompleted"
		},
		"57473": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.isPartiallyCompleted"
		},
		"57474": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canInvoke"
		},
		"57475": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canInvoke"
		},
		"57476": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canRevert"
		},
		"57477": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canRevert"
		},
		"57478": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTimeout"
		},
		"57479": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTimeout"
		},
		"57480": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTimeout"
		},
		"57481": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTimeout"
		},
		"57482": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.saveCheckpoint"
		},
		"57483": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.saveCheckpoint"
		},
		"57484": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "ttl"
		},
		"57485": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleRetry"
		},
		"57486": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleRetry"
		},
		"57487": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"57488": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"57489": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearRetry"
		},
		"57490": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearRetry"
		},
		"57491": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"57492": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleTransactionTimeout"
		},
		"57493": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleTransactionTimeout"
		},
		"57494": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"57495": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearTransactionTimeout"
		},
		"57496": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearTransactionTimeout"
		},
		"57497": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleStepTimeout"
		},
		"57498": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleStepTimeout"
		},
		"57499": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"57500": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"57501": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearStepTimeout"
		},
		"57502": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearStepTimeout"
		},
		"57503": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"57504": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setTemporaryData"
		},
		"57505": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setTemporaryData"
		},
		"57506": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"57507": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "value"
		},
		"57508": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTemporaryData"
		},
		"57509": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTemporaryData"
		},
		"57510": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"57511": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTemporaryData"
		},
		"57512": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTemporaryData"
		},
		"57513": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"57514": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "WorkflowResult"
		},
		"57515": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57516": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.errors"
		},
		"57517": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transaction"
		},
		"57518": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.result"
		},
		"57519": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResult"
		},
		"57520": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRunOptions"
		},
		"57521": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57522": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.input"
		},
		"57523": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"57524": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRegisterStepSuccessOptions"
		},
		"57525": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57526": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"57527": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.response"
		},
		"57528": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"57529": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRegisterStepFailureOptions"
		},
		"57530": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57531": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"57532": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.response"
		},
		"57533": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"57534": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowCancelOptions"
		},
		"57535": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57536": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transaction"
		},
		"57537": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transactionId"
		},
		"57538": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.context"
		},
		"57539": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"57540": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.logOnError"
		},
		"57541": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.events"
		},
		"57542": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.container"
		},
		"57543": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ConvertHookToObject"
		},
		"57544": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57545": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57546": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "invoke"
		},
		"57547": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "compensate"
		},
		"57548": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TCompensateInput"
		},
		"57549": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THook"
		},
		"57550": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowStepHandlerArguments"
		},
		"57551": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"57552": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.container"
		},
		"57553": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.payload"
		},
		"57554": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"57555": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"57556": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.__index"
		},
		"57558": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"57559": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"57560": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.__index"
		},
		"57562": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.metadata"
		},
		"57563": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.transaction"
		},
		"57564": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.step"
		},
		"57565": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.orchestrator"
		},
		"57566": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.context"
		},
		"57567": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"57568": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"57569": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"57570": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"57571": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"57572": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"57573": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"57574": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"57575": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"57577": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"57578": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"57579": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"57580": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"57581": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"57582": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"57583": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"57584": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"57585": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"57586": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"57587": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"57588": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"57589": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"57590": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"57591": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.filterable"
		},
		"57592": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"57593": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"57594": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"57595": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"57596": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"57597": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"57598": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"57599": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"57600": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"57601": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"57602": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"57603": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "CustomModuleDefinition"
		},
		"57604": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57605": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"57606": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"57607": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"57608": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"57609": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"57610": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57611": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"57612": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"57613": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"57614": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"57615": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"57616": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"57617": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"57618": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"57619": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"57620": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"57621": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"57622": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"57623": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"57624": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"57625": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.discoveryPath"
		},
		"57626": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"57627": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStepHandler"
		},
		"57628": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"57629": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"57630": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "actionId"
		},
		"57631": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "handlerType"
		},
		"57632": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "payload"
		},
		"57633": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "transaction"
		},
		"57634": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "step"
		},
		"57635": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "orchestrator"
		},
		"57636": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator"
		},
		"57637": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.ROOT_STEP"
		},
		"57638": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.DEFAULT_TTL"
		},
		"57639": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.DEFAULT_RETRIES"
		},
		"57640": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.workflowOptions"
		},
		"57641": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getWorkflowOptions"
		},
		"57642": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getWorkflowOptions"
		},
		"57643": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "modelId"
		},
		"57644": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.traceTransaction"
		},
		"57645": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57646": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57647": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transactionResume"
		},
		"57648": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57649": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57650": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "args"
		},
		"57651": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "metadata"
		},
		"57652": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57653": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.model_id"
		},
		"57654": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction_id"
		},
		"57655": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.flow_metadata"
		},
		"57656": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57657": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"57658": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"57659": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"57660": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"57661": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"57662": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"57664": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.traceStep"
		},
		"57665": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57666": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57667": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "handler"
		},
		"57668": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57669": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57670": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "args"
		},
		"57671": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "metadata"
		},
		"57672": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57673": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.action"
		},
		"57674": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.type"
		},
		"57675": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.step_id"
		},
		"57676": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.step_uuid"
		},
		"57677": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.attempts"
		},
		"57678": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.failures"
		},
		"57679": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.async"
		},
		"57680": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.idempotency_key"
		},
		"57681": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.clone"
		},
		"57682": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.clone"
		},
		"57683": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "orchestrator"
		},
		"57684": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.SEPARATOR"
		},
		"57685": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getKeyName"
		},
		"57686": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getKeyName"
		},
		"57687": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "params"
		},
		"57688": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepSuccess"
		},
		"57689": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"57690": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepTimeout"
		},
		"57691": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepFailure"
		},
		"57692": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.loadTransactionById"
		},
		"57693": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.buildSteps"
		},
		"57694": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getStepByAction"
		},
		"57695": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getTransactionAndStepFromIdempotencyKey"
		},
		"57696": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.__constructor"
		},
		"57697": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator"
		},
		"57698": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"57699": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57700": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.id"
		},
		"57701": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.definition"
		},
		"57702": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.options"
		},
		"57703": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.isClone"
		},
		"57704": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.id"
		},
		"57705": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.invokeSteps"
		},
		"57706": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.compensateSteps"
		},
		"57707": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.definition"
		},
		"57708": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.options"
		},
		"57709": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getPreviousStep"
		},
		"57710": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getOptions"
		},
		"57711": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getOptions"
		},
		"57712": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getInvokeSteps"
		},
		"57713": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getCompensationSteps"
		},
		"57714": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canMoveForward"
		},
		"57715": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canMoveBackward"
		},
		"57716": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canContinue"
		},
		"57717": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.hasExpired"
		},
		"57718": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkTransactionTimeout"
		},
		"57719": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkStepTimeout"
		},
		"57720": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkAllSteps"
		},
		"57721": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.computeCurrentTransactionState"
		},
		"57722": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.flagStepsToRevert"
		},
		"57723": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeNext"
		},
		"57724": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.finalizeTransaction"
		},
		"57725": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.prepareStepForExecution"
		},
		"57726": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createStepPayload"
		},
		"57727": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.prepareHandlerArgs"
		},
		"57728": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createStepExecutionPromise"
		},
		"57729": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeSyncStep"
		},
		"57730": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeAsyncStep"
		},
		"57731": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepExpiration"
		},
		"57732": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepSuccess"
		},
		"57733": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepFailure"
		},
		"57734": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.resume"
		},
		"57735": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.resume"
		},
		"57736": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"57737": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.cancelTransaction"
		},
		"57738": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.cancelTransaction"
		},
		"57739": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"57740": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.parseFlowOptions"
		},
		"57741": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createTransactionFlow"
		},
		"57742": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.beginTransaction"
		},
		"57743": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.beginTransaction"
		},
		"57744": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"57745": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57746": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transactionId"
		},
		"57747": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"57748": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.payload"
		},
		"57749": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.flowMetadata"
		},
		"57750": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57751": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"57752": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"57753": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"57754": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"57755": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"57756": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"57758": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"57759": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57760": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57761": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"57762": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retrieveExistingTransaction"
		},
		"57763": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retrieveExistingTransaction"
		},
		"57764": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transactionId"
		},
		"57765": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "handler"
		},
		"57766": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "options"
		},
		"57767": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57768": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"57769": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"57770": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"57771": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"57772": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57773": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"57774": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"57775": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"57776": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepSuccess"
		},
		"57777": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepSuccess"
		},
		"57778": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"57779": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57780": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"57781": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"57782": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"57783": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.response"
		},
		"57784": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"57785": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57786": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57787": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"57788": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepFailure"
		},
		"57789": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepFailure"
		},
		"57790": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"57791": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57792": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"57793": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.error"
		},
		"57794": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"57795": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"57796": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"57797": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57798": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"57799": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"57800": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep"
		},
		"57803": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.stepFailed"
		},
		"57804": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.id"
		},
		"57805": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.uuid"
		},
		"57806": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.depth"
		},
		"57807": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.definition"
		},
		"57808": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.invoke"
		},
		"57809": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"57810": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"57811": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"57812": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.compensate"
		},
		"57813": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"57814": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"57815": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"57816": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.attempts"
		},
		"57817": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.failures"
		},
		"57818": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.lastAttempt"
		},
		"57819": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.retryRescheduledAt"
		},
		"57820": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasScheduledRetry"
		},
		"57821": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.timedOutAt"
		},
		"57822": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.startedAt"
		},
		"57823": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.next"
		},
		"57824": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.saveResponse"
		},
		"57825": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getStates"
		},
		"57826": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getStates"
		},
		"57827": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"57828": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"57829": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"57830": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.beginCompensation"
		},
		"57831": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.beginCompensation"
		},
		"57832": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isCompensating"
		},
		"57833": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isCompensating"
		},
		"57834": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isInvoking"
		},
		"57835": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isInvoking"
		},
		"57836": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeState"
		},
		"57837": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeState"
		},
		"57838": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "toState"
		},
		"57839": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeStatus"
		},
		"57840": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeStatus"
		},
		"57841": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "toStatus"
		},
		"57842": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryScheduled"
		},
		"57843": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryScheduled"
		},
		"57844": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryInterval"
		},
		"57845": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryInterval"
		},
		"57846": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasTimeout"
		},
		"57847": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasTimeout"
		},
		"57848": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getTimeout"
		},
		"57849": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getTimeout"
		},
		"57850": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetry"
		},
		"57851": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetry"
		},
		"57852": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasAwaitingRetry"
		},
		"57853": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasAwaitingRetry"
		},
		"57854": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetryAwaiting"
		},
		"57855": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetryAwaiting"
		},
		"57856": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canInvoke"
		},
		"57857": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canInvoke"
		},
		"57858": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "flowState"
		},
		"57859": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCompensate"
		},
		"57860": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCompensate"
		},
		"57861": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "flowState"
		},
		"57862": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCancel"
		},
		"57863": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCancel"
		},
		"57864": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage"
		},
		"57865": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.get"
		},
		"57866": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.get"
		},
		"57867": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "key"
		},
		"57868": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "options"
		},
		"57869": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "__type"
		},
		"57870": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"57871": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.list"
		},
		"57872": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.list"
		},
		"57873": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.save"
		},
		"57874": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.save"
		},
		"57875": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "key"
		},
		"57876": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "data"
		},
		"57877": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "ttl"
		},
		"57878": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "options"
		},
		"57879": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleRetry"
		},
		"57880": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleRetry"
		},
		"57881": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"57882": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"57883": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"57884": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"57885": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearRetry"
		},
		"57886": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearRetry"
		},
		"57887": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"57888": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"57889": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleTransactionTimeout"
		},
		"57890": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleTransactionTimeout"
		},
		"57891": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"57892": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"57893": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"57894": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleStepTimeout"
		},
		"57895": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleStepTimeout"
		},
		"57896": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"57897": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"57898": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"57899": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"57900": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearTransactionTimeout"
		},
		"57901": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearTransactionTimeout"
		},
		"57902": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"57903": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearStepTimeout"
		},
		"57904": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearStepTimeout"
		},
		"57905": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"57906": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"57907": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint"
		},
		"57908": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.__constructor"
		},
		"57909": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint"
		},
		"57910": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "flow"
		},
		"57911": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"57912": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "errors"
		},
		"57913": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.flow"
		},
		"57914": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.context"
		},
		"57915": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.errors"
		},
		"57916": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionFlow"
		},
		"57917": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57918": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.modelId"
		},
		"57919": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.options"
		},
		"57920": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.definition"
		},
		"57921": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transactionId"
		},
		"57922": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.runId"
		},
		"57923": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.metadata"
		},
		"57924": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57925": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"57926": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"57927": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"57928": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"57929": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"57930": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"57932": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasAsyncSteps"
		},
		"57933": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasFailedSteps"
		},
		"57934": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasSkippedOnFailureSteps"
		},
		"57935": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasWaitingSteps"
		},
		"57936": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasSkippedSteps"
		},
		"57937": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasRevertedSteps"
		},
		"57938": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timedOutAt"
		},
		"57939": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.startedAt"
		},
		"57940": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cancelledAt"
		},
		"57941": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.state"
		},
		"57942": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.steps"
		},
		"57943": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57944": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"57946": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError"
		},
		"57947": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.__constructor"
		},
		"57948": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError"
		},
		"57949": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"57950": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"57951": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "error"
		},
		"57952": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.action"
		},
		"57953": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.handlerType"
		},
		"57954": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.error"
		},
		"57955": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState"
		},
		"57956": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.NOT_STARTED"
		},
		"57957": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.INVOKING"
		},
		"57958": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.WAITING_TO_COMPENSATE"
		},
		"57959": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.COMPENSATING"
		},
		"57960": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.DONE"
		},
		"57961": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.REVERTED"
		},
		"57962": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.FAILED"
		},
		"57963": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "BaseFlowRunOptions"
		},
		"57964": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"57965": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.context"
		},
		"57966": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"57967": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"57968": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.logOnError"
		},
		"57969": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.events"
		},
		"57970": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.container"
		},
		"57971": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"57972": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57973": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"57974": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"57975": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"57976": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"57977": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"57978": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"57979": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"57980": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"57981": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"57982": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57983": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57984": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"57985": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"57986": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"57987": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57988": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"57989": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"57990": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"57991": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"57992": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"57993": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"57994": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57995": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57996": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57997": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57998": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"57999": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"58000": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload"
		},
		"58001": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.__constructor"
		},
		"58002": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload"
		},
		"58003": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "metadata"
		},
		"58004": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "data"
		},
		"58005": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"58006": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.metadata"
		},
		"58007": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.data"
		},
		"58008": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.context"
		},
		"58009": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionOptions"
		},
		"58010": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState"
		},
		"58011": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.NOT_STARTED"
		},
		"58012": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.INVOKING"
		},
		"58013": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.COMPENSATING"
		},
		"58014": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.DONE"
		},
		"58015": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.REVERTED"
		},
		"58016": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.FAILED"
		},
		"58017": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.DORMANT"
		},
		"58018": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.SKIPPED"
		},
		"58019": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.SKIPPED_FAILURE"
		},
		"58020": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.TIMEOUT"
		},
		"58021": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus"
		},
		"58022": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.IDLE"
		},
		"58023": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.OK"
		},
		"58024": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.WAITING"
		},
		"58025": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.TEMPORARY_FAILURE"
		},
		"58026": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.PERMANENT_FAILURE"
		},
		"58027": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "StepFeatures"
		},
		"58028": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58029": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasAsyncSteps"
		},
		"58030": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasStepTimeouts"
		},
		"58031": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasRetriesTimeout"
		},
		"58032": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"58033": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"58034": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"58035": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"58036": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"58037": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58038": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58039": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"58040": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"58041": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58042": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58043": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"58044": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"58045": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58046": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58047": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"58048": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"58049": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58050": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58051": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"58052": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58053": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58054": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"58055": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"58056": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"58057": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58058": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58059": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"58060": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"58061": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"58062": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58063": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58064": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"58065": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"58066": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"58067": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58068": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58069": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"58070": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"58071": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"58072": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58073": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58074": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"58075": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"58076": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"58077": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58078": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58079": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"58080": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"58081": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58082": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58083": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"58084": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"58085": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58086": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58087": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"58088": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"58089": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58090": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"58091": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "args"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/workflows-sdk/src/utils/composer/index.ts"
		},
		"reflections": {
			"1": 56456
		}
	}
}
