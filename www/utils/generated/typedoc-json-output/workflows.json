{
	"id": 55539,
	"name": "workflows",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 55656,
			"name": "Hook",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Representation of a hook definition."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
					"line": 13,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L13"
				}
			],
			"typeParameters": [
				{
					"id": 55664,
					"name": "Name",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 55665,
					"name": "Input",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 55666,
					"name": "Output",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 55657,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 55658,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L14"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/utils/src/orchestration/symbol.ts",
										"qualifiedName": "SymbolWorkflowHook"
									},
									"name": "OrchestrationUtils.SymbolWorkflowHook",
									"package": "@medusajs/utils",
									"qualifiedName": "SymbolWorkflowHook",
									"preferValues": true
								}
							}
						},
						{
							"id": 55659,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L15"
								}
							],
							"type": {
								"type": "reference",
								"target": 55664,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 55660,
							"name": "getResult",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L20"
								}
							],
							"signatures": [
								{
									"id": 55661,
									"name": "getResult",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the result of the hook"
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
											"line": 20,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L20"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 55666,
												"name": "Output",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										]
									}
								}
							]
						},
						{
							"id": 55662,
							"name": " output",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By prefixing a key with a space, we remove it from the\nintellisense of TypeScript. This is needed because\ninput is not set at runtime. It is a type-only\nproperty to infer input data type of a hook"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L28"
								}
							],
							"type": {
								"type": "reference",
								"target": 55666,
								"name": "Output",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 55663,
							"name": " input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"target": 55665,
								"name": "Input",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								55658,
								55659,
								55662,
								55663
							]
						},
						{
							"title": "Methods",
							"children": [
								55660
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
							"line": 13,
							"character": 55,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L13"
						}
					]
				}
			}
		},
		{
			"id": 55646,
			"name": "createHook",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
					"line": 67,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L67"
				}
			],
			"signatures": [
				{
					"id": 55647,
					"name": "createHook",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expose a hook in your workflow where you can inject custom functionality as a step function.\n\nA handler hook can later be registered to consume the hook and perform custom functionality.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/workflow-hooks)."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A workflow hook."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createStep,\n  createHook,\n  createWorkflow,\n  WorkflowResponse,\n} from \"@medusajs/framework/workflows-sdk\"\nimport { createProductStep } from \"./steps/create-product\"\n\nexport const myWorkflow = createWorkflow(\n  \"my-workflow\",\n  function (input) {\n    const product = createProductStep(input)\n    const productCreatedHook = createHook(\n      \"productCreated\",\n      { productId: product.id }\n    )\n\n    return new WorkflowResponse(product, {\n      hooks: [productCreatedHook],\n    })\n  }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
							"line": 67,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L67"
						}
					],
					"typeParameters": [
						{
							"id": 55648,
							"name": "Name",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 55649,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 55650,
							"name": "TInvokeOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 55651,
							"name": "name",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The hook's name. This is used when the hook handler is registered to consume the workflow."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 55648,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 55652,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input to pass to the hook handler."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 55649,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 55653,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 55654,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 55655,
											"name": "resultValidator",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
													"line": 71,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L71"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodType"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 55650,
														"name": "TInvokeOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
															"qualifiedName": "ZodTypeDef"
														},
														"name": "ZodTypeDef",
														"package": "zod"
													},
													{
														"type": "reference",
														"target": 55650,
														"name": "TInvokeOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ZodType",
												"package": "zod"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												55655
											]
										}
									],
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
											"line": 70,
											"character": 11,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L70"
										}
									]
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": 55656,
						"typeArguments": [
							{
								"type": "reference",
								"target": 55648,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 55649,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 55650,
								"name": "TInvokeOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "Hook",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 55557,
			"name": "InvokeFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of invocation function passed to a step."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 29,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L29"
				}
			],
			"typeParameters": [
				{
					"id": 55562,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the function expects."
							}
						]
					}
				},
				{
					"id": 55563,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output that the function returns."
							}
						]
					}
				},
				{
					"id": 55564,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the compensation function expects."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 55558,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 29,
							"character": 58,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 55559,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The expected output based on the type parameter "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 55560,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 55562,
										"name": "TInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 55561,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 55822,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": 55600,
										"typeArguments": [
											{
												"type": "reference",
												"target": 55563,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 55564,
													"name": "TCompensateInput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "undefined"
												},
												"trueType": {
													"type": "reference",
													"target": 55563,
													"name": "TOutput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												"falseType": {
													"type": "reference",
													"target": 55564,
													"name": "TCompensateInput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "StepResponse",
										"package": "@medusajs/workflows-sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 55600,
														"typeArguments": [
															{
																"type": "reference",
																"target": 55563,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 55564,
																	"name": "TCompensateInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 55563,
																	"name": "TOutput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 55564,
																	"name": "TCompensateInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "StepResponse",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 55565,
			"name": "CompensateFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of compensation function passed to a step."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 57,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L57"
				}
			],
			"typeParameters": [
				{
					"id": 55570,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the argument passed to the compensation function. If not specified, then it will be the same type as the invocation function's output."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 55566,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 57,
							"character": 30,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 55567,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There's no expected type to be returned by the compensation function."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 55568,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 55570,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 55569,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 55822,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 55571,
			"name": "LocalStepConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 68,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 55572,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 55573,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
											"line": 68,
											"character": 32,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										55573
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
									"line": 68,
									"character": 30,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
									"qualifiedName": "TransactionStepsDefinition"
								},
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "next"
									},
									{
										"type": "literal",
										"value": "uuid"
									},
									{
										"type": "literal",
										"value": "action"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 55574,
			"name": "ApplyStepOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 55575,
					"name": "stepName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 81,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L81"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 55576,
					"name": "stepConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 82,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L82"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
							"qualifiedName": "TransactionStepsDefinition"
						},
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 55577,
					"name": "input",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 83,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L83"
						}
					],
					"type": {
						"type": "reference",
						"target": 55580,
						"name": "TStepInputs",
						"package": "@medusajs/workflows-sdk",
						"qualifiedName": "ApplyStepOptions.TStepInputs",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 55578,
					"name": "invokeFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 84,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L84"
						}
					],
					"type": {
						"type": "reference",
						"target": 55557,
						"typeArguments": [
							{
								"type": "reference",
								"target": 55581,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeInput",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 55582,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultOutput",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 55583,
								"name": "TInvokeResultCompensateInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput",
								"refersToTypeParameter": true
							}
						],
						"name": "InvokeFn",
						"package": "@medusajs/workflows-sdk"
					}
				},
				{
					"id": 55579,
					"name": "compensateFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 89,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L89"
						}
					],
					"type": {
						"type": "reference",
						"target": 55565,
						"typeArguments": [
							{
								"type": "reference",
								"target": 55583,
								"name": "TInvokeResultCompensateInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput",
								"refersToTypeParameter": true
							}
						],
						"name": "CompensateFn",
						"package": "@medusajs/workflows-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						55575,
						55576,
						55577,
						55578,
						55579
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 73,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L73"
				}
			],
			"typeParameters": [
				{
					"id": 55580,
					"name": "TStepInputs",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 55581,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeInput",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "reference",
							"target": 55782,
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 55581,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "ApplyStepOptions.TInvokeInput",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "WorkflowData",
							"package": "@medusajs/workflows-sdk"
						}
					}
				},
				{
					"id": 55581,
					"name": "TInvokeInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 55582,
					"name": "TInvokeResultOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 55583,
					"name": "TInvokeResultCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 55547,
			"name": "createStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 370,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L370"
				}
			],
			"signatures": [
				{
					"id": 55548,
					"name": "createStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "StepFunction",
								"target": 55748
							},
							{
								"kind": "text",
								"text": " that can be used as a step in a workflow constructed by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 55584
							},
							{
								"kind": "text",
								"text": " function."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A step function to be used in a workflow."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createStep,\n  StepResponse\n} from \"@medusajs/framework/workflows-sdk\"\n\ninterface CreateProductInput {\n  title: string\n}\n\nexport const createProductStep = createStep(\n  \"createProductStep\",\n  async function (\n    input: CreateProductInput,\n    { container }\n  ) {\n    const productModuleService = container.resolve(\n      \"product\"\n    )\n    const product = await productModuleService.createProducts(input)\n    return new StepResponse({\n      product\n    }, {\n      product_id: product.id\n    })\n  },\n  async function (\n    input,\n    { container }\n  ) {\n    if (!input) {\n      return\n    }\n    const productModuleService = container.resolve(\n      \"product\"\n    )\n    await productModuleService.deleteProducts([input.product_id])\n  }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 370,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L370"
						}
					],
					"typeParameters": [
						{
							"id": 55549,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the invocation function."
									}
								]
							}
						},
						{
							"id": 55550,
							"name": "TInvokeResultOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected output parameter of the invocation function."
									}
								]
							}
						},
						{
							"id": 55551,
							"name": "TInvokeResultCompensateInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the compensation function."
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 55552,
							"name": "nameOrConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the step or its configuration."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 55553,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 55554,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
																	"line": 380,
																	"character": 9,
																	"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L380"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																55554
															]
														}
													],
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
															"line": 380,
															"character": 7,
															"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L380"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
															"qualifiedName": "TransactionStepsDefinition"
														},
														"name": "TransactionStepsDefinition",
														"package": "@medusajs/orchestration"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "next"
															},
															{
																"type": "literal",
																"value": "uuid"
															},
															{
																"type": "literal",
																"value": "action"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										]
									}
								]
							}
						},
						{
							"id": 55555,
							"name": "invokeFn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An invocation function that will be executed when the workflow is executed. The function must return an instance of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 55600
									},
									{
										"kind": "text",
										"text": ". The constructor of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 55600
									},
									{
										"kind": "text",
										"text": "\naccepts the output of the step as a first argument, and optionally as a second argument the data to be passed to the compensation function as a parameter."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 55557,
								"typeArguments": [
									{
										"type": "reference",
										"target": 55549,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 55550,
										"name": "TInvokeResultOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 55551,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "InvokeFn",
								"package": "@medusajs/workflows-sdk"
							}
						},
						{
							"id": 55556,
							"name": "compensateFn",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A compensation function that's executed if an error occurs in the workflow. It's used to roll-back actions when errors occur.\nIt accepts as a parameter the second argument passed to the constructor of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 55600
									},
									{
										"kind": "text",
										"text": " instance returned by the invocation function. If the\ninvocation function doesn't pass the second argument to "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor, the compensation function receives the first argument\npassed to the "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor instead."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 55565,
								"typeArguments": [
									{
										"type": "reference",
										"target": 55551,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "CompensateFn",
								"package": "@medusajs/workflows-sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 55748,
						"typeArguments": [
							{
								"type": "reference",
								"target": 55549,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 55550,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "StepFunction",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 55584,
			"name": "createWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
					"line": 88,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L88"
				}
			],
			"signatures": [
				{
					"id": 55585,
					"name": "createWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a workflow with the provided name and a constructor function.\nThe constructor function builds the workflow from steps created by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createStep",
								"target": 55547
							},
							{
								"kind": "text",
								"text": " function.\nThe returned workflow is an exported workflow of type "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ReturnWorkflow",
								"target": 55847
							},
							{
								"kind": "text",
								"text": ", meaning it's not executed right away. To execute it,\ninvoke the exported workflow, then run its "
							},
							{
								"kind": "code",
								"text": "`run`"
							},
							{
								"kind": "text",
								"text": " method."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The created workflow. You can later execute the workflow by invoking it, then using its "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport { MedusaRequest, MedusaResponse } from \"@medusajs/framework/http\"\nimport {\n  createProductStep,\n  getProductStep,\n} from \"./steps\"\n\ninterface WorkflowInput {\n title: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"my-workflow\",\n  (input: WorkflowInput) => {\n   // Everything here will be executed and resolved later\n   // during the execution. Including the data access.\n\n    const product = createProductStep(input)\n    return new WorkflowResponse(getProductStep(product.id))\n  }\n)\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result: product } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        title: \"Shirt\"\n      }\n    })\n\n  res.json({\n    product\n  })\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
							"line": 88,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L88"
						}
					],
					"typeParameters": [
						{
							"id": 55586,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the input passed to the composer function."
									}
								]
							}
						},
						{
							"id": 55587,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the output returned by the composer function."
									}
								]
							}
						},
						{
							"id": 55588,
							"name": "THooks",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of hooks defined in the workflow."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 55589,
							"name": "nameOrConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the workflow or its configuration."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 55590,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 55591,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
																	"line": 92,
																	"character": 28,
																	"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L92"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																55591
															]
														}
													],
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
															"line": 92,
															"character": 26,
															"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L92"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
													"qualifiedName": "TransactionModelOptions"
												},
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										]
									}
								]
							}
						},
						{
							"id": 55592,
							"name": "composer",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor function that is executed when the "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ReturnWorkflow",
										"target": 55847
									},
									{
										"kind": "text",
										"text": " is used.\nThe function can't be an arrow function or an asynchronus function. It also can't directly manipulate data.\nYou'll have to use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "transform",
										"target": 55671
									},
									{
										"kind": "text",
										"text": " function if you need to directly manipulate data."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 55593,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
											"line": 98,
											"character": 12,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L98"
										}
									],
									"signatures": [
										{
											"id": 55594,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
													"line": 98,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L98"
												}
											],
											"parameters": [
												{
													"id": 55595,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 55782,
														"typeArguments": [
															{
																"type": "reference",
																"target": 55586,
																"name": "TData",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 55630,
														"typeArguments": [
															{
																"type": "reference",
																"target": 55587,
																"name": "TResult",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 55588,
																"name": "THooks",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowResponse",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 55847,
						"typeArguments": [
							{
								"type": "reference",
								"target": 55586,
								"name": "TData",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 55587,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 55588,
								"name": "THooks",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "ReturnWorkflow",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 55600,
			"name": "StepResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This class is used to create the response returned by a step. A step return its data by returning an instance of "
					},
					{
						"kind": "code",
						"text": "`StepResponse`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 55607,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 55608,
							"name": "StepResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor of the StepResponse"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L28"
								}
							],
							"typeParameters": [
								{
									"id": 55609,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the output of the step."
											}
										]
									}
								},
								{
									"id": 55610,
									"name": "TCompensateInput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
											},
											{
												"kind": "code",
												"text": "`TCompensateInput`"
											},
											{
												"kind": "text",
												"text": " is the same\nas that of "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"default": {
										"type": "reference",
										"target": 55609,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 55611,
									"name": "output",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The output of the step."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 55609,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 55612,
									"name": "compensateInput",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The input to be passed as a parameter to the step's compensation function. If not provided, the "
											},
											{
												"kind": "code",
												"text": "`output`"
											},
											{
												"kind": "text",
												"text": " will be provided instead."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 55610,
										"name": "TCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TCompensateInput",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 55600,
								"typeArguments": [
									{
										"type": "reference",
										"target": 55609,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 55610,
										"name": "TCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TCompensateInput",
										"refersToTypeParameter": true
									}
								],
								"name": "StepResponse",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				},
				{
					"id": 55601,
					"name": "permanentFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 118,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L118"
						}
					],
					"signatures": [
						{
							"id": 55602,
							"name": "permanentFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a StepResponse that indicates that the step has failed and the retry mechanism should not kick in anymore."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { Product } from \"@medusajs/medusa\"\nimport {\n  createStep,\n  StepResponse,\n  createWorkflow\n} from \"@medusajs/workflows-sdk\"\n\ninterface CreateProductInput {\n  title: string\n}\n\nexport const createProductStep = createStep(\n  \"createProductStep\",\n  async function (\n    input: CreateProductInput,\n    context\n  ) {\n    const productService = context.container.resolve(\n      \"productService\"\n    )\n\n    try {\n      const product = await productService.createProducts(input)\n      return new StepResponse({\n        product\n      }, {\n        product_id: product.id\n      })\n    } catch (e) {\n      return StepResponse.permanentFailure(`Couldn't create the product: ${e}`)\n    }\n  }\n)\n\ninterface WorkflowInput {\n title: string\n}\n\nconst myWorkflow = createWorkflow<\n    WorkflowInput,\n    Product\n  >(\"my-workflow\", (input) => {\n   // Everything here will be executed and resolved later\n   // during the execution. Including the data access.\n\n    const product = createProductStep(input)\n  }\n)\n\nmyWorkflow()\n  .run({\n    input: {\n      title: \"Shirt\"\n    }\n  })\n  .then(({ errors, result }) => {\n    if (errors.length) {\n      errors.forEach((err) => {\n        if (typeof err.error === \"object\" && \"message\" in err.error) {\n          console.error(err.error.message)\n        } else {\n          console.error(err.error)\n        }\n      })\n    }\n    console.log(result)\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 118,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L118"
								}
							],
							"parameters": [
								{
									"id": 55603,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An optional message to be logged."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Permanent failure\""
								},
								{
									"id": 55604,
									"name": "compensateInput",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 55605,
					"name": "skip",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 128,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L128"
						}
					],
					"signatures": [
						{
							"id": 55606,
							"name": "skip",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 128,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L128"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
									"qualifiedName": "SkipStepResponse"
								},
								"name": "SkipStepResponse",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						55607
					]
				},
				{
					"title": "Methods",
					"children": [
						55601,
						55605
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
					"line": 15,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 55628,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					}
				},
				{
					"id": 55629,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
							},
							{
								"kind": "code",
								"text": "`TCompensateInput`"
							},
							{
								"kind": "text",
								"text": " is the same\nas that of "
							},
							{
								"kind": "code",
								"text": "`TOutput`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"default": {
						"type": "reference",
						"target": 55609,
						"name": "TOutput",
						"package": "@medusajs/workflows-sdk",
						"qualifiedName": "StepResponse.TOutput",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 55630,
			"name": "WorkflowResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Workflow response class encapsulates the return value of a workflow"
					}
				]
			},
			"children": [
				{
					"id": 55639,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "OrchestrationUtils.SymbolMedusaWorkflowResponse"
				},
				{
					"id": 55631,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 55632,
							"name": "WorkflowResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L14"
								}
							],
							"typeParameters": [
								{
									"id": 55633,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 55634,
									"name": "THooks",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									},
									"default": {
										"type": "tuple"
									}
								}
							],
							"parameters": [
								{
									"id": 55635,
									"name": "$result",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 55782,
												"typeArguments": [
													{
														"type": "reference",
														"target": 55633,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "union",
													"types": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 55633,
																"name": "TResult",
																"package": "@medusajs/workflows-sdk",
																"qualifiedName": "WorkflowResponse.TResult",
																"refersToTypeParameter": true
															}
														},
														{
															"type": "reference",
															"target": 55777,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 55633,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"qualifiedName": "WorkflowResponse.TResult",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "WorkflowDataProperties",
															"package": "@medusajs/workflows-sdk"
														},
														{
															"type": "reference",
															"target": 55782,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 55633,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"qualifiedName": "WorkflowResponse.TResult",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 55636,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 55637,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 55638,
													"name": "hooks",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"line": 23,
															"character": 23,
															"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
														}
													],
													"type": {
														"type": "reference",
														"target": 55634,
														"name": "THooks",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.THooks",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														55638
													]
												}
											],
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
													"line": 23,
													"character": 21,
													"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 55630,
								"typeArguments": [
									{
										"type": "reference",
										"target": 55633,
										"name": "TResult",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.TResult",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 55634,
										"name": "THooks",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.THooks",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowResponse",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				},
				{
					"id": 55640,
					"name": "$result",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 15,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L15"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 55782,
								"typeArguments": [
									{
										"type": "reference",
										"target": 55633,
										"name": "TResult",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.TResult",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 55633,
												"name": "TResult",
												"package": "@medusajs/workflows-sdk",
												"qualifiedName": "WorkflowResponse.TResult",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 55777,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 55633,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowDataProperties",
											"package": "@medusajs/workflows-sdk"
										},
										{
											"type": "reference",
											"target": 55782,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 55633,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 55641,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 23,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 55642,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 55643,
									"name": "hooks",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
											"line": 23,
											"character": 23,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
										}
									],
									"type": {
										"type": "reference",
										"target": 55634,
										"name": "THooks",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.THooks",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										55643
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
									"line": 23,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						55631
					]
				},
				{
					"title": "Properties",
					"children": [
						55639,
						55640,
						55641
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L7"
				}
			],
			"typeParameters": [
				{
					"id": 55644,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 55645,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			]
		},
		{
			"id": 55667,
			"name": "parallelize",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/parallelize.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 55668,
					"name": "parallelize",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function is used to run multiple steps in parallel. The result of each step will be returned as part of the result array."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The step results. The results are ordered in the array by the order they're passed in the function's parameter."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  parallelize,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  createProductStep,\n  createPricesStep,\n  attachProductToSalesChannelStep\n} from \"./steps\"\n\ninterface WorkflowInput {\n  title: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"my-workflow\",\n  (input: WorkflowInput) => {\n   const product = createProductStep(input)\n\n   const [prices, productSalesChannel] = parallelize(\n     createPricesStep(product),\n     attachProductToSalesChannelStep(product)\n   )\n\n   return new WorkflowResponse({\n    prices,\n    productSalesChannel\n   })\n }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
							"line": 44,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/parallelize.ts#L44"
						}
					],
					"typeParameters": [
						{
							"id": 55669,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "undefined"
										},
										{
											"type": "reference",
											"target": 55782,
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							}
						}
					],
					"parameters": [
						{
							"id": 55670,
							"name": "steps",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "reference",
								"target": 55669,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 55669,
						"name": "TResult",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 55671,
			"name": "transform",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/transform.ts",
					"line": 63,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/transform.ts#L63"
				}
			],
			"signatures": [
				{
					"id": 55672,
					"name": "transform",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function transforms the output of other utility functions.\n\nFor example, if you're using the value(s) of some step(s) as an input to a later step. As you can't directly manipulate data in the  workflow constructor function passed to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 55584
							},
							{
								"kind": "text",
								"text": ",\nthe "
							},
							{
								"kind": "code",
								"text": "`transform`"
							},
							{
								"kind": "text",
								"text": " function provides access to the runtime value of the step(s) output so that you can manipulate them.\n\nAnother example is if you're using the runtime value of some step(s) as the output of a workflow.\n\nIf you're also retrieving the output of a hook and want to check if its value is set, you must use a workflow to get the runtime value of that hook."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "There's no expected value to be returned by the "
									},
									{
										"kind": "code",
										"text": "`transform`"
									},
									{
										"kind": "text",
										"text": " function."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  transform,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport { step1, step2 } from \"./steps\"\n\ntype WorkflowInput = {\n  name: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"hello-world\",\n  (input: WorkflowInput) => {\n    const str1 = step1(input)\n    const str2 = step2(input)\n\n    const message = transform({\n      str1,\n      str2\n    }, (input) => `${input.str1}${input.str2}`)\n\n    return new WorkflowResponse(message)\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/transform.ts",
							"line": 63,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/transform.ts#L63"
						}
					],
					"typeParameters": [
						{
							"id": 55673,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "object"
									},
									{
										"type": "reference",
										"target": 55782,
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						},
						{
							"id": 55674,
							"name": "RFinal",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 55675,
							"name": "values",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The output(s) of other step functions."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 55673,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 55676,
							"name": "func",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transform function used to perform action on the runtime values of the provided "
									},
									{
										"kind": "code",
										"text": "`values`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
											"qualifiedName": "Func1"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 55673,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 55674,
												"name": "RFinal",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Func1",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 55782,
						"typeArguments": [
							{
								"type": "reference",
								"target": 55674,
								"name": "RFinal",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowData",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 55728,
			"name": "StepFunctionResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 15,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 55732,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 55729,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 55730,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 55731,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 55790,
										"name": "CreateWorkflowComposerContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 55782,
								"typeArguments": [
									{
										"type": "reference",
										"target": 55732,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				}
			}
		},
		{
			"id": 55733,
			"name": "StepFunctionReturnConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 18,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L18"
				}
			],
			"typeParameters": [
				{
					"id": 55740,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 55734,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 55735,
							"name": "config",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L19"
								}
							],
							"signatures": [
								{
									"id": 55736,
									"name": "config",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L19"
										}
									],
									"parameters": [
										{
											"id": 55737,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 55738,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 55739,
																	"name": "name",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 20,
																			"character": 14,
																			"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L20"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		55739
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 20,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L20"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Omit"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																	"qualifiedName": "TransactionStepsDefinition"
																},
																"name": "TransactionStepsDefinition",
																"package": "@medusajs/orchestration"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "next"
																	},
																	{
																		"type": "literal",
																		"value": "uuid"
																	},
																	{
																		"type": "literal",
																		"value": "action"
																	}
																]
															}
														],
														"name": "Omit",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 55782,
										"typeArguments": [
											{
												"type": "reference",
												"target": 55740,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								55735
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 18,
							"character": 48,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L18"
						}
					]
				}
			}
		},
		{
			"id": 55741,
			"name": "HookHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 28,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L28"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 55742,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 28,
							"character": 26,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 55743,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 55744,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 55745,
			"name": "Void",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 53,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 55746,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 55747,
							"name": " $$type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 53,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
								}
							],
							"type": {
								"type": "literal",
								"value": "void"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								55747
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 53,
							"character": 19,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
						}
					]
				}
			}
		},
		{
			"id": 55748,
			"name": "StepFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A step function to be used in a workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 61,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L61"
				}
			],
			"typeParameters": [
				{
					"id": 55775,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input of the step."
							}
						]
					}
				},
				{
					"id": 55776,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
								"qualifiedName": "KeysOfUnion"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 55775,
									"name": "TInput",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "KeysOfUnion",
							"package": "@medusajs/workflows-sdk"
						},
						"extendsType": {
							"type": "tuple"
						},
						"trueType": {
							"type": "reflection",
							"declaration": {
								"id": 55749,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "workflows-sdk/src/utils/composer/type.ts",
										"line": 66,
										"character": 4,
										"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L66"
									}
								],
								"signatures": [
									{
										"id": 55750,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "workflows-sdk/src/utils/composer/type.ts",
												"line": 67,
												"character": 6,
												"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L67"
											}
										],
										"type": {
											"type": "conditional",
											"checkType": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 55776,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 55751,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "never"
											},
											"trueType": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 55752,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 55753,
																	"name": " $$type",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 53,
																			"character": 21,
																			"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": "void"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		55753
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 91,
																	"character": 4,
																	"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L91"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 55745,
														"name": "Void",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reference",
														"target": 55777,
														"typeArguments": [
															{
																"type": "reference",
																"target": 55745,
																"name": "Void",
																"package": "@medusajs/workflows-sdk"
															}
														],
														"name": "WorkflowDataProperties",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 55754,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 55755,
																	"name": "config",
																	"variant": "declaration",
																	"kind": 2048,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 97,
																			"character": 4,
																			"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																		}
																	],
																	"signatures": [
																		{
																			"id": 55756,
																			"name": "config",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 97,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																				}
																			],
																			"parameters": [
																				{
																					"id": 55757,
																					"name": "config",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 55758,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 55759,
																											"name": "name",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {
																												"isOptional": true
																											},
																											"sources": [
																												{
																													"fileName": "workflows-sdk/src/utils/composer/type.ts",
																													"line": 98,
																													"character": 16,
																													"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												55759
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "workflows-sdk/src/utils/composer/type.ts",
																											"line": 98,
																											"character": 14,
																											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																										}
																									]
																								}
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Omit"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": {
																											"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																											"qualifiedName": "TransactionStepsDefinition"
																										},
																										"name": "TransactionStepsDefinition",
																										"package": "@medusajs/orchestration"
																									},
																									{
																										"type": "union",
																										"types": [
																											{
																												"type": "literal",
																												"value": "next"
																											},
																											{
																												"type": "literal",
																												"value": "uuid"
																											},
																											{
																												"type": "literal",
																												"value": "action"
																											}
																										]
																									}
																								],
																								"name": "Omit",
																								"package": "typescript"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 55782,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 55745,
																						"name": "Void",
																						"package": "@medusajs/workflows-sdk"
																					}
																				],
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Methods",
																	"children": [
																		55755
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 96,
																	"character": 30,
																	"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 55733,
														"typeArguments": [
															{
																"type": "reference",
																"target": 55776,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "StepFunctionReturnConfig",
														"package": "@medusajs/workflows-sdk"
													}
												]
											},
											"falseType": {
												"type": "intersection",
												"types": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 55776,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																	"qualifiedName": "Item"
																},
																"name": "Item",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "Item"
																		},
																		"name": "Item",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 55782,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																					"qualifiedName": "Item"
																				},
																				"name": "Item",
																				"package": "@medusajs/workflows-sdk",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														"falseType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": 55776,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "intrinsic",
																"name": "object"
															},
															"trueType": {
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "unknown",
																				"name": "..."
																			},
																			"objectType": {
																				"type": "unknown",
																				"name": "..."
																			}
																		},
																		{
																			"type": "reference",
																			"target": 55782,
																			"typeArguments": [
																				{
																					"type": "unknown",
																					"name": "..."
																				}
																			],
																			"name": "WorkflowData",
																			"package": "@medusajs/workflows-sdk"
																		}
																	]
																}
															},
															"falseType": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": 55776,
																		"name": "TOutput",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 55777,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 55776,
																				"name": "TOutput",
																				"package": "@medusajs/workflows-sdk",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "WorkflowDataProperties",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													},
													{
														"type": "reference",
														"target": 55776,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 55777,
														"typeArguments": [
															{
																"type": "reference",
																"target": 55776,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowDataProperties",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 55760,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 55761,
																	"name": "config",
																	"variant": "declaration",
																	"kind": 2048,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 97,
																			"character": 4,
																			"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																		}
																	],
																	"signatures": [
																		{
																			"id": 55762,
																			"name": "config",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 97,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																				}
																			],
																			"parameters": [
																				{
																					"id": 55763,
																					"name": "config",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 55764,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 55765,
																											"name": "name",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {
																												"isOptional": true
																											},
																											"sources": [
																												{
																													"fileName": "workflows-sdk/src/utils/composer/type.ts",
																													"line": 98,
																													"character": 16,
																													"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												55765
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "workflows-sdk/src/utils/composer/type.ts",
																											"line": 98,
																											"character": 14,
																											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																										}
																									]
																								}
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Omit"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": {
																											"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																											"qualifiedName": "TransactionStepsDefinition"
																										},
																										"name": "TransactionStepsDefinition",
																										"package": "@medusajs/orchestration"
																									},
																									{
																										"type": "union",
																										"types": [
																											{
																												"type": "literal",
																												"value": "next"
																											},
																											{
																												"type": "literal",
																												"value": "uuid"
																											},
																											{
																												"type": "literal",
																												"value": "action"
																											}
																										]
																									}
																								],
																								"name": "Omit",
																								"package": "typescript"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 55782,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 55776,
																						"name": "TOutput",
																						"package": "@medusajs/workflows-sdk",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Methods",
																	"children": [
																		55761
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 96,
																	"character": 30,
																	"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 55733,
														"typeArguments": [
															{
																"type": "reference",
																"target": 55776,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "StepFunctionReturnConfig",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									}
								]
							}
						},
						"falseType": {
							"type": "reflection",
							"declaration": {
								"id": 55766,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "workflows-sdk/src/utils/composer/type.ts",
										"line": 72,
										"character": 4,
										"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L72"
									}
								],
								"signatures": [
									{
										"id": 55767,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "workflows-sdk/src/utils/composer/type.ts",
												"line": 73,
												"character": 6,
												"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L73"
											}
										],
										"parameters": [
											{
												"id": 55768,
												"name": "input",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 55775,
															"name": "TInput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": 55782,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 55775,
																	"name": "TInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											}
										],
										"type": {
											"type": "intersection",
											"types": [
												{
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": 55776,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "Item"
															},
															"name": "Item",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"trueType": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																		"qualifiedName": "Item"
																	},
																	"name": "Item",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																{
																	"type": "reference",
																	"target": 55782,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																				"qualifiedName": "Item"
																			},
																			"name": "Item",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "WorkflowData",
																	"package": "@medusajs/workflows-sdk"
																}
															]
														}
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 55776,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 55776,
																			"typeArguments": [
																				{
																					"type": "unknown",
																					"name": "..."
																				}
																			],
																			"name": "TOutput",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	},
																	{
																		"type": "reference",
																		"target": 55782,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "unknown",
																					"name": "..."
																				},
																				"objectType": {
																					"type": "unknown",
																					"name": "..."
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														"falseType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": 55776,
																	"name": "TOutput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																{
																	"type": "reference",
																	"target": 55777,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 55776,
																			"name": "TOutput",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "WorkflowDataProperties",
																	"package": "@medusajs/workflows-sdk"
																}
															]
														}
													}
												},
												{
													"type": "reference",
													"target": 55776,
													"name": "TOutput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												{
													"type": "reference",
													"target": 55777,
													"typeArguments": [
														{
															"type": "reference",
															"target": 55776,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													],
													"name": "WorkflowDataProperties",
													"package": "@medusajs/workflows-sdk"
												},
												{
													"type": "reflection",
													"declaration": {
														"id": 55769,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 55770,
																"name": "config",
																"variant": "declaration",
																"kind": 2048,
																"flags": {},
																"sources": [
																	{
																		"fileName": "workflows-sdk/src/utils/composer/type.ts",
																		"line": 97,
																		"character": 4,
																		"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																	}
																],
																"signatures": [
																	{
																		"id": 55771,
																		"name": "config",
																		"variant": "signature",
																		"kind": 4096,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "workflows-sdk/src/utils/composer/type.ts",
																				"line": 97,
																				"character": 4,
																				"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																			}
																		],
																		"parameters": [
																			{
																				"id": 55772,
																				"name": "config",
																				"variant": "param",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intersection",
																					"types": [
																						{
																							"type": "reflection",
																							"declaration": {
																								"id": 55773,
																								"name": "__type",
																								"variant": "declaration",
																								"kind": 65536,
																								"flags": {},
																								"children": [
																									{
																										"id": 55774,
																										"name": "name",
																										"variant": "declaration",
																										"kind": 1024,
																										"flags": {
																											"isOptional": true
																										},
																										"sources": [
																											{
																												"fileName": "workflows-sdk/src/utils/composer/type.ts",
																												"line": 98,
																												"character": 16,
																												"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																											}
																										],
																										"type": {
																											"type": "intrinsic",
																											"name": "string"
																										}
																									}
																								],
																								"groups": [
																									{
																										"title": "Properties",
																										"children": [
																											55774
																										]
																									}
																								],
																								"sources": [
																									{
																										"fileName": "workflows-sdk/src/utils/composer/type.ts",
																										"line": 98,
																										"character": 14,
																										"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																									}
																								]
																							}
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Omit"
																							},
																							"typeArguments": [
																								{
																									"type": "reference",
																									"target": {
																										"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																										"qualifiedName": "TransactionStepsDefinition"
																									},
																									"name": "TransactionStepsDefinition",
																									"package": "@medusajs/orchestration"
																								},
																								{
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": "next"
																										},
																										{
																											"type": "literal",
																											"value": "uuid"
																										},
																										{
																											"type": "literal",
																											"value": "action"
																										}
																									]
																								}
																							],
																							"name": "Omit",
																							"package": "typescript"
																						}
																					]
																				}
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 55782,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 55776,
																					"name": "TOutput",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "WorkflowData",
																			"package": "@medusajs/workflows-sdk"
																		}
																	}
																]
															}
														],
														"groups": [
															{
																"title": "Methods",
																"children": [
																	55770
																]
															}
														],
														"sources": [
															{
																"fileName": "workflows-sdk/src/utils/composer/type.ts",
																"line": 96,
																"character": 30,
																"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
															}
														]
													}
												},
												{
													"type": "reference",
													"target": 55733,
													"typeArguments": [
														{
															"type": "reference",
															"target": 55776,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													],
													"name": "StepFunctionReturnConfig",
													"package": "@medusajs/workflows-sdk"
												}
											]
										}
									}
								]
							}
						}
					},
					{
						"type": "reference",
						"target": 55777,
						"typeArguments": [
							{
								"type": "reference",
								"target": 55776,
								"name": "TOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					}
				]
			}
		},
		{
			"id": 55777,
			"name": "WorkflowDataProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 78,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L78"
				}
			],
			"typeParameters": [
				{
					"id": 55781,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 55778,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 55779,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L79"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 55780,
							"name": "__step__",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								55779,
								55780
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 78,
							"character": 50,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L78"
						}
					]
				}
			}
		},
		{
			"id": 55782,
			"name": "WorkflowData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This type is used to encapsulate the input or output type of all utils."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 88,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L88"
				}
			],
			"typeParameters": [
				{
					"id": 55789,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of a step's input or result."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 55789,
							"name": "T",
							"package": "@medusajs/workflows-sdk",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "array",
							"elementType": {
								"type": "inferred",
								"name": "Item"
							}
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "Item"
										},
										"name": "Item",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 55782,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "Item"
												},
												"name": "Item",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 55789,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "intrinsic",
								"name": "object"
							},
							"trueType": {
								"type": "mapped",
								"parameter": "Key",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 55789,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 55789,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 55782,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 55789,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							"falseType": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 55789,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 55777,
										"typeArguments": [
											{
												"type": "reference",
												"target": 55789,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowDataProperties",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					},
					{
						"type": "reference",
						"target": 55789,
						"name": "T",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 55777,
						"typeArguments": [
							{
								"type": "reference",
								"target": 55789,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 55783,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 55784,
									"name": "config",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 97,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
										}
									],
									"signatures": [
										{
											"id": 55785,
											"name": "config",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 97,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
												}
											],
											"parameters": [
												{
													"id": 55786,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 55787,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 55788,
																			"name": "name",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 98,
																					"character": 16,
																					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				55788
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 98,
																			"character": 14,
																			"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Omit"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																			"qualifiedName": "TransactionStepsDefinition"
																		},
																		"name": "TransactionStepsDefinition",
																		"package": "@medusajs/orchestration"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "next"
																			},
																			{
																				"type": "literal",
																				"value": "uuid"
																			},
																			{
																				"type": "literal",
																				"value": "action"
																			}
																		]
																	}
																],
																"name": "Omit",
																"package": "typescript"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 55782,
												"typeArguments": [
													{
														"type": "reference",
														"target": 55789,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										55784
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 96,
									"character": 30,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 55790,
			"name": "CreateWorkflowComposerContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 105,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L105"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 55791,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 55792,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 55793,
							"name": "hooks_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 107,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L107"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 55794,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 55795,
											"name": "declared",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 108,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L108"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 55796,
											"name": "registered",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 109,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L109"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												55795,
												55796
											]
										}
									],
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 107,
											"character": 10,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L107"
										}
									]
								}
							}
						},
						{
							"id": 55797,
							"name": "hooksCallback_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 111,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L111"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 55741,
										"name": "HookHandler",
										"package": "@medusajs/workflows-sdk"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 55798,
							"name": "workflowId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 112,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L112"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 55799,
							"name": "flow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L113"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
									"qualifiedName": "OrchestratorBuilder"
								},
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 55800,
							"name": "isAsync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 114,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L114"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 55801,
							"name": "handlers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 115,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L115"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
									"qualifiedName": "WorkflowHandler"
								},
								"name": "WorkflowHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 55802,
							"name": "stepBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 116,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L116"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 55803,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 116,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L116"
										}
									],
									"signatures": [
										{
											"id": 55804,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 55806,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 55805,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 55728,
														"name": "StepFunctionResult",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 55782,
												"typeArguments": [
													{
														"type": "reference",
														"target": 55806,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							}
						},
						{
							"id": 55807,
							"name": "hookBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L119"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 55808,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 119,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L119"
										}
									],
									"signatures": [
										{
											"id": 55809,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 55810,
													"name": "name",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 55811,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 55812,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 119,
																	"character": 33,
																	"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L119"
																}
															],
															"signatures": [
																{
																	"id": 55813,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 55741,
																		"name": "HookHandler",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 55814,
							"name": "parallelizeBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 120,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 55815,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 120,
											"character": 21,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
										}
									],
									"signatures": [
										{
											"id": 55816,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 55821,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": 55782,
																	"name": "WorkflowData",
																	"package": "@medusajs/workflows-sdk"
																},
																{
																	"type": "intrinsic",
																	"name": "undefined"
																}
															]
														}
													},
													"default": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 55782,
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													}
												}
											],
											"parameters": [
												{
													"id": 55817,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 55818,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 123,
																	"character": 8,
																	"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L123"
																}
															],
															"signatures": [
																{
																	"id": 55819,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 55820,
																			"name": "this",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 55790,
																				"name": "CreateWorkflowComposerContext",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 55821,
																		"name": "TOutput",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 55821,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								55792,
								55793,
								55797,
								55798,
								55799,
								55800,
								55801,
								55802,
								55807,
								55814
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 105,
							"character": 44,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L105"
						}
					]
				}
			}
		},
		{
			"id": 55822,
			"name": "StepExecutionContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The step's context."
					}
				]
			},
			"children": [
				{
					"id": 55823,
					"name": "workflowId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the workflow."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 134,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L134"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 55824,
					"name": "attempt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attempt number of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 139,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L139"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 55825,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The idempoency key of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 144,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L144"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 55826,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The idempoency key of the parent step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 149,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L149"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 55827,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to prevent release events."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 154,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L154"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 55828,
					"name": "stepName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 159,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L159"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 55829,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The action of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 164,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L164"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "invoke"
							},
							{
								"type": "literal",
								"value": "compensate"
							}
						]
					}
				},
				{
					"id": 55830,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The container used to access resources, such as services, in the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 169,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L169"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
							"qualifiedName": "MedusaContainer"
						},
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 55831,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata passed in the input."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 173,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L173"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
							"qualifiedName": "TransactionMetadata"
						},
						"name": "TransactionMetadata",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 55832,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "inline-tag",
								"tag": "@inheritDoc",
								"text": "types!Context"
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 177,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L177"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
							"qualifiedName": "Context"
						},
						"name": "Context",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 55833,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 181,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L181"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 55834,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 185,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L185"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 55835,
					"name": " getStepResult",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 193,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L193"
						}
					],
					"signatures": [
						{
							"id": 55836,
							"name": " getStepResult",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get access to the result returned by a named step. Returns undefined\nwhen step is not found or when nothing was returned.\n\nAdding a space hides the method from the autocomplete"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 193,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L193"
								}
							],
							"parameters": [
								{
									"id": 55837,
									"name": "stepId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 55838,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "invoke"
											},
											{
												"type": "literal",
												"value": "compensate"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						55823,
						55824,
						55825,
						55826,
						55827,
						55828,
						55829,
						55830,
						55831,
						55832,
						55833,
						55834
					]
				},
				{
					"title": "Methods",
					"children": [
						55835
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 130,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L130"
				}
			]
		},
		{
			"id": 55839,
			"name": "WorkflowTransactionContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 196,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L196"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 55822,
						"name": "StepExecutionContext",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
							"qualifiedName": "TransactionContext"
						},
						"name": "OriginalWorkflowTransactionContext",
						"package": "@medusajs/orchestration",
						"qualifiedName": "TransactionContext"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 55840,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 55841,
									"name": "invoke",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 198,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 55842,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 198,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
												}
											],
											"indexSignatures": [
												{
													"id": 55843,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/type.ts",
															"line": 198,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
														}
													],
													"parameters": [
														{
															"id": 55844,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 55845,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 55846,
																	"name": "output",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 198,
																			"character": 31,
																			"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		55846
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 198,
																	"character": 29,
																	"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
																}
															]
														}
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										55841
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 197,
									"character": 39,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L197"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 55847,
			"name": "ReturnWorkflow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An exported workflow, which is the type of a workflow constructed by the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "createWorkflow",
						"target": 55584
					},
					{
						"kind": "text",
						"text": " function. The exported workflow can be invoked to create\nan executable workflow, optionally within a specified container. So, to execute the workflow, you must invoke the exported workflow, then run the\n"
					},
					{
						"kind": "code",
						"text": "`run`"
					},
					{
						"kind": "text",
						"text": " method of the exported workflow."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "To execute a workflow:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nmyWorkflow()\n  .run({\n    input: {\n      name: \"John\"\n    }\n  })\n  .then(({ result }) => {\n    console.log(result)\n  })\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTo specify the container of the workflow, you can pass it as an argument to the call of the exported workflow. This is necessary when executing the workflow\nwithin a Medusa resource such as an API Route or a Subscriber.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nimport type {\n  MedusaRequest,\n  MedusaResponse\n} from \"@medusajs/medusa\";\nimport myWorkflow from \"../../../workflows/hello-world\";\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        name: req.query.name as string\n      }\n    })\n\n  res.send(result)\n}\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 248,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L248"
				}
			],
			"typeParameters": [
				{
					"id": 55877,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 55878,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 55879,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 55848,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 248,
									"character": 67,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L248"
								}
							],
							"signatures": [
								{
									"id": 55849,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 249,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L249"
										}
									],
									"typeParameters": [
										{
											"id": 55850,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 55851,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 55852,
											"name": "container",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
															"qualifiedName": "MedusaContainer"
														},
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 55853,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 55854,
																		"name": "__joinerConfig",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 90,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																				"qualifiedName": "ModuleJoinerConfig"
																			},
																			"name": "ModuleJoinerConfig",
																			"package": "@medusajs/types"
																		}
																	},
																	{
																		"id": 55855,
																		"name": "__definition",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 91,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																				"qualifiedName": "ModuleDefinition"
																			},
																			"name": "ModuleDefinition",
																			"package": "@medusajs/types"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			55854,
																			55855
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "types/dist/modules-sdk/index.d.ts",
																		"line": 89,
																		"character": 37
																	}
																]
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
															"qualifiedName": "LocalWorkflow"
														},
														"name": "LocalWorkflow",
														"package": "@medusajs/orchestration"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "run"
															},
															{
																"type": "literal",
																"value": "registerStepSuccess"
															},
															{
																"type": "literal",
																"value": "registerStepFailure"
															},
															{
																"type": "literal",
																"value": "cancel"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
													"qualifiedName": "ExportedWorkflow"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 55877,
														"name": "TData",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 55878,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 55850,
														"name": "TDataOverride",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 55851,
														"name": "TResultOverride",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ExportedWorkflow",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 55856,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 55857,
									"name": "runAsStep",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/execute-another-workflow)."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 265,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L265"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 55858,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 265,
													"character": 13,
													"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L265"
												}
											],
											"signatures": [
												{
													"id": 55859,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The workflow's result"
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 55860,
															"name": "{\n    input,\n  }",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 55861,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 55862,
																			"name": "input",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The workflow's input."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 271,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L271"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reference",
																						"target": 55877,
																						"name": "TData",
																						"package": "@medusajs/workflows-sdk",
																						"refersToTypeParameter": true
																					},
																					{
																						"type": "reference",
																						"target": 55782,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": 55877,
																								"name": "TData",
																								"package": "@medusajs/workflows-sdk",
																								"refersToTypeParameter": true
																							}
																						],
																						"name": "WorkflowData",
																						"package": "@medusajs/workflows-sdk"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				55862
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 267,
																			"character": 5,
																			"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L267"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 55748,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 55877,
																		"name": "TData",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 55878,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "StepFunction",
																"package": "@medusajs/workflows-sdk"
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 55863,
									"name": "run",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method executes a workflow."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 279,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L279"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 55864,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 279,
													"character": 7,
													"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L279"
												}
											],
											"signatures": [
												{
													"id": 55865,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "Details of the workflow's execution, including its result."
																	}
																]
															}
														]
													},
													"typeParameters": [
														{
															"id": 55867,
															"name": "TDataOverride",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"default": {
																"type": "intrinsic",
																"name": "undefined"
															}
														},
														{
															"id": 55868,
															"name": "TResultOverride",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"default": {
																"type": "intrinsic",
																"name": "undefined"
															}
														}
													],
													"parameters": [
														{
															"id": 55866,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The options to execute the workflow."
																	}
																]
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Parameters"
																},
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "run"
																		},
																		"objectType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																				"qualifiedName": "ExportedWorkflow"
																			},
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 55877,
																					"name": "TData",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 55878,
																					"name": "TResult",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 55867,
																					"name": "TDataOverride",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 55868,
																					"name": "TResultOverride",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "ExportedWorkflow",
																			"package": "@medusajs/workflows-sdk"
																		}
																	}
																],
																"name": "Parameters",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "run"
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
																		"qualifiedName": "ExportedWorkflow"
																	},
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 55877,
																			"name": "TData",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 55878,
																			"name": "TResult",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 55867,
																			"name": "TDataOverride",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 55868,
																			"name": "TResultOverride",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "ExportedWorkflow",
																	"package": "@medusajs/workflows-sdk"
																}
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 55869,
									"name": "getName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the workflow's name."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 289,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L289"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 55870,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 289,
													"character": 11,
													"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L289"
												}
											],
											"signatures": [
												{
													"id": 55871,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 55872,
									"name": "config",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method sets the workflow's configurations."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 293,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L293"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 55873,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 293,
													"character": 10,
													"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L293"
												}
											],
											"signatures": [
												{
													"id": 55874,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 55875,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																	"qualifiedName": "TransactionModelOptions"
																},
																"name": "TransactionModelOptions",
																"package": "@medusajs/orchestration"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 55876,
									"name": "hooks",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/workflow-hooks#how-to-consume-a-hook)."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 299,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L299"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "ConvertHooksToFunctions"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 55879,
												"name": "THooks",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "ConvertHooksToFunctions",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										55857,
										55863,
										55869,
										55872,
										55876
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 256,
									"character": 4,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L256"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 55880,
			"name": "UnwrapWorkflowInputDataType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Extract the raw type of the expected input data of a workflow."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\ntype WorkflowInputData = UnwrapWorkflowInputDataType<typeof myWorkflow>\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 308,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/workflows-sdk/src/utils/composer/type.ts#L308"
				}
			],
			"typeParameters": [
				{
					"id": 55881,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 55847,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ReturnWorkflow",
						"package": "@medusajs/workflows-sdk"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 55881,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 55847,
					"typeArguments": [
						{
							"type": "inferred",
							"name": "TData"
						},
						{
							"type": "inferred",
							"name": "R"
						},
						{
							"type": "inferred",
							"name": "THooks"
						}
					],
					"name": "ReturnWorkflow",
					"package": "@medusajs/workflows-sdk"
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
						"qualifiedName": "TData"
					},
					"name": "TData",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				55600,
				55630
			]
		},
		{
			"title": "Interfaces",
			"children": [
				55574,
				55822
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				55656,
				55557,
				55565,
				55571,
				55728,
				55733,
				55741,
				55745,
				55748,
				55777,
				55782,
				55790,
				55839,
				55847,
				55880
			]
		},
		{
			"title": "Functions",
			"children": [
				55646,
				55547,
				55584,
				55667,
				55671
			]
		}
	],
	"packageName": "@medusajs/workflows-sdk",
	"symbolIdMap": {
		"55539": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/index.ts",
			"qualifiedName": ""
		},
		"55547": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"55548": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"55549": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeInput"
		},
		"55550": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultOutput"
		},
		"55551": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultCompensateInput"
		},
		"55552": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "nameOrConfig"
		},
		"55553": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"55554": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type.name"
		},
		"55555": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "invokeFn"
		},
		"55556": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "compensateFn"
		},
		"55557": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "InvokeFn"
		},
		"55558": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"55559": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"55560": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"55561": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"55562": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInput"
		},
		"55563": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TOutput"
		},
		"55564": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TCompensateInput"
		},
		"55565": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "CompensateFn"
		},
		"55566": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"55567": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"55568": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"55569": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"55570": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "T"
		},
		"55571": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "LocalStepConfig"
		},
		"55572": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"55573": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type.name"
		},
		"55574": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions"
		},
		"55575": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.stepName"
		},
		"55576": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.stepConfig"
		},
		"55577": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.input"
		},
		"55578": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.invokeFn"
		},
		"55579": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.compensateFn"
		},
		"55580": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TStepInputs"
		},
		"55581": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeInput"
		},
		"55582": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeResultOutput"
		},
		"55583": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput"
		},
		"55584": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"55585": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"55586": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TData"
		},
		"55587": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TResult"
		},
		"55588": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "THooks"
		},
		"55589": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "nameOrConfig"
		},
		"55590": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"55591": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type.name"
		},
		"55592": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "composer"
		},
		"55593": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"55594": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"55595": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "input"
		},
		"55600": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"55601": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.permanentFailure"
		},
		"55602": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.permanentFailure"
		},
		"55603": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "message"
		},
		"55604": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "compensateInput"
		},
		"55605": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.skip"
		},
		"55606": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.skip"
		},
		"55607": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.__constructor"
		},
		"55608": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"55609": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"55610": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"55611": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "output"
		},
		"55612": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "compensateInput"
		},
		"55628": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"55629": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"55630": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse"
		},
		"55631": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.__constructor"
		},
		"55632": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse"
		},
		"55633": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.TResult"
		},
		"55634": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.THooks"
		},
		"55635": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "$result"
		},
		"55636": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "options"
		},
		"55637": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type"
		},
		"55638": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type.hooks"
		},
		"55639": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.__type"
		},
		"55640": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.$result"
		},
		"55641": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.options"
		},
		"55642": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type"
		},
		"55643": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type.hooks"
		},
		"55644": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.TResult"
		},
		"55645": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.THooks"
		},
		"55646": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "createHook"
		},
		"55647": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "createHook"
		},
		"55648": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Name"
		},
		"55649": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "TInvokeInput"
		},
		"55650": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "TInvokeOutput"
		},
		"55651": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "name"
		},
		"55652": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "input"
		},
		"55653": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "options"
		},
		"55654": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type"
		},
		"55655": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.resultValidator"
		},
		"55656": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Hook"
		},
		"55657": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type"
		},
		"55658": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.__type"
		},
		"55659": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.name"
		},
		"55660": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.getResult"
		},
		"55661": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.getResult"
		},
		"55662": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type. output"
		},
		"55663": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type. input"
		},
		"55664": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Name"
		},
		"55665": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Input"
		},
		"55666": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Output"
		},
		"55667": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"55668": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"55669": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "TResult"
		},
		"55670": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "steps"
		},
		"55671": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"55672": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"55673": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"55674": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "RFinal"
		},
		"55675": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "values"
		},
		"55676": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "func"
		},
		"55728": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunctionResult"
		},
		"55729": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55730": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55731": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"55732": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"55733": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunctionReturnConfig"
		},
		"55734": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55735": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"55736": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"55737": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"55738": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55739": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"55740": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"55741": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "HookHandler"
		},
		"55742": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55743": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55744": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"55745": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "Void"
		},
		"55746": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55747": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type. $$type"
		},
		"55748": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunction"
		},
		"55749": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55750": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55751": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"55752": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55753": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": " $$type"
		},
		"55754": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55755": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"55756": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"55757": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"55758": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55759": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"55760": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55761": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"55762": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"55763": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"55764": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55765": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"55766": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55767": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55768": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"55769": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55770": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"55771": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"55772": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"55773": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55774": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"55775": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TInput"
		},
		"55776": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"55777": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowDataProperties"
		},
		"55778": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55779": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"55780": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"55781": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"55782": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowData"
		},
		"55783": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55784": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"55785": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"55786": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"55787": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55788": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"55789": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"55790": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "CreateWorkflowComposerContext"
		},
		"55791": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55792": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"55793": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks_"
		},
		"55794": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55795": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.declared"
		},
		"55796": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.registered"
		},
		"55797": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooksCallback_"
		},
		"55798": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.workflowId"
		},
		"55799": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.flow"
		},
		"55800": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.isAsync"
		},
		"55801": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.handlers"
		},
		"55802": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.stepBinder"
		},
		"55803": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55804": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55805": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"55806": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"55807": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hookBinder"
		},
		"55808": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55809": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55810": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "name"
		},
		"55811": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"55812": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55813": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55814": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.parallelizeBinder"
		},
		"55815": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55816": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55817": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"55818": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55819": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55820": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"55821": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"55822": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext"
		},
		"55823": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.workflowId"
		},
		"55824": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.attempt"
		},
		"55825": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.idempotencyKey"
		},
		"55826": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.parentStepIdempotencyKey"
		},
		"55827": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.preventReleaseEvents"
		},
		"55828": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.stepName"
		},
		"55829": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.action"
		},
		"55830": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.container"
		},
		"55831": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.metadata"
		},
		"55832": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.context"
		},
		"55833": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.eventGroupId"
		},
		"55834": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.transactionId"
		},
		"55835": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. getStepResult"
		},
		"55836": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. getStepResult"
		},
		"55837": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "stepId"
		},
		"55838": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "action"
		},
		"55839": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowTransactionContext"
		},
		"55840": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55841": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.invoke"
		},
		"55842": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55843": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__index"
		},
		"55845": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55846": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.output"
		},
		"55847": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ReturnWorkflow"
		},
		"55848": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55849": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55850": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"55851": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"55852": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"55853": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"55854": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"55855": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"55856": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55857": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"55858": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55859": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55861": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55862": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"55863": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"55864": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55865": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55866": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"55867": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"55868": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"55869": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"55870": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55871": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55872": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"55873": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55874": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"55875": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"55876": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"55877": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TData"
		},
		"55878": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResult"
		},
		"55879": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THooks"
		},
		"55880": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "UnwrapWorkflowInputDataType"
		},
		"55881": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/workflows-sdk/src/utils/composer/index.ts"
		},
		"reflections": {
			"1": 55539
		}
	}
}
