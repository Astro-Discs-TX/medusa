{
	"id": 57418,
	"name": "workflows",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 58826,
			"name": "IDistributedTransactionStorage",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 58827,
					"name": "get",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58828,
							"name": "get",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58829,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58830,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 57795,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											},
											{
												"type": "reference",
												"target": 58989,
												"name": "StepFeatures",
												"package": "@medusajs/orchestration"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 58831,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 58832,
															"name": "isCancelling",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
																	"line": 13,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																58832
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
															"line": 12,
															"character": 52
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 58869,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58833,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58834,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 58869,
											"name": "TransactionCheckpoint",
											"package": "@medusajs/orchestration"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58835,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58836,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58837,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58838,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58869,
										"name": "TransactionCheckpoint",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58839,
									"name": "ttl",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 58840,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58971,
										"name": "TransactionOptions",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58841,
					"name": "scheduleRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58842,
							"name": "scheduleRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58843,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58844,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58762,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58845,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 58846,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58847,
					"name": "clearRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58848,
							"name": "clearRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58849,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58850,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58762,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58851,
					"name": "scheduleTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58852,
							"name": "scheduleTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58853,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58854,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 58855,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58856,
					"name": "scheduleStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58857,
							"name": "scheduleStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58858,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58859,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58762,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58860,
									"name": "timestamp",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 58861,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58862,
					"name": "clearTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58863,
							"name": "clearTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58864,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58865,
					"name": "clearStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58866,
							"name": "clearStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58867,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58868,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58762,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						58827,
						58833,
						58835,
						58841,
						58847,
						58851,
						58856,
						58862,
						58865
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/datastore/abstract-storage.d.ts",
					"line": 11,
					"character": 17
				}
			]
		},
		{
			"id": 57946,
			"name": "TransactionMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57947,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57948,
							"name": "model_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57949,
							"name": "idempotency_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57950,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57951,
							"name": "action_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58216,
								"name": "TransactionHandlerType",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 57952,
							"name": "attempt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 57953,
							"name": "timestamp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57948,
								57949,
								57950,
								57951,
								57952,
								57953
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 14,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 57969,
			"name": "TransactionContext",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 57975,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing the initial payload."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 57976,
					"name": "invoke",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing responses of Invoke handlers on steps flagged with saveResponse."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 57977,
					"name": "compensate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing responses of Compensate handlers on steps flagged with saveResponse."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 57970,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57971,
							"name": "TransactionContext",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57972,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 57973,
									"name": "invoke",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 57974,
									"name": "compensate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57969,
								"name": "TransactionContext",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						57970
					]
				},
				{
					"title": "Properties",
					"children": [
						57975,
						57976,
						57977
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 28,
					"character": 21
				}
			]
		},
		{
			"id": 58908,
			"name": "TransactionStepError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 58914,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58915,
					"name": "handlerType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58216,
						"name": "TransactionHandlerType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 58916,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58909,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58910,
							"name": "TransactionStepError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58911,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58912,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58216,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 58913,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58908,
								"name": "TransactionStepError",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58909
					]
				},
				{
					"title": "Properties",
					"children": [
						58914,
						58915,
						58916
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 34,
					"character": 21
				}
			]
		},
		{
			"id": 58869,
			"name": "TransactionCheckpoint",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 58875,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58878,
						"name": "TransactionFlow",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58876,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57969,
						"name": "TransactionContext",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58877,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 58908,
							"name": "TransactionStepError",
							"package": "@medusajs/orchestration"
						}
					}
				},
				{
					"id": 58870,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58871,
							"name": "TransactionCheckpoint",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 44,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58872,
									"name": "flow",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58878,
										"name": "TransactionFlow",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58873,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57969,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58874,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 58908,
											"name": "TransactionStepError",
											"package": "@medusajs/orchestration"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58869,
								"name": "TransactionCheckpoint",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58870
					]
				},
				{
					"title": "Properties",
					"children": [
						58875,
						58876,
						58877
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 40,
					"character": 21
				}
			]
		},
		{
			"id": 58962,
			"name": "TransactionPayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 58968,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57946,
						"name": "TransactionMetadata",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58969,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 58970,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57969,
						"name": "TransactionContext",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58963,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 55,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58964,
							"name": "TransactionPayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58965,
									"name": "metadata",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The metadata of the transaction."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 57946,
										"name": "TransactionMetadata",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58966,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The initial payload data to begin a transation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 58967,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object gathering responses of all steps flagged with saveResponse."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 57969,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58962,
								"name": "TransactionPayload",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58963
					]
				},
				{
					"title": "Properties",
					"children": [
						58968,
						58969,
						58970
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 46,
					"character": 21
				}
			]
		},
		{
			"id": 58384,
			"name": "DistributedTransaction",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "DistributedTransaction represents a distributed transaction, which is a transaction that is composed of multiple steps that are executed in a specific order."
					}
				]
			},
			"children": [
				{
					"id": 58404,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58405,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 62,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58406,
					"name": "handler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58589,
						"name": "TransactionStepHandler",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58407,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 64,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58408,
					"name": "modelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58409,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 66,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58410,
					"name": "runId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 67,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58411,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 68,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58412,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 69,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58385,
					"name": "keyValueStore",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 70,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58386,
					"name": "setStorage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 71,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 58387,
							"name": "setStorage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 71,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 58388,
									"name": "storage",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58826,
										"name": "IDistributedTransactionStorage",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58389,
					"name": "keyPrefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 72,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58397,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58398,
							"name": "DistributedTransaction",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 73,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58399,
									"name": "flow",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58878,
										"name": "TransactionFlow",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58400,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58589,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58401,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 58402,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 58908,
											"name": "TransactionStepError",
											"package": "@medusajs/orchestration"
										}
									}
								},
								{
									"id": 58403,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57969,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58384,
								"name": "DistributedTransaction",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 58413,
					"name": "getFlow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 74,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58414,
							"name": "getFlow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58878,
								"name": "TransactionFlow",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58415,
					"name": "getContext",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 75,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58416,
							"name": "getContext",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57969,
								"name": "TransactionContext",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58417,
					"name": "getErrors",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 76,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58418,
							"name": "getErrors",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 76,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58419,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58216,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 58908,
									"name": "TransactionStepError",
									"package": "@medusajs/orchestration"
								}
							}
						}
					]
				},
				{
					"id": 58420,
					"name": "addError",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 77,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58421,
							"name": "addError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 77,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58422,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58423,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58216,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 58424,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58425,
					"name": "addResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 78,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58426,
							"name": "addResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 78,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58427,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58428,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58216,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 58429,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58430,
					"name": "hasFinished",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 79,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58431,
							"name": "hasFinished",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 79,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58432,
					"name": "getState",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 80,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58433,
							"name": "getState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 80,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58917,
								"name": "TransactionState",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 58434,
					"name": "isPartiallyCompleted",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 81,
							"character": 8
						}
					],
					"getSignature": {
						"id": 58435,
						"name": "isPartiallyCompleted",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
								"line": 81,
								"character": 8
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 58436,
					"name": "canInvoke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 82,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58437,
							"name": "canInvoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 82,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58438,
					"name": "canRevert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 83,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58439,
							"name": "canRevert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 83,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58440,
					"name": "hasTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 84,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58441,
							"name": "hasTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58442,
					"name": "getTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 85,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58443,
							"name": "getTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 85,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 58444,
					"name": "saveCheckpoint",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 86,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58445,
							"name": "saveCheckpoint",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 86,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58446,
									"name": "ttl",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 58869,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58390,
					"name": "loadTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 87,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 58391,
							"name": "loadTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 87,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 58392,
									"name": "modelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58393,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58394,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58395,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58396,
													"name": "isCancelling",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
															"line": 88,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58396
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
													"line": 87,
													"character": 77
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 58869,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58447,
					"name": "scheduleRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 90,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58448,
							"name": "scheduleRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 90,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58449,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58762,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58450,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58451,
					"name": "clearRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 91,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58452,
							"name": "clearRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 91,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58453,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58762,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58454,
					"name": "scheduleTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 92,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58455,
							"name": "scheduleTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 92,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58456,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58457,
					"name": "clearTransactionTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 93,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58458,
							"name": "clearTransactionTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 93,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58459,
					"name": "scheduleStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 94,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58460,
							"name": "scheduleStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58461,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58762,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58462,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58463,
					"name": "clearStepTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 95,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58464,
							"name": "clearStepTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 95,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58465,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58762,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58466,
					"name": "setTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 96,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58467,
							"name": "setTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 96,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58468,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58469,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58470,
					"name": "getTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 97,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58471,
							"name": "getTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 97,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58472,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				},
				{
					"id": 58473,
					"name": "hasTemporaryData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 98,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58474,
							"name": "hasTemporaryData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 98,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58475,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58397
					]
				},
				{
					"title": "Properties",
					"children": [
						58404,
						58405,
						58406,
						58407,
						58408,
						58409,
						58410,
						58411,
						58412,
						58385,
						58389
					]
				},
				{
					"title": "Accessors",
					"children": [
						58434
					]
				},
				{
					"title": "Methods",
					"children": [
						58386,
						58413,
						58415,
						58417,
						58420,
						58425,
						58430,
						58432,
						58436,
						58438,
						58440,
						58442,
						58444,
						58390,
						58447,
						58451,
						58454,
						58457,
						58459,
						58463,
						58466,
						58470,
						58473
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 60,
					"character": 14
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 58183,
			"name": "BaseStepErrror",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 58189,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58184,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58185,
							"name": "BaseStepErrror",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58186,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 58187,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58188,
									"name": "stepResponse",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58183,
								"name": "BaseStepErrror",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.constructor"
					}
				},
				{
					"id": 58190,
					"name": "getStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58191,
							"name": "getStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58184
					]
				},
				{
					"title": "Properties",
					"children": [
						58189
					]
				},
				{
					"title": "Methods",
					"children": [
						58190
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
					"line": 1,
					"character": 14
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Error"
					},
					"name": "Error",
					"package": "typescript"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 57803,
					"name": "SkipStepResponse"
				}
			]
		},
		{
			"id": 57803,
			"name": "SkipStepResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 57811,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 58189,
						"name": "BaseStepErrror.#private"
					}
				},
				{
					"id": 57812,
					"name": "getStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isInherited": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57813,
							"name": "getStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isInherited": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 58191,
								"name": "BaseStepErrror.getStepResponse"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 58190,
						"name": "BaseStepErrror.getStepResponse"
					}
				},
				{
					"id": 57804,
					"name": "isSkipStepResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 11,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 57805,
							"name": "isSkipStepResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 11,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 57806,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Error"
										},
										"name": "Error",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "error",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 57803,
									"name": "SkipStepResponse",
									"package": "@medusajs/orchestration"
								}
							}
						}
					]
				},
				{
					"id": 57807,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57808,
							"name": "SkipStepResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57809,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57810,
									"name": "stepResponse",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57803,
								"name": "SkipStepResponse",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": 58185,
								"name": "BaseStepErrror.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 58184,
						"name": "BaseStepErrror.constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						57807
					]
				},
				{
					"title": "Properties",
					"children": [
						57811
					]
				},
				{
					"title": "Methods",
					"children": [
						57812,
						57804
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/errors.d.ts",
					"line": 10,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 58183,
					"name": "BaseStepErrror",
					"package": "@medusajs/orchestration"
				}
			]
		},
		{
			"id": 58192,
			"name": "InternalStep",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the structure and behavior of a single step within a transaction workflow."
					}
				]
			},
			"children": [
				{
					"id": 58193,
					"name": "next",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the next step(s) to execute after this step. Can be a single step or an array of steps."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 58192,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 58192,
									"name": "InternalStep",
									"package": "@medusajs/orchestration"
								}
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.next"
					}
				},
				{
					"id": 58194,
					"name": "depth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 58195,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 58192,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						]
					}
				},
				{
					"id": 58196,
					"name": "uuid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier for the transaction step.\nThis is set automatically when declaring a workflow with \"createWorkflow\""
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.uuid"
					}
				},
				{
					"id": 58197,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies the action to be performed in this step.\n\"name\" is an alias for action when creating a workflow with \"createWorkflow\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.action"
					}
				},
				{
					"id": 58198,
					"name": "continueOnPermanentFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the workflow should continue even if there is a permanent failure in this step.\nIn case it is set to true, the the current step will be marked as TransactionStepState.PERMANENT_FAILURE and the next steps will be executed."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.continueOnPermanentFailure"
					}
				},
				{
					"id": 58199,
					"name": "skipOnPermanentFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the workflow should skip all subsequent steps in case of a permanent failure in this step.\nIn case it is set to true, the next steps of the workflow will not be executed and their status will be marked as TransactionStepState.SKIPPED_FAILURE.\nIn case it is a string, the next steps until the step name provided will be skipped and the workflow will be resumed from the step provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.skipOnPermanentFailure"
					}
				},
				{
					"id": 58200,
					"name": "noCompensation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, no compensation action will be triggered for this step in case of a failure."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.noCompensation"
					}
				},
				{
					"id": 58201,
					"name": "maxRetries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of times this step should be retried in case of temporary failures.\nThe default is 0 (no retries)."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.maxRetries"
					}
				},
				{
					"id": 58202,
					"name": "retryInterval",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The interval (in seconds) between retry attempts after a temporary failure.\nThe default is to retry immediately."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.retryInterval"
					}
				},
				{
					"id": 58203,
					"name": "retryIntervalAwaiting",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The interval (in seconds) to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.retryIntervalAwaiting"
					}
				},
				{
					"id": 58204,
					"name": "timeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum amount of time (in seconds) to wait for this step to complete.\nThis is NOT an execution timeout, the step will always be executed and wait for its response.\nIf the response is not received within the timeout set, it will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted as soon as it receives the response."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.timeout"
					}
				},
				{
					"id": 58205,
					"name": "async",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the step is executed asynchronously. This means that the workflow will not wait for the response of this step.\nAsync steps require to have their responses set using \"setStepSuccess\" or \"setStepFailure\", unless it is combined with \"backgroundExecution: true\".\nIf combined with a timeout, and any response is not set within that interval, the step will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted immediately."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 59,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.async"
					}
				},
				{
					"id": 58206,
					"name": "nested",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "It flags where the step contains a sub transaction inside itself."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.nested"
					}
				},
				{
					"id": 58207,
					"name": "backgroundExecution",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "It applies to \"async\" steps only, allowing them to run in the background and automatically complete without external intervention.\nIt is ideal for time-consuming tasks that will be complete after the execution, contrasting with standard \"async\" operations that require a response to be set in a later stage."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 68,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.backgroundExecution"
					}
				},
				{
					"id": 58208,
					"name": "compensateAsync",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the compensation function for this step is executed asynchronously. Which means, the response has to be set using \"setStepSuccess\" or \"setStepFailure\"."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 72,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.compensateAsync"
					}
				},
				{
					"id": 58209,
					"name": "noWait",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the workflow will not wait for their sibling steps to complete before moving to the next step."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 76,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.noWait"
					}
				},
				{
					"id": 58210,
					"name": "saveResponse",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If true, the response of this step will be stored.\nDefault is true."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 81,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.saveResponse"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58193,
						58194,
						58195,
						58196,
						58197,
						58198,
						58199,
						58200,
						58201,
						58202,
						58203,
						58204,
						58205,
						58206,
						58207,
						58208,
						58209,
						58210
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
					"line": 2,
					"character": 10
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 57777,
					"name": "TransactionStepsDefinition",
					"package": "@medusajs/orchestration"
				}
			]
		},
		{
			"id": 57832,
			"name": "OrchestratorBuilder",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 57836,
					"name": "steps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 8,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 58192,
						"name": "InternalStep",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 57837,
					"name": "hasChanges_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 9,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 57838,
					"name": "hasChanges",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 10,
							"character": 8
						}
					],
					"getSignature": {
						"id": 57839,
						"name": "hasChanges",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
								"line": 10,
								"character": 8
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 57833,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57834,
							"name": "OrchestratorBuilder",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57835,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57777,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57840,
					"name": "load",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57841,
							"name": "load",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57842,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57777,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 57843,
					"name": "addAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57844,
							"name": "addAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57845,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57846,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 57777,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 57847,
					"name": "replaceAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57848,
							"name": "replaceAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57849,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57850,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57851,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 57777,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 57852,
					"name": "insertActionBefore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57853,
							"name": "insertActionBefore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57854,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57855,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57856,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 57777,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 57857,
					"name": "insertActionAfter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57858,
							"name": "insertActionAfter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57859,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57860,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57861,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 57777,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 57862,
					"name": "appendTo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 17,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 57863,
							"name": "appendTo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 17,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 57864,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 58192,
												"name": "InternalStep",
												"package": "@medusajs/orchestration"
											}
										]
									}
								},
								{
									"id": 57865,
									"name": "newStep",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58192,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 57866,
					"name": "appendAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57867,
							"name": "appendAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57868,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57869,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57870,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 57777,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 57871,
					"name": "move",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 19,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 57872,
							"name": "move",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 19,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 57873,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57874,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57875,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57876,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 57877,
													"name": "runInParallel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
															"line": 20,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 57878,
													"name": "mergeNext",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
															"line": 21,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														57877,
														57878
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
													"line": 19,
													"character": 95
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57879,
					"name": "moveAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57880,
							"name": "moveAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57881,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57882,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57883,
					"name": "moveAndMergeNextAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57884,
							"name": "moveAndMergeNextAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57885,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57886,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57887,
					"name": "mergeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57888,
							"name": "mergeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57889,
									"name": "where",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57890,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 57891,
					"name": "deleteAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57892,
							"name": "deleteAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57893,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57894,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58192,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 57895,
					"name": "pruneAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57896,
							"name": "pruneAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 57897,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 57898,
					"name": "findStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 28,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 57899,
							"name": "findStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 28,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 57900,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57901,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58192,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 58192,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					]
				},
				{
					"id": 57902,
					"name": "findOrThrowStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 29,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 57903,
							"name": "findOrThrowStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 29,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 57904,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57905,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58192,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58192,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57906,
					"name": "findParentStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 30,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 57907,
							"name": "findParentStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 30,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 57908,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57909,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58192,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 58192,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					]
				},
				{
					"id": 57910,
					"name": "findLastStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 31,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 57911,
							"name": "findLastStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 31,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 57912,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58192,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58192,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 57913,
					"name": "updateDepths",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 32,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 57914,
							"name": "updateDepths",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 32,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 57915,
									"name": "startingStep",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58192,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57916,
									"name": "parent",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 57917,
									"name": "incr",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 57918,
									"name": "beginFrom",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 57919,
					"name": "build",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 57920,
							"name": "build",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57777,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						57833
					]
				},
				{
					"title": "Properties",
					"children": [
						57836,
						57837
					]
				},
				{
					"title": "Accessors",
					"children": [
						57838
					]
				},
				{
					"title": "Methods",
					"children": [
						57840,
						57843,
						57847,
						57852,
						57857,
						57862,
						57866,
						57871,
						57879,
						57883,
						57887,
						57891,
						57895,
						57898,
						57902,
						57906,
						57910,
						57913,
						57919
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/orchestrator-builder.d.ts",
					"line": 7,
					"character": 21
				}
			]
		},
		{
			"id": 58598,
			"name": "TransactionOrchestrator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "TransactionOrchestrator is responsible for managing and executing distributed transactions.\nIt is based on a single transaction definition, which is used to execute all the transaction steps"
					}
				]
			},
			"children": [
				{
					"id": 58666,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58599,
					"name": "ROOT_STEP",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 11,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58600,
					"name": "DEFAULT_TTL",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 12,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 58667,
					"name": "invokeSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 13,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58668,
					"name": "compensateSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 14,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58669,
					"name": "definition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 15,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58670,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 16,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58601,
					"name": "DEFAULT_RETRIES",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 17,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 58602,
					"name": "workflowOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 18,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58603,
					"name": "getWorkflowOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 19,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 58604,
							"name": "getWorkflowOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 19,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 58605,
									"name": "modelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58971,
								"name": "TransactionOptions",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58606,
					"name": "traceTransaction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trace workflow transaction for instrumentation"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 23,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58607,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 23,
									"character": 30
								}
							],
							"signatures": [
								{
									"id": 58608,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
											"line": 23,
											"character": 30
										}
									],
									"parameters": [
										{
											"id": 58609,
											"name": "transactionResume",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 58610,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 23,
															"character": 50
														}
													],
													"signatures": [
														{
															"id": 58611,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 23,
																	"character": 50
																}
															],
															"parameters": [
																{
																	"id": 58612,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 58613,
											"name": "metadata",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 58614,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 58615,
															"name": "model_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 24,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 58616,
															"name": "transaction_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 25,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 58617,
															"name": "flow_metadata",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 26,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 58618,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 58619,
																					"name": "eventGroupId",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 223,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 58620,
																					"name": "parentIdempotencyKey",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 224,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 58621,
																					"name": "sourcePath",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 225,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				},
																				{
																					"id": 58622,
																					"name": "preventReleaseEvents",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 226,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "boolean"
																					}
																				},
																				{
																					"id": 58623,
																					"name": "parentStepIdempotencyKey",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 227,
																							"character": 8
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						58619,
																						58620,
																						58621,
																						58622,
																						58623
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																					"line": 222,
																					"character": 15
																				}
																			],
																			"indexSignatures": [
																				{
																					"id": 58624,
																					"name": "__index",
																					"variant": "signature",
																					"kind": 8192,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																							"line": 228,
																							"character": 8
																						}
																					],
																					"parameters": [
																						{
																							"id": 58625,
																							"name": "key",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				}
																			]
																		}
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																58615,
																58616,
																58617
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 23,
															"character": 95
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 58626,
					"name": "traceStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Trace workflow steps for instrumentation"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 31,
							"character": 11
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58627,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 31,
									"character": 23
								}
							],
							"signatures": [
								{
									"id": 58628,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
											"line": 31,
											"character": 23
										}
									],
									"parameters": [
										{
											"id": 58629,
											"name": "handler",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 58630,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 31,
															"character": 33
														}
													],
													"signatures": [
														{
															"id": 58631,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 31,
																	"character": 33
																}
															],
															"parameters": [
																{
																	"id": 58632,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 58633,
											"name": "metadata",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 58634,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 58635,
															"name": "action",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 32,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 58636,
															"name": "type",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 33,
																	"character": 8
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "invoke"
																	},
																	{
																		"type": "literal",
																		"value": "compensate"
																	}
																]
															}
														},
														{
															"id": 58637,
															"name": "step_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 34,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 58638,
															"name": "step_uuid",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 35,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 58639,
															"name": "attempts",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 36,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 58640,
															"name": "failures",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 37,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 58641,
															"name": "async",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 38,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														},
														{
															"id": 58642,
															"name": "idempotency_key",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 39,
																	"character": 8
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																58635,
																58636,
																58637,
																58638,
																58639,
																58640,
																58641,
																58642
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 31,
															"character": 77
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 58658,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58659,
							"name": "TransactionOrchestrator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58660,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58661,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58662,
													"name": "id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 42,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58663,
													"name": "definition",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 57777,
														"name": "TransactionStepsDefinition",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 58664,
													"name": "options",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 44,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 57795,
														"name": "TransactionModelOptions",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 58665,
													"name": "isClone",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 45,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58662,
														58663,
														58664,
														58665
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 41,
													"character": 55
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58598,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 58643,
					"name": "clone",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 47,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 58644,
							"name": "clone",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 47,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 58645,
									"name": "orchestrator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58598,
										"name": "TransactionOrchestrator",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58598,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58646,
					"name": "SEPARATOR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 48,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58647,
					"name": "getKeyName",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 49,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 58648,
							"name": "getKeyName",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 49,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 58649,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 58671,
					"name": "getPreviousStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 50,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58672,
					"name": "getOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 51,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58673,
							"name": "getOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57795,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58674,
					"name": "getInvokeSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 52,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58675,
					"name": "getCompensationSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 53,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58676,
					"name": "canMoveForward",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 54,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58677,
					"name": "canMoveBackward",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 55,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58678,
					"name": "canContinue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 56,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58679,
					"name": "hasExpired",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 57,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58680,
					"name": "checkTransactionTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 58,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58681,
					"name": "checkStepTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 59,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58682,
					"name": "checkAllSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 60,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58683,
					"name": "computeCurrentTransactionState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 61,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58684,
					"name": "flagStepsToRevert",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 62,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58650,
					"name": "setStepSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 63,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58651,
					"name": "skipStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 64,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58652,
					"name": "setStepTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 65,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58653,
					"name": "setStepFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 66,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58685,
					"name": "executeNext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 67,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58686,
					"name": "finalizeTransaction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Finalize the transaction when all steps are complete"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 71,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58687,
					"name": "prepareStepForExecution",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prepare a step for execution by setting state and incrementing attempts"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 75,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58688,
					"name": "createStepPayload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create the payload for a step execution"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 79,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58689,
					"name": "prepareHandlerArgs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prepare handler arguments for step execution"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 83,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58690,
					"name": "createStepExecutionPromise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create the step execution promise with optional tracing"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 87,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58691,
					"name": "executeSyncStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Execute a synchronous step and handle its result"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 91,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58692,
					"name": "executeAsyncStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Execute an asynchronous step and handle its result"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 95,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58693,
					"name": "handleStepExpiration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if step or transaction has expired and handle timeouts"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 99,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58694,
					"name": "handleStepSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle successful step completion"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 103,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58695,
					"name": "handleStepFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle step failure"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 107,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58696,
					"name": "resume",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 112,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58697,
							"name": "resume",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Start a new transaction or resume a transaction that has been previously started"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 112,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58698,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to resume"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58699,
					"name": "cancelTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 117,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58700,
							"name": "cancelTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Cancel and revert a transaction compensating all its executed steps. It can be an ongoing transaction or a completed one"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 117,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58701,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to be reverted"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58702,
					"name": "parseFlowOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 118,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58703,
					"name": "createTransactionFlow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 119,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58654,
					"name": "loadTransactionById",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 120,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58655,
					"name": "buildSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 121,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58704,
					"name": "beginTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 128,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58705,
							"name": "beginTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new transaction"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 128,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58706,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58707,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58708,
													"name": "transactionId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 129,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58709,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 130,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58589,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 58710,
													"name": "payload",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 131,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 58711,
													"name": "flowMetadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 132,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58712,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58713,
																	"name": "eventGroupId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 223,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 58714,
																	"name": "parentIdempotencyKey",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 224,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 58715,
																	"name": "sourcePath",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 225,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 58716,
																	"name": "preventReleaseEvents",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 226,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 58717,
																	"name": "parentStepIdempotencyKey",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 227,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58713,
																		58714,
																		58715,
																		58716,
																		58717
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 222,
																	"character": 15
																}
															],
															"indexSignatures": [
																{
																	"id": 58718,
																	"name": "__index",
																	"variant": "signature",
																	"kind": 8192,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 228,
																			"character": 8
																		}
																	],
																	"parameters": [
																		{
																			"id": 58719,
																			"name": "key",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																}
															]
														}
													}
												},
												{
													"id": 58720,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 133,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58721,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 133,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 58722,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 133,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 58723,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 58384,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58708,
														58709,
														58710,
														58711,
														58720
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 128,
													"character": 81
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58724,
					"name": "retrieveExistingTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 139,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58725,
							"name": "retrieveExistingTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an existing transaction"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 139,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58726,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "unique identifier of the transaction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58727,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "function to handle action of the transaction"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 58589,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58728,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58729,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58730,
													"name": "isCancelling",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 140,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58730
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 139,
													"character": 98
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58656,
					"name": "getStepByAction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 142,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58657,
					"name": "getTransactionAndStepFromIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 143,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58731,
					"name": "skipStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 149,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58732,
							"name": "skipStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Skip the execution of a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 149,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58733,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58734,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58735,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 150,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58736,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 151,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58589,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 58737,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 152,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58384,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58735,
														58736,
														58737
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 149,
													"character": 64
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58738,
					"name": "registerStepSuccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 160,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58739,
							"name": "registerStepSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a step success for a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 160,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58740,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58741,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58742,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 161,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58743,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 162,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58589,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 58744,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 163,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58384,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 58745,
													"name": "response",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 164,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 58746,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 165,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58747,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 165,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 58748,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 165,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 58749,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 58384,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58742,
														58743,
														58744,
														58745,
														58746
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 160,
													"character": 93
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58750,
					"name": "registerStepFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 175,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58751,
							"name": "registerStepFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a step failure for a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 175,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58752,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58753,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58754,
													"name": "responseIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 176,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58755,
													"name": "error",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 177,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 58756,
													"name": "handler",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 178,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58589,
														"name": "TransactionStepHandler",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 58757,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 179,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58384,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 58758,
													"name": "onLoad",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
															"line": 180,
															"character": 8
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58759,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																	"line": 180,
																	"character": 17
																}
															],
															"signatures": [
																{
																	"id": 58760,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
																			"line": 180,
																			"character": 17
																		}
																	],
																	"parameters": [
																		{
																			"id": 58761,
																			"name": "transaction",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 58384,
																				"name": "DistributedTransaction",
																				"package": "@medusajs/orchestration"
																			}
																		}
																	],
																	"type": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "void"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		]
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58754,
														58755,
														58756,
														58757,
														58758
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
													"line": 175,
													"character": 90
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58658
					]
				},
				{
					"title": "Properties",
					"children": [
						58666,
						58599,
						58600,
						58667,
						58668,
						58669,
						58670,
						58601,
						58602,
						58606,
						58626,
						58646,
						58671,
						58674,
						58675,
						58676,
						58677,
						58678,
						58679,
						58680,
						58681,
						58682,
						58683,
						58684,
						58650,
						58651,
						58652,
						58653,
						58685,
						58686,
						58687,
						58688,
						58689,
						58690,
						58691,
						58692,
						58693,
						58694,
						58695,
						58702,
						58703,
						58654,
						58655,
						58656,
						58657
					]
				},
				{
					"title": "Methods",
					"children": [
						58603,
						58643,
						58647,
						58672,
						58696,
						58699,
						58704,
						58724,
						58731,
						58738,
						58750
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-orchestrator.d.ts",
					"line": 9,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 58589,
			"name": "TransactionStepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
					"line": 5,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58590,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 5,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 58591,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 58592,
									"name": "actionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58593,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58216,
										"name": "TransactionHandlerType",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 58594,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58962,
										"name": "TransactionPayload",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58595,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransactionType",
										"package": "@medusajs/orchestration",
										"qualifiedName": "DistributedTransaction"
									}
								},
								{
									"id": 58596,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58762,
										"name": "TransactionStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58597,
									"name": "orchestrator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58598,
										"name": "TransactionOrchestrator",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 58762,
			"name": "TransactionStep",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "TransactionStep"
					}
				],
				"blockTags": [
					{
						"tag": "@classdesc",
						"content": [
							{
								"kind": "text",
								"text": "A class representing a single step in a transaction flow"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 58763,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 58764,
							"name": "TransactionStep",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 58762,
								"name": "TransactionStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58765,
					"name": "stepFailed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "id - The id of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "depth - The depth of the step in the flow"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "definition - The definition of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "invoke - The current state and status of the invoke action of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "compensate - The current state and status of the compensate action of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "attempts - The number of attempts made to execute the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "failures - The number of failures encountered while executing the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "lastAttempt - The timestamp of the last attempt made to execute the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "hasScheduledRetry - A flag indicating if a retry has been scheduled"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "retryRescheduledAt - The timestamp of the last retry scheduled"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "next - The ids of the next steps in the flow"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "saveResponse - A flag indicating if the response of a step should be shared in the transaction context and available to subsequent steps - default is true"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 25,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58766,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58767,
					"name": "uuid",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58768,
					"name": "depth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 58769,
					"name": "definition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57777,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58770,
					"name": "invoke",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58771,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58772,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 31,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 58972,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 58773,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 32,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 58983,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58772,
										58773
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 30,
									"character": 12
								}
							]
						}
					}
				},
				{
					"id": 58774,
					"name": "compensate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58775,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58776,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 35,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 58972,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								},
								{
									"id": 58777,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 36,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 58983,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58776,
										58777
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 34,
									"character": 16
								}
							]
						}
					}
				},
				{
					"id": 58778,
					"name": "attempts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 58779,
					"name": "failures",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 58780,
					"name": "lastAttempt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 58781,
					"name": "retryRescheduledAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 58782,
					"name": "hasScheduledRetry",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 58783,
					"name": "timedOutAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 58784,
					"name": "startedAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 58785,
					"name": "next",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 58786,
					"name": "saveResponse",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 46,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 58787,
					"name": "getStates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58788,
							"name": "getStates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58789,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 58790,
											"name": "state",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
													"line": 48,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 58972,
												"name": "TransactionStepState",
												"package": "@medusajs/utils"
											}
										},
										{
											"id": 58791,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
													"line": 49,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 58983,
												"name": "TransactionStepStatus",
												"package": "@medusajs/utils"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												58790,
												58791
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
											"line": 47,
											"character": 17
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 58792,
					"name": "beginCompensation",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 51,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58793,
							"name": "beginCompensation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58794,
					"name": "isCompensating",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58795,
							"name": "isCompensating",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58796,
					"name": "isInvoking",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58797,
							"name": "isInvoking",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 53,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58798,
					"name": "changeState",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 54,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58799,
							"name": "changeState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 54,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58800,
									"name": "toState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58972,
										"name": "TransactionStepState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58801,
					"name": "changeStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 55,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58802,
							"name": "changeStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58803,
									"name": "toStatus",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58983,
										"name": "TransactionStepStatus",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58804,
					"name": "hasRetryScheduled",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 56,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58805,
							"name": "hasRetryScheduled",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 56,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58806,
					"name": "hasRetryInterval",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58807,
							"name": "hasRetryInterval",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 57,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58808,
					"name": "hasTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 58,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58809,
							"name": "hasTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 58,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58810,
					"name": "getTimeout",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 59,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58811,
							"name": "getTimeout",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 59,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				},
				{
					"id": 58812,
					"name": "canRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 60,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58813,
							"name": "canRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58814,
					"name": "hasAwaitingRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58815,
							"name": "hasAwaitingRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 61,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58816,
					"name": "canRetryAwaiting",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 62,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58817,
							"name": "canRetryAwaiting",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58818,
					"name": "canInvoke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58819,
							"name": "canInvoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58820,
									"name": "flowState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58917,
										"name": "TransactionState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58821,
					"name": "canCompensate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 64,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58822,
							"name": "canCompensate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 64,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58823,
									"name": "flowState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58917,
										"name": "TransactionState",
										"package": "@medusajs/utils"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 58824,
					"name": "canCancel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58825,
							"name": "canCancel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
									"line": 65,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58763
					]
				},
				{
					"title": "Properties",
					"children": [
						58765,
						58766,
						58767,
						58768,
						58769,
						58770,
						58774,
						58778,
						58779,
						58780,
						58781,
						58782,
						58783,
						58784,
						58785,
						58786
					]
				},
				{
					"title": "Methods",
					"children": [
						58787,
						58792,
						58794,
						58796,
						58798,
						58801,
						58804,
						58806,
						58808,
						58810,
						58812,
						58814,
						58816,
						58818,
						58821,
						58824
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/transaction-step.d.ts",
					"line": 10,
					"character": 21
				}
			]
		},
		{
			"id": 57777,
			"name": "TransactionStepsDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the structure and behavior of a single step within a transaction workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57778,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57779,
							"name": "uuid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A unique identifier for the transaction step.\nThis is set automatically when declaring a workflow with \"createWorkflow\""
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57780,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specifies the action to be performed in this step.\n\"name\" is an alias for action when creating a workflow with \"createWorkflow\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57781,
							"name": "continueOnPermanentFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the workflow should continue even if there is a permanent failure in this step.\nIn case it is set to true, the the current step will be marked as TransactionStepState.PERMANENT_FAILURE and the next steps will be executed."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57782,
							"name": "skipOnPermanentFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indicates whether the workflow should skip all subsequent steps in case of a permanent failure in this step.\nIn case it is set to true, the next steps of the workflow will not be executed and their status will be marked as TransactionStepState.SKIPPED_FAILURE.\nIn case it is a string, the next steps until the step name provided will be skipped and the workflow will be resumed from the step provided."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 57783,
							"name": "noCompensation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, no compensation action will be triggered for this step in case of a failure."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57784,
							"name": "maxRetries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of times this step should be retried in case of temporary failures.\nThe default is 0 (no retries)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 57785,
							"name": "retryInterval",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The interval (in seconds) between retry attempts after a temporary failure.\nThe default is to retry immediately."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 43,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 57786,
							"name": "retryIntervalAwaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The interval (in seconds) to retry a step even if its status is \"TransactionStepStatus.WAITING\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 57787,
							"name": "timeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum amount of time (in seconds) to wait for this step to complete.\nThis is NOT an execution timeout, the step will always be executed and wait for its response.\nIf the response is not received within the timeout set, it will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted as soon as it receives the response."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 53,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 57788,
							"name": "async",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the step is executed asynchronously. This means that the workflow will not wait for the response of this step.\nAsync steps require to have their responses set using \"setStepSuccess\" or \"setStepFailure\", unless it is combined with \"backgroundExecution: true\".\nIf combined with a timeout, and any response is not set within that interval, the step will be marked as \"TransactionStepStatus.TIMEOUT\" and the workflow will be reverted immediately."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 59,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57789,
							"name": "nested",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "It flags where the step contains a sub transaction inside itself."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57790,
							"name": "backgroundExecution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "It applies to \"async\" steps only, allowing them to run in the background and automatically complete without external intervention.\nIt is ideal for time-consuming tasks that will be complete after the execution, contrasting with standard \"async\" operations that require a response to be set in a later stage."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57791,
							"name": "compensateAsync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the compensation function for this step is executed asynchronously. Which means, the response has to be set using \"setStepSuccess\" or \"setStepFailure\"."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57792,
							"name": "noWait",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the workflow will not wait for their sibling steps to complete before moving to the next step."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 76,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57793,
							"name": "saveResponse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the response of this step will be stored.\nDefault is true."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 81,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57794,
							"name": "next",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the next step(s) to execute after this step. Can be a single step or an array of steps."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 85,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 57777,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 57777,
											"name": "TransactionStepsDefinition",
											"package": "@medusajs/orchestration"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57779,
								57780,
								57781,
								57782,
								57783,
								57784,
								57785,
								57786,
								57787,
								57788,
								57789,
								57790,
								57791,
								57792,
								57793,
								57794
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 8,
							"character": 41
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 58192,
					"name": "InternalStep"
				}
			]
		},
		{
			"id": 57795,
			"name": "TransactionModelOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Defines the options for a transaction model, which are applicable to the entire workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 90,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57796,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57797,
							"name": "timeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The global timeout for the entire transaction workflow (in seconds)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 57798,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the state of the transaction will be persisted.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/store-executions)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 100,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57799,
							"name": "retentionTime",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of seconds that the workflow execution should be stored in the database.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/store-executions)."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 106,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 57800,
							"name": "storeExecution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the execution details of each step will be stored."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "no longer needed."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 111,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57801,
							"name": "idempotent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the workflow will use the transaction ID as the key to ensure only-once execution"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 115,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57802,
							"name": "schedule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the workflow as a scheduled workflow that executes based on the cron configuration passed.\nThe value can either by a cron expression string, or an object that also allows to define the concurrency behavior."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 120,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 58175,
										"name": "SchedulerOptions",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57797,
								57798,
								57799,
								57800,
								57801,
								57802
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 90,
							"character": 38
						}
					]
				}
			}
		},
		{
			"id": 58175,
			"name": "SchedulerOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 122,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 58176,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58177,
									"name": "concurrency",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Setting whether to allow concurrent executions (eg. if the previous execution is still running, should the new one be allowed to run or not)\nBy default concurrent executions are not allowed."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 127,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "allow"
											},
											{
												"type": "literal",
												"value": "forbid"
											}
										]
									}
								},
								{
									"id": 58178,
									"name": "numberOfExecutions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optionally limit the number of executions for the scheduled workflow. If not set, the workflow will run indefinitely."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 131,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58177,
										58178
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 122,
									"character": 31
								}
							]
						}
					},
					{
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 58179,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 58180,
											"name": "cron",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The cron expression to schedule the workflow execution."
													}
												]
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 136,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												58180
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 132,
											"character": 5
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 58181,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 58182,
											"name": "interval",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The interval (in ms) to schedule the workflow execution."
													}
												]
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 141,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												58182
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 137,
											"character": 4
										}
									]
								}
							}
						]
					}
				]
			}
		},
		{
			"id": 58301,
			"name": "DistributedTransactionEvents",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 163,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58302,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58303,
							"name": "onBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 164,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58304,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 164,
											"character": 14
										}
									],
									"signatures": [
										{
											"id": 58305,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58306,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58307,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58308,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 165,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58384,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58308
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 164,
																	"character": 21
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58309,
							"name": "onResume",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 167,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58310,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 167,
											"character": 15
										}
									],
									"signatures": [
										{
											"id": 58311,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58312,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58313,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58314,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 168,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58384,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58314
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 167,
																	"character": 22
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58315,
							"name": "onFinish",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 170,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58316,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 170,
											"character": 15
										}
									],
									"signatures": [
										{
											"id": 58317,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58318,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58319,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58320,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 171,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58384,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																},
																{
																	"id": 58321,
																	"name": "result",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 172,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																},
																{
																	"id": 58322,
																	"name": "errors",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 173,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "unknown"
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58320,
																		58321,
																		58322
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 170,
																	"character": 22
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58323,
							"name": "onTimeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 175,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58324,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 175,
											"character": 16
										}
									],
									"signatures": [
										{
											"id": 58325,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58326,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58327,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58328,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 176,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58384,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58328
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 175,
																	"character": 23
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58329,
							"name": "onStepBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 178,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58330,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 178,
											"character": 18
										}
									],
									"signatures": [
										{
											"id": 58331,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58332,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58333,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58334,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 179,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58762,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58335,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 180,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58384,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58334,
																		58335
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 178,
																	"character": 25
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58336,
							"name": "onStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 182,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58337,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 182,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 58338,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58339,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58340,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58341,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 183,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58762,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58342,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 184,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58384,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58341,
																		58342
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 182,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58343,
							"name": "onStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 186,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58344,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 186,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 58345,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58346,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58347,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58348,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 187,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58762,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58349,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 188,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58384,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58348,
																		58349
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 186,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58350,
							"name": "onStepAwaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 190,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58351,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 190,
											"character": 21
										}
									],
									"signatures": [
										{
											"id": 58352,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58353,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58354,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58355,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 191,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58762,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58356,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 192,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58384,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58355,
																		58356
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 190,
																	"character": 28
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58357,
							"name": "onCompensateBegin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 194,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58358,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 194,
											"character": 24
										}
									],
									"signatures": [
										{
											"id": 58359,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58360,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58361,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58362,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 195,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58384,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58362
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 194,
																	"character": 31
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58363,
							"name": "onCompensateStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 197,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58364,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 197,
											"character": 30
										}
									],
									"signatures": [
										{
											"id": 58365,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58366,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58367,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58368,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 198,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58762,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58369,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 199,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58384,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58368,
																		58369
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 197,
																	"character": 37
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58370,
							"name": "onCompensateStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 201,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58371,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 201,
											"character": 30
										}
									],
									"signatures": [
										{
											"id": 58372,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58373,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58374,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58375,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 202,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58762,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58376,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 203,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58384,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58375,
																		58376
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 201,
																	"character": 37
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 58377,
							"name": "onStepSkipped",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 205,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58378,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 205,
											"character": 20
										}
									],
									"signatures": [
										{
											"id": 58379,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58380,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 58381,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 58382,
																	"name": "step",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 206,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58762,
																		"name": "TransactionStep",
																		"package": "@medusajs/orchestration"
																	}
																},
																{
																	"id": 58383,
																	"name": "transaction",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																			"line": 207,
																			"character": 8
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 58384,
																		"name": "DistributedTransactionType",
																		"package": "@medusajs/orchestration",
																		"qualifiedName": "DistributedTransaction"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		58382,
																		58383
																	]
																}
															],
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
																	"line": 205,
																	"character": 27
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58303,
								58309,
								58315,
								58323,
								58329,
								58336,
								58343,
								58350,
								58357,
								58363,
								58370,
								58377
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 163,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 58989,
			"name": "StepFeatures",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 210,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58990,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58991,
							"name": "hasAsyncSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 211,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58992,
							"name": "hasStepTimeouts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 212,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58993,
							"name": "hasRetriesTimeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 213,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58991,
								58992,
								58993
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 210,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 58971,
			"name": "TransactionOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 215,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 57795,
						"name": "TransactionModelOptions",
						"package": "@medusajs/orchestration"
					},
					{
						"type": "reference",
						"target": 58989,
						"name": "StepFeatures",
						"package": "@medusajs/orchestration"
					}
				]
			}
		},
		{
			"id": 58878,
			"name": "TransactionFlow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
					"line": 216,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58879,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58880,
							"name": "modelId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 217,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58881,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 218,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57795,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58882,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 219,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57777,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58883,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 220,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58884,
							"name": "runId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 221,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58885,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 222,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58886,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 58887,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 223,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 58888,
											"name": "parentIdempotencyKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 224,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 58889,
											"name": "sourcePath",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 225,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 58890,
											"name": "preventReleaseEvents",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 226,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 58891,
											"name": "parentStepIdempotencyKey",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 227,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												58887,
												58888,
												58889,
												58890,
												58891
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 222,
											"character": 15
										}
									],
									"indexSignatures": [
										{
											"id": 58892,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 228,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 58893,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 58894,
							"name": "hasAsyncSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 230,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58895,
							"name": "hasFailedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 231,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58896,
							"name": "hasSkippedOnFailureSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 232,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58897,
							"name": "hasWaitingSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 233,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58898,
							"name": "hasSkippedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 234,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58899,
							"name": "hasRevertedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 235,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58900,
							"name": "timedOutAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 236,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 58901,
							"name": "startedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 237,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 58902,
							"name": "cancelledAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 238,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 58903,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 239,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58917,
								"name": "TransactionState",
								"package": "@medusajs/utils"
							}
						},
						{
							"id": 58904,
							"name": "steps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
									"line": 240,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58905,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
											"line": 240,
											"character": 11
										}
									],
									"indexSignatures": [
										{
											"id": 58906,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 241,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 58907,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 58762,
												"name": "TransactionStep",
												"package": "@medusajs/orchestration"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58880,
								58881,
								58882,
								58883,
								58884,
								58885,
								58894,
								58895,
								58896,
								58897,
								58898,
								58899,
								58900,
								58901,
								58902,
								58903,
								58904
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
							"line": 216,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 58297,
			"name": "StepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
					"line": 5,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58298,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58299,
							"name": "invoke",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58211,
								"name": "WorkflowStepHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58300,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58211,
								"name": "WorkflowStepHandler",
								"package": "@medusajs/orchestration"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58299,
								58300
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 5,
							"character": 19
						}
					]
				}
			}
		},
		{
			"id": 58014,
			"name": "LocalWorkflow",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 58022,
					"name": "container_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 10,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 57925,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 58023,
					"name": "workflowId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 11,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58024,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 12,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 57832,
						"name": "OrchestratorBuilder",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58025,
					"name": "customOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 13,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 57795,
								"name": "TransactionModelOptions",
								"package": "@medusajs/orchestration"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 58026,
					"name": "workflow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 14,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 58281,
						"name": "WorkflowDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58027,
					"name": "handlers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 15,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 58297,
								"name": "StepHandler",
								"package": "@medusajs/orchestration"
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 58028,
					"name": "medusaContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 16,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 57954,
						"name": "Context",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 58029,
					"name": "container",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 17,
							"character": 8
						},
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 18,
							"character": 8
						}
					],
					"getSignature": {
						"id": 58030,
						"name": "container",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
								"line": 17,
								"character": 8
							}
						],
						"type": {
							"type": "reference",
							"target": 57925,
							"name": "MedusaContainer",
							"package": "@medusajs/types"
						}
					},
					"setSignature": {
						"id": 58031,
						"name": "container",
						"variant": "signature",
						"kind": 1048576,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
								"line": 18,
								"character": 8
							}
						],
						"parameters": [
							{
								"id": 58032,
								"name": "modulesLoaded",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 57925,
											"name": "MedusaContainer",
											"package": "@medusajs/types"
										},
										{
											"type": "array",
											"elementType": {
												"type": "reflection",
												"declaration": {
													"id": 58033,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 58034,
															"name": "__joinerConfig",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																	"line": 90,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"target": 57978,
																"name": "ModuleJoinerConfig",
																"package": "@medusajs/types"
															}
														},
														{
															"id": 58035,
															"name": "__definition",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																	"line": 91,
																	"character": 4
																}
															],
															"type": {
																"type": "reference",
																"target": 58003,
																"name": "ModuleDefinition",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																58034,
																58035
															]
														}
													],
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 89,
															"character": 37
														}
													]
												}
											}
										}
									]
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "void"
						}
					}
				},
				{
					"id": 58015,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58016,
							"name": "LocalWorkflow",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58017,
									"name": "workflowId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58018,
									"name": "modulesLoaded",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 57925,
												"name": "MedusaContainer",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 58019,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 58020,
																"name": "__joinerConfig",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																		"line": 90,
																		"character": 4
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 57978,
																	"name": "ModuleJoinerConfig",
																	"package": "@medusajs/types"
																}
															},
															{
																"id": 58021,
																"name": "__definition",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																		"line": 91,
																		"character": 4
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 58003,
																	"name": "ModuleDefinition",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	58020,
																	58021
																]
															}
														],
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 89,
																"character": 37
															}
														]
													}
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 58014,
								"name": "LocalWorkflow",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58036,
					"name": "resolveContainer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 20,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58037,
					"name": "contextualizedMedusaModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58038,
					"name": "commit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 22,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 58039,
							"name": "commit",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 22,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58040,
					"name": "getFlow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58041,
							"name": "getFlow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57777,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58042,
					"name": "registerEventCallbacks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 24,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 58043,
					"name": "run",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58044,
							"name": "run",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58045,
									"name": "uniqueTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58046,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 58047,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57954,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 58048,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58301,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58049,
									"name": "flowMetadata",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58050,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58051,
													"name": "eventGroupId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 223,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58052,
													"name": "parentIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 224,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58053,
													"name": "sourcePath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 225,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58054,
													"name": "preventReleaseEvents",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 226,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 58055,
													"name": "parentStepIdempotencyKey",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 227,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58051,
														58052,
														58053,
														58054,
														58055
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
													"line": 222,
													"character": 15
												}
											],
											"indexSignatures": [
												{
													"id": 58056,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/transaction/types.d.ts",
															"line": 228,
															"character": 8
														}
													],
													"parameters": [
														{
															"id": 58057,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58058,
					"name": "getRunningTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58059,
							"name": "getRunningTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58060,
									"name": "uniqueTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58061,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57954,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58062,
					"name": "cancel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58063,
							"name": "cancel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58064,
									"name": "transactionOrTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 58384,
												"name": "DistributedTransaction",
												"package": "@medusajs/orchestration"
											}
										]
									}
								},
								{
									"id": 58065,
									"name": "_",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 58066,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57954,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 58067,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58301,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58068,
					"name": "registerStepSuccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58069,
							"name": "registerStepSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58070,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58071,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 58072,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57954,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 58073,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58301,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58074,
					"name": "registerStepFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58075,
							"name": "registerStepFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58076,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58077,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 58078,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 57954,
										"name": "Context",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 58079,
									"name": "subscribe",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58301,
										"name": "DistributedTransactionEvents",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 58384,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58080,
					"name": "setOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58081,
							"name": "setOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 31,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58082,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 57795,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 58083,
					"name": "addAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58084,
							"name": "addAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58085,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58086,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58297,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58087,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 57777,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58088,
					"name": "replaceAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58089,
							"name": "replaceAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58090,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58091,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58092,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58297,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58093,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 57777,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58094,
					"name": "insertActionBefore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58095,
							"name": "insertActionBefore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 34,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58096,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58097,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58098,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58297,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58099,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 57777,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58100,
					"name": "insertActionAfter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58101,
							"name": "insertActionAfter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 35,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58102,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58103,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58104,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58297,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58105,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 57777,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58106,
					"name": "appendAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58107,
							"name": "appendAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 36,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58108,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58109,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58110,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58297,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58111,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 57777,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58112,
					"name": "moveAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58113,
							"name": "moveAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58114,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58115,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58116,
					"name": "moveAndMergeNextAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58117,
							"name": "moveAndMergeNextAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58118,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58119,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58120,
					"name": "mergeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58121,
							"name": "mergeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 39,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58122,
									"name": "where",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58123,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58124,
					"name": "deleteAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58125,
							"name": "deleteAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 40,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58126,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58127,
									"name": "parentSteps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58128,
					"name": "pruneAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58129,
							"name": "pruneAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58130,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 58131,
					"name": "assertHandler",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 42,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 58132,
							"name": "assertHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
									"line": 42,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 58133,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58297,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 58134,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58135,
					"name": "onLoad",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
							"line": 43,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						58015
					]
				},
				{
					"title": "Properties",
					"children": [
						58022,
						58023,
						58024,
						58025,
						58026,
						58027,
						58028,
						58036,
						58037,
						58042,
						58135
					]
				},
				{
					"title": "Accessors",
					"children": [
						58029
					]
				},
				{
					"title": "Methods",
					"children": [
						58038,
						58040,
						58043,
						58058,
						58062,
						58068,
						58074,
						58080,
						58083,
						58088,
						58094,
						58100,
						58106,
						58112,
						58116,
						58120,
						58124,
						58128,
						58131
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/local-workflow.d.ts",
					"line": 9,
					"character": 21
				}
			]
		},
		{
			"id": 58281,
			"name": "WorkflowDefinition",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 58282,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58283,
					"name": "handler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58284,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 58285,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 5,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 58286,
											"name": "container",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 57925,
												"name": "MedusaContainer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 58287,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 57954,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 58589,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								}
							]
						}
					}
				},
				{
					"id": 58288,
					"name": "orchestrator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58598,
						"name": "TransactionOrchestrator",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58289,
					"name": "flow_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57777,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58290,
					"name": "handlers_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 58291,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 58292,
											"name": "invoke",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 9,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 58211,
												"name": "WorkflowStepHandler",
												"package": "@medusajs/orchestration"
											}
										},
										{
											"id": 58293,
											"name": "compensate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 10,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 58211,
												"name": "WorkflowStepHandler",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												58292,
												58293
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 8,
											"character": 27
										}
									]
								}
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 58294,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57795,
						"name": "TransactionModelOptions",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 58295,
					"name": "requiredModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				},
				{
					"id": 58296,
					"name": "optionalModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58282,
						58283,
						58288,
						58289,
						58290,
						58294,
						58295,
						58296
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 57921,
			"name": "WorkflowHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 16,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
					"qualifiedName": "Map"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57922,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57923,
									"name": "invoke",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 17,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 58211,
										"name": "WorkflowStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 57924,
									"name": "compensate",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 18,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 58211,
										"name": "WorkflowStepHandler",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57923,
										57924
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 16,
									"character": 42
								}
							]
						}
					}
				],
				"name": "Map",
				"package": "typescript"
			}
		},
		{
			"id": 58512,
			"name": "WorkflowStepHandlerArguments",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 20,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58513,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58514,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57925,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 58515,
							"name": "payload",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						},
						{
							"id": 58516,
							"name": "invoke",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58517,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 23,
											"character": 12
										}
									],
									"indexSignatures": [
										{
											"id": 58518,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 24,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 58519,
													"name": "actions",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 58520,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58521,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 26,
											"character": 16
										}
									],
									"indexSignatures": [
										{
											"id": 58522,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 27,
													"character": 8
												}
											],
											"parameters": [
												{
													"id": 58523,
													"name": "actions",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									]
								}
							}
						},
						{
							"id": 58524,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57946,
								"name": "TransactionMetadata",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58525,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58384,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 58526,
							"name": "step",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 31,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58762,
								"name": "TransactionStep",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58527,
							"name": "orchestrator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58598,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58528,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57954,
								"name": "Context",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58514,
								58515,
								58516,
								58520,
								58524,
								58525,
								58526,
								58527,
								58528
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 20,
							"character": 43
						}
					]
				}
			}
		},
		{
			"id": 58211,
			"name": "WorkflowStepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 35,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58212,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 35,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 58213,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 58214,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58512,
										"name": "WorkflowStepHandlerArguments",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 58215,
			"name": "ModuleImplementations",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The following interface acts as a bucket that other modules or the\nutils package can fill using declaration merging"
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 57925,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
					"line": 12,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57945,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": 58215,
						"name": "ModuleImplementations",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57926,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57927,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 13,
											"character": 4
										},
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 14,
											"character": 4
										}
									],
									"signatures": [
										{
											"id": 57928,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 13,
													"character": 4
												}
											],
											"typeParameters": [
												{
													"id": 57929,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 57930,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 57929,
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 57931,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 57929,
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 57945,
													"name": "Cradle",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 57932,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 14,
													"character": 4
												}
											],
											"typeParameters": [
												{
													"id": 57933,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 57934,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57935,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 57933,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								},
								{
									"id": 57936,
									"name": "registerAdd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 18,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57937,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 18,
													"character": 17
												}
											],
											"signatures": [
												{
													"id": 57938,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 57941,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 57939,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 57940,
															"name": "registration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 57941,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 57925,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								},
								{
									"id": 57942,
									"name": "createScope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
											"line": 22,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57943,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
													"line": 22,
													"character": 17
												}
											],
											"signatures": [
												{
													"id": 57944,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 57925,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57936,
										57942
									]
								},
								{
									"title": "Methods",
									"children": [
										57927
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/common/medusa-container.d.ts",
									"line": 12,
									"character": 112
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58994,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 13,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58995,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58996,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the event's group. Grouped events are useful when you have distributed transactions\nwhere you need to explicitly group, release and clear events upon lifecycle events of a transaction.\n\nWhen set, you must release the grouped events using the Event Module's "
											},
											{
												"kind": "code",
												"text": "`releaseGroupedEvents`"
											},
											{
												"kind": "text",
												"text": " method to emit the events."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
											"line": 20,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58996
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 13,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58937,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 22,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58942,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58938,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58939,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event's name."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nuser.created\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58940,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional meadata to pass with the event."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58994,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 58941,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data payload that subscribers receive. For example, the ID or IDs of the created user. (e.g. { id: \"123\" } or { ids: [\"123\", \"456\"] })"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58942,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58939,
								58940,
								58941
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
							"line": 22,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 58529,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of an event to emit."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 42,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58532,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 58937,
						"typeArguments": [
							{
								"type": "reference",
								"target": 58532,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58530,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58531,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
											"line": 43,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58531
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 42,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58540,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
					"line": 45,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58549,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58541,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58542,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 46,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58543,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58549,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 58544,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 48,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58545,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58546,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 50,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58547,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 57954,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 58548,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
									"line": 52,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58542,
								58543,
								58544,
								58545,
								58546,
								58547,
								58548
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/event-bus/common.d.ts",
							"line": 45,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 58555,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58556,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58557,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 2,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58558,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58559,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58560,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58561,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58562,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58563,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58564,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58557,
								58558,
								58559,
								58560,
								58561,
								58562,
								58563,
								58564
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 1,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 58550,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 58551,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 58552,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58553,
					"name": "filterable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 58554,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58551,
						58552,
						58553,
						58554
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 20,
					"character": 17
				}
			]
		},
		{
			"id": 58233,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 58234,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 58235,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 58550,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 58550,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 58236,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 58237,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58238,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
															"line": 39,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58239,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
															"line": 40,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58238,
														58239
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
													"line": 38,
													"character": 41
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 58240,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 58241,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 58555,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 58242,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 58243,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 58244,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 45,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 58245,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 46,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 58246,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
												"line": 47,
												"character": 8
											}
										],
										"type": {
											"type": "reference",
											"target": 58555,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											58244,
											58245,
											58246
										]
									}
								],
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
										"line": 44,
										"character": 14
									}
								]
							}
						}
					}
				},
				{
					"id": 58247,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
							"line": 52,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58234,
						58235,
						58236,
						58240,
						58241,
						58242,
						58247
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/joiner/index.d.ts",
					"line": 29,
					"character": 17
				}
			]
		},
		{
			"id": 58997,
			"name": "Logger",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 58998,
					"name": "panic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58999,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 2,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 59000,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 2,
											"character": 11
										}
									],
									"parameters": [
										{
											"id": 59001,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59002,
					"name": "shouldLog",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59003,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 3,
									"character": 15
								}
							],
							"signatures": [
								{
									"id": 59004,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 3,
											"character": 15
										}
									],
									"parameters": [
										{
											"id": 59005,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 59006,
					"name": "setLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59007,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 4,
									"character": 17
								}
							],
							"signatures": [
								{
									"id": 59008,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 4,
											"character": 17
										}
									],
									"parameters": [
										{
											"id": 59009,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59010,
					"name": "unsetLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59011,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 5,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 59012,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 5,
											"character": 19
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59013,
					"name": "activity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59014,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 6,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 59015,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 6,
											"character": 14
										}
									],
									"parameters": [
										{
											"id": 59016,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59017,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 59018,
					"name": "progress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59019,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 7,
									"character": 14
								}
							],
							"signatures": [
								{
									"id": 59020,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 7,
											"character": 14
										}
									],
									"parameters": [
										{
											"id": 59021,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59022,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59023,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59024,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 8,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 59025,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 8,
											"character": 11
										}
									],
									"parameters": [
										{
											"id": 59026,
											"name": "messageOrError",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 59027,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59028,
					"name": "failure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59029,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 9,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 59030,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 9,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 59031,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59032,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 59033,
					"name": "success",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59034,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 10,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 59035,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 10,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 59036,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 59037,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 59038,
					"name": "debug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59039,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 11,
									"character": 11
								}
							],
							"signatures": [
								{
									"id": 59040,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 11,
											"character": 11
										}
									],
									"parameters": [
										{
											"id": 59041,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59042,
					"name": "info",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59043,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 12,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 59044,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 12,
											"character": 10
										}
									],
									"parameters": [
										{
											"id": 59045,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59046,
					"name": "warn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59047,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 13,
									"character": 10
								}
							],
							"signatures": [
								{
									"id": 59048,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 13,
											"character": 10
										}
									],
									"parameters": [
										{
											"id": 59049,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 59050,
					"name": "log",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 59051,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
									"line": 14,
									"character": 9
								}
							],
							"signatures": [
								{
									"id": 59052,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
											"line": 14,
											"character": 9
										}
									],
									"parameters": [
										{
											"id": 59053,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58998,
						59002,
						59006,
						59010,
						59013,
						59018,
						59023,
						59028,
						59033,
						59038,
						59042,
						59046,
						59050
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/logger/index.d.ts",
					"line": 1,
					"character": 17
				}
			]
		},
		{
			"id": 58955,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 8,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58961,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58956,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 8,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 58957,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 58960,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 58961,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 58958,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 8,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 58959,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 58961,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 58565,
			"name": "CustomModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58566,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58567,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58568,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58569,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58570,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58567,
								58568,
								58569,
								58570
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 17,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 58259,
			"name": "InternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 23,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58260,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58261,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"type": {
								"type": "literal",
								"value": "internal"
							}
						},
						{
							"id": 58262,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 58263,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58565,
								"name": "CustomModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 58264,
							"name": "resolve",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 58571,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 58265,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 28,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 58266,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 32,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58267,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 36,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58268,
							"name": "worker_mode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 37,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58261,
								58262,
								58263,
								58264,
								58265,
								58266,
								58267,
								58268
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 23,
							"character": 40
						}
					]
				}
			}
		},
		{
			"id": 58269,
			"name": "ExternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 39,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58270,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58271,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 40,
									"character": 4
								}
							],
							"type": {
								"type": "literal",
								"value": "external"
							}
						},
						{
							"id": 58272,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58565,
								"name": "CustomModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 58273,
							"name": "server",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58274,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 58275,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 43,
													"character": 8
												}
											],
											"type": {
												"type": "literal",
												"value": "http"
											}
										},
										{
											"id": 58276,
											"name": "url",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 44,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 58277,
											"name": "keepAlive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 45,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												58275,
												58276,
												58277
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 42,
											"character": 13
										}
									]
								}
							}
						},
						{
							"id": 58278,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 58279,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58280,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 55,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58271,
								58272,
								58273,
								58278,
								58279,
								58280
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 39,
							"character": 40
						}
					]
				}
			}
		},
		{
			"id": 58003,
			"name": "ModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 65,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58004,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58005,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 66,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58006,
							"name": "defaultPackage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 67,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 58007,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 68,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58008,
							"name": "resolvePath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 69,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58009,
							"name": "isRequired",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 70,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58010,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 71,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58011,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 58012,
							"name": "__passSharedContainer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "only used in exceptional cases - relying on the shared contrainer breaks encapsulation"
									}
								],
								"modifierTags": [
									"@internal"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58013,
							"name": "defaultModuleDeclaration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 58259,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 58269,
										"name": "ExternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58005,
								58006,
								58007,
								58008,
								58009,
								58010,
								58011,
								58012,
								58013
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 65,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 58933,
			"name": "LoadedModule",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 89,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "intrinsic",
						"name": "unknown"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58934,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58935,
									"name": "__joinerConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 90,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 57978,
										"name": "ModuleJoinerConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 58936,
									"name": "__definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 91,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 58003,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58935,
										58936
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 89,
									"character": 37
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58948,
			"name": "LoaderOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 93,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58954,
					"name": "TOptions",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58949,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58950,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 94,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 57925,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 58951,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 95,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58954,
								"name": "TOptions",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 58952,
							"name": "logger",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 96,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58997,
								"name": "Logger",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 58953,
							"name": "dataLoaderOnly",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 97,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58950,
								58951,
								58952,
								58953
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 93,
							"character": 64
						}
					]
				}
			}
		},
		{
			"id": 58943,
			"name": "ModuleLoaderFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 99,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58944,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 99,
							"character": 35
						}
					],
					"signatures": [
						{
							"id": 58945,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 58946,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58948,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "LoaderOptions",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 58947,
									"name": "moduleDeclaration",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58259,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 58253,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 104,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58254,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58255,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 105,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 58256,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 106,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58257,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 107,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 58258,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 111,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58255,
										58256,
										58257,
										58258
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 104,
									"character": 52
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 57978,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 125,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 58233,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57979,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57980,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 129,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57981,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 130,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 58248,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 57982,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 131,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 57983,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 57984,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 132,
																"character": 8
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 57985,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 133,
																"character": 8
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 57986,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 134,
																"character": 8
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 57987,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 57988,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 135,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 57989,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 136,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 57990,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																								"line": 137,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							57988,
																							57989,
																							57990
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																						"line": 134,
																						"character": 45
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 57991,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
																"line": 139,
																"character": 8
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Omit"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 58248,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																},
																{
																	"type": "literal",
																	"value": "hasMany"
																}
															],
															"name": "Omit",
															"package": "typescript"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															57984,
															57985,
															57986,
															57991
														]
													}
												],
												"sources": [
													{
														"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
														"line": 131,
														"character": 14
													}
												]
											}
										}
									}
								},
								{
									"id": 57992,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 141,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57993,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 142,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 57994,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 146,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 57995,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 150,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 57996,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 154,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 57997,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 159,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 57998,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 160,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57999,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 58000,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 164,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58001,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 168,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 58002,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
															"line": 169,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": 58253,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														58000,
														58001,
														58002
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
													"line": 160,
													"character": 21
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57980,
										57981,
										57982,
										57992,
										57993,
										57994,
										57995,
										57996,
										57997,
										57998
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 125,
									"character": 122
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58248,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 172,
					"character": 20
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 58555,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58249,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58250,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 176,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 58251,
									"name": "filterable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fields to be filterable by the Index module using query.index"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 180,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 58252,
									"name": "hasMany",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allow multiple relationships to exist for this\nentity"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 185,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58250,
										58251,
										58252
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 172,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58571,
			"name": "ModuleExports",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
					"line": 187,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58588,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": 58955,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Constructor",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58572,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58573,
							"name": "service",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 188,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 58588,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 58574,
							"name": "loaders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 189,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 58943,
									"name": "ModuleLoaderFunction",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 58575,
							"name": "runMigrations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 190,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 58576,
									"name": "runMigrations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 190,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 58577,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 58948,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 58578,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 58259,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 58579,
							"name": "revertMigration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 191,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 58580,
									"name": "revertMigration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 191,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 58581,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 58948,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 58582,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 58259,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 58583,
							"name": "generateMigration",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 192,
									"character": 4
								}
							],
							"signatures": [
								{
									"id": 58584,
									"name": "generateMigration",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
											"line": 192,
											"character": 4
										}
									],
									"parameters": [
										{
											"id": 58585,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 58948,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 58586,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 58259,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 58587,
							"name": "discoveryPath",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Explicitly set the the true location of the module resources.\nCan be used to re-export the module from a different location and specify its original location."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
									"line": 197,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58573,
								58574,
								58587
							]
						},
						{
							"title": "Methods",
							"children": [
								58575,
								58579,
								58583
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/modules-sdk/index.d.ts",
							"line": 187,
							"character": 50
						}
					]
				}
			}
		},
		{
			"id": 58533,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 58534,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 58535,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 58536,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"indexSignatures": [
								{
									"id": 58537,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
											"line": 6,
											"character": 8
										}
									],
									"parameters": [
										{
											"id": 58538,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 58539,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						58534,
						58535,
						58539
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 58219,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 58220,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58221,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58222,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 58529,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 58529,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58223,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58224,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 58225,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 58533,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 58529,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 58226,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58227,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 58228,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 58229,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"typeParameters": [
								{
									"id": 58230,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 58231,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 58540,
												"typeArguments": [
													{
														"type": "reference",
														"target": 58230,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 58540,
													"typeArguments": [
														{
															"type": "reference",
															"target": 58230,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 58232,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						58220,
						58223,
						58226,
						58228
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 57954,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 57955,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 57956,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57968,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 57957,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 57968,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 57958,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57959,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 41,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 57960,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57961,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57962,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 58219,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 57963,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 57,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57964,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 61,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57965,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57966,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "preventReleaseEvents"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 69,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 57967,
					"name": "isCancelling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether the current workflow execution is being cancelled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						57955,
						57956,
						57957,
						57958,
						57959,
						57960,
						57961,
						57962,
						57963,
						57964,
						57965,
						57966,
						57967
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/dist/shared-context.d.ts",
					"line": 24,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 57968,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 57814,
			"name": "SymbolWorkflowHook",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/symbol.d.ts",
					"line": 5,
					"character": 21
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 58216,
			"name": "TransactionHandlerType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 58217,
					"name": "INVOKE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoke"
					}
				},
				{
					"id": 58218,
					"name": "COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensate"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						58217,
						58218
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 1,
					"character": 20
				}
			]
		},
		{
			"id": 58917,
			"name": "TransactionState",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 58918,
					"name": "NOT_STARTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "not_started"
					}
				},
				{
					"id": 58919,
					"name": "INVOKING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoking"
					}
				},
				{
					"id": 58920,
					"name": "WAITING_TO_COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "waiting_to_compensate"
					}
				},
				{
					"id": 58921,
					"name": "COMPENSATING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensating"
					}
				},
				{
					"id": 58922,
					"name": "DONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "done"
					}
				},
				{
					"id": 58923,
					"name": "REVERTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "reverted"
					}
				},
				{
					"id": 58924,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "failed"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						58918,
						58919,
						58920,
						58921,
						58922,
						58923,
						58924
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 5,
					"character": 20
				}
			]
		},
		{
			"id": 58972,
			"name": "TransactionStepState",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 58973,
					"name": "NOT_STARTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "not_started"
					}
				},
				{
					"id": 58974,
					"name": "INVOKING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoking"
					}
				},
				{
					"id": 58975,
					"name": "COMPENSATING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensating"
					}
				},
				{
					"id": 58976,
					"name": "DONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "done"
					}
				},
				{
					"id": 58977,
					"name": "REVERTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "reverted"
					}
				},
				{
					"id": 58978,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "failed"
					}
				},
				{
					"id": 58979,
					"name": "DORMANT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "dormant"
					}
				},
				{
					"id": 58980,
					"name": "SKIPPED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "skipped"
					}
				},
				{
					"id": 58981,
					"name": "SKIPPED_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "skipped_failure"
					}
				},
				{
					"id": 58982,
					"name": "TIMEOUT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "timeout"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						58973,
						58974,
						58975,
						58976,
						58977,
						58978,
						58979,
						58980,
						58981,
						58982
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 14,
					"character": 20
				}
			]
		},
		{
			"id": 58983,
			"name": "TransactionStepStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 58984,
					"name": "IDLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "idle"
					}
				},
				{
					"id": 58985,
					"name": "OK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ok"
					}
				},
				{
					"id": 58986,
					"name": "WAITING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "waiting_response"
					}
				},
				{
					"id": 58987,
					"name": "TEMPORARY_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "temp_failure"
					}
				},
				{
					"id": 58988,
					"name": "PERMANENT_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "permanent_failure"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						58984,
						58985,
						58986,
						58987,
						58988
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/utils/dist/orchestration/types.d.ts",
					"line": 26,
					"character": 20
				}
			]
		},
		{
			"id": 58925,
			"name": "BaseFlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 9,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58926,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58927,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 57954,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 58928,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 11,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 58929,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 12,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58930,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58931,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 58301,
								"name": "DistributedTransactionEvents",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58932,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 15,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 58933,
											"name": "LoadedModule",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 57925,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58927,
								58928,
								58929,
								58930,
								58931,
								58932
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 9,
							"character": 26
						}
					]
				}
			}
		},
		{
			"id": 58482,
			"name": "FlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 18,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58485,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 58925,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58483,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58484,
									"name": "input",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 19,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": 58485,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58484
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 18,
									"character": 67
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58486,
			"name": "FlowRegisterStepSuccessOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 22,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58490,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 58925,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58487,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58488,
									"name": "idempotencyKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 24,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58489,
									"name": "response",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 25,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 58490,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58488,
										58489
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 23,
									"character": 23
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58491,
			"name": "FlowRegisterStepFailureOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 28,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58495,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 58925,
						"name": "BaseFlowRunOptions",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 58492,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 58493,
									"name": "idempotencyKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 30,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 58494,
									"name": "response",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 31,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 58495,
										"name": "TData",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										58493,
										58494
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 29,
									"character": 23
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 58496,
			"name": "FlowCancelOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 34,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58497,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58498,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 35,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 58384,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 58499,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 36,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 58500,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 37,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 57954,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 58501,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58502,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 39,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 58503,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 40,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 58301,
								"name": "DistributedTransactionEvents",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 58504,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 41,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 58933,
											"name": "LoadedModule",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 57925,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58498,
								58499,
								58500,
								58501,
								58502,
								58503,
								58504
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 34,
							"character": 32
						}
					]
				}
			}
		},
		{
			"id": 58476,
			"name": "WorkflowResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a workflow's execution."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 47,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58481,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58477,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58478,
							"name": "errors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Any errors that occured in the workflow."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 51,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 58908,
									"name": "TransactionStepError",
									"package": "@medusajs/orchestration"
								}
							}
						},
						{
							"id": 58479,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transaction details of the workflow's execution."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 58384,
								"name": "DistributedTransactionType",
								"package": "@medusajs/orchestration",
								"qualifiedName": "DistributedTransaction"
							}
						},
						{
							"id": 58480,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The result returned by the workflow."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 58481,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58478,
								58479,
								58480
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 47,
							"character": 48
						}
					]
				}
			}
		},
		{
			"id": 58136,
			"name": "ExportedWorkflow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
					"line": 62,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 58154,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 58155,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 58156,
					"name": "TDataOverride",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				},
				{
					"id": 58157,
					"name": "TResultOverride",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "undefined"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58137,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 58138,
							"name": "run",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58139,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 68,
											"character": 7
										}
									],
									"signatures": [
										{
											"id": 58140,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58141,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 58482,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 58156,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 58154,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 58156,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRunOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 58476,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 58157,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 58155,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 58157,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 58142,
							"name": "registerStepSuccess",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58143,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 77,
											"character": 23
										}
									],
									"signatures": [
										{
											"id": 58144,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58145,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 58486,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 58156,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 58154,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 58156,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRegisterStepSuccessOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 58476,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 58157,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 58155,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 58157,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 58146,
							"name": "registerStepFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 86,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58147,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 86,
											"character": 23
										}
									],
									"signatures": [
										{
											"id": 58148,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58149,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 58491,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 58156,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 58154,
																	"name": "TData",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 58156,
																	"name": "TDataOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "FlowRegisterStepFailureOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 58476,
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 58157,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 58155,
																	"name": "TResult",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 58157,
																	"name": "TResultOverride",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						},
						{
							"id": 58150,
							"name": "cancel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
									"line": 95,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 58151,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
											"line": 95,
											"character": 10
										}
									],
									"signatures": [
										{
											"id": 58152,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 58153,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 58496,
														"name": "FlowCancelOptions",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 58476,
														"name": "WorkflowResult",
														"package": "@medusajs/workflows-sdk"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								58138,
								58142,
								58146,
								58150
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/helper/type.ts",
							"line": 67,
							"character": 4
						}
					]
				}
			}
		},
		{
			"id": 57535,
			"name": "Hook",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Representation of a hook definition."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
					"line": 13,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L13"
				}
			],
			"typeParameters": [
				{
					"id": 57543,
					"name": "Name",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57544,
					"name": "Input",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 57545,
					"name": "Output",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57536,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57537,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L14"
								}
							],
							"type": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"target": 57814,
									"name": "OrchestrationUtils.SymbolWorkflowHook",
									"package": "@medusajs/utils",
									"qualifiedName": "SymbolWorkflowHook"
								}
							}
						},
						{
							"id": 57538,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L15"
								}
							],
							"type": {
								"type": "reference",
								"target": 57543,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 57539,
							"name": "getResult",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L20"
								}
							],
							"signatures": [
								{
									"id": 57540,
									"name": "getResult",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Returns the result of the hook"
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
											"line": 20,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L20"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 57545,
												"name": "Output",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										]
									}
								}
							]
						},
						{
							"id": 57541,
							"name": " output",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By prefixing a key with a space, we remove it from the\nintellisense of TypeScript. This is needed because\ninput is not set at runtime. It is a type-only\nproperty to infer input data type of a hook"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L28"
								}
							],
							"type": {
								"type": "reference",
								"target": 57545,
								"name": "Output",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 57542,
							"name": " input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L29"
								}
							],
							"type": {
								"type": "reference",
								"target": 57544,
								"name": "Input",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57537,
								57538,
								57541,
								57542
							]
						},
						{
							"title": "Methods",
							"children": [
								57539
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
							"line": 13,
							"character": 55,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L13"
						}
					]
				}
			}
		},
		{
			"id": 57525,
			"name": "createHook",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
					"line": 67,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L67"
				}
			],
			"signatures": [
				{
					"id": 57526,
					"name": "createHook",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Expose a hook in your workflow where you can inject custom functionality as a step function.\n\nA handler hook can later be registered to consume the hook and perform custom functionality.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/workflow-hooks)."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A workflow hook."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createStep,\n  createHook,\n  createWorkflow,\n  WorkflowResponse,\n} from \"@medusajs/framework/workflows-sdk\"\nimport { createProductStep } from \"./steps/create-product\"\n\nexport const myWorkflow = createWorkflow(\n  \"my-workflow\",\n  function (input) {\n    const product = createProductStep(input)\n    const productCreatedHook = createHook(\n      \"productCreated\",\n      { productId: product.id }\n    )\n\n    return new WorkflowResponse(product, {\n      hooks: [productCreatedHook],\n    })\n  }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
							"line": 67,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L67"
						}
					],
					"typeParameters": [
						{
							"id": 57527,
							"name": "Name",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57528,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 57529,
							"name": "TInvokeOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 57530,
							"name": "name",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The hook's name. This is used when the hook handler is registered to consume the workflow."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 57527,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 57531,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The input to pass to the hook handler."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 57528,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 57532,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57533,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 57534,
											"name": "resultValidator",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
													"line": 71,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L71"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodType"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 57529,
														"name": "TInvokeOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
															"qualifiedName": "ZodTypeDef"
														},
														"name": "ZodTypeDef",
														"package": "zod"
													},
													{
														"type": "reference",
														"target": 57529,
														"name": "TInvokeOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ZodType",
												"package": "zod"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												57534
											]
										}
									],
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-hook.ts",
											"line": 70,
											"character": 11,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-hook.ts#L70"
										}
									]
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": 57535,
						"typeArguments": [
							{
								"type": "reference",
								"target": 57527,
								"name": "Name",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 57528,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 57529,
								"name": "TInvokeOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "Hook",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 57436,
			"name": "InvokeFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of invocation function passed to a step."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 29,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L29"
				}
			],
			"typeParameters": [
				{
					"id": 57441,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the function expects."
							}
						]
					}
				},
				{
					"id": 57442,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output that the function returns."
							}
						]
					}
				},
				{
					"id": 57443,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the compensation function expects."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57437,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 29,
							"character": 58,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L29"
						}
					],
					"signatures": [
						{
							"id": 57438,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The expected output based on the type parameter "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 57439,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57441,
										"name": "TInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 57440,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57701,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": 57479,
										"typeArguments": [
											{
												"type": "reference",
												"target": 57442,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 57443,
													"name": "TCompensateInput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "undefined"
												},
												"trueType": {
													"type": "reference",
													"target": 57442,
													"name": "TOutput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												"falseType": {
													"type": "reference",
													"target": 57443,
													"name": "TCompensateInput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "StepResponse",
										"package": "@medusajs/workflows-sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 57479,
														"typeArguments": [
															{
																"type": "reference",
																"target": 57442,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 57443,
																	"name": "TCompensateInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": 57442,
																	"name": "TOutput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": 57443,
																	"name": "TCompensateInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "StepResponse",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 57444,
			"name": "CompensateFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of compensation function passed to a step."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 57,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L57"
				}
			],
			"typeParameters": [
				{
					"id": 57449,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the argument passed to the compensation function. If not specified, then it will be the same type as the invocation function's output."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57445,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 57,
							"character": 30,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L57"
						}
					],
					"signatures": [
						{
							"id": 57446,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There's no expected type to be returned by the compensation function."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 57447,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 57449,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 57448,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57701,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 57450,
			"name": "LocalStepConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 68,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 57451,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57452,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
											"line": 68,
											"character": 32,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57452
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
									"line": 68,
									"character": 30,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L68"
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 57777,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "next"
									},
									{
										"type": "literal",
										"value": "uuid"
									},
									{
										"type": "literal",
										"value": "action"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 57453,
			"name": "ApplyStepOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 57454,
					"name": "stepName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 81,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L81"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57455,
					"name": "stepConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 82,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L82"
						}
					],
					"type": {
						"type": "reference",
						"target": 57777,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 57456,
					"name": "input",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 83,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L83"
						}
					],
					"type": {
						"type": "reference",
						"target": 57459,
						"name": "TStepInputs",
						"package": "@medusajs/workflows-sdk",
						"qualifiedName": "ApplyStepOptions.TStepInputs",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 57457,
					"name": "invokeFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 84,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L84"
						}
					],
					"type": {
						"type": "reference",
						"target": 57436,
						"typeArguments": [
							{
								"type": "reference",
								"target": 57460,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeInput",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 57461,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultOutput",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 57462,
								"name": "TInvokeResultCompensateInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput",
								"refersToTypeParameter": true
							}
						],
						"name": "InvokeFn",
						"package": "@medusajs/workflows-sdk"
					}
				},
				{
					"id": 57458,
					"name": "compensateFn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 89,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L89"
						}
					],
					"type": {
						"type": "reference",
						"target": 57444,
						"typeArguments": [
							{
								"type": "reference",
								"target": 57462,
								"name": "TInvokeResultCompensateInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput",
								"refersToTypeParameter": true
							}
						],
						"name": "CompensateFn",
						"package": "@medusajs/workflows-sdk"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						57454,
						57455,
						57456,
						57457,
						57458
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 73,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L73"
				}
			],
			"typeParameters": [
				{
					"id": 57459,
					"name": "TStepInputs",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 57460,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"qualifiedName": "ApplyStepOptions.TInvokeInput",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "reference",
							"target": 57661,
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 57460,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "ApplyStepOptions.TInvokeInput",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "WorkflowData",
							"package": "@medusajs/workflows-sdk"
						}
					}
				},
				{
					"id": 57460,
					"name": "TInvokeInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 57461,
					"name": "TInvokeResultOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 57462,
					"name": "TInvokeResultCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 57426,
			"name": "createStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 370,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L370"
				}
			],
			"signatures": [
				{
					"id": 57427,
					"name": "createStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "StepFunction",
								"target": 57627
							},
							{
								"kind": "text",
								"text": " that can be used as a step in a workflow constructed by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 57463
							},
							{
								"kind": "text",
								"text": " function."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A step function to be used in a workflow."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createStep,\n  StepResponse\n} from \"@medusajs/framework/workflows-sdk\"\n\ninterface CreateProductInput {\n  title: string\n}\n\nexport const createProductStep = createStep(\n  \"createProductStep\",\n  async function (\n    input: CreateProductInput,\n    { container }\n  ) {\n    const productModuleService = container.resolve(\n      \"product\"\n    )\n    const product = await productModuleService.createProducts(input)\n    return new StepResponse({\n      product\n    }, {\n      product_id: product.id\n    })\n  },\n  async function (\n    input,\n    { container }\n  ) {\n    if (!input) {\n      return\n    }\n    const productModuleService = container.resolve(\n      \"product\"\n    )\n    await productModuleService.deleteProducts([input.product_id])\n  }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 370,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L370"
						}
					],
					"typeParameters": [
						{
							"id": 57428,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the invocation function."
									}
								]
							}
						},
						{
							"id": 57429,
							"name": "TInvokeResultOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected output parameter of the invocation function."
									}
								]
							}
						},
						{
							"id": 57430,
							"name": "TInvokeResultCompensateInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the compensation function."
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 57431,
							"name": "nameOrConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the step or its configuration."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 57432,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 57433,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
																	"line": 380,
																	"character": 9,
																	"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L380"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																57433
															]
														}
													],
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
															"line": 380,
															"character": 7,
															"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-step.ts#L380"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 57777,
														"name": "TransactionStepsDefinition",
														"package": "@medusajs/orchestration"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "next"
															},
															{
																"type": "literal",
																"value": "uuid"
															},
															{
																"type": "literal",
																"value": "action"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											}
										]
									}
								]
							}
						},
						{
							"id": 57434,
							"name": "invokeFn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An invocation function that will be executed when the workflow is executed. The function must return an instance of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 57479
									},
									{
										"kind": "text",
										"text": ". The constructor of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 57479
									},
									{
										"kind": "text",
										"text": "\naccepts the output of the step as a first argument, and optionally as a second argument the data to be passed to the compensation function as a parameter."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 57436,
								"typeArguments": [
									{
										"type": "reference",
										"target": 57428,
										"name": "TInvokeInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 57429,
										"name": "TInvokeResultOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 57430,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "InvokeFn",
								"package": "@medusajs/workflows-sdk"
							}
						},
						{
							"id": 57435,
							"name": "compensateFn",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A compensation function that's executed if an error occurs in the workflow. It's used to roll-back actions when errors occur.\nIt accepts as a parameter the second argument passed to the constructor of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 57479
									},
									{
										"kind": "text",
										"text": " instance returned by the invocation function. If the\ninvocation function doesn't pass the second argument to "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor, the compensation function receives the first argument\npassed to the "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor instead."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 57444,
								"typeArguments": [
									{
										"type": "reference",
										"target": 57430,
										"name": "TInvokeResultCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "CompensateFn",
								"package": "@medusajs/workflows-sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 57627,
						"typeArguments": [
							{
								"type": "reference",
								"target": 57428,
								"name": "TInvokeInput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 57429,
								"name": "TInvokeResultOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "StepFunction",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 57463,
			"name": "createWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
					"line": 88,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L88"
				}
			],
			"signatures": [
				{
					"id": 57464,
					"name": "createWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a workflow with the provided name and a constructor function.\nThe constructor function builds the workflow from steps created by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createStep",
								"target": 57426
							},
							{
								"kind": "text",
								"text": " function.\nThe returned workflow is an exported workflow of type "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ReturnWorkflow",
								"target": 57726
							},
							{
								"kind": "text",
								"text": ", meaning it's not executed right away. To execute it,\ninvoke the exported workflow, then run its "
							},
							{
								"kind": "code",
								"text": "`run`"
							},
							{
								"kind": "text",
								"text": " method."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The created workflow. You can later execute the workflow by invoking it, then using its "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport { MedusaRequest, MedusaResponse } from \"@medusajs/framework/http\"\nimport {\n  createProductStep,\n  getProductStep,\n} from \"./steps\"\n\ninterface WorkflowInput {\n title: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"my-workflow\",\n  (input: WorkflowInput) => {\n   // Everything here will be executed and resolved later\n   // during the execution. Including the data access.\n\n    const product = createProductStep(input)\n    return new WorkflowResponse(getProductStep(product.id))\n  }\n)\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result: product } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        title: \"Shirt\"\n      }\n    })\n\n  res.json({\n    product\n  })\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
							"line": 88,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L88"
						}
					],
					"typeParameters": [
						{
							"id": 57465,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the input passed to the composer function."
									}
								]
							}
						},
						{
							"id": 57466,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the output returned by the composer function."
									}
								]
							}
						},
						{
							"id": 57467,
							"name": "THooks",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of hooks defined in the workflow."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 57468,
							"name": "nameOrConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the workflow or its configuration."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 57469,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 57470,
															"name": "name",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
																	"line": 92,
																	"character": 28,
																	"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L92"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																57470
															]
														}
													],
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
															"line": 92,
															"character": 26,
															"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L92"
														}
													]
												}
											},
											{
												"type": "reference",
												"target": 57795,
												"name": "TransactionModelOptions",
												"package": "@medusajs/orchestration"
											}
										]
									}
								]
							}
						},
						{
							"id": 57471,
							"name": "composer",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor function that is executed when the "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ReturnWorkflow",
										"target": 57726
									},
									{
										"kind": "text",
										"text": " is used.\nThe function can't be an arrow function or an asynchronus function. It also can't directly manipulate data.\nYou'll have to use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "transform",
										"target": 57550
									},
									{
										"kind": "text",
										"text": " function if you need to directly manipulate data."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57472,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
											"line": 98,
											"character": 12,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L98"
										}
									],
									"signatures": [
										{
											"id": 57473,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
													"line": 98,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/create-workflow.ts#L98"
												}
											],
											"parameters": [
												{
													"id": 57474,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 57661,
														"typeArguments": [
															{
																"type": "reference",
																"target": 57465,
																"name": "TData",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 57509,
														"typeArguments": [
															{
																"type": "reference",
																"target": 57466,
																"name": "TResult",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															{
																"type": "reference",
																"target": 57467,
																"name": "THooks",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowResponse",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 57726,
						"typeArguments": [
							{
								"type": "reference",
								"target": 57465,
								"name": "TData",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 57466,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 57467,
								"name": "THooks",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "ReturnWorkflow",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 57479,
			"name": "StepResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This class is used to create the response returned by a step. A step return its data by returning an instance of "
					},
					{
						"kind": "code",
						"text": "`StepResponse`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 57486,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 57487,
							"name": "StepResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor of the StepResponse"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 28,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L28"
								}
							],
							"typeParameters": [
								{
									"id": 57488,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the output of the step."
											}
										]
									}
								},
								{
									"id": 57489,
									"name": "TCompensateInput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
											},
											{
												"kind": "code",
												"text": "`TCompensateInput`"
											},
											{
												"kind": "text",
												"text": " is the same\nas that of "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"default": {
										"type": "reference",
										"target": 57488,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 57490,
									"name": "output",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The output of the step."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 57488,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 57491,
									"name": "compensateInput",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The input to be passed as a parameter to the step's compensation function. If not provided, the "
											},
											{
												"kind": "code",
												"text": "`output`"
											},
											{
												"kind": "text",
												"text": " will be provided instead."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 57489,
										"name": "TCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TCompensateInput",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57479,
								"typeArguments": [
									{
										"type": "reference",
										"target": 57488,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TOutput",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 57489,
										"name": "TCompensateInput",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "StepResponse.TCompensateInput",
										"refersToTypeParameter": true
									}
								],
								"name": "StepResponse",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				},
				{
					"id": 57480,
					"name": "permanentFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 118,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L118"
						}
					],
					"signatures": [
						{
							"id": 57481,
							"name": "permanentFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a StepResponse that indicates that the step has failed and the retry mechanism should not kick in anymore."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { Product } from \"@medusajs/medusa\"\nimport {\n  createStep,\n  StepResponse,\n  createWorkflow\n} from \"@medusajs/workflows-sdk\"\n\ninterface CreateProductInput {\n  title: string\n}\n\nexport const createProductStep = createStep(\n  \"createProductStep\",\n  async function (\n    input: CreateProductInput,\n    context\n  ) {\n    const productService = context.container.resolve(\n      \"productService\"\n    )\n\n    try {\n      const product = await productService.createProducts(input)\n      return new StepResponse({\n        product\n      }, {\n        product_id: product.id\n      })\n    } catch (e) {\n      return StepResponse.permanentFailure(`Couldn't create the product: ${e}`)\n    }\n  }\n)\n\ninterface WorkflowInput {\n title: string\n}\n\nconst myWorkflow = createWorkflow<\n    WorkflowInput,\n    Product\n  >(\"my-workflow\", (input) => {\n   // Everything here will be executed and resolved later\n   // during the execution. Including the data access.\n\n    const product = createProductStep(input)\n  }\n)\n\nmyWorkflow()\n  .run({\n    input: {\n      title: \"Shirt\"\n    }\n  })\n  .then(({ errors, result }) => {\n    if (errors.length) {\n      errors.forEach((err) => {\n        if (typeof err.error === \"object\" && \"message\" in err.error) {\n          console.error(err.error.message)\n        } else {\n          console.error(err.error)\n        }\n      })\n    }\n    console.log(result)\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 118,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L118"
								}
							],
							"parameters": [
								{
									"id": 57482,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An optional message to be logged."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "\"Permanent failure\""
								},
								{
									"id": 57483,
									"name": "compensateInput",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 57484,
					"name": "skip",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 128,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L128"
						}
					],
					"signatures": [
						{
							"id": 57485,
							"name": "skip",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 128,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L128"
								}
							],
							"type": {
								"type": "reference",
								"target": 57803,
								"name": "SkipStepResponse",
								"package": "@medusajs/orchestration"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						57486
					]
				},
				{
					"title": "Methods",
					"children": [
						57480,
						57484
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
					"line": 15,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 57507,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					}
				},
				{
					"id": 57508,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
							},
							{
								"kind": "code",
								"text": "`TCompensateInput`"
							},
							{
								"kind": "text",
								"text": " is the same\nas that of "
							},
							{
								"kind": "code",
								"text": "`TOutput`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"default": {
						"type": "reference",
						"target": 57488,
						"name": "TOutput",
						"package": "@medusajs/workflows-sdk",
						"qualifiedName": "StepResponse.TOutput",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 57509,
			"name": "WorkflowResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Workflow response class encapsulates the return value of a workflow"
					}
				]
			},
			"children": [
				{
					"id": 57518,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "OrchestrationUtils.SymbolMedusaWorkflowResponse"
				},
				{
					"id": 57510,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 14,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 57511,
							"name": "WorkflowResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L14"
								}
							],
							"typeParameters": [
								{
									"id": 57512,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 57513,
									"name": "THooks",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {
										"isConst": true
									},
									"type": {
										"type": "typeOperator",
										"operator": "readonly",
										"target": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									},
									"default": {
										"type": "tuple"
									}
								}
							],
							"parameters": [
								{
									"id": 57514,
									"name": "$result",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 57661,
												"typeArguments": [
													{
														"type": "reference",
														"target": 57512,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											},
											{
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "union",
													"types": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 57512,
																"name": "TResult",
																"package": "@medusajs/workflows-sdk",
																"qualifiedName": "WorkflowResponse.TResult",
																"refersToTypeParameter": true
															}
														},
														{
															"type": "reference",
															"target": 57656,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 57512,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"qualifiedName": "WorkflowResponse.TResult",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "WorkflowDataProperties",
															"package": "@medusajs/workflows-sdk"
														},
														{
															"type": "reference",
															"target": 57661,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 57512,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"qualifiedName": "WorkflowResponse.TResult",
																		"refersToTypeParameter": true
																	}
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 57515,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57516,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 57517,
													"name": "hooks",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"line": 23,
															"character": 23,
															"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
														}
													],
													"type": {
														"type": "reference",
														"target": 57513,
														"name": "THooks",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.THooks",
														"refersToTypeParameter": true
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														57517
													]
												}
											],
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
													"line": 23,
													"character": 21,
													"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57509,
								"typeArguments": [
									{
										"type": "reference",
										"target": 57512,
										"name": "TResult",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.TResult",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 57513,
										"name": "THooks",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.THooks",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowResponse",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				},
				{
					"id": 57519,
					"name": "$result",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 15,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L15"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 57661,
								"typeArguments": [
									{
										"type": "reference",
										"target": 57512,
										"name": "TResult",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.TResult",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 57512,
												"name": "TResult",
												"package": "@medusajs/workflows-sdk",
												"qualifiedName": "WorkflowResponse.TResult",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 57656,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 57512,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowDataProperties",
											"package": "@medusajs/workflows-sdk"
										},
										{
											"type": "reference",
											"target": 57661,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 57512,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"qualifiedName": "WorkflowResponse.TResult",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 57520,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
							"line": 23,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 57521,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57522,
									"name": "hooks",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
											"line": 23,
											"character": 23,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
										}
									],
									"type": {
										"type": "reference",
										"target": 57513,
										"name": "THooks",
										"package": "@medusajs/workflows-sdk",
										"qualifiedName": "WorkflowResponse.THooks",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57522
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
									"line": 23,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L23"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						57510
					]
				},
				{
					"title": "Properties",
					"children": [
						57518,
						57519,
						57520
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts#L7"
				}
			],
			"typeParameters": [
				{
					"id": 57523,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 57524,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {
						"isConst": true
					},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			]
		},
		{
			"id": 57546,
			"name": "parallelize",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/parallelize.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 57547,
					"name": "parallelize",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function is used to run multiple steps in parallel. The result of each step will be returned as part of the result array."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The step results. The results are ordered in the array by the order they're passed in the function's parameter."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  parallelize,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  createProductStep,\n  createPricesStep,\n  attachProductToSalesChannelStep\n} from \"./steps\"\n\ninterface WorkflowInput {\n  title: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"my-workflow\",\n  (input: WorkflowInput) => {\n   const product = createProductStep(input)\n\n   const [prices, productSalesChannel] = parallelize(\n     createPricesStep(product),\n     attachProductToSalesChannelStep(product)\n   )\n\n   return new WorkflowResponse({\n    prices,\n    productSalesChannel\n   })\n }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
							"line": 44,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/parallelize.ts#L44"
						}
					],
					"typeParameters": [
						{
							"id": 57548,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "undefined"
										},
										{
											"type": "reference",
											"target": 57661,
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							}
						}
					],
					"parameters": [
						{
							"id": 57549,
							"name": "steps",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "reference",
								"target": 57548,
								"name": "TResult",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 57548,
						"name": "TResult",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 57815,
			"name": "Func1",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
					"line": 11,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 57821,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "reference",
								"target": 57661,
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				},
				{
					"id": 57822,
					"name": "U",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57816,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
							"line": 11,
							"character": 49
						}
					],
					"signatures": [
						{
							"id": 57817,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 57818,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 57821,
											"name": "T",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": 57661,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "U"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": 57821,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 57821,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 57821,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "reference",
														"target": 57661,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "U"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													},
													"trueType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 57821,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												}
											},
											"falseType": {
												"type": "reflection",
												"declaration": {
													"id": 57819,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
															"line": 16,
															"character": 6
														}
													]
												}
											}
										}
									}
								},
								{
									"id": 57820,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57701,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 57822,
										"name": "U",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 57822,
												"name": "U",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 57823,
			"name": "Func",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
					"line": 20,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 57828,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 57829,
					"name": "U",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57824,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/transform.ts",
							"line": 20,
							"character": 18
						}
					],
					"signatures": [
						{
							"id": 57825,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 57826,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57828,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 57827,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57701,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 57829,
										"name": "U",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 57829,
												"name": "U",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 57550,
			"name": "transform",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/transform.ts",
					"line": 63,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/transform.ts#L63"
				}
			],
			"signatures": [
				{
					"id": 57551,
					"name": "transform",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function transforms the output of other utility functions.\n\nFor example, if you're using the value(s) of some step(s) as an input to a later step. As you can't directly manipulate data in the  workflow constructor function passed to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 57463
							},
							{
								"kind": "text",
								"text": ",\nthe "
							},
							{
								"kind": "code",
								"text": "`transform`"
							},
							{
								"kind": "text",
								"text": " function provides access to the runtime value of the step(s) output so that you can manipulate them.\n\nAnother example is if you're using the runtime value of some step(s) as the output of a workflow.\n\nIf you're also retrieving the output of a hook and want to check if its value is set, you must use a workflow to get the runtime value of that hook."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "There's no expected value to be returned by the "
									},
									{
										"kind": "code",
										"text": "`transform`"
									},
									{
										"kind": "text",
										"text": " function."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  transform,\n  WorkflowResponse\n} from \"@medusajs/framework/workflows-sdk\"\nimport { step1, step2 } from \"./steps\"\n\ntype WorkflowInput = {\n  name: string\n}\n\nconst myWorkflow = createWorkflow(\n  \"hello-world\",\n  (input: WorkflowInput) => {\n    const str1 = step1(input)\n    const str2 = step2(input)\n\n    const message = transform({\n      str1,\n      str2\n    }, (input) => `${input.str1}${input.str2}`)\n\n    return new WorkflowResponse(message)\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/transform.ts",
							"line": 63,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/transform.ts#L63"
						}
					],
					"typeParameters": [
						{
							"id": 57552,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "object"
									},
									{
										"type": "reference",
										"target": 57661,
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						},
						{
							"id": 57553,
							"name": "RFinal",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 57554,
							"name": "values",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The output(s) of other step functions."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 57552,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 57555,
							"name": "func",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transform function used to perform action on the runtime values of the provided "
									},
									{
										"kind": "code",
										"text": "`values`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": 57815,
										"typeArguments": [
											{
												"type": "reference",
												"target": 57552,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 57553,
												"name": "RFinal",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "Func1",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 57661,
						"typeArguments": [
							{
								"type": "reference",
								"target": 57553,
								"name": "RFinal",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowData",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 57607,
			"name": "StepFunctionResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 15,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 57611,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57608,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L16"
						}
					],
					"signatures": [
						{
							"id": 57609,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 57610,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57669,
										"name": "CreateWorkflowComposerContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 57661,
								"typeArguments": [
									{
										"type": "reference",
										"target": 57611,
										"name": "TOutput",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								],
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				}
			}
		},
		{
			"id": 57612,
			"name": "StepFunctionReturnConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 18,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L18"
				}
			],
			"typeParameters": [
				{
					"id": 57619,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57613,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57614,
							"name": "config",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L19"
								}
							],
							"signatures": [
								{
									"id": 57615,
									"name": "config",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 19,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L19"
										}
									],
									"parameters": [
										{
											"id": 57616,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 57617,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57618,
																	"name": "name",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 20,
																			"character": 14,
																			"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L20"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57618
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 20,
																	"character": 12,
																	"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L20"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Omit"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 57777,
																"name": "TransactionStepsDefinition",
																"package": "@medusajs/orchestration"
															},
															{
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": "next"
																	},
																	{
																		"type": "literal",
																		"value": "uuid"
																	},
																	{
																		"type": "literal",
																		"value": "action"
																	}
																]
															}
														],
														"name": "Omit",
														"package": "typescript"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 57661,
										"typeArguments": [
											{
												"type": "reference",
												"target": 57619,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								57614
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 18,
							"character": 48,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L18"
						}
					]
				}
			}
		},
		{
			"id": 57830,
			"name": "KeysOfUnion",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 27,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 57831,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 57831,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 57831,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"trueType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 57831,
						"name": "T",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 57620,
			"name": "HookHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 28,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L28"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57621,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 28,
							"character": 26,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 57622,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 57623,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 58505,
			"name": "ConvertHookToObject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 30,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 58511,
					"name": "THook",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 58511,
					"name": "THook",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 57535,
					"typeArguments": [
						{
							"type": "inferred",
							"name": "Name"
						},
						{
							"type": "inferred",
							"name": "Input"
						},
						{
							"type": "inferred",
							"name": "Output"
						}
					],
					"name": "Hook",
					"package": "@medusajs/workflows-sdk"
				},
				"trueType": {
					"type": "mapped",
					"parameter": "K",
					"parameterType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
							"qualifiedName": "Name"
						},
						"name": "Name",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					},
					"templateType": {
						"type": "reflection",
						"declaration": {
							"id": 58506,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
									"line": 36,
									"character": 19
								}
							],
							"signatures": [
								{
									"id": 58507,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 58510,
											"name": "TCompensateInput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 58508,
											"name": "invoke",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 57436,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Input"
														},
														"name": "Input",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Output"
														},
														"name": "Output",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 58510,
														"name": "TCompensateInput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "InvokeFn",
												"package": "@medusajs/workflows-sdk"
											}
										},
										{
											"id": 58509,
											"name": "compensate",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 57444,
												"typeArguments": [
													{
														"type": "reference",
														"target": 58510,
														"name": "TCompensateInput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "CompensateFn",
												"package": "@medusajs/workflows-sdk"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 58158,
			"name": "ConvertHooksToFunctions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Helper to convert an array of hooks to functions"
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
					"line": 46,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 58160,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 58160,
					"name": "THooks",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "A"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "R"
							}
						}
					]
				},
				"trueType": {
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 58505,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
										"qualifiedName": "A"
									},
									"name": "A",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "ConvertHookToObject",
							"package": "@medusajs/workflows-sdk"
						},
						{
							"type": "reference",
							"target": 58158,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
										"qualifiedName": "R"
									},
									"name": "R",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "ConvertHooksToFunctions",
							"package": "@medusajs/workflows-sdk"
						}
					]
				},
				"falseType": {
					"type": "reflection",
					"declaration": {
						"id": 58159,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/type.ts",
								"line": 51,
								"character": 4
							}
						]
					}
				}
			}
		},
		{
			"id": 57624,
			"name": "Void",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 53,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57625,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57626,
							"name": " $$type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 53,
									"character": 21,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
								}
							],
							"type": {
								"type": "literal",
								"value": "void"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57626
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 53,
							"character": 19,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
						}
					]
				}
			}
		},
		{
			"id": 57627,
			"name": "StepFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A step function to be used in a workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 61,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L61"
				}
			],
			"typeParameters": [
				{
					"id": 57654,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input of the step."
							}
						]
					}
				},
				{
					"id": 57655,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 57830,
							"typeArguments": [
								{
									"type": "reference",
									"target": 57654,
									"name": "TInput",
									"package": "@medusajs/workflows-sdk",
									"refersToTypeParameter": true
								}
							],
							"name": "KeysOfUnion",
							"package": "@medusajs/workflows-sdk"
						},
						"extendsType": {
							"type": "tuple"
						},
						"trueType": {
							"type": "reflection",
							"declaration": {
								"id": 57628,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "workflows-sdk/src/utils/composer/type.ts",
										"line": 66,
										"character": 4,
										"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L66"
									}
								],
								"signatures": [
									{
										"id": 57629,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "workflows-sdk/src/utils/composer/type.ts",
												"line": 67,
												"character": 6,
												"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L67"
											}
										],
										"type": {
											"type": "conditional",
											"checkType": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 57655,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 57630,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "never"
											},
											"trueType": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 57631,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57632,
																	"name": " $$type",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 53,
																			"character": 21,
																			"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L53"
																		}
																	],
																	"type": {
																		"type": "literal",
																		"value": "void"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57632
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 91,
																	"character": 4,
																	"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L91"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 57624,
														"name": "Void",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reference",
														"target": 57656,
														"typeArguments": [
															{
																"type": "reference",
																"target": 57624,
																"name": "Void",
																"package": "@medusajs/workflows-sdk"
															}
														],
														"name": "WorkflowDataProperties",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 57633,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57634,
																	"name": "config",
																	"variant": "declaration",
																	"kind": 2048,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 97,
																			"character": 4,
																			"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																		}
																	],
																	"signatures": [
																		{
																			"id": 57635,
																			"name": "config",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 97,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																				}
																			],
																			"parameters": [
																				{
																					"id": 57636,
																					"name": "config",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 57637,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 57638,
																											"name": "name",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {
																												"isOptional": true
																											},
																											"sources": [
																												{
																													"fileName": "workflows-sdk/src/utils/composer/type.ts",
																													"line": 98,
																													"character": 16,
																													"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												57638
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "workflows-sdk/src/utils/composer/type.ts",
																											"line": 98,
																											"character": 14,
																											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																										}
																									]
																								}
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Omit"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 57777,
																										"name": "TransactionStepsDefinition",
																										"package": "@medusajs/orchestration"
																									},
																									{
																										"type": "union",
																										"types": [
																											{
																												"type": "literal",
																												"value": "next"
																											},
																											{
																												"type": "literal",
																												"value": "uuid"
																											},
																											{
																												"type": "literal",
																												"value": "action"
																											}
																										]
																									}
																								],
																								"name": "Omit",
																								"package": "typescript"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 57661,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 57624,
																						"name": "Void",
																						"package": "@medusajs/workflows-sdk"
																					}
																				],
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Methods",
																	"children": [
																		57634
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 96,
																	"character": 30,
																	"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 57612,
														"typeArguments": [
															{
																"type": "reference",
																"target": 57655,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "StepFunctionReturnConfig",
														"package": "@medusajs/workflows-sdk"
													}
												]
											},
											"falseType": {
												"type": "intersection",
												"types": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 57655,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																	"qualifiedName": "Item"
																},
																"name": "Item",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "union",
																"types": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																			"qualifiedName": "Item"
																		},
																		"name": "Item",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 57661,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																					"qualifiedName": "Item"
																				},
																				"name": "Item",
																				"package": "@medusajs/workflows-sdk",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														"falseType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": 57655,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "intrinsic",
																"name": "object"
															},
															"trueType": {
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "unknown",
																				"name": "..."
																			},
																			"objectType": {
																				"type": "unknown",
																				"name": "..."
																			}
																		},
																		{
																			"type": "reference",
																			"target": 57661,
																			"typeArguments": [
																				{
																					"type": "unknown",
																					"name": "..."
																				}
																			],
																			"name": "WorkflowData",
																			"package": "@medusajs/workflows-sdk"
																		}
																	]
																}
															},
															"falseType": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reference",
																		"target": 57655,
																		"name": "TOutput",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 57656,
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": 57655,
																				"name": "TOutput",
																				"package": "@medusajs/workflows-sdk",
																				"refersToTypeParameter": true
																			}
																		],
																		"name": "WorkflowDataProperties",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														}
													},
													{
														"type": "reference",
														"target": 57655,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 57656,
														"typeArguments": [
															{
																"type": "reference",
																"target": 57655,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowDataProperties",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 57639,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57640,
																	"name": "config",
																	"variant": "declaration",
																	"kind": 2048,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 97,
																			"character": 4,
																			"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																		}
																	],
																	"signatures": [
																		{
																			"id": 57641,
																			"name": "config",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 97,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																				}
																			],
																			"parameters": [
																				{
																					"id": 57642,
																					"name": "config",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intersection",
																						"types": [
																							{
																								"type": "reflection",
																								"declaration": {
																									"id": 57643,
																									"name": "__type",
																									"variant": "declaration",
																									"kind": 65536,
																									"flags": {},
																									"children": [
																										{
																											"id": 57644,
																											"name": "name",
																											"variant": "declaration",
																											"kind": 1024,
																											"flags": {
																												"isOptional": true
																											},
																											"sources": [
																												{
																													"fileName": "workflows-sdk/src/utils/composer/type.ts",
																													"line": 98,
																													"character": 16,
																													"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																												}
																											],
																											"type": {
																												"type": "intrinsic",
																												"name": "string"
																											}
																										}
																									],
																									"groups": [
																										{
																											"title": "Properties",
																											"children": [
																												57644
																											]
																										}
																									],
																									"sources": [
																										{
																											"fileName": "workflows-sdk/src/utils/composer/type.ts",
																											"line": 98,
																											"character": 14,
																											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																										}
																									]
																								}
																							},
																							{
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Omit"
																								},
																								"typeArguments": [
																									{
																										"type": "reference",
																										"target": 57777,
																										"name": "TransactionStepsDefinition",
																										"package": "@medusajs/orchestration"
																									},
																									{
																										"type": "union",
																										"types": [
																											{
																												"type": "literal",
																												"value": "next"
																											},
																											{
																												"type": "literal",
																												"value": "uuid"
																											},
																											{
																												"type": "literal",
																												"value": "action"
																											}
																										]
																									}
																								],
																								"name": "Omit",
																								"package": "typescript"
																							}
																						]
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 57661,
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 57655,
																						"name": "TOutput",
																						"package": "@medusajs/workflows-sdk",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "WorkflowData",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	]
																}
															],
															"groups": [
																{
																	"title": "Methods",
																	"children": [
																		57640
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 96,
																	"character": 30,
																	"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 57612,
														"typeArguments": [
															{
																"type": "reference",
																"target": 57655,
																"name": "TOutput",
																"package": "@medusajs/workflows-sdk",
																"refersToTypeParameter": true
															}
														],
														"name": "StepFunctionReturnConfig",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									}
								]
							}
						},
						"falseType": {
							"type": "reflection",
							"declaration": {
								"id": 57645,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"sources": [
									{
										"fileName": "workflows-sdk/src/utils/composer/type.ts",
										"line": 72,
										"character": 4,
										"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L72"
									}
								],
								"signatures": [
									{
										"id": 57646,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"sources": [
											{
												"fileName": "workflows-sdk/src/utils/composer/type.ts",
												"line": 73,
												"character": 6,
												"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L73"
											}
										],
										"parameters": [
											{
												"id": 57647,
												"name": "input",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "union",
													"types": [
														{
															"type": "reference",
															"target": 57654,
															"name": "TInput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": 57661,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 57654,
																	"name": "TInput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																}
															],
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													]
												}
											}
										],
										"type": {
											"type": "intersection",
											"types": [
												{
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": 57655,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																"qualifiedName": "Item"
															},
															"name": "Item",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"trueType": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																		"qualifiedName": "Item"
																	},
																	"name": "Item",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																{
																	"type": "reference",
																	"target": 57661,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																				"qualifiedName": "Item"
																			},
																			"name": "Item",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "WorkflowData",
																	"package": "@medusajs/workflows-sdk"
																}
															]
														}
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 57655,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 57655,
																			"typeArguments": [
																				{
																					"type": "unknown",
																					"name": "..."
																				}
																			],
																			"name": "TOutput",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	},
																	{
																		"type": "reference",
																		"target": 57661,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "unknown",
																					"name": "..."
																				},
																				"objectType": {
																					"type": "unknown",
																					"name": "..."
																				}
																			}
																		],
																		"name": "WorkflowData",
																		"package": "@medusajs/workflows-sdk"
																	}
																]
															}
														},
														"falseType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": 57655,
																	"name": "TOutput",
																	"package": "@medusajs/workflows-sdk",
																	"refersToTypeParameter": true
																},
																{
																	"type": "reference",
																	"target": 57656,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 57655,
																			"name": "TOutput",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "WorkflowDataProperties",
																	"package": "@medusajs/workflows-sdk"
																}
															]
														}
													}
												},
												{
													"type": "reference",
													"target": 57655,
													"name": "TOutput",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												},
												{
													"type": "reference",
													"target": 57656,
													"typeArguments": [
														{
															"type": "reference",
															"target": 57655,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													],
													"name": "WorkflowDataProperties",
													"package": "@medusajs/workflows-sdk"
												},
												{
													"type": "reflection",
													"declaration": {
														"id": 57648,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 57649,
																"name": "config",
																"variant": "declaration",
																"kind": 2048,
																"flags": {},
																"sources": [
																	{
																		"fileName": "workflows-sdk/src/utils/composer/type.ts",
																		"line": 97,
																		"character": 4,
																		"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																	}
																],
																"signatures": [
																	{
																		"id": 57650,
																		"name": "config",
																		"variant": "signature",
																		"kind": 4096,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "workflows-sdk/src/utils/composer/type.ts",
																				"line": 97,
																				"character": 4,
																				"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
																			}
																		],
																		"parameters": [
																			{
																				"id": 57651,
																				"name": "config",
																				"variant": "param",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intersection",
																					"types": [
																						{
																							"type": "reflection",
																							"declaration": {
																								"id": 57652,
																								"name": "__type",
																								"variant": "declaration",
																								"kind": 65536,
																								"flags": {},
																								"children": [
																									{
																										"id": 57653,
																										"name": "name",
																										"variant": "declaration",
																										"kind": 1024,
																										"flags": {
																											"isOptional": true
																										},
																										"sources": [
																											{
																												"fileName": "workflows-sdk/src/utils/composer/type.ts",
																												"line": 98,
																												"character": 16,
																												"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																											}
																										],
																										"type": {
																											"type": "intrinsic",
																											"name": "string"
																										}
																									}
																								],
																								"groups": [
																									{
																										"title": "Properties",
																										"children": [
																											57653
																										]
																									}
																								],
																								"sources": [
																									{
																										"fileName": "workflows-sdk/src/utils/composer/type.ts",
																										"line": 98,
																										"character": 14,
																										"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																									}
																								]
																							}
																						},
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Omit"
																							},
																							"typeArguments": [
																								{
																									"type": "reference",
																									"target": 57777,
																									"name": "TransactionStepsDefinition",
																									"package": "@medusajs/orchestration"
																								},
																								{
																									"type": "union",
																									"types": [
																										{
																											"type": "literal",
																											"value": "next"
																										},
																										{
																											"type": "literal",
																											"value": "uuid"
																										},
																										{
																											"type": "literal",
																											"value": "action"
																										}
																									]
																								}
																							],
																							"name": "Omit",
																							"package": "typescript"
																						}
																					]
																				}
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 57661,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 57655,
																					"name": "TOutput",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "WorkflowData",
																			"package": "@medusajs/workflows-sdk"
																		}
																	}
																]
															}
														],
														"groups": [
															{
																"title": "Methods",
																"children": [
																	57649
																]
															}
														],
														"sources": [
															{
																"fileName": "workflows-sdk/src/utils/composer/type.ts",
																"line": 96,
																"character": 30,
																"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
															}
														]
													}
												},
												{
													"type": "reference",
													"target": 57612,
													"typeArguments": [
														{
															"type": "reference",
															"target": 57655,
															"name": "TOutput",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													],
													"name": "StepFunctionReturnConfig",
													"package": "@medusajs/workflows-sdk"
												}
											]
										}
									}
								]
							}
						}
					},
					{
						"type": "reference",
						"target": 57656,
						"typeArguments": [
							{
								"type": "reference",
								"target": 57655,
								"name": "TOutput",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					}
				]
			}
		},
		{
			"id": 57656,
			"name": "WorkflowDataProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 78,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L78"
				}
			],
			"typeParameters": [
				{
					"id": 57660,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57657,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57658,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L79"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57659,
							"name": "__step__",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L80"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57658,
								57659
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 78,
							"character": 50,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L78"
						}
					]
				}
			}
		},
		{
			"id": 57661,
			"name": "WorkflowData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This type is used to encapsulate the input or output type of all utils."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 88,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L88"
				}
			],
			"typeParameters": [
				{
					"id": 57668,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of a step's input or result."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 57668,
							"name": "T",
							"package": "@medusajs/workflows-sdk",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "array",
							"elementType": {
								"type": "inferred",
								"name": "Item"
							}
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "Item"
										},
										"name": "Item",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 57661,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "Item"
												},
												"name": "Item",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 57668,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "intrinsic",
								"name": "object"
							},
							"trueType": {
								"type": "mapped",
								"parameter": "Key",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 57668,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 57668,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 57661,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 57668,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							"falseType": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 57668,
										"name": "T",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 57656,
										"typeArguments": [
											{
												"type": "reference",
												"target": 57668,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "WorkflowDataProperties",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					},
					{
						"type": "reference",
						"target": 57668,
						"name": "T",
						"package": "@medusajs/workflows-sdk",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 57656,
						"typeArguments": [
							{
								"type": "reference",
								"target": 57668,
								"name": "T",
								"package": "@medusajs/workflows-sdk",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57662,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57663,
									"name": "config",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 97,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
										}
									],
									"signatures": [
										{
											"id": 57664,
											"name": "config",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 97,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L97"
												}
											],
											"parameters": [
												{
													"id": 57665,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 57666,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 57667,
																			"name": "name",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 98,
																					"character": 16,
																					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				57667
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 98,
																			"character": 14,
																			"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L98"
																		}
																	]
																}
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Omit"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 57777,
																		"name": "TransactionStepsDefinition",
																		"package": "@medusajs/orchestration"
																	},
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "literal",
																				"value": "next"
																			},
																			{
																				"type": "literal",
																				"value": "uuid"
																			},
																			{
																				"type": "literal",
																				"value": "action"
																			}
																		]
																	}
																],
																"name": "Omit",
																"package": "typescript"
															}
														]
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 57661,
												"typeArguments": [
													{
														"type": "reference",
														"target": 57668,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										57663
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 96,
									"character": 30,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L96"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 57669,
			"name": "CreateWorkflowComposerContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 105,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L105"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 57670,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 57671,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57672,
							"name": "hooks_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 107,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L107"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57673,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 57674,
											"name": "declared",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 108,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L108"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 57675,
											"name": "registered",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 109,
													"character": 4,
													"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L109"
												}
											],
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												57674,
												57675
											]
										}
									],
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 107,
											"character": 10,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L107"
										}
									]
								}
							}
						},
						{
							"id": 57676,
							"name": "hooksCallback_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 111,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L111"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 57620,
										"name": "HookHandler",
										"package": "@medusajs/workflows-sdk"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 57677,
							"name": "workflowId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 112,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L112"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 57678,
							"name": "flow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 113,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L113"
								}
							],
							"type": {
								"type": "reference",
								"target": 57832,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 57679,
							"name": "isAsync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 114,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L114"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 57680,
							"name": "handlers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 115,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L115"
								}
							],
							"type": {
								"type": "reference",
								"target": 57921,
								"name": "WorkflowHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 57681,
							"name": "stepBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 116,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L116"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57682,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 116,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L116"
										}
									],
									"signatures": [
										{
											"id": 57683,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 57685,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 57684,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 57607,
														"name": "StepFunctionResult",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 57661,
												"typeArguments": [
													{
														"type": "reference",
														"target": 57685,
														"name": "TOutput",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							}
						},
						{
							"id": 57686,
							"name": "hookBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L119"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57687,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 119,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L119"
										}
									],
									"signatures": [
										{
											"id": 57688,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 57689,
													"name": "name",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 57690,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57691,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 119,
																	"character": 33,
																	"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L119"
																}
															],
															"signatures": [
																{
																	"id": 57692,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 57620,
																		"name": "HookHandler",
																		"package": "@medusajs/workflows-sdk"
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 57693,
							"name": "parallelizeBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 120,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 57694,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 120,
											"character": 21,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L120"
										}
									],
									"signatures": [
										{
											"id": 57695,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 57700,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": 57661,
																	"name": "WorkflowData",
																	"package": "@medusajs/workflows-sdk"
																},
																{
																	"type": "intrinsic",
																	"name": "undefined"
																}
															]
														}
													},
													"default": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 57661,
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													}
												}
											],
											"parameters": [
												{
													"id": 57696,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57697,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 123,
																	"character": 8,
																	"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L123"
																}
															],
															"signatures": [
																{
																	"id": 57698,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 57699,
																			"name": "this",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 57669,
																				"name": "CreateWorkflowComposerContext",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": 57700,
																		"name": "TOutput",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 57700,
												"name": "TOutput",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								57671,
								57672,
								57676,
								57677,
								57678,
								57679,
								57680,
								57681,
								57686,
								57693
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 105,
							"character": 44,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L105"
						}
					]
				}
			}
		},
		{
			"id": 57701,
			"name": "StepExecutionContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The step's context."
					}
				]
			},
			"children": [
				{
					"id": 57702,
					"name": "workflowId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the workflow."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 134,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L134"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57703,
					"name": "attempt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attempt number of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 139,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L139"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 57704,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The idempoency key of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 144,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L144"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57705,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The idempoency key of the parent step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 149,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L149"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57706,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to prevent release events."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 154,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L154"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 57707,
					"name": "stepName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 159,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L159"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57708,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The action of the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 164,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L164"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "invoke"
							},
							{
								"type": "literal",
								"value": "compensate"
							}
						]
					}
				},
				{
					"id": 57709,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The container used to access resources, such as services, in the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 169,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L169"
						}
					],
					"type": {
						"type": "reference",
						"target": 57925,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 57710,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata passed in the input."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 173,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L173"
						}
					],
					"type": {
						"type": "reference",
						"target": 57946,
						"name": "TransactionMetadata",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 57711,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "inline-tag",
								"tag": "@inheritDoc",
								"text": "types!Context"
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 177,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L177"
						}
					],
					"type": {
						"type": "reference",
						"target": 57954,
						"name": "Context",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 57712,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 181,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L181"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57713,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 185,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L185"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 57714,
					"name": " getStepResult",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 193,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L193"
						}
					],
					"signatures": [
						{
							"id": 57715,
							"name": " getStepResult",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Get access to the result returned by a named step. Returns undefined\nwhen step is not found or when nothing was returned.\n\nAdding a space hides the method from the autocomplete"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 193,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L193"
								}
							],
							"parameters": [
								{
									"id": 57716,
									"name": "stepId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 57717,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "invoke"
											},
											{
												"type": "literal",
												"value": "compensate"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						57702,
						57703,
						57704,
						57705,
						57706,
						57707,
						57708,
						57709,
						57710,
						57711,
						57712,
						57713
					]
				},
				{
					"title": "Methods",
					"children": [
						57714
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 130,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L130"
				}
			]
		},
		{
			"id": 57718,
			"name": "WorkflowTransactionContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 196,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L196"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 57701,
						"name": "StepExecutionContext",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reference",
						"target": 57969,
						"name": "OriginalWorkflowTransactionContext",
						"package": "@medusajs/orchestration",
						"qualifiedName": "TransactionContext"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57719,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57720,
									"name": "invoke",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 198,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57721,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 198,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
												}
											],
											"indexSignatures": [
												{
													"id": 57722,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/type.ts",
															"line": 198,
															"character": 14,
															"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
														}
													],
													"parameters": [
														{
															"id": 57723,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 57724,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 57725,
																	"name": "output",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 198,
																			"character": 31,
																			"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		57725
																	]
																}
															],
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 198,
																	"character": 29,
																	"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L198"
																}
															]
														}
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57720
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 197,
									"character": 39,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L197"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 57726,
			"name": "ReturnWorkflow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An exported workflow, which is the type of a workflow constructed by the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "createWorkflow",
						"target": 57463
					},
					{
						"kind": "text",
						"text": " function. The exported workflow can be invoked to create\nan executable workflow, optionally within a specified container. So, to execute the workflow, you must invoke the exported workflow, then run the\n"
					},
					{
						"kind": "code",
						"text": "`run`"
					},
					{
						"kind": "text",
						"text": " method of the exported workflow."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "To execute a workflow:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nmyWorkflow()\n  .run({\n    input: {\n      name: \"John\"\n    }\n  })\n  .then(({ result }) => {\n    console.log(result)\n  })\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTo specify the container of the workflow, you can pass it as an argument to the call of the exported workflow. This is necessary when executing the workflow\nwithin a Medusa resource such as an API Route or a Subscriber.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nimport type {\n  MedusaRequest,\n  MedusaResponse\n} from \"@medusajs/medusa\";\nimport myWorkflow from \"../../../workflows/hello-world\";\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        name: req.query.name as string\n      }\n    })\n\n  res.send(result)\n}\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 248,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L248"
				}
			],
			"typeParameters": [
				{
					"id": 57756,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 57757,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 57758,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 57727,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 248,
									"character": 67,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L248"
								}
							],
							"signatures": [
								{
									"id": 57728,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 249,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L249"
										}
									],
									"typeParameters": [
										{
											"id": 57729,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 57730,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 57731,
											"name": "container",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 57925,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 57732,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 57733,
																		"name": "__joinerConfig",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 90,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 57978,
																			"name": "ModuleJoinerConfig",
																			"package": "@medusajs/types"
																		}
																	},
																	{
																		"id": 57734,
																		"name": "__definition",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 91,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 58003,
																			"name": "ModuleDefinition",
																			"package": "@medusajs/types"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			57733,
																			57734
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "types/dist/modules-sdk/index.d.ts",
																		"line": 89,
																		"character": 37
																	}
																]
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 58014,
														"name": "LocalWorkflow",
														"package": "@medusajs/orchestration"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": "run"
															},
															{
																"type": "literal",
																"value": "registerStepSuccess"
															},
															{
																"type": "literal",
																"value": "registerStepFailure"
															},
															{
																"type": "literal",
																"value": "cancel"
															}
														]
													}
												],
												"name": "Omit",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 58136,
												"typeArguments": [
													{
														"type": "reference",
														"target": 57756,
														"name": "TData",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 57757,
														"name": "TResult",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 57729,
														"name": "TDataOverride",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 57730,
														"name": "TResultOverride",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												],
												"name": "ExportedWorkflow",
												"package": "@medusajs/workflows-sdk"
											}
										]
									}
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 57735,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 57736,
									"name": "runAsStep",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method executes the workflow as a step. Useful when running a workflow within another.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/execute-another-workflow)."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 265,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L265"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57737,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 265,
													"character": 13,
													"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L265"
												}
											],
											"signatures": [
												{
													"id": 57738,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "The workflow's result"
																	}
																]
															}
														]
													},
													"parameters": [
														{
															"id": 57739,
															"name": "{\n    input,\n  }",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 57740,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 57741,
																			"name": "input",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "The workflow's input."
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "workflows-sdk/src/utils/composer/type.ts",
																					"line": 271,
																					"character": 4,
																					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L271"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "reference",
																						"target": 57756,
																						"name": "TData",
																						"package": "@medusajs/workflows-sdk",
																						"refersToTypeParameter": true
																					},
																					{
																						"type": "reference",
																						"target": 57661,
																						"typeArguments": [
																							{
																								"type": "reference",
																								"target": 57756,
																								"name": "TData",
																								"package": "@medusajs/workflows-sdk",
																								"refersToTypeParameter": true
																							}
																						],
																						"name": "WorkflowData",
																						"package": "@medusajs/workflows-sdk"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				57741
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/type.ts",
																			"line": 267,
																			"character": 5,
																			"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L267"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 57627,
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 57756,
																		"name": "TData",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	},
																	{
																		"type": "reference",
																		"target": 57757,
																		"name": "TResult",
																		"package": "@medusajs/workflows-sdk",
																		"refersToTypeParameter": true
																	}
																],
																"name": "StepFunction",
																"package": "@medusajs/workflows-sdk"
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 57742,
									"name": "run",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method executes a workflow."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 279,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L279"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57743,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 279,
													"character": 7,
													"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L279"
												}
											],
											"signatures": [
												{
													"id": 57744,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"comment": {
														"summary": [],
														"blockTags": [
															{
																"tag": "@returns",
																"content": [
																	{
																		"kind": "text",
																		"text": "Details of the workflow's execution, including its result."
																	}
																]
															}
														]
													},
													"typeParameters": [
														{
															"id": 57746,
															"name": "TDataOverride",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"default": {
																"type": "intrinsic",
																"name": "undefined"
															}
														},
														{
															"id": 57747,
															"name": "TResultOverride",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"default": {
																"type": "intrinsic",
																"name": "undefined"
															}
														}
													],
													"parameters": [
														{
															"id": 57745,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The options to execute the workflow."
																	}
																]
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Parameters"
																},
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "literal",
																			"value": "run"
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 58136,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 57756,
																					"name": "TData",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 57757,
																					"name": "TResult",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 57746,
																					"name": "TDataOverride",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				},
																				{
																					"type": "reference",
																					"target": 57747,
																					"name": "TResultOverride",
																					"package": "@medusajs/workflows-sdk",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "ExportedWorkflow",
																			"package": "@medusajs/workflows-sdk"
																		}
																	}
																],
																"name": "Parameters",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "run"
																},
																"objectType": {
																	"type": "reference",
																	"target": 58136,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 57756,
																			"name": "TData",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 57757,
																			"name": "TResult",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 57746,
																			"name": "TDataOverride",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		},
																		{
																			"type": "reference",
																			"target": 57747,
																			"name": "TResultOverride",
																			"package": "@medusajs/workflows-sdk",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "ExportedWorkflow",
																	"package": "@medusajs/workflows-sdk"
																}
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 57748,
									"name": "getName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the workflow's name."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 289,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L289"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57749,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 289,
													"character": 11,
													"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L289"
												}
											],
											"signatures": [
												{
													"id": 57750,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								},
								{
									"id": 57751,
									"name": "config",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method sets the workflow's configurations."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 293,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L293"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 57752,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 293,
													"character": 10,
													"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L293"
												}
											],
											"signatures": [
												{
													"id": 57753,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 57754,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 57795,
																"name": "TransactionModelOptions",
																"package": "@medusajs/orchestration"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								},
								{
									"id": 57755,
									"name": "hooks",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The workflow's exposed hooks, used to register a handler to consume the hook.\n\nLearn more in [this documentation](https://docs.medusajs.com/learn/fundamentals/workflows/workflow-hooks#how-to-consume-a-hook)."
											}
										]
									},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 299,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L299"
										}
									],
									"type": {
										"type": "reference",
										"target": 58158,
										"typeArguments": [
											{
												"type": "reference",
												"target": 57758,
												"name": "THooks",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											}
										],
										"name": "ConvertHooksToFunctions",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										57736,
										57742,
										57748,
										57751,
										57755
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 256,
									"character": 4,
									"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L256"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 57759,
			"name": "UnwrapWorkflowInputDataType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Extract the raw type of the expected input data of a workflow."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\ntype WorkflowInputData = UnwrapWorkflowInputDataType<typeof myWorkflow>\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 308,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/d73d8e99030415e76359c6406fe0d33fe809bbdc/packages/core/workflows-sdk/src/utils/composer/type.ts#L308"
				}
			],
			"typeParameters": [
				{
					"id": 57760,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 57726,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "ReturnWorkflow",
						"package": "@medusajs/workflows-sdk"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 57760,
					"name": "T",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": 57726,
					"typeArguments": [
						{
							"type": "inferred",
							"name": "TData"
						},
						{
							"type": "inferred",
							"name": "R"
						},
						{
							"type": "inferred",
							"name": "THooks"
						}
					],
					"name": "ReturnWorkflow",
					"package": "@medusajs/workflows-sdk"
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
						"qualifiedName": "TData"
					},
					"name": "TData",
					"package": "@medusajs/workflows-sdk",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 58161,
			"name": "ConditionFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
					"line": 7,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 58167,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "reference",
								"target": 57661,
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58162,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
							"line": 7,
							"character": 58
						}
					],
					"signatures": [
						{
							"id": 58163,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 58164,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 58167,
											"name": "T",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": 57661,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "U"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": 58167,
												"name": "T",
												"package": "@medusajs/workflows-sdk",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": 58167,
														"name": "T",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													}
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 58167,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "reference",
														"target": 57661,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "U"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													},
													"trueType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/workflows-sdk",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 58167,
															"name": "T",
															"package": "@medusajs/workflows-sdk",
															"refersToTypeParameter": true
														}
													}
												}
											},
											"falseType": {
												"type": "reflection",
												"declaration": {
													"id": 58165,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
															"line": 12,
															"character": 6
														}
													]
												}
											}
										}
									}
								},
								{
									"id": 58166,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 57701,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			}
		},
		{
			"id": 58168,
			"name": "ThenFunc",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
					"line": 16,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 58169,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
							"line": 16,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 58170,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 58172,
									"name": "ThenResolver",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 58173,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/workflows-sdk/src/utils/composer/when.ts",
													"line": 16,
													"character": 38
												}
											],
											"signatures": [
												{
													"id": 58174,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"parameters": [
								{
									"id": 58171,
									"name": "resolver",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 58172,
										"name": "ThenResolver",
										"package": "@medusajs/workflows-sdk",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "ReturnType"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 58172,
											"name": "ThenResolver",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "ReturnType",
									"package": "typescript"
								},
								"extendsType": {
									"type": "reference",
									"target": 57661,
									"typeArguments": [
										{
											"type": "inferred",
											"name": "ReturnedWorkflowData"
										}
									],
									"name": "WorkflowData",
									"package": "@medusajs/workflows-sdk"
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 57661,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
														"qualifiedName": "ReturnedWorkflowData"
													},
													"name": "ReturnedWorkflowData",
													"package": "@medusajs/workflows-sdk",
													"refersToTypeParameter": true
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										{
											"type": "intrinsic",
											"name": "undefined"
										}
									]
								},
								"falseType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "ReturnType"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 58172,
											"name": "ThenResolver",
											"package": "@medusajs/workflows-sdk",
											"refersToTypeParameter": true
										}
									],
									"name": "ReturnType",
									"package": "typescript"
								}
							}
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				58216,
				58917,
				58972,
				58983
			]
		},
		{
			"title": "Classes",
			"children": [
				57969,
				58908,
				58869,
				58962,
				58384,
				58183,
				57803,
				57832,
				58598,
				58762,
				58014,
				57479,
				57509
			]
		},
		{
			"title": "Interfaces",
			"children": [
				58826,
				58192,
				58281,
				58215,
				58550,
				58233,
				58997,
				58533,
				58219,
				57954,
				57453,
				57701
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				57946,
				58589,
				57777,
				57795,
				58175,
				58301,
				58989,
				58971,
				58878,
				58297,
				57921,
				58512,
				58211,
				57925,
				58994,
				58937,
				58529,
				58540,
				58555,
				58955,
				58565,
				58259,
				58269,
				58003,
				58933,
				58948,
				58943,
				58253,
				57978,
				58248,
				58571,
				58925,
				58482,
				58486,
				58491,
				58496,
				58476,
				58136,
				57535,
				57436,
				57444,
				57450,
				57815,
				57823,
				57607,
				57612,
				57830,
				57620,
				58505,
				58158,
				57624,
				57627,
				57656,
				57661,
				57669,
				57718,
				57726,
				57759,
				58161,
				58168
			]
		},
		{
			"title": "Variables",
			"children": [
				57814
			]
		},
		{
			"title": "Functions",
			"children": [
				57525,
				57426,
				57463,
				57546,
				57550
			]
		}
	],
	"packageName": "@medusajs/workflows-sdk",
	"symbolIdMap": {
		"57418": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/index.ts",
			"qualifiedName": ""
		},
		"57426": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"57427": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"57428": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeInput"
		},
		"57429": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultOutput"
		},
		"57430": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultCompensateInput"
		},
		"57431": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "nameOrConfig"
		},
		"57432": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"57433": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type.name"
		},
		"57434": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "invokeFn"
		},
		"57435": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "compensateFn"
		},
		"57436": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "InvokeFn"
		},
		"57437": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"57438": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"57439": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"57440": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"57441": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInput"
		},
		"57442": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TOutput"
		},
		"57443": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TCompensateInput"
		},
		"57444": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "CompensateFn"
		},
		"57445": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"57446": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"57447": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"57448": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"57449": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "T"
		},
		"57450": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "LocalStepConfig"
		},
		"57451": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"57452": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type.name"
		},
		"57453": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions"
		},
		"57454": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.stepName"
		},
		"57455": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.stepConfig"
		},
		"57456": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.input"
		},
		"57457": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.invokeFn"
		},
		"57458": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.compensateFn"
		},
		"57459": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TStepInputs"
		},
		"57460": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeInput"
		},
		"57461": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeResultOutput"
		},
		"57462": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "ApplyStepOptions.TInvokeResultCompensateInput"
		},
		"57463": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"57464": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"57465": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TData"
		},
		"57466": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TResult"
		},
		"57467": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "THooks"
		},
		"57468": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "nameOrConfig"
		},
		"57469": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"57470": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type.name"
		},
		"57471": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "composer"
		},
		"57472": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"57473": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"57474": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "input"
		},
		"57479": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"57480": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.permanentFailure"
		},
		"57481": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.permanentFailure"
		},
		"57482": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "message"
		},
		"57483": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "compensateInput"
		},
		"57484": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.skip"
		},
		"57485": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.skip"
		},
		"57486": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.__constructor"
		},
		"57487": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"57488": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"57489": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"57490": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "output"
		},
		"57491": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "compensateInput"
		},
		"57507": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"57508": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"57509": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse"
		},
		"57510": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.__constructor"
		},
		"57511": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse"
		},
		"57512": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.TResult"
		},
		"57513": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.THooks"
		},
		"57514": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "$result"
		},
		"57515": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "options"
		},
		"57516": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type"
		},
		"57517": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type.hooks"
		},
		"57518": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.__type"
		},
		"57519": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.$result"
		},
		"57520": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.options"
		},
		"57521": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type"
		},
		"57522": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "__type.hooks"
		},
		"57523": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.TResult"
		},
		"57524": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/helpers/workflow-response.ts",
			"qualifiedName": "WorkflowResponse.THooks"
		},
		"57525": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "createHook"
		},
		"57526": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "createHook"
		},
		"57527": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Name"
		},
		"57528": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "TInvokeInput"
		},
		"57529": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "TInvokeOutput"
		},
		"57530": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "name"
		},
		"57531": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "input"
		},
		"57532": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "options"
		},
		"57533": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type"
		},
		"57534": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.resultValidator"
		},
		"57535": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Hook"
		},
		"57536": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type"
		},
		"57537": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.__type"
		},
		"57538": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.name"
		},
		"57539": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.getResult"
		},
		"57540": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type.getResult"
		},
		"57541": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type. output"
		},
		"57542": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "__type. input"
		},
		"57543": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Name"
		},
		"57544": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Input"
		},
		"57545": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/create-hook.ts",
			"qualifiedName": "Output"
		},
		"57546": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"57547": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"57548": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "TResult"
		},
		"57549": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "steps"
		},
		"57550": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"57551": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"57552": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"57553": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "RFinal"
		},
		"57554": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "values"
		},
		"57555": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "func"
		},
		"57607": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunctionResult"
		},
		"57608": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57609": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57610": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"57611": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"57612": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunctionReturnConfig"
		},
		"57613": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57614": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"57615": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"57616": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"57617": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57618": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"57619": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"57620": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "HookHandler"
		},
		"57621": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57622": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57623": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"57624": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "Void"
		},
		"57625": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57626": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type. $$type"
		},
		"57627": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunction"
		},
		"57628": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57629": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57630": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"57631": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57632": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": " $$type"
		},
		"57633": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57634": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"57635": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"57636": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"57637": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57638": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"57639": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57640": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"57641": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"57642": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"57643": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57644": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"57645": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57646": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57647": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"57648": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57649": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"57650": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"57651": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"57652": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57653": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"57654": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TInput"
		},
		"57655": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"57656": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowDataProperties"
		},
		"57657": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57658": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"57659": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"57660": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"57661": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowData"
		},
		"57662": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57663": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"57664": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"57665": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"57666": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57667": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"57668": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"57669": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "CreateWorkflowComposerContext"
		},
		"57670": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57671": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"57672": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks_"
		},
		"57673": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57674": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.declared"
		},
		"57675": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.registered"
		},
		"57676": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooksCallback_"
		},
		"57677": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.workflowId"
		},
		"57678": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.flow"
		},
		"57679": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.isAsync"
		},
		"57680": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.handlers"
		},
		"57681": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.stepBinder"
		},
		"57682": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57683": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57684": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"57685": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"57686": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hookBinder"
		},
		"57687": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57688": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57689": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "name"
		},
		"57690": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"57691": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57692": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57693": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.parallelizeBinder"
		},
		"57694": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57695": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57696": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"57697": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57698": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57699": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"57700": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"57701": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext"
		},
		"57702": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.workflowId"
		},
		"57703": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.attempt"
		},
		"57704": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.idempotencyKey"
		},
		"57705": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.parentStepIdempotencyKey"
		},
		"57706": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.preventReleaseEvents"
		},
		"57707": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.stepName"
		},
		"57708": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.action"
		},
		"57709": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.container"
		},
		"57710": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.metadata"
		},
		"57711": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.context"
		},
		"57712": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.eventGroupId"
		},
		"57713": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.transactionId"
		},
		"57714": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. getStepResult"
		},
		"57715": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext. getStepResult"
		},
		"57716": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "stepId"
		},
		"57717": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "action"
		},
		"57718": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowTransactionContext"
		},
		"57719": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57720": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.invoke"
		},
		"57721": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57722": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__index"
		},
		"57724": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57725": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.output"
		},
		"57726": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ReturnWorkflow"
		},
		"57727": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57728": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57729": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"57730": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"57731": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "container"
		},
		"57732": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57733": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"57734": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"57735": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57736": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.runAsStep"
		},
		"57737": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57738": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57740": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57741": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.input"
		},
		"57742": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.run"
		},
		"57743": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57744": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57745": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "args"
		},
		"57746": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"57747": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"57748": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.getName"
		},
		"57749": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57750": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57751": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"57752": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57753": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"57754": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"57755": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks"
		},
		"57756": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TData"
		},
		"57757": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TResult"
		},
		"57758": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THooks"
		},
		"57759": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "UnwrapWorkflowInputDataType"
		},
		"57760": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"57777": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionStepsDefinition"
		},
		"57778": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57779": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.uuid"
		},
		"57780": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.action"
		},
		"57781": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.continueOnPermanentFailure"
		},
		"57782": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.skipOnPermanentFailure"
		},
		"57783": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noCompensation"
		},
		"57784": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxRetries"
		},
		"57785": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryInterval"
		},
		"57786": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryIntervalAwaiting"
		},
		"57787": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"57788": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.async"
		},
		"57789": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.nested"
		},
		"57790": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.backgroundExecution"
		},
		"57791": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.compensateAsync"
		},
		"57792": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noWait"
		},
		"57793": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.saveResponse"
		},
		"57794": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.next"
		},
		"57795": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionModelOptions"
		},
		"57796": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"57797": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"57798": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.store"
		},
		"57799": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retentionTime"
		},
		"57800": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.storeExecution"
		},
		"57801": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.idempotent"
		},
		"57802": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.schedule"
		},
		"57803": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse"
		},
		"57804": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.isSkipStepResponse"
		},
		"57805": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.isSkipStepResponse"
		},
		"57806": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "error"
		},
		"57807": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse.__constructor"
		},
		"57808": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "SkipStepResponse"
		},
		"57809": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "message"
		},
		"57810": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "stepResponse"
		},
		"57811": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.#private"
		},
		"57812": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"57813": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"57814": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/symbol.ts",
			"qualifiedName": "SymbolWorkflowHook"
		},
		"57815": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "Func1"
		},
		"57816": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"57817": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"57818": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "input"
		},
		"57819": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"57820": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "context"
		},
		"57821": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"57822": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "U"
		},
		"57823": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "Func"
		},
		"57824": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"57825": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"57826": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "input"
		},
		"57827": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "context"
		},
		"57828": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"57829": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "U"
		},
		"57830": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "KeysOfUnion"
		},
		"57831": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"57832": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder"
		},
		"57833": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.__constructor"
		},
		"57834": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder"
		},
		"57835": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"57836": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.steps"
		},
		"57837": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges_"
		},
		"57838": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges"
		},
		"57839": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges"
		},
		"57840": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.load"
		},
		"57841": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.load"
		},
		"57842": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"57843": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.addAction"
		},
		"57844": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.addAction"
		},
		"57845": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"57846": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"57847": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.replaceAction"
		},
		"57848": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.replaceAction"
		},
		"57849": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"57850": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"57851": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"57852": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionBefore"
		},
		"57853": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionBefore"
		},
		"57854": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"57855": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"57856": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"57857": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionAfter"
		},
		"57858": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionAfter"
		},
		"57859": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "existingAction"
		},
		"57860": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"57861": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"57862": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendTo"
		},
		"57863": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendTo"
		},
		"57864": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"57865": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "newStep"
		},
		"57866": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendAction"
		},
		"57867": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.appendAction"
		},
		"57868": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"57869": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "to"
		},
		"57870": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "options"
		},
		"57871": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.move"
		},
		"57872": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.move"
		},
		"57873": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"57874": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"57875": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__2"
		},
		"57876": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type"
		},
		"57877": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type.runInParallel"
		},
		"57878": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "__type.mergeNext"
		},
		"57879": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAction"
		},
		"57880": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAction"
		},
		"57881": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"57882": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"57883": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAndMergeNextAction"
		},
		"57884": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.moveAndMergeNextAction"
		},
		"57885": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actionToMove"
		},
		"57886": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "targetAction"
		},
		"57887": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.mergeActions"
		},
		"57888": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.mergeActions"
		},
		"57889": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "where"
		},
		"57890": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "actions"
		},
		"57891": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.deleteAction"
		},
		"57892": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.deleteAction"
		},
		"57893": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"57894": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"57895": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.pruneAction"
		},
		"57896": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.pruneAction"
		},
		"57897": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"57898": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findStepByAction"
		},
		"57899": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findStepByAction"
		},
		"57900": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"57901": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"57902": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findOrThrowStepByAction"
		},
		"57903": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findOrThrowStepByAction"
		},
		"57904": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"57905": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"57906": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findParentStepByAction"
		},
		"57907": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findParentStepByAction"
		},
		"57908": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "action"
		},
		"57909": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "step"
		},
		"57910": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findLastStep"
		},
		"57911": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.findLastStep"
		},
		"57912": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "steps"
		},
		"57913": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.updateDepths"
		},
		"57914": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.updateDepths"
		},
		"57915": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "startingStep"
		},
		"57916": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "parent"
		},
		"57917": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "incr"
		},
		"57918": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "beginFrom"
		},
		"57919": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.build"
		},
		"57920": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "OrchestratorBuilder.build"
		},
		"57921": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowHandler"
		},
		"57922": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"57923": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"57924": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"57925": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"57926": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"57927": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"57928": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"57929": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"57930": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"57931": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"57932": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"57933": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"57934": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"57935": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"57936": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"57937": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"57938": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"57939": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "name"
		},
		"57940": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "registration"
		},
		"57941": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"57942": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.createScope"
		},
		"57943": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"57944": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"57945": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"57946": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionMetadata"
		},
		"57947": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"57948": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.model_id"
		},
		"57949": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.idempotency_key"
		},
		"57950": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.action"
		},
		"57951": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.action_type"
		},
		"57952": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.attempt"
		},
		"57953": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.timestamp"
		},
		"57954": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"57955": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"57956": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"57957": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"57958": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"57959": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"57960": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"57961": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"57962": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"57963": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"57964": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"57965": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"57966": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"57967": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"57968": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"57969": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext"
		},
		"57970": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.__constructor"
		},
		"57971": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext"
		},
		"57972": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "payload"
		},
		"57973": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "invoke"
		},
		"57974": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "compensate"
		},
		"57975": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.payload"
		},
		"57976": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.invoke"
		},
		"57977": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionContext.compensate"
		},
		"57978": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"57979": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57980": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"57981": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"57982": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"57983": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57984": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"57985": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"57986": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"57987": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"57988": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"57989": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"57990": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"57991": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"57992": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"57993": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"57994": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"57995": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"57996": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"57997": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"57998": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"57999": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58000": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"58001": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"58002": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"58003": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"58004": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58005": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"58006": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"58007": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"58008": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolvePath"
		},
		"58009": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"58010": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"58011": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"58012": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__passSharedContainer"
		},
		"58013": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"58014": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow"
		},
		"58015": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.__constructor"
		},
		"58016": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow"
		},
		"58017": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "workflowId"
		},
		"58018": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "modulesLoaded"
		},
		"58019": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58020": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"58021": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"58022": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container_"
		},
		"58023": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.workflowId"
		},
		"58024": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.flow"
		},
		"58025": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.customOptions"
		},
		"58026": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.workflow"
		},
		"58027": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.handlers"
		},
		"58028": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.medusaContext"
		},
		"58029": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"58030": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"58031": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"58032": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "modulesLoaded"
		},
		"58033": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58034": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"58035": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"58036": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.resolveContainer"
		},
		"58037": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.contextualizedMedusaModules"
		},
		"58038": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.commit"
		},
		"58039": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.commit"
		},
		"58040": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getFlow"
		},
		"58041": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getFlow"
		},
		"58042": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerEventCallbacks"
		},
		"58043": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.run"
		},
		"58044": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.run"
		},
		"58045": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "uniqueTransactionId"
		},
		"58046": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "input"
		},
		"58047": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"58048": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"58049": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "flowMetadata"
		},
		"58050": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58051": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"58052": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"58053": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"58054": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"58055": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"58056": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"58058": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getRunningTransaction"
		},
		"58059": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.getRunningTransaction"
		},
		"58060": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "uniqueTransactionId"
		},
		"58061": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"58062": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.cancel"
		},
		"58063": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.cancel"
		},
		"58064": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "transactionOrTransactionId"
		},
		"58065": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "_"
		},
		"58066": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"58067": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"58068": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepSuccess"
		},
		"58069": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepSuccess"
		},
		"58070": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "idempotencyKey"
		},
		"58071": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "response"
		},
		"58072": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"58073": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"58074": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepFailure"
		},
		"58075": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.registerStepFailure"
		},
		"58076": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "idempotencyKey"
		},
		"58077": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "error"
		},
		"58078": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "context"
		},
		"58079": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "subscribe"
		},
		"58080": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.setOptions"
		},
		"58081": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.setOptions"
		},
		"58082": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"58083": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.addAction"
		},
		"58084": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.addAction"
		},
		"58085": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58086": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"58087": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"58088": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.replaceAction"
		},
		"58089": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.replaceAction"
		},
		"58090": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"58091": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58092": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"58093": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"58094": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionBefore"
		},
		"58095": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionBefore"
		},
		"58096": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"58097": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58098": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"58099": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"58100": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionAfter"
		},
		"58101": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.insertActionAfter"
		},
		"58102": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "existingAction"
		},
		"58103": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58104": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"58105": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"58106": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.appendAction"
		},
		"58107": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.appendAction"
		},
		"58108": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58109": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "to"
		},
		"58110": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"58111": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "options"
		},
		"58112": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAction"
		},
		"58113": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAction"
		},
		"58114": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actionToMove"
		},
		"58115": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "targetAction"
		},
		"58116": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAndMergeNextAction"
		},
		"58117": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.moveAndMergeNextAction"
		},
		"58118": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actionToMove"
		},
		"58119": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "targetAction"
		},
		"58120": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.mergeActions"
		},
		"58121": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.mergeActions"
		},
		"58122": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "where"
		},
		"58123": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "actions"
		},
		"58124": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.deleteAction"
		},
		"58125": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.deleteAction"
		},
		"58126": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58127": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "parentSteps"
		},
		"58128": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.pruneAction"
		},
		"58129": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.pruneAction"
		},
		"58130": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58131": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.assertHandler"
		},
		"58132": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.assertHandler"
		},
		"58133": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "handler"
		},
		"58134": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "action"
		},
		"58135": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "LocalWorkflow.onLoad"
		},
		"58136": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "ExportedWorkflow"
		},
		"58137": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58138": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.run"
		},
		"58139": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58140": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58141": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"58142": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.registerStepSuccess"
		},
		"58143": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58144": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58145": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"58146": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.registerStepFailure"
		},
		"58147": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58148": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58149": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"58150": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.cancel"
		},
		"58151": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58152": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58153": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "args"
		},
		"58154": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"58155": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResult"
		},
		"58156": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TDataOverride"
		},
		"58157": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResultOverride"
		},
		"58158": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ConvertHooksToFunctions"
		},
		"58159": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58160": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THooks"
		},
		"58161": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ConditionFunction"
		},
		"58162": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58163": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58164": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "input"
		},
		"58165": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58166": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "context"
		},
		"58167": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "T"
		},
		"58168": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ThenFunc"
		},
		"58169": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58170": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58171": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "resolver"
		},
		"58172": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "ThenResolver"
		},
		"58173": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58174": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/when.ts",
			"qualifiedName": "__type"
		},
		"58175": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "SchedulerOptions"
		},
		"58176": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58177": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.concurrency"
		},
		"58178": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.numberOfExecutions"
		},
		"58179": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58180": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cron"
		},
		"58181": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58182": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.interval"
		},
		"58183": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror"
		},
		"58184": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.__constructor"
		},
		"58185": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror"
		},
		"58186": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "name"
		},
		"58187": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "message"
		},
		"58188": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "stepResponse"
		},
		"58189": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.#private"
		},
		"58190": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"58191": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/errors.ts",
			"qualifiedName": "BaseStepErrror.getStepResponse"
		},
		"58192": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep"
		},
		"58193": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.next"
		},
		"58194": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.depth"
		},
		"58195": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/orchestrator-builder.ts",
			"qualifiedName": "InternalStep.parent"
		},
		"58196": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.uuid"
		},
		"58197": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.action"
		},
		"58198": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.continueOnPermanentFailure"
		},
		"58199": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.skipOnPermanentFailure"
		},
		"58200": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noCompensation"
		},
		"58201": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.maxRetries"
		},
		"58202": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryInterval"
		},
		"58203": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.retryIntervalAwaiting"
		},
		"58204": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timeout"
		},
		"58205": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.async"
		},
		"58206": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.nested"
		},
		"58207": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.backgroundExecution"
		},
		"58208": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.compensateAsync"
		},
		"58209": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.noWait"
		},
		"58210": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.saveResponse"
		},
		"58211": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowStepHandler"
		},
		"58212": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58213": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58214": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "args"
		},
		"58215": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ModuleImplementations"
		},
		"58216": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType"
		},
		"58217": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType.INVOKE"
		},
		"58218": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionHandlerType.COMPENSATE"
		},
		"58219": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"58220": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"58221": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"58222": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"58223": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"58224": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"58225": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"58226": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"58227": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"58228": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"58229": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"58230": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"58231": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"58232": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"58233": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"58234": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"58235": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"58236": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"58237": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"58238": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"58239": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"58240": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"58241": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"58242": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"58243": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"58244": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"58245": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"58246": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"58247": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"58248": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"58249": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58250": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"58251": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.filterable"
		},
		"58252": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.hasMany"
		},
		"58253": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"58254": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58255": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"58256": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"58257": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"58258": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"58259": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"58260": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58261": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"58262": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"58263": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"58264": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"58265": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"58266": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"58267": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"58268": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"58269": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"58270": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58271": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"58272": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"58273": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"58274": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58275": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"58276": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"58277": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"58278": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"58279": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"58280": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"58281": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition"
		},
		"58282": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.id"
		},
		"58283": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.handler"
		},
		"58284": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58285": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58286": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "container"
		},
		"58287": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "context"
		},
		"58288": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.orchestrator"
		},
		"58289": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.flow_"
		},
		"58290": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.handlers_"
		},
		"58291": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58292": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"58293": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"58294": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.options"
		},
		"58295": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.requiredModules"
		},
		"58296": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowDefinition.optionalModules"
		},
		"58297": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "StepHandler"
		},
		"58298": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type"
		},
		"58299": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type.invoke"
		},
		"58300": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/local-workflow.ts",
			"qualifiedName": "__type.compensate"
		},
		"58301": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "DistributedTransactionEvents"
		},
		"58302": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58303": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onBegin"
		},
		"58304": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58305": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58306": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58307": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58308": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58309": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onResume"
		},
		"58310": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58311": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58312": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58313": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58314": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58315": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onFinish"
		},
		"58316": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58317": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58318": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58319": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58320": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58321": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.result"
		},
		"58322": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.errors"
		},
		"58323": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onTimeout"
		},
		"58324": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58325": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58326": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58327": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58328": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58329": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepBegin"
		},
		"58330": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58331": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58332": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58333": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58334": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58335": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58336": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepSuccess"
		},
		"58337": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58338": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58339": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58340": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58341": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58342": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58343": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepFailure"
		},
		"58344": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58345": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58346": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58347": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58348": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58349": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58350": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepAwaiting"
		},
		"58351": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58352": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58353": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58354": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58355": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58356": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58357": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateBegin"
		},
		"58358": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58359": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58360": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58361": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58362": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58363": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateStepSuccess"
		},
		"58364": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58365": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58366": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58367": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58368": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58369": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58370": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onCompensateStepFailure"
		},
		"58371": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58372": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58373": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58374": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58375": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58376": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58377": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.onStepSkipped"
		},
		"58378": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58379": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58380": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "args"
		},
		"58381": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58382": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.step"
		},
		"58383": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transaction"
		},
		"58384": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction"
		},
		"58385": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.keyValueStore"
		},
		"58386": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setStorage"
		},
		"58387": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setStorage"
		},
		"58388": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "storage"
		},
		"58389": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.keyPrefix"
		},
		"58390": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.loadTransaction"
		},
		"58391": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.loadTransaction"
		},
		"58392": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "modelId"
		},
		"58393": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "transactionId"
		},
		"58394": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "options"
		},
		"58395": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type"
		},
		"58396": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"58397": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.__constructor"
		},
		"58398": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction"
		},
		"58399": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "flow"
		},
		"58400": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handler"
		},
		"58401": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "payload"
		},
		"58402": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "errors"
		},
		"58403": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"58404": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.#private"
		},
		"58405": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.flow"
		},
		"58406": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.handler"
		},
		"58407": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.payload"
		},
		"58408": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.modelId"
		},
		"58409": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.transactionId"
		},
		"58410": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.runId"
		},
		"58411": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.errors"
		},
		"58412": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.context"
		},
		"58413": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getFlow"
		},
		"58414": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getFlow"
		},
		"58415": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getContext"
		},
		"58416": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getContext"
		},
		"58417": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getErrors"
		},
		"58418": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getErrors"
		},
		"58419": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"58420": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addError"
		},
		"58421": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addError"
		},
		"58422": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"58423": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"58424": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "error"
		},
		"58425": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addResponse"
		},
		"58426": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.addResponse"
		},
		"58427": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"58428": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"58429": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "response"
		},
		"58430": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasFinished"
		},
		"58431": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasFinished"
		},
		"58432": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getState"
		},
		"58433": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getState"
		},
		"58434": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.isPartiallyCompleted"
		},
		"58435": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.isPartiallyCompleted"
		},
		"58436": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canInvoke"
		},
		"58437": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canInvoke"
		},
		"58438": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canRevert"
		},
		"58439": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.canRevert"
		},
		"58440": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTimeout"
		},
		"58441": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTimeout"
		},
		"58442": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTimeout"
		},
		"58443": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTimeout"
		},
		"58444": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.saveCheckpoint"
		},
		"58445": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.saveCheckpoint"
		},
		"58446": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "ttl"
		},
		"58447": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleRetry"
		},
		"58448": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleRetry"
		},
		"58449": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"58450": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"58451": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearRetry"
		},
		"58452": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearRetry"
		},
		"58453": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"58454": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleTransactionTimeout"
		},
		"58455": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleTransactionTimeout"
		},
		"58456": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"58457": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearTransactionTimeout"
		},
		"58458": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearTransactionTimeout"
		},
		"58459": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleStepTimeout"
		},
		"58460": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.scheduleStepTimeout"
		},
		"58461": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"58462": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "interval"
		},
		"58463": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearStepTimeout"
		},
		"58464": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.clearStepTimeout"
		},
		"58465": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "step"
		},
		"58466": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setTemporaryData"
		},
		"58467": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.setTemporaryData"
		},
		"58468": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"58469": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "value"
		},
		"58470": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTemporaryData"
		},
		"58471": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.getTemporaryData"
		},
		"58472": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"58473": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTemporaryData"
		},
		"58474": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "DistributedTransaction.hasTemporaryData"
		},
		"58475": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "key"
		},
		"58476": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "WorkflowResult"
		},
		"58477": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58478": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.errors"
		},
		"58479": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transaction"
		},
		"58480": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.result"
		},
		"58481": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TResult"
		},
		"58482": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRunOptions"
		},
		"58483": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58484": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.input"
		},
		"58485": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"58486": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRegisterStepSuccessOptions"
		},
		"58487": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58488": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"58489": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.response"
		},
		"58490": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"58491": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowRegisterStepFailureOptions"
		},
		"58492": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58493": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"58494": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.response"
		},
		"58495": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "TData"
		},
		"58496": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "FlowCancelOptions"
		},
		"58497": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58498": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transaction"
		},
		"58499": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.transactionId"
		},
		"58500": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.context"
		},
		"58501": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"58502": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.logOnError"
		},
		"58503": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.events"
		},
		"58504": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.container"
		},
		"58505": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "ConvertHookToObject"
		},
		"58506": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58507": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"58508": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "invoke"
		},
		"58509": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "compensate"
		},
		"58510": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TCompensateInput"
		},
		"58511": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "THook"
		},
		"58512": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "WorkflowStepHandlerArguments"
		},
		"58513": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58514": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.container"
		},
		"58515": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.payload"
		},
		"58516": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.invoke"
		},
		"58517": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58518": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.__index"
		},
		"58520": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.compensate"
		},
		"58521": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type"
		},
		"58522": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.__index"
		},
		"58524": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.metadata"
		},
		"58525": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.transaction"
		},
		"58526": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.step"
		},
		"58527": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.orchestrator"
		},
		"58528": {
			"sourceFileName": "../../../../packages/core/orchestration/src/workflow/workflow-manager.ts",
			"qualifiedName": "__type.context"
		},
		"58529": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"58530": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"58531": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"58532": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"58533": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"58534": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"58535": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"58536": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"58537": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"58539": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"58540": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"58541": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"58542": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"58543": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"58544": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"58545": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"58546": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"58547": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"58548": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"58549": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"58550": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"58551": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"58552": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"58553": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.filterable"
		},
		"58554": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"58555": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"58556": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"58557": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"58558": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"58559": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"58560": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"58561": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"58562": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"58563": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"58564": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"58565": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "CustomModuleDefinition"
		},
		"58566": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58567": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"58568": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"58569": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"58570": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"58571": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"58572": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58573": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"58574": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"58575": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"58576": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"58577": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"58578": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"58579": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"58580": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"58581": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"58582": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"58583": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"58584": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"58585": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"58586": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"58587": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.discoveryPath"
		},
		"58588": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"58589": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStepHandler"
		},
		"58590": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"58591": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"58592": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "actionId"
		},
		"58593": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "handlerType"
		},
		"58594": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "payload"
		},
		"58595": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "transaction"
		},
		"58596": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "step"
		},
		"58597": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "orchestrator"
		},
		"58598": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator"
		},
		"58599": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.ROOT_STEP"
		},
		"58600": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.DEFAULT_TTL"
		},
		"58601": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.DEFAULT_RETRIES"
		},
		"58602": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.workflowOptions"
		},
		"58603": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getWorkflowOptions"
		},
		"58604": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getWorkflowOptions"
		},
		"58605": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "modelId"
		},
		"58606": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.traceTransaction"
		},
		"58607": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58608": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58609": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transactionResume"
		},
		"58610": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58611": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58612": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "args"
		},
		"58613": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "metadata"
		},
		"58614": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58615": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.model_id"
		},
		"58616": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction_id"
		},
		"58617": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.flow_metadata"
		},
		"58618": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58619": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"58620": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"58621": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"58622": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"58623": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"58624": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"58626": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.traceStep"
		},
		"58627": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58628": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58629": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "handler"
		},
		"58630": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58631": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58632": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "args"
		},
		"58633": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "metadata"
		},
		"58634": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58635": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.action"
		},
		"58636": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.type"
		},
		"58637": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.step_id"
		},
		"58638": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.step_uuid"
		},
		"58639": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.attempts"
		},
		"58640": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.failures"
		},
		"58641": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.async"
		},
		"58642": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.idempotency_key"
		},
		"58643": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.clone"
		},
		"58644": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.clone"
		},
		"58645": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "orchestrator"
		},
		"58646": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.SEPARATOR"
		},
		"58647": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getKeyName"
		},
		"58648": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getKeyName"
		},
		"58649": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "params"
		},
		"58650": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepSuccess"
		},
		"58651": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"58652": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepTimeout"
		},
		"58653": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.setStepFailure"
		},
		"58654": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.loadTransactionById"
		},
		"58655": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.buildSteps"
		},
		"58656": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getStepByAction"
		},
		"58657": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getTransactionAndStepFromIdempotencyKey"
		},
		"58658": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.__constructor"
		},
		"58659": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator"
		},
		"58660": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"58661": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58662": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.id"
		},
		"58663": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.definition"
		},
		"58664": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.options"
		},
		"58665": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.isClone"
		},
		"58666": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.id"
		},
		"58667": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.invokeSteps"
		},
		"58668": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.compensateSteps"
		},
		"58669": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.definition"
		},
		"58670": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.options"
		},
		"58671": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getPreviousStep"
		},
		"58672": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getOptions"
		},
		"58673": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getOptions"
		},
		"58674": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getInvokeSteps"
		},
		"58675": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.getCompensationSteps"
		},
		"58676": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canMoveForward"
		},
		"58677": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canMoveBackward"
		},
		"58678": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.canContinue"
		},
		"58679": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.hasExpired"
		},
		"58680": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkTransactionTimeout"
		},
		"58681": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkStepTimeout"
		},
		"58682": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.checkAllSteps"
		},
		"58683": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.computeCurrentTransactionState"
		},
		"58684": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.flagStepsToRevert"
		},
		"58685": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeNext"
		},
		"58686": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.finalizeTransaction"
		},
		"58687": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.prepareStepForExecution"
		},
		"58688": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createStepPayload"
		},
		"58689": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.prepareHandlerArgs"
		},
		"58690": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createStepExecutionPromise"
		},
		"58691": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeSyncStep"
		},
		"58692": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.executeAsyncStep"
		},
		"58693": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepExpiration"
		},
		"58694": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepSuccess"
		},
		"58695": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.handleStepFailure"
		},
		"58696": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.resume"
		},
		"58697": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.resume"
		},
		"58698": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"58699": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.cancelTransaction"
		},
		"58700": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.cancelTransaction"
		},
		"58701": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"58702": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.parseFlowOptions"
		},
		"58703": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.createTransactionFlow"
		},
		"58704": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.beginTransaction"
		},
		"58705": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.beginTransaction"
		},
		"58706": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"58707": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58708": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transactionId"
		},
		"58709": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"58710": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.payload"
		},
		"58711": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.flowMetadata"
		},
		"58712": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58713": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"58714": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"58715": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"58716": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"58717": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"58718": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"58720": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"58721": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58722": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58723": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"58724": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retrieveExistingTransaction"
		},
		"58725": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.retrieveExistingTransaction"
		},
		"58726": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transactionId"
		},
		"58727": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "handler"
		},
		"58728": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "options"
		},
		"58729": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58730": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"58731": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"58732": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.skipStep"
		},
		"58733": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"58734": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58735": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"58736": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"58737": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"58738": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepSuccess"
		},
		"58739": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepSuccess"
		},
		"58740": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"58741": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58742": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"58743": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"58744": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"58745": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.response"
		},
		"58746": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"58747": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58748": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58749": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"58750": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepFailure"
		},
		"58751": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepFailure"
		},
		"58752": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__0"
		},
		"58753": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58754": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.responseIdempotencyKey"
		},
		"58755": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.error"
		},
		"58756": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.handler"
		},
		"58757": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.transaction"
		},
		"58758": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type.onLoad"
		},
		"58759": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58760": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "__type"
		},
		"58761": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-orchestrator.ts",
			"qualifiedName": "transaction"
		},
		"58762": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep"
		},
		"58765": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.stepFailed"
		},
		"58766": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.id"
		},
		"58767": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.uuid"
		},
		"58768": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.depth"
		},
		"58769": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.definition"
		},
		"58770": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.invoke"
		},
		"58771": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"58772": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"58773": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"58774": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.compensate"
		},
		"58775": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"58776": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"58777": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"58778": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.attempts"
		},
		"58779": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.failures"
		},
		"58780": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.lastAttempt"
		},
		"58781": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.retryRescheduledAt"
		},
		"58782": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasScheduledRetry"
		},
		"58783": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.timedOutAt"
		},
		"58784": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.startedAt"
		},
		"58785": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.next"
		},
		"58786": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.saveResponse"
		},
		"58787": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getStates"
		},
		"58788": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getStates"
		},
		"58789": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type"
		},
		"58790": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.state"
		},
		"58791": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "__type.status"
		},
		"58792": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.beginCompensation"
		},
		"58793": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.beginCompensation"
		},
		"58794": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isCompensating"
		},
		"58795": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isCompensating"
		},
		"58796": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isInvoking"
		},
		"58797": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.isInvoking"
		},
		"58798": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeState"
		},
		"58799": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeState"
		},
		"58800": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "toState"
		},
		"58801": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeStatus"
		},
		"58802": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.changeStatus"
		},
		"58803": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "toStatus"
		},
		"58804": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryScheduled"
		},
		"58805": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryScheduled"
		},
		"58806": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryInterval"
		},
		"58807": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasRetryInterval"
		},
		"58808": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasTimeout"
		},
		"58809": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasTimeout"
		},
		"58810": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getTimeout"
		},
		"58811": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.getTimeout"
		},
		"58812": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetry"
		},
		"58813": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetry"
		},
		"58814": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasAwaitingRetry"
		},
		"58815": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.hasAwaitingRetry"
		},
		"58816": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetryAwaiting"
		},
		"58817": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canRetryAwaiting"
		},
		"58818": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canInvoke"
		},
		"58819": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canInvoke"
		},
		"58820": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "flowState"
		},
		"58821": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCompensate"
		},
		"58822": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCompensate"
		},
		"58823": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "flowState"
		},
		"58824": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCancel"
		},
		"58825": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/transaction-step.ts",
			"qualifiedName": "TransactionStep.canCancel"
		},
		"58826": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage"
		},
		"58827": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.get"
		},
		"58828": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.get"
		},
		"58829": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "key"
		},
		"58830": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "options"
		},
		"58831": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "__type"
		},
		"58832": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"58833": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.list"
		},
		"58834": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.list"
		},
		"58835": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.save"
		},
		"58836": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.save"
		},
		"58837": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "key"
		},
		"58838": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "data"
		},
		"58839": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "ttl"
		},
		"58840": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "options"
		},
		"58841": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleRetry"
		},
		"58842": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleRetry"
		},
		"58843": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"58844": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"58845": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"58846": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"58847": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearRetry"
		},
		"58848": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearRetry"
		},
		"58849": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"58850": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"58851": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleTransactionTimeout"
		},
		"58852": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleTransactionTimeout"
		},
		"58853": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"58854": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"58855": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"58856": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleStepTimeout"
		},
		"58857": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.scheduleStepTimeout"
		},
		"58858": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"58859": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"58860": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "timestamp"
		},
		"58861": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "interval"
		},
		"58862": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearTransactionTimeout"
		},
		"58863": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearTransactionTimeout"
		},
		"58864": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"58865": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearStepTimeout"
		},
		"58866": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "IDistributedTransactionStorage.clearStepTimeout"
		},
		"58867": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "transaction"
		},
		"58868": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/datastore/abstract-storage.ts",
			"qualifiedName": "step"
		},
		"58869": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint"
		},
		"58870": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.__constructor"
		},
		"58871": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint"
		},
		"58872": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "flow"
		},
		"58873": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"58874": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "errors"
		},
		"58875": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.flow"
		},
		"58876": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.context"
		},
		"58877": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionCheckpoint.errors"
		},
		"58878": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionFlow"
		},
		"58879": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58880": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.modelId"
		},
		"58881": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.options"
		},
		"58882": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.definition"
		},
		"58883": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.transactionId"
		},
		"58884": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.runId"
		},
		"58885": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.metadata"
		},
		"58886": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58887": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"58888": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentIdempotencyKey"
		},
		"58889": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.sourcePath"
		},
		"58890": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"58891": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"58892": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"58894": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasAsyncSteps"
		},
		"58895": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasFailedSteps"
		},
		"58896": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasSkippedOnFailureSteps"
		},
		"58897": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasWaitingSteps"
		},
		"58898": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasSkippedSteps"
		},
		"58899": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasRevertedSteps"
		},
		"58900": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.timedOutAt"
		},
		"58901": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.startedAt"
		},
		"58902": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.cancelledAt"
		},
		"58903": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.state"
		},
		"58904": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.steps"
		},
		"58905": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58906": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.__index"
		},
		"58908": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError"
		},
		"58909": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.__constructor"
		},
		"58910": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError"
		},
		"58911": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "action"
		},
		"58912": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "handlerType"
		},
		"58913": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "error"
		},
		"58914": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.action"
		},
		"58915": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.handlerType"
		},
		"58916": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionStepError.error"
		},
		"58917": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState"
		},
		"58918": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.NOT_STARTED"
		},
		"58919": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.INVOKING"
		},
		"58920": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.WAITING_TO_COMPENSATE"
		},
		"58921": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.COMPENSATING"
		},
		"58922": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.DONE"
		},
		"58923": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.REVERTED"
		},
		"58924": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionState.FAILED"
		},
		"58925": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "BaseFlowRunOptions"
		},
		"58926": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type"
		},
		"58927": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.context"
		},
		"58928": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"58929": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"58930": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.logOnError"
		},
		"58931": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.events"
		},
		"58932": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/helper/type.ts",
			"qualifiedName": "__type.container"
		},
		"58933": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"58934": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58935": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"58936": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"58937": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"58938": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"58939": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"58940": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"58941": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"58942": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"58943": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"58944": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58945": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58946": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"58947": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"58948": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"58949": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58950": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"58951": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"58952": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"58953": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"58954": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"58955": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"58956": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58957": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58958": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58959": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"58960": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"58961": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"58962": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload"
		},
		"58963": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.__constructor"
		},
		"58964": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload"
		},
		"58965": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "metadata"
		},
		"58966": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "data"
		},
		"58967": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "context"
		},
		"58968": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.metadata"
		},
		"58969": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.data"
		},
		"58970": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/distributed-transaction.ts",
			"qualifiedName": "TransactionPayload.context"
		},
		"58971": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "TransactionOptions"
		},
		"58972": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState"
		},
		"58973": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.NOT_STARTED"
		},
		"58974": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.INVOKING"
		},
		"58975": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.COMPENSATING"
		},
		"58976": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.DONE"
		},
		"58977": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.REVERTED"
		},
		"58978": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.FAILED"
		},
		"58979": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.DORMANT"
		},
		"58980": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.SKIPPED"
		},
		"58981": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.SKIPPED_FAILURE"
		},
		"58982": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepState.TIMEOUT"
		},
		"58983": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus"
		},
		"58984": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.IDLE"
		},
		"58985": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.OK"
		},
		"58986": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.WAITING"
		},
		"58987": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.TEMPORARY_FAILURE"
		},
		"58988": {
			"sourceFileName": "../../../../packages/core/utils/src/orchestration/types.ts",
			"qualifiedName": "TransactionStepStatus.PERMANENT_FAILURE"
		},
		"58989": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "StepFeatures"
		},
		"58990": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type"
		},
		"58991": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasAsyncSteps"
		},
		"58992": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasStepTimeouts"
		},
		"58993": {
			"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
			"qualifiedName": "__type.hasRetriesTimeout"
		},
		"58994": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"58995": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"58996": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"58997": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"58998": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"58999": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59000": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59001": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"59002": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"59003": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59004": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59005": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"59006": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"59007": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59008": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59009": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"59010": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"59011": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59012": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59013": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"59014": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59015": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59016": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59017": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"59018": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"59019": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59020": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59021": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"59022": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59023": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"59024": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59025": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59026": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"59027": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"59028": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"59029": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59030": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59031": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"59032": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59033": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"59034": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59035": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59036": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"59037": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59038": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"59039": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59040": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59041": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59042": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"59043": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59044": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59045": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59046": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"59047": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59048": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59049": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"59050": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"59051": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59052": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"59053": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "args"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/workflows-sdk/src/utils/composer/index.ts"
		},
		"reflections": {
			"1": 57418
		}
	}
}
