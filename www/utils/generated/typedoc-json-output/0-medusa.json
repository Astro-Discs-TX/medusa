{
	"id": 33234,
	"name": "medusa",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 33470,
			"name": "RequestQueryFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields that can be passed in the query parameters of a request."
					}
				]
			},
			"children": [
				{
					"id": 33471,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use "
									},
									{
										"kind": "code",
										"text": "`fields`"
									},
									{
										"kind": "text",
										"text": " instead and the relations will be inferred"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33472,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33473,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33474,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33475,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33471,
						33472,
						33473,
						33474,
						33475
					]
				}
			]
		},
		{
			"id": 33432,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"typeParameters": [
				{
					"id": 33452,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
							"qualifiedName": "ModuleImplementations"
						},
						"name": "ModuleImplementations",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33433,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33434,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 33435,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 33436,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 33437,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 33436,
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 33438,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 33436,
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 33452,
													"name": "Cradle",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 33439,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 33440,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 33441,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 33442,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 33440,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										33434
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33531,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33532,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33533,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33533
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33484,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33489,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33485,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33486,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33487,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 33531,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33488,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33489,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33486,
								33487,
								33488
							]
						}
					]
				}
			}
		},
		{
			"id": 33476,
			"name": "MedusaPricingContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33477,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33478,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33479,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33480,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33481,
							"name": "customer_group_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33478,
								33479,
								33480,
								33481
							]
						}
					]
				}
			}
		},
		{
			"id": 33566,
			"name": "ModuleImplementations",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The following interface acts as a bucket that other modules or the\nutils package can fill using declaration merging"
					}
				]
			}
		},
		{
			"id": 33544,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"typeParameters": [
				{
					"id": 33564,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": 33566,
						"name": "ModuleImplementations",
						"package": "@medusajs/framework"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33545,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33546,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 33547,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 33548,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 33549,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 33548,
														"name": "K",
														"package": "@medusajs/framework",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 33550,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 33548,
													"name": "K",
													"package": "@medusajs/framework",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 33564,
													"name": "Cradle",
													"package": "@medusajs/framework",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 33551,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 33552,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 33553,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 33554,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 33552,
												"name": "T",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										33546
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33534,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33535,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 33543,
								"name": "Entity",
								"package": "@medusajs/framework",
								"qualifiedName": "FindConfig.Entity",
								"refersToTypeParameter": true
							}
						}
					}
				},
				{
					"id": 33536,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33537,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33538,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 33539,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33540,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 33541,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 33542,
											"name": "K",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33535,
						33536,
						33537,
						33538,
						33539
					]
				}
			],
			"typeParameters": [
				{
					"id": 33543,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 33565,
			"name": "HTTP_METHODS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of all the supported HTTP methods"
					}
				]
			},
			"type": {
				"type": "typeOperator",
				"operator": "readonly",
				"target": {
					"type": "tuple",
					"elements": [
						{
							"type": "literal",
							"value": "GET"
						},
						{
							"type": "literal",
							"value": "POST"
						},
						{
							"type": "literal",
							"value": "PUT"
						},
						{
							"type": "literal",
							"value": "PATCH"
						},
						{
							"type": "literal",
							"value": "DELETE"
						},
						{
							"type": "literal",
							"value": "OPTIONS"
						},
						{
							"type": "literal",
							"value": "HEAD"
						}
					]
				}
			}
		},
		{
			"id": 33526,
			"name": "RouteVerb",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "intrinsic",
					"name": "number"
				},
				"objectType": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"target": 33565,
						"name": "HTTP_METHODS",
						"package": "@medusajs/framework"
					}
				}
			}
		},
		{
			"id": 33461,
			"name": "MiddlewareVerb",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "USE"
					},
					{
						"type": "literal",
						"value": "ALL"
					},
					{
						"type": "reference",
						"target": 33526,
						"name": "RouteVerb",
						"package": "@medusajs/framework"
					}
				]
			}
		},
		{
			"id": 33325,
			"name": "MiddlewareFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 33453,
						"name": "MedusaRequestHandler",
						"package": "@medusajs/framework"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33326,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 33327,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 33328,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33463,
			"name": "MedusaErrorHandlerFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33464,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 33465,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33466,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 33467,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33490,
										"name": "MedusaRequest",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 33468,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33523,
										"name": "MedusaResponse",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 33469,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33525,
										"name": "MedusaNextFunction",
										"package": "@medusajs/framework"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 33527,
			"name": "ParserConfigArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33528,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33529,
							"name": "sizeLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 33530,
							"name": "preserveRawBody",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33529,
								33530
							]
						}
					]
				}
			}
		},
		{
			"id": 33462,
			"name": "ParserConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": false
					},
					{
						"type": "reference",
						"target": 33527,
						"name": "ParserConfigArgs",
						"package": "@medusajs/framework"
					}
				]
			}
		},
		{
			"id": 33329,
			"name": "MiddlewareRoute",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33330,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33331,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 33461,
										"name": "MiddlewareVerb",
										"package": "@medusajs/framework"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33461,
											"name": "MiddlewareVerb",
											"package": "@medusajs/framework"
										}
									}
								]
							}
						},
						{
							"id": 33332,
							"name": "matcher",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "RegExp"
										},
										"name": "RegExp",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 33333,
							"name": "bodyParser",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 33462,
								"name": "ParserConfig",
								"package": "@medusajs/framework"
							}
						},
						{
							"id": 33334,
							"name": "middlewares",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33325,
									"name": "MiddlewareFunction",
									"package": "@medusajs/framework"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33331,
								33332,
								33333,
								33334
							]
						}
					]
				}
			}
		},
		{
			"id": 33335,
			"name": "MiddlewaresConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33336,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33337,
							"name": "errorHandler",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "reference",
										"target": 33463,
										"name": "MedusaErrorHandlerFunction",
										"package": "@medusajs/framework"
									}
								]
							}
						},
						{
							"id": 33338,
							"name": "routes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33329,
									"name": "MiddlewareRoute",
									"package": "@medusajs/framework"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33337,
								33338
							]
						}
					]
				}
			}
		},
		{
			"id": 33490,
			"name": "MedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33491,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33522,
						"name": "Body",
						"package": "@medusajs/framework",
						"qualifiedName": "MedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedBody"
					}
				},
				{
					"id": 33492,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 33470,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedQuery"
					}
				},
				{
					"id": 33493,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedProperties"
					}
				},
				{
					"id": 33494,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33534,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/framework"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.listConfig"
					}
				},
				{
					"id": 33495,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33534,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/framework"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.retrieveConfig"
					}
				},
				{
					"id": 33496,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33497,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33498,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 33499,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 33500,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 33501,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 33502,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 33503,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														33501,
														33502,
														33503
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33498,
										33499
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.remoteQueryConfig"
					}
				},
				{
					"id": 33504,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.filterableFields"
					}
				},
				{
					"id": 33505,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.includes"
					}
				},
				{
					"id": 33506,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedFields"
					}
				},
				{
					"id": 33507,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowed"
					}
				},
				{
					"id": 33508,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.errors"
					}
				},
				{
					"id": 33509,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33544,
						"name": "MedusaContainer",
						"package": "@medusajs/framework"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.scope"
					}
				},
				{
					"id": 33510,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 33511,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 33512,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.requestId"
					}
				},
				{
					"id": 33513,
					"name": "pricingContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that carries the context that is used to calculate prices for variants"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33476,
						"name": "MedusaPricingContext",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33514,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic context object that can be used across the request lifecycle"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 33515,
					"name": "additionalDataValidator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom validator to validate the "
							},
							{
								"kind": "code",
								"text": "`additional_data`"
							},
							{
								"kind": "text",
								"text": " property in\nrequests that allows for additional_data"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodObject"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodTypeAny"
								},
								"name": "ZodTypeAny",
								"package": "zod"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33516,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33517,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "ZodObject",
						"package": "zod"
					}
				},
				{
					"id": 33518,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33519,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33520,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33521,
									"name": "userId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33520,
										33521
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.user"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33491,
						33492,
						33493,
						33494,
						33495,
						33496,
						33504,
						33505,
						33506,
						33507,
						33508,
						33509,
						33510,
						33511,
						33512,
						33513,
						33514,
						33515,
						33518
					]
				}
			],
			"typeParameters": [
				{
					"id": 33522,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
						"qualifiedName": "e.Request"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../node_modules/@types/express-serve-static-core/index.d.ts",
								"qualifiedName": "ParamsDictionary"
							},
							"name": "core.ParamsDictionary",
							"package": "@types/express-serve-static-core",
							"qualifiedName": "ParamsDictionary"
						},
						{
							"type": "intrinsic",
							"name": "any"
						},
						{
							"type": "reference",
							"target": 33522,
							"name": "Body",
							"package": "@medusajs/framework",
							"qualifiedName": "MedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "Request",
					"package": "@types/express",
					"qualifiedName": "e.Request"
				}
			]
		},
		{
			"id": 33523,
			"name": "MedusaResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33524,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.Response"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 33524,
						"name": "Body",
						"package": "@medusajs/framework",
						"refersToTypeParameter": true
					}
				],
				"name": "Response",
				"package": "@types/express",
				"qualifiedName": "e.Response"
			}
		},
		{
			"id": 33525,
			"name": "MedusaNextFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.NextFunction"
				},
				"name": "NextFunction",
				"package": "@types/express",
				"qualifiedName": "e.NextFunction"
			}
		},
		{
			"id": 33453,
			"name": "MedusaRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33459,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 33460,
					"name": "Res",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33454,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 33455,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33456,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33490,
										"typeArguments": [
											{
												"type": "reference",
												"target": 33459,
												"name": "Body",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaRequest",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 33457,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33523,
										"typeArguments": [
											{
												"type": "reference",
												"target": 33460,
												"name": "Res",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaResponse",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 33458,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33525,
										"name": "MedusaNextFunction",
										"package": "@medusajs/framework"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 33235,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33236,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 33244,
								"name": "Entity",
								"package": "@medusajs/medusa",
								"qualifiedName": "FindConfig.Entity",
								"refersToTypeParameter": true
							}
						}
					}
				},
				{
					"id": 33237,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33238,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33239,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 33240,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33241,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 33242,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 33243,
											"name": "K",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33236,
						33237,
						33238,
						33239,
						33240
					]
				}
			],
			"typeParameters": [
				{
					"id": 33244,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 33245,
			"name": "QueryConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33255,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33246,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33247,
							"name": "defaults",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Default fields and relations to return"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 33255,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 33248,
							"name": "defaultFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`defaults`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 33255,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 33249,
							"name": "defaultRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`defaultFields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 33250,
							"name": "allowed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields and relations that are allowed to be requested"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 33251,
							"name": "allowedFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`allowed`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 33252,
							"name": "allowedRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`allowedFields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 33253,
							"name": "defaultLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33254,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33247,
								33248,
								33249,
								33250,
								33251,
								33252,
								33253,
								33254
							]
						}
					]
				}
			}
		},
		{
			"id": 33256,
			"name": "ClassConstructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33260,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33257,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 33258,
							"name": "new ClassConstructor",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 33259,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 33260,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 33261,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 33432,
				"name": "coreMedusaContainer",
				"package": "@medusajs/types",
				"qualifiedName": "MedusaContainer"
			}
		},
		{
			"id": 33262,
			"name": "Logger",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33263,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33264,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33265,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33266,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33267,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33268,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33269,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33270,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33271,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33272,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33273,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33274,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33275,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33276,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33277,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33278,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33279,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33280,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33281,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33282,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 33283,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33284,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33285,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33286,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33287,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 33288,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33289,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33290,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33291,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33292,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 33293,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33294,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33295,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33296,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33297,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 33298,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33299,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33300,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33301,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33302,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 33303,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33304,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33305,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33306,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33307,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33308,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33309,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33310,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33311,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33312,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33313,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33314,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33315,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33316,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33317,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33318,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33319,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33264,
								33268,
								33272,
								33276,
								33279,
								33284,
								33289,
								33294,
								33299,
								33304,
								33308,
								33312,
								33316
							]
						}
					]
				}
			}
		},
		{
			"id": 33320,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33324,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33321,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 33322,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 33323,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 33324,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 33339,
			"name": "MedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33367,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33368,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33369,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33370,
									"name": "userId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33369,
										33370
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.user"
					}
				},
				{
					"id": 33340,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33371,
						"name": "Body",
						"package": "@medusajs/medusa",
						"qualifiedName": "MedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedBody"
					}
				},
				{
					"id": 33341,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 33470,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedQuery"
					}
				},
				{
					"id": 33342,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedProperties"
					}
				},
				{
					"id": 33343,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33235,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.listConfig"
					}
				},
				{
					"id": 33344,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33235,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.retrieveConfig"
					}
				},
				{
					"id": 33345,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33346,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33347,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 33348,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 33349,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 33350,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 33351,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 33352,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														33350,
														33351,
														33352
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33347,
										33348
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.remoteQueryConfig"
					}
				},
				{
					"id": 33353,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.filterableFields"
					}
				},
				{
					"id": 33354,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.includes"
					}
				},
				{
					"id": 33355,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedFields"
					}
				},
				{
					"id": 33356,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowed"
					}
				},
				{
					"id": 33357,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.errors"
					}
				},
				{
					"id": 33358,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33432,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.scope"
					}
				},
				{
					"id": 33359,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 33360,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 33361,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.requestId"
					}
				},
				{
					"id": 33362,
					"name": "pricingContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that carries the context that is used to calculate prices for variants"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33476,
						"name": "MedusaPricingContext",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33363,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic context object that can be used across the request lifecycle"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 33364,
					"name": "additionalDataValidator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom validator to validate the "
							},
							{
								"kind": "code",
								"text": "`additional_data`"
							},
							{
								"kind": "text",
								"text": " property in\nrequests that allows for additional_data"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodObject"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodTypeAny"
								},
								"name": "ZodTypeAny",
								"package": "zod"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33365,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33366,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "ZodObject",
						"package": "zod"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33367,
						33340,
						33341,
						33342,
						33343,
						33344,
						33345,
						33353,
						33354,
						33355,
						33356,
						33357,
						33358,
						33359,
						33360,
						33361,
						33362,
						33363,
						33364
					]
				}
			],
			"typeParameters": [
				{
					"id": 33371,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
						"qualifiedName": "e.Request"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../node_modules/@types/express-serve-static-core/index.d.ts",
								"qualifiedName": "ParamsDictionary"
							},
							"name": "core.ParamsDictionary",
							"package": "@types/express-serve-static-core",
							"qualifiedName": "ParamsDictionary"
						},
						{
							"type": "intrinsic",
							"name": "any"
						},
						{
							"type": "reference",
							"target": 33371,
							"name": "Body",
							"package": "@medusajs/medusa",
							"qualifiedName": "MedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "Request",
					"package": "@types/express",
					"qualifiedName": "e.Request"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33377,
					"name": "AuthenticatedMedusaRequest"
				}
			]
		},
		{
			"id": 33372,
			"name": "AuthContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33373,
					"name": "actor_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33374,
					"name": "actor_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33375,
					"name": "auth_identity_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33376,
					"name": "app_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33373,
						33374,
						33375,
						33376
					]
				}
			]
		},
		{
			"id": 33377,
			"name": "AuthenticatedMedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33406,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33407,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33408,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33409,
									"name": "userId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33408,
										33409
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33367,
						"name": "MedusaRequest.user"
					}
				},
				{
					"id": 33379,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": 33410,
						"name": "Body",
						"package": "@medusajs/medusa",
						"qualifiedName": "AuthenticatedMedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33340,
						"name": "MedusaRequest.validatedBody"
					}
				},
				{
					"id": 33380,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 33470,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33341,
						"name": "MedusaRequest.validatedQuery"
					}
				},
				{
					"id": 33381,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33342,
						"name": "MedusaRequest.allowedProperties"
					}
				},
				{
					"id": 33382,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33235,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33343,
						"name": "MedusaRequest.listConfig"
					}
				},
				{
					"id": 33383,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33235,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33344,
						"name": "MedusaRequest.retrieveConfig"
					}
				},
				{
					"id": 33384,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33385,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33386,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 33387,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 33388,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 33389,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 33390,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 33391,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														33389,
														33390,
														33391
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33386,
										33387
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33345,
						"name": "MedusaRequest.remoteQueryConfig"
					}
				},
				{
					"id": 33392,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33353,
						"name": "MedusaRequest.filterableFields"
					}
				},
				{
					"id": 33393,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33354,
						"name": "MedusaRequest.includes"
					}
				},
				{
					"id": 33394,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33355,
						"name": "MedusaRequest.allowedFields"
					}
				},
				{
					"id": 33395,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33356,
						"name": "MedusaRequest.allowed"
					}
				},
				{
					"id": 33396,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33357,
						"name": "MedusaRequest.errors"
					}
				},
				{
					"id": 33397,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": 33432,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33358,
						"name": "MedusaRequest.scope"
					}
				},
				{
					"id": 33398,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33359,
						"name": "MedusaRequest.session"
					}
				},
				{
					"id": 33399,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33360,
						"name": "MedusaRequest.rawBody"
					}
				},
				{
					"id": 33400,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33361,
						"name": "MedusaRequest.requestId"
					}
				},
				{
					"id": 33401,
					"name": "pricingContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that carries the context that is used to calculate prices for variants"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33476,
						"name": "MedusaPricingContext",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33362,
						"name": "MedusaRequest.pricingContext"
					}
				},
				{
					"id": 33402,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic context object that can be used across the request lifecycle"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33363,
						"name": "MedusaRequest.context"
					}
				},
				{
					"id": 33403,
					"name": "additionalDataValidator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom validator to validate the "
							},
							{
								"kind": "code",
								"text": "`additional_data`"
							},
							{
								"kind": "text",
								"text": " property in\nrequests that allows for additional_data"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodObject"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodTypeAny"
								},
								"name": "ZodTypeAny",
								"package": "zod"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33404,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33405,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "ZodObject",
						"package": "zod"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33364,
						"name": "MedusaRequest.additionalDataValidator"
					}
				},
				{
					"id": 33378,
					"name": "auth_context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33372,
						"name": "AuthContext",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33406,
						33379,
						33380,
						33381,
						33382,
						33383,
						33384,
						33392,
						33393,
						33394,
						33395,
						33396,
						33397,
						33398,
						33399,
						33400,
						33401,
						33402,
						33403,
						33378
					]
				}
			],
			"typeParameters": [
				{
					"id": 33410,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33339,
					"typeArguments": [
						{
							"type": "reference",
							"target": 33410,
							"name": "Body",
							"package": "@medusajs/medusa",
							"qualifiedName": "AuthenticatedMedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "MedusaRequest",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 33411,
			"name": "MedusaResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33412,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.Response"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 33412,
						"name": "Body",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				],
				"name": "Response",
				"package": "@types/express",
				"qualifiedName": "e.Response"
			}
		},
		{
			"id": 33413,
			"name": "MedusaNextFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.NextFunction"
				},
				"name": "NextFunction",
				"package": "@types/express",
				"qualifiedName": "e.NextFunction"
			}
		},
		{
			"id": 33414,
			"name": "MedusaRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33420,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 33421,
					"name": "Res",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33415,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 33416,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33417,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33339,
										"typeArguments": [
											{
												"type": "reference",
												"target": 33420,
												"name": "Body",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaRequest",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 33418,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33411,
										"typeArguments": [
											{
												"type": "reference",
												"target": 33421,
												"name": "Res",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaResponse",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 33419,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33413,
										"name": "MedusaNextFunction",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 33482,
			"name": "SubscriberContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33483,
					"name": "subscriberId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33483
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 33422,
			"name": "SubscriberConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33423,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33424,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33425,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 33482,
								"name": "SubscriberContext",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33424,
								33425
							]
						}
					]
				}
			}
		},
		{
			"id": 33426,
			"name": "SubscriberArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33431,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33427,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33428,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33484,
								"typeArguments": [
									{
										"type": "reference",
										"target": 33431,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Event",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33429,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33432,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33430,
							"name": "pluginOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33428,
								33429,
								33430
							]
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				33470,
				33566,
				33534,
				33490,
				33235,
				33339,
				33372,
				33377,
				33482
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				33432,
				33531,
				33484,
				33476,
				33544,
				33526,
				33461,
				33325,
				33463,
				33527,
				33462,
				33329,
				33335,
				33523,
				33525,
				33453,
				33245,
				33256,
				33261,
				33262,
				33320,
				33411,
				33413,
				33414,
				33422,
				33426
			]
		},
		{
			"title": "Variables",
			"children": [
				33565
			]
		}
	],
	"packageName": "@medusajs/medusa",
	"symbolIdMap": {
		"33234": {
			"sourceFileName": "../../../../packages/medusa/src/index.js",
			"qualifiedName": ""
		},
		"33235": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig"
		},
		"33236": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"33237": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"33238": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"33239": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"33240": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"33241": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"33242": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.__index"
		},
		"33244": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"33245": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "QueryConfig"
		},
		"33246": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"33247": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaults"
		},
		"33248": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultFields"
		},
		"33249": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultRelations"
		},
		"33250": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowed"
		},
		"33251": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedFields"
		},
		"33252": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedRelations"
		},
		"33253": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultLimit"
		},
		"33254": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.isList"
		},
		"33255": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"33256": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ClassConstructor"
		},
		"33257": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33258": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33259": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"33260": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"33261": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "MedusaContainer"
		},
		"33262": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Logger"
		},
		"33263": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33264": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.panic"
		},
		"33265": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33266": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33267": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "data"
		},
		"33268": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.shouldLog"
		},
		"33269": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33270": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33271": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"33272": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.setLogLevel"
		},
		"33273": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33274": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33275": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"33276": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.unsetLogLevel"
		},
		"33277": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33278": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33279": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.activity"
		},
		"33280": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33281": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33282": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33283": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "config"
		},
		"33284": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.progress"
		},
		"33285": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33286": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33287": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"33288": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33289": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.error"
		},
		"33290": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33291": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33292": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "messageOrError"
		},
		"33293": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "error"
		},
		"33294": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.failure"
		},
		"33295": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33296": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33297": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"33298": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33299": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.success"
		},
		"33300": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33301": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33302": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"33303": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33304": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.debug"
		},
		"33305": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33306": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33307": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33308": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.info"
		},
		"33309": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33310": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33311": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33312": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.warn"
		},
		"33313": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33314": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33315": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33316": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.log"
		},
		"33317": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33318": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33319": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"33320": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Constructor"
		},
		"33321": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33322": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33323": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"33324": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"33325": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareFunction"
		},
		"33326": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33327": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33328": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "args"
		},
		"33329": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareRoute"
		},
		"33330": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33331": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.method"
		},
		"33332": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.matcher"
		},
		"33333": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.bodyParser"
		},
		"33334": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.middlewares"
		},
		"33335": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MiddlewaresConfig"
		},
		"33336": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33337": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.errorHandler"
		},
		"33338": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.routes"
		},
		"33339": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest"
		},
		"33340": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"33341": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"33342": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"33343": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"33344": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"33345": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"33346": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"33347": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.fields"
		},
		"33348": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.pagination"
		},
		"33349": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"33350": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.order"
		},
		"33351": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.skip"
		},
		"33352": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.take"
		},
		"33353": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"33354": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"33355": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"33356": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"33357": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"33358": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"33359": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"33360": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"33361": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"33362": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.pricingContext"
		},
		"33363": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.context"
		},
		"33364": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.additionalDataValidator"
		},
		"33365": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"33366": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"33367": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"33368": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33369": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.customer_id"
		},
		"33370": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.userId"
		},
		"33371": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.Body"
		},
		"33372": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext"
		},
		"33373": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.actor_id"
		},
		"33374": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.actor_type"
		},
		"33375": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.auth_identity_id"
		},
		"33376": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.app_metadata"
		},
		"33377": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest"
		},
		"33378": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.auth_context"
		},
		"33379": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"33380": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"33381": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"33382": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"33383": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"33384": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"33385": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"33386": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.fields"
		},
		"33387": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.pagination"
		},
		"33388": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"33389": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.order"
		},
		"33390": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.skip"
		},
		"33391": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.take"
		},
		"33392": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"33393": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"33394": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"33395": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"33396": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"33397": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"33398": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"33399": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"33400": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"33401": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.pricingContext"
		},
		"33402": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.context"
		},
		"33403": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.additionalDataValidator"
		},
		"33404": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"33405": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"33406": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"33407": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33408": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.customer_id"
		},
		"33409": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.userId"
		},
		"33410": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.Body"
		},
		"33411": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaResponse"
		},
		"33412": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Body"
		},
		"33413": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaNextFunction"
		},
		"33414": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequestHandler"
		},
		"33415": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"33416": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"33417": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "req"
		},
		"33418": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "res"
		},
		"33419": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "next"
		},
		"33420": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Body"
		},
		"33421": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Res"
		},
		"33422": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberConfig"
		},
		"33423": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"33424": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"33425": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.context"
		},
		"33426": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberArgs"
		},
		"33427": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"33428": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"33429": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.container"
		},
		"33430": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.pluginOptions"
		},
		"33431": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "T"
		},
		"33432": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"33433": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"33434": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"33435": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"33436": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"33437": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"33438": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"33439": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"33440": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"33441": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"33442": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"33452": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"33453": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequestHandler"
		},
		"33454": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33455": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33456": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "req"
		},
		"33457": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "res"
		},
		"33458": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "next"
		},
		"33459": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "Body"
		},
		"33460": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "Res"
		},
		"33461": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareVerb"
		},
		"33462": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "ParserConfig"
		},
		"33463": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaErrorHandlerFunction"
		},
		"33464": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33465": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33466": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "error"
		},
		"33467": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "req"
		},
		"33468": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "res"
		},
		"33469": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "next"
		},
		"33470": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"33471": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"33472": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"33473": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"33474": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"33475": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"33476": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "MedusaPricingContext"
		},
		"33477": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type"
		},
		"33478": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.region_id"
		},
		"33479": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.currency_code"
		},
		"33480": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.customer_id"
		},
		"33481": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.customer_group_id"
		},
		"33482": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext"
		},
		"33483": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext.subscriberId"
		},
		"33484": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"33485": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"33486": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"33487": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"33488": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"33489": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"33490": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest"
		},
		"33491": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"33492": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"33493": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"33494": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"33495": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"33496": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"33497": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33498": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.fields"
		},
		"33499": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.pagination"
		},
		"33500": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33501": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.order"
		},
		"33502": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.skip"
		},
		"33503": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.take"
		},
		"33504": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"33505": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"33506": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"33507": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"33508": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"33509": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"33510": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"33511": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"33512": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"33513": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.pricingContext"
		},
		"33514": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.context"
		},
		"33515": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.additionalDataValidator"
		},
		"33516": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"33517": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"33518": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"33519": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33520": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.customer_id"
		},
		"33521": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.userId"
		},
		"33522": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.Body"
		},
		"33523": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaResponse"
		},
		"33524": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "Body"
		},
		"33525": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaNextFunction"
		},
		"33526": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "RouteVerb"
		},
		"33527": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "ParserConfigArgs"
		},
		"33528": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33529": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.sizeLimit"
		},
		"33530": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.preserveRawBody"
		},
		"33531": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"33532": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"33533": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"33534": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig"
		},
		"33535": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.select"
		},
		"33536": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"33537": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.take"
		},
		"33538": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"33539": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.order"
		},
		"33540": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33541": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.__index"
		},
		"33543": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"33544": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"33545": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "__type"
		},
		"33546": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"33547": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"33548": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "K"
		},
		"33549": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "key"
		},
		"33550": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "resolveOptions"
		},
		"33551": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"33552": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "T"
		},
		"33553": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "key"
		},
		"33554": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "resolveOptions"
		},
		"33564": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "Cradle"
		},
		"33565": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "HTTP_METHODS"
		},
		"33566": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "ModuleImplementations"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/medusa/src/index.js"
		},
		"reflections": {
			"1": 33234
		}
	}
}