{
	"id": 36866,
	"name": "medusa",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 37124,
			"name": "HTTP_METHODS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of all the supported HTTP methods"
					}
				]
			},
			"type": {
				"type": "typeOperator",
				"operator": "readonly",
				"target": {
					"type": "tuple",
					"elements": [
						{
							"type": "literal",
							"value": "GET"
						},
						{
							"type": "literal",
							"value": "POST"
						},
						{
							"type": "literal",
							"value": "PUT"
						},
						{
							"type": "literal",
							"value": "PATCH"
						},
						{
							"type": "literal",
							"value": "DELETE"
						},
						{
							"type": "literal",
							"value": "OPTIONS"
						},
						{
							"type": "literal",
							"value": "HEAD"
						}
					]
				}
			}
		},
		{
			"id": 37064,
			"name": "RouteVerb",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "intrinsic",
					"name": "number"
				},
				"objectType": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"target": 37124,
						"name": "HTTP_METHODS",
						"package": "@medusajs/framework"
					}
				}
			}
		},
		{
			"id": 37008,
			"name": "MiddlewareVerb",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "USE"
					},
					{
						"type": "literal",
						"value": "ALL"
					},
					{
						"type": "reference",
						"target": 37064,
						"name": "RouteVerb",
						"package": "@medusajs/framework"
					}
				]
			}
		},
		{
			"id": 36879,
			"name": "MiddlewareFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 37000,
						"name": "MedusaRequestHandler",
						"package": "@medusajs/framework"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 36880,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36881,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 36882,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 37010,
			"name": "MedusaErrorHandlerFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 37011,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 37012,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 37013,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 37014,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37025,
										"name": "MedusaRequest",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 37015,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37061,
										"name": "MedusaResponse",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 37016,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37063,
										"name": "MedusaNextFunction",
										"package": "@medusajs/framework"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 37065,
			"name": "ParserConfigArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 37066,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 37067,
							"name": "sizeLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 37068,
							"name": "preserveRawBody",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37067,
								37068
							]
						}
					]
				}
			}
		},
		{
			"id": 37009,
			"name": "ParserConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": false
					},
					{
						"type": "reference",
						"target": 37065,
						"name": "ParserConfigArgs",
						"package": "@medusajs/framework"
					}
				]
			}
		},
		{
			"id": 36883,
			"name": "MiddlewareRoute",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 36884,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 36885,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 37008,
										"name": "MiddlewareVerb",
										"package": "@medusajs/framework"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 37008,
											"name": "MiddlewareVerb",
											"package": "@medusajs/framework"
										}
									}
								]
							}
						},
						{
							"id": 36886,
							"name": "matcher",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "RegExp"
										},
										"name": "RegExp",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36887,
							"name": "bodyParser",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37009,
								"name": "ParserConfig",
								"package": "@medusajs/framework"
							}
						},
						{
							"id": 36888,
							"name": "middlewares",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36879,
									"name": "MiddlewareFunction",
									"package": "@medusajs/framework"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36885,
								36886,
								36887,
								36888
							]
						}
					]
				}
			}
		},
		{
			"id": 36889,
			"name": "MiddlewaresConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 36890,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 36891,
							"name": "errorHandler",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "reference",
										"target": 37010,
										"name": "MedusaErrorHandlerFunction",
										"package": "@medusajs/framework"
									}
								]
							}
						},
						{
							"id": 36892,
							"name": "routes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36883,
									"name": "MiddlewareRoute",
									"package": "@medusajs/framework"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36891,
								36892
							]
						}
					]
				}
			}
		},
		{
			"id": 37025,
			"name": "MedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 37029,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 37060,
						"name": "Body",
						"package": "@medusajs/framework",
						"qualifiedName": "MedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedBody"
					}
				},
				{
					"id": 37030,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 37072,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedQuery"
					}
				},
				{
					"id": 37031,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedProperties"
					}
				},
				{
					"id": 37032,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 37077,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/types"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.listConfig"
					}
				},
				{
					"id": 37033,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 37077,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/types"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.retrieveConfig"
					}
				},
				{
					"id": 37034,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37035,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37036,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 37037,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 37038,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 37039,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 37040,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 37041,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														37039,
														37040,
														37041
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37036,
										37037
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.remoteQueryConfig"
					}
				},
				{
					"id": 37042,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.filterableFields"
					}
				},
				{
					"id": 37043,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.includes"
					}
				},
				{
					"id": 37044,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the req.allowed set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowed"
					}
				},
				{
					"id": 37045,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.errors"
					}
				},
				{
					"id": 37046,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 37088,
						"name": "MedusaContainer",
						"package": "@medusajs/framework"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.scope"
					}
				},
				{
					"id": 37047,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 37048,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 37049,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.requestId"
					}
				},
				{
					"id": 37050,
					"name": "restrictedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 37109,
						"name": "RestrictedFields",
						"package": "@medusajs/framework"
					}
				},
				{
					"id": 37051,
					"name": "pricingContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that carries the context that is used to calculate prices for variants"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 37118,
						"name": "MedusaPricingContext",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 37052,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic context object that can be used across the request lifecycle"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 37053,
					"name": "additionalDataValidator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom validator to validate the "
							},
							{
								"kind": "code",
								"text": "`additional_data`"
							},
							{
								"kind": "text",
								"text": " property in\nrequests that allows for additional_data"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodOptional"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodNullable"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
											"qualifiedName": "ZodObject"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodTypeAny"
												},
												"name": "ZodTypeAny",
												"package": "zod"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 37054,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 37055,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										],
										"name": "ZodObject",
										"package": "zod"
									}
								],
								"name": "ZodNullable",
								"package": "zod"
							}
						],
						"name": "ZodOptional",
						"package": "zod"
					}
				},
				{
					"id": 37056,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37057,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37058,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37059,
									"name": "userId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37058,
										37059
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.user"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						37029,
						37030,
						37031,
						37032,
						37033,
						37034,
						37042,
						37043,
						37044,
						37045,
						37046,
						37047,
						37048,
						37049,
						37050,
						37051,
						37052,
						37053,
						37056
					]
				}
			],
			"typeParameters": [
				{
					"id": 37060,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
						"qualifiedName": "e.Request"
					},
					"typeArguments": [
						{
							"type": "reflection",
							"declaration": {
								"id": 37026,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"indexSignatures": [
									{
										"id": 37027,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"parameters": [
											{
												"id": 37028,
												"name": "key",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"type": "intrinsic",
							"name": "any"
						},
						{
							"type": "reference",
							"target": 37060,
							"name": "Body",
							"package": "@medusajs/framework",
							"qualifiedName": "MedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "Request",
					"package": "@types/express",
					"qualifiedName": "e.Request"
				}
			]
		},
		{
			"id": 37061,
			"name": "MedusaResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 37062,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.Response"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 37062,
						"name": "Body",
						"package": "@medusajs/framework",
						"refersToTypeParameter": true
					}
				],
				"name": "Response",
				"package": "@types/express",
				"qualifiedName": "e.Response"
			}
		},
		{
			"id": 37063,
			"name": "MedusaNextFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.NextFunction"
				},
				"name": "NextFunction",
				"package": "@types/express",
				"qualifiedName": "e.NextFunction"
			}
		},
		{
			"id": 37000,
			"name": "MedusaRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 37006,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 37007,
					"name": "Res",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 37001,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 37002,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 37003,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37025,
										"typeArguments": [
											{
												"type": "reference",
												"target": 37006,
												"name": "Body",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaRequest",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 37004,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37061,
										"typeArguments": [
											{
												"type": "reference",
												"target": 37007,
												"name": "Res",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaResponse",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 37005,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37063,
										"name": "MedusaNextFunction",
										"package": "@medusajs/framework"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 37109,
			"name": "RestrictedFields",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 37110,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 37111,
							"name": "new RestrictedFields",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37109,
								"name": "RestrictedFields",
								"package": "@medusajs/framework"
							}
						}
					]
				},
				{
					"id": 37112,
					"name": "#private",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 37113,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 37114,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				},
				{
					"id": 37115,
					"name": "add",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 37116,
							"name": "add",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 37117,
									"name": "fields",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						37110
					]
				},
				{
					"title": "Properties",
					"children": [
						37112
					]
				},
				{
					"title": "Methods",
					"children": [
						37113,
						37115
					]
				}
			]
		},
		{
			"id": 37088,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 37108,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
							"qualifiedName": "ModuleImplementations"
						},
						"name": "ModuleImplementations",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 37089,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37090,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 37091,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 37092,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 37093,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 37092,
														"name": "K",
														"package": "@medusajs/framework",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 37094,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 37092,
													"name": "K",
													"package": "@medusajs/framework",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 37108,
													"name": "Cradle",
													"package": "@medusajs/framework",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 37095,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 37096,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 37097,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 37098,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 37096,
												"name": "T",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										}
									]
								},
								{
									"id": 37099,
									"name": "registerAdd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 37100,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 37101,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 37104,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 37102,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 37103,
															"name": "registration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 37104,
																"name": "T",
																"package": "@medusajs/framework",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 37088,
														"name": "MedusaContainer",
														"package": "@medusajs/framework"
													}
												}
											]
										}
									}
								},
								{
									"id": 37105,
									"name": "createScope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 37106,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 37107,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 37088,
														"name": "MedusaContainer",
														"package": "@medusajs/framework"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37099,
										37105
									]
								},
								{
									"title": "Methods",
									"children": [
										37090
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 37077,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 37078,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 37087,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 37079,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 37080,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 37081,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 37082,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "ASC"
									},
									{
										"type": "literal",
										"value": "DESC"
									},
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 37083,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										]
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 37084,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 37085,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 37086,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						37078,
						37079,
						37080,
						37081,
						37082,
						37084,
						37085,
						37086
					]
				}
			],
			"typeParameters": [
				{
					"id": 37087,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 37072,
			"name": "RequestQueryFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields that can be passed in the query parameters of a request."
					}
				]
			},
			"children": [
				{
					"id": 37073,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 37074,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 37075,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 37076,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						37073,
						37074,
						37075,
						37076
					]
				}
			]
		},
		{
			"id": 36922,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"typeParameters": [
				{
					"id": 36942,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
							"qualifiedName": "ModuleImplementations"
						},
						"name": "ModuleImplementations",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 36923,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 36924,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 36925,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 36926,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 36927,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 36926,
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 36928,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 36926,
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 36942,
													"name": "Cradle",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 36929,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 36930,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 36931,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 36932,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 36930,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								},
								{
									"id": 36933,
									"name": "registerAdd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 36934,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 36935,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 36938,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 36936,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 36937,
															"name": "registration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 36938,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 36922,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								},
								{
									"id": 36939,
									"name": "createScope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [],
										"modifierTags": [
											"@ignore"
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 36940,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 36941,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 36922,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										36933,
										36939
									]
								},
								{
									"title": "Methods",
									"children": [
										36924
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 37069,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 37070,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37071,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37071
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 37019,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 37024,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 37020,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 37021,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37022,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37069,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 37023,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37024,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37021,
								37022,
								37023
							]
						}
					]
				}
			}
		},
		{
			"id": 36943,
			"name": "Logger",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36944,
					"name": "panic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36945,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36946,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 36947,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 36948,
					"name": "shouldLog",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36949,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36950,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 36951,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							]
						}
					}
				},
				{
					"id": 36952,
					"name": "setLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36953,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36954,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 36955,
											"name": "level",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 36956,
					"name": "unsetLogLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36957,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36958,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 36959,
					"name": "activity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36960,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36961,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 36962,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36963,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							]
						}
					}
				},
				{
					"id": 36964,
					"name": "progress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36965,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36966,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 36967,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36968,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 36969,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36970,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36971,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 36972,
											"name": "messageOrError",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													}
												]
											}
										},
										{
											"id": 36973,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 36974,
					"name": "failure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36975,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36976,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 36977,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36978,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 36979,
					"name": "success",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36980,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36981,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 36982,
											"name": "activityId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36983,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 36984,
					"name": "debug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36985,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36986,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 36987,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 36988,
					"name": "info",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36989,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36990,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 36991,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 36992,
					"name": "warn",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36993,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36994,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 36995,
											"name": "message",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 36996,
					"name": "log",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36997,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 36998,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 36999,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36944,
						36948,
						36952,
						36956,
						36959,
						36964,
						36969,
						36974,
						36979,
						36984,
						36988,
						36992,
						36996
					]
				}
			]
		},
		{
			"id": 37118,
			"name": "MedusaPricingContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 37119,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 37120,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37121,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37122,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37123,
							"name": "customer_group_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37120,
								37121,
								37122,
								37123
							]
						}
					]
				}
			}
		},
		{
			"id": 36903,
			"name": "instrumentHttpLayer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 36904,
					"name": "instrumentHttpLayer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Instrument the first touch point of the HTTP layer to report traces to\nOpenTelemetry"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 36905,
			"name": "instrumentRemoteQuery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 36906,
					"name": "instrumentRemoteQuery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Instrument the queries made using the remote query"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 36907,
			"name": "instrumentWorkflows",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 36908,
					"name": "instrumentWorkflows",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Instrument the workflows and steps execution"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 36909,
			"name": "registerOtel",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 36910,
					"name": "registerOtel",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A helper function to configure the OpenTelemetry SDK with some defaults.\nFor better/more control, please configure the SDK manually.\n\nYou will have to install the following packages within your app for\ntelemetry to work\n\n- @opentelemetry/sdk-node\n- @opentelemetry/resources\n- @opentelemetry/sdk-trace-node\n- @opentelemetry/instrumentation-pg\n- @opentelemetry/instrumentation"
							}
						]
					},
					"parameters": [
						{
							"id": 36911,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 36912,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 36913,
											"name": "serviceName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 36914,
											"name": "exporter",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/@opentelemetry/sdk-trace-base/build/src/export/SpanExporter.d.ts",
													"qualifiedName": "SpanExporter"
												},
												"name": "SpanExporter",
												"package": "@opentelemetry/sdk-trace-base"
											}
										},
										{
											"id": 36915,
											"name": "instrument",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reflection",
														"declaration": {
															"id": 36916,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 36917,
																	"name": "http",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 36918,
																	"name": "query",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 36919,
																	"name": "workflows",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																},
																{
																	"id": 36920,
																	"name": "db",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "boolean"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		36917,
																		36918,
																		36919,
																		36920
																	]
																}
															]
														}
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										},
										{
											"id": 36921,
											"name": "instrumentations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../node_modules/@opentelemetry/instrumentation/build/src/types.d.ts",
														"qualifiedName": "Instrumentation"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../node_modules/@opentelemetry/instrumentation/build/src/types.d.ts",
																"qualifiedName": "InstrumentationConfig"
															},
															"name": "InstrumentationConfig",
															"package": "@opentelemetry/instrumentation"
														}
													],
													"name": "Instrumentation",
													"package": "@opentelemetry/instrumentation"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												36913,
												36914,
												36915,
												36921
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 36867,
			"name": "ClassConstructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36871,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 36868,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 36869,
							"name": "new ClassConstructor",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 36870,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 36871,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 36872,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 36922,
				"name": "coreMedusaContainer",
				"package": "@medusajs/types",
				"qualifiedName": "MedusaContainer"
			}
		},
		{
			"id": 36873,
			"name": "Logger",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 36943,
				"name": "coreLogger",
				"package": "@medusajs/types",
				"qualifiedName": "Logger"
			}
		},
		{
			"id": 36874,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36878,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 36875,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 36876,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 36877,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 36878,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 37017,
			"name": "SubscriberContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 37018,
					"name": "subscriberId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						37018
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 36893,
			"name": "SubscriberConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 36894,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 36895,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 36896,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37017,
								"name": "SubscriberContext",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36895,
								36896
							]
						}
					]
				}
			}
		},
		{
			"id": 36897,
			"name": "SubscriberArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36902,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 36898,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 36899,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37019,
								"typeArguments": [
									{
										"type": "reference",
										"target": 36902,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Event",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36900,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36922,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36901,
							"name": "pluginOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36899,
								36900,
								36901
							]
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				37109
			]
		},
		{
			"title": "Interfaces",
			"children": [
				37025,
				37077,
				37072,
				36943,
				37017
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				37064,
				37008,
				36879,
				37010,
				37065,
				37009,
				36883,
				36889,
				37061,
				37063,
				37000,
				37088,
				36922,
				37069,
				37019,
				37118,
				36867,
				36872,
				36873,
				36874,
				36893,
				36897
			]
		},
		{
			"title": "Variables",
			"children": [
				37124
			]
		},
		{
			"title": "Functions",
			"children": [
				36903,
				36905,
				36907,
				36909
			]
		}
	],
	"packageName": "@medusajs/medusa",
	"symbolIdMap": {
		"36866": {
			"sourceFileName": "../../../../packages/medusa/src/index.ts",
			"qualifiedName": ""
		},
		"36867": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ClassConstructor"
		},
		"36868": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"36869": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"36870": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"36871": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"36872": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "MedusaContainer"
		},
		"36873": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Logger"
		},
		"36874": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Constructor"
		},
		"36875": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"36876": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"36877": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"36878": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"36879": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareFunction"
		},
		"36880": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"36881": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"36882": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "args"
		},
		"36883": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareRoute"
		},
		"36884": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"36885": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.method"
		},
		"36886": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.matcher"
		},
		"36887": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.bodyParser"
		},
		"36888": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.middlewares"
		},
		"36889": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MiddlewaresConfig"
		},
		"36890": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"36891": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.errorHandler"
		},
		"36892": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.routes"
		},
		"36893": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberConfig"
		},
		"36894": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"36895": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"36896": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.context"
		},
		"36897": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberArgs"
		},
		"36898": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"36899": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"36900": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.container"
		},
		"36901": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.pluginOptions"
		},
		"36902": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "T"
		},
		"36903": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "instrumentHttpLayer"
		},
		"36904": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "instrumentHttpLayer"
		},
		"36905": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "instrumentRemoteQuery"
		},
		"36906": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "instrumentRemoteQuery"
		},
		"36907": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "instrumentWorkflows"
		},
		"36908": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "instrumentWorkflows"
		},
		"36909": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "registerOtel"
		},
		"36910": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "registerOtel"
		},
		"36911": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "options"
		},
		"36912": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type"
		},
		"36913": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"36914": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.exporter"
		},
		"36915": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.instrument"
		},
		"36916": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type"
		},
		"36917": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.http"
		},
		"36918": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.query"
		},
		"36919": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.workflows"
		},
		"36920": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.db"
		},
		"36921": {
			"sourceFileName": "../../../../packages/medusa/src/instrumentation/index.ts",
			"qualifiedName": "__type.instrumentations"
		},
		"36922": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"36923": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"36924": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"36925": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"36926": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"36927": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"36928": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"36929": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"36930": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"36931": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"36932": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"36933": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"36934": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"36935": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"36936": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "name"
		},
		"36937": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "registration"
		},
		"36938": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"36939": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.createScope"
		},
		"36940": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"36941": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"36942": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"36943": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"36944": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"36945": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36946": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36947": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"36948": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"36949": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36950": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36951": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"36952": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"36953": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36954": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36955": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"36956": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"36957": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36958": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36959": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"36960": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36961": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36962": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"36963": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"36964": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"36965": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36966": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36967": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"36968": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"36969": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"36970": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36971": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36972": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"36973": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"36974": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"36975": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36976": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36977": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"36978": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"36979": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"36980": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36981": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36982": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"36983": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"36984": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"36985": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36986": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36987": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"36988": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"36989": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36990": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36991": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"36992": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"36993": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36994": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36995": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"36996": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"36997": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36998": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"36999": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "args"
		},
		"37000": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequestHandler"
		},
		"37001": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"37002": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"37003": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "req"
		},
		"37004": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "res"
		},
		"37005": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "next"
		},
		"37006": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "Body"
		},
		"37007": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "Res"
		},
		"37008": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareVerb"
		},
		"37009": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "ParserConfig"
		},
		"37010": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaErrorHandlerFunction"
		},
		"37011": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"37012": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"37013": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "error"
		},
		"37014": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "req"
		},
		"37015": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "res"
		},
		"37016": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "next"
		},
		"37017": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext"
		},
		"37018": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext.subscriberId"
		},
		"37019": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"37020": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"37021": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"37022": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"37023": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"37024": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"37025": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest"
		},
		"37026": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"37027": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.__index"
		},
		"37029": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"37030": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"37031": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"37032": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"37033": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"37034": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"37035": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"37036": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.fields"
		},
		"37037": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.pagination"
		},
		"37038": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"37039": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.order"
		},
		"37040": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.skip"
		},
		"37041": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.take"
		},
		"37042": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"37043": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"37044": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"37045": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"37046": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"37047": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"37048": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"37049": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"37050": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.restrictedFields"
		},
		"37051": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.pricingContext"
		},
		"37052": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.context"
		},
		"37053": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.additionalDataValidator"
		},
		"37054": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"37055": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"37056": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"37057": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"37058": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.customer_id"
		},
		"37059": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.userId"
		},
		"37060": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.Body"
		},
		"37061": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaResponse"
		},
		"37062": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "Body"
		},
		"37063": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "MedusaNextFunction"
		},
		"37064": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "RouteVerb"
		},
		"37065": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "ParserConfigArgs"
		},
		"37066": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"37067": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.sizeLimit"
		},
		"37068": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "__type.preserveRawBody"
		},
		"37069": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"37070": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"37071": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"37072": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"37073": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"37074": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"37075": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"37076": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"37077": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"37078": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"37079": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"37080": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"37081": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"37082": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"37083": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"37084": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"37085": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"37086": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"37087": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"37088": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"37089": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type"
		},
		"37090": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"37091": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"37092": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "K"
		},
		"37093": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "key"
		},
		"37094": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "resolveOptions"
		},
		"37095": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"37096": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "T"
		},
		"37097": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "key"
		},
		"37098": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "resolveOptions"
		},
		"37099": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"37100": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type"
		},
		"37101": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type"
		},
		"37102": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "name"
		},
		"37103": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "registration"
		},
		"37104": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "T"
		},
		"37105": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type.createScope"
		},
		"37106": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type"
		},
		"37107": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "__type"
		},
		"37108": {
			"sourceFileName": "../../../../packages/core/framework/src/types/container.ts",
			"qualifiedName": "Cradle"
		},
		"37109": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "RestrictedFields"
		},
		"37112": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "RestrictedFields.#private"
		},
		"37113": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "RestrictedFields.list"
		},
		"37114": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "RestrictedFields.list"
		},
		"37115": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "RestrictedFields.add"
		},
		"37116": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "RestrictedFields.add"
		},
		"37117": {
			"sourceFileName": "../../../../packages/core/framework/src/http/utils/restricted-fields.ts",
			"qualifiedName": "fields"
		},
		"37118": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "MedusaPricingContext"
		},
		"37119": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type"
		},
		"37120": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.region_id"
		},
		"37121": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.currency_code"
		},
		"37122": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.customer_id"
		},
		"37123": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.customer_group_id"
		},
		"37124": {
			"sourceFileName": "../../../../packages/core/framework/src/http/types.ts",
			"qualifiedName": "HTTP_METHODS"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/medusa/src/index.ts"
		},
		"reflections": {
			"1": 36866
		}
	}
}
