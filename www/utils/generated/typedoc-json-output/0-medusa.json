{
	"id": 31563,
	"name": "medusa",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 31799,
			"name": "RequestQueryFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields that can be passed in the query parameters of a request."
					}
				]
			},
			"children": [
				{
					"id": 31800,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use "
									},
									{
										"kind": "code",
										"text": "`fields`"
									},
									{
										"kind": "text",
										"text": " instead and the relations will be inferred"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 31801,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 31802,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 31803,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 31804,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						31800,
						31801,
						31802,
						31803,
						31804
					]
				}
			]
		},
		{
			"id": 31761,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"typeParameters": [
				{
					"id": 31781,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
							"qualifiedName": "ModuleImplementations"
						},
						"name": "ModuleImplementations",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 31762,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31763,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 31764,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 31765,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 31766,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 31765,
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 31767,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 31765,
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 31781,
													"name": "Cradle",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 31768,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 31769,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 31770,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 31771,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 31769,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										31763
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 31860,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 31861,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31862,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31862
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 31813,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 31818,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31814,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 31815,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31816,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 31860,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31817,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31818,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31815,
								31816,
								31817
							]
						}
					]
				}
			}
		},
		{
			"id": 31805,
			"name": "MedusaPricingContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31806,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 31807,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31808,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31809,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31810,
							"name": "customer_group_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31807,
								31808,
								31809,
								31810
							]
						}
					]
				}
			}
		},
		{
			"id": 31895,
			"name": "ModuleImplementations",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The following interface acts as a bucket that other modules or the\nutils package can fill using declaration merging"
					}
				]
			}
		},
		{
			"id": 31873,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"typeParameters": [
				{
					"id": 31893,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": 31895,
						"name": "ModuleImplementations",
						"package": "@medusajs/framework"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 31874,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31875,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 31876,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 31877,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 31878,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 31877,
														"name": "K",
														"package": "@medusajs/framework",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 31879,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 31877,
													"name": "K",
													"package": "@medusajs/framework",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 31893,
													"name": "Cradle",
													"package": "@medusajs/framework",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 31880,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 31881,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 31882,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 31883,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 31881,
												"name": "T",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										31875
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 31863,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 31864,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 31872,
								"name": "Entity",
								"package": "@medusajs/framework",
								"qualifiedName": "FindConfig.Entity",
								"refersToTypeParameter": true
							}
						}
					}
				},
				{
					"id": 31865,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 31866,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 31867,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 31868,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31869,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 31870,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 31871,
											"name": "K",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						31864,
						31865,
						31866,
						31867,
						31868
					]
				}
			],
			"typeParameters": [
				{
					"id": 31872,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 31894,
			"name": "HTTP_METHODS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of all the supported HTTP methods"
					}
				]
			},
			"type": {
				"type": "typeOperator",
				"operator": "readonly",
				"target": {
					"type": "tuple",
					"elements": [
						{
							"type": "literal",
							"value": "GET"
						},
						{
							"type": "literal",
							"value": "POST"
						},
						{
							"type": "literal",
							"value": "PUT"
						},
						{
							"type": "literal",
							"value": "PATCH"
						},
						{
							"type": "literal",
							"value": "DELETE"
						},
						{
							"type": "literal",
							"value": "OPTIONS"
						},
						{
							"type": "literal",
							"value": "HEAD"
						}
					]
				}
			}
		},
		{
			"id": 31855,
			"name": "RouteVerb",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "intrinsic",
					"name": "number"
				},
				"objectType": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"target": 31894,
						"name": "HTTP_METHODS",
						"package": "@medusajs/framework"
					}
				}
			}
		},
		{
			"id": 31790,
			"name": "MiddlewareVerb",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "USE"
					},
					{
						"type": "literal",
						"value": "ALL"
					},
					{
						"type": "reference",
						"target": 31855,
						"name": "RouteVerb",
						"package": "@medusajs/framework"
					}
				]
			}
		},
		{
			"id": 31654,
			"name": "MiddlewareFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 31782,
						"name": "MedusaRequestHandler",
						"package": "@medusajs/framework"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 31655,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 31656,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 31657,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 31792,
			"name": "MedusaErrorHandlerFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31793,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 31794,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 31795,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 31796,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31819,
										"name": "MedusaRequest",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 31797,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31852,
										"name": "MedusaResponse",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 31798,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31854,
										"name": "MedusaNextFunction",
										"package": "@medusajs/framework"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 31856,
			"name": "ParserConfigArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31857,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 31858,
							"name": "sizeLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31859,
							"name": "preserveRawBody",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31858,
								31859
							]
						}
					]
				}
			}
		},
		{
			"id": 31791,
			"name": "ParserConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": false
					},
					{
						"type": "reference",
						"target": 31856,
						"name": "ParserConfigArgs",
						"package": "@medusajs/framework"
					}
				]
			}
		},
		{
			"id": 31658,
			"name": "MiddlewareRoute",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31659,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 31660,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 31790,
										"name": "MiddlewareVerb",
										"package": "@medusajs/framework"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 31790,
											"name": "MiddlewareVerb",
											"package": "@medusajs/framework"
										}
									}
								]
							}
						},
						{
							"id": 31661,
							"name": "matcher",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "RegExp"
										},
										"name": "RegExp",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31662,
							"name": "bodyParser",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 31791,
								"name": "ParserConfig",
								"package": "@medusajs/framework"
							}
						},
						{
							"id": 31663,
							"name": "middlewares",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31654,
									"name": "MiddlewareFunction",
									"package": "@medusajs/framework"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31660,
								31661,
								31662,
								31663
							]
						}
					]
				}
			}
		},
		{
			"id": 31664,
			"name": "MiddlewaresConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31665,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 31666,
							"name": "errorHandler",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "reference",
										"target": 31792,
										"name": "MedusaErrorHandlerFunction",
										"package": "@medusajs/framework"
									}
								]
							}
						},
						{
							"id": 31667,
							"name": "routes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31658,
									"name": "MiddlewareRoute",
									"package": "@medusajs/framework"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31666,
								31667
							]
						}
					]
				}
			}
		},
		{
			"id": 31819,
			"name": "MedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 31820,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 31851,
						"name": "Body",
						"package": "@medusajs/framework",
						"qualifiedName": "MedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedBody"
					}
				},
				{
					"id": 31821,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 31799,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedQuery"
					}
				},
				{
					"id": 31822,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedProperties"
					}
				},
				{
					"id": 31823,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 31863,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/framework"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.listConfig"
					}
				},
				{
					"id": 31824,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 31863,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/framework"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.retrieveConfig"
					}
				},
				{
					"id": 31825,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31826,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31827,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31828,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 31829,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 31830,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 31831,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 31832,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														31830,
														31831,
														31832
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31827,
										31828
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.remoteQueryConfig"
					}
				},
				{
					"id": 31833,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.filterableFields"
					}
				},
				{
					"id": 31834,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.includes"
					}
				},
				{
					"id": 31835,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedFields"
					}
				},
				{
					"id": 31836,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowed"
					}
				},
				{
					"id": 31837,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.errors"
					}
				},
				{
					"id": 31838,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 31873,
						"name": "MedusaContainer",
						"package": "@medusajs/framework"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.scope"
					}
				},
				{
					"id": 31839,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 31840,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 31841,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.requestId"
					}
				},
				{
					"id": 31842,
					"name": "pricingContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that carries the context that is used to calculate prices for variants"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 31805,
						"name": "MedusaPricingContext",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 31843,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic context object that can be used across the request lifecycle"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 31844,
					"name": "additionalDataValidator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom validator to validate the "
							},
							{
								"kind": "code",
								"text": "`additional_data`"
							},
							{
								"kind": "text",
								"text": " property in\nrequests that allows for additional_data"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodObject"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodTypeAny"
								},
								"name": "ZodTypeAny",
								"package": "zod"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 31845,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 31846,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "ZodObject",
						"package": "zod"
					}
				},
				{
					"id": 31847,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31848,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31849,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31850,
									"name": "userId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31849,
										31850
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.user"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						31820,
						31821,
						31822,
						31823,
						31824,
						31825,
						31833,
						31834,
						31835,
						31836,
						31837,
						31838,
						31839,
						31840,
						31841,
						31842,
						31843,
						31844,
						31847
					]
				}
			],
			"typeParameters": [
				{
					"id": 31851,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
						"qualifiedName": "e.Request"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../node_modules/@types/express-serve-static-core/index.d.ts",
								"qualifiedName": "ParamsDictionary"
							},
							"name": "core.ParamsDictionary",
							"package": "@types/express-serve-static-core",
							"qualifiedName": "ParamsDictionary"
						},
						{
							"type": "intrinsic",
							"name": "any"
						},
						{
							"type": "reference",
							"target": 31851,
							"name": "Body",
							"package": "@medusajs/framework",
							"qualifiedName": "MedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "Request",
					"package": "@types/express",
					"qualifiedName": "e.Request"
				}
			]
		},
		{
			"id": 31852,
			"name": "MedusaResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 31853,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.Response"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 31853,
						"name": "Body",
						"package": "@medusajs/framework",
						"refersToTypeParameter": true
					}
				],
				"name": "Response",
				"package": "@types/express",
				"qualifiedName": "e.Response"
			}
		},
		{
			"id": 31854,
			"name": "MedusaNextFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.NextFunction"
				},
				"name": "NextFunction",
				"package": "@types/express",
				"qualifiedName": "e.NextFunction"
			}
		},
		{
			"id": 31782,
			"name": "MedusaRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 31788,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 31789,
					"name": "Res",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31783,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 31784,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 31785,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31819,
										"typeArguments": [
											{
												"type": "reference",
												"target": 31788,
												"name": "Body",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaRequest",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 31786,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31852,
										"typeArguments": [
											{
												"type": "reference",
												"target": 31789,
												"name": "Res",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaResponse",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 31787,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31854,
										"name": "MedusaNextFunction",
										"package": "@medusajs/framework"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 31564,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 31565,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 31573,
								"name": "Entity",
								"package": "@medusajs/medusa",
								"qualifiedName": "FindConfig.Entity",
								"refersToTypeParameter": true
							}
						}
					}
				},
				{
					"id": 31566,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 31567,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 31568,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 31569,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31570,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 31571,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 31572,
											"name": "K",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						31565,
						31566,
						31567,
						31568,
						31569
					]
				}
			],
			"typeParameters": [
				{
					"id": 31573,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 31574,
			"name": "QueryConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 31584,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31575,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 31576,
							"name": "defaults",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Default fields and relations to return"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 31584,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 31577,
							"name": "defaultFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`defaults`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 31584,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 31578,
							"name": "defaultRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`defaultFields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 31579,
							"name": "allowed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields and relations that are allowed to be requested"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 31580,
							"name": "allowedFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`allowed`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 31581,
							"name": "allowedRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`allowedFields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 31582,
							"name": "defaultLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31583,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31576,
								31577,
								31578,
								31579,
								31580,
								31581,
								31582,
								31583
							]
						}
					]
				}
			}
		},
		{
			"id": 31585,
			"name": "ClassConstructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 31589,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31586,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 31587,
							"name": "new ClassConstructor",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 31588,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 31589,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 31590,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 31761,
				"name": "coreMedusaContainer",
				"package": "@medusajs/types",
				"qualifiedName": "MedusaContainer"
			}
		},
		{
			"id": 31591,
			"name": "Logger",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31592,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 31593,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31594,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31595,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31596,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31597,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31598,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31599,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31600,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31601,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31602,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31603,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31604,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31605,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31606,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31607,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31608,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31609,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31610,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31611,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 31612,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31613,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31614,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31615,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31616,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 31617,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31618,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31619,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31620,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31621,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 31622,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31623,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31624,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31625,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31626,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 31627,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31628,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31629,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31630,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31631,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 31632,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31633,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31634,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31635,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31636,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31637,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31638,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31639,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31640,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31641,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31642,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31643,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31644,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 31645,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31646,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 31647,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 31648,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31593,
								31597,
								31601,
								31605,
								31608,
								31613,
								31618,
								31623,
								31628,
								31633,
								31637,
								31641,
								31645
							]
						}
					]
				}
			}
		},
		{
			"id": 31649,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 31653,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31650,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 31651,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 31652,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 31653,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 31668,
			"name": "MedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 31696,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31697,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31698,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31699,
									"name": "userId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31698,
										31699
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.user"
					}
				},
				{
					"id": 31669,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 31700,
						"name": "Body",
						"package": "@medusajs/medusa",
						"qualifiedName": "MedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedBody"
					}
				},
				{
					"id": 31670,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 31799,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedQuery"
					}
				},
				{
					"id": 31671,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedProperties"
					}
				},
				{
					"id": 31672,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 31564,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.listConfig"
					}
				},
				{
					"id": 31673,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 31564,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.retrieveConfig"
					}
				},
				{
					"id": 31674,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31675,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31676,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31677,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 31678,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 31679,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 31680,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 31681,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														31679,
														31680,
														31681
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31676,
										31677
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.remoteQueryConfig"
					}
				},
				{
					"id": 31682,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.filterableFields"
					}
				},
				{
					"id": 31683,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.includes"
					}
				},
				{
					"id": 31684,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedFields"
					}
				},
				{
					"id": 31685,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowed"
					}
				},
				{
					"id": 31686,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.errors"
					}
				},
				{
					"id": 31687,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 31761,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.scope"
					}
				},
				{
					"id": 31688,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 31689,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 31690,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.requestId"
					}
				},
				{
					"id": 31691,
					"name": "pricingContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that carries the context that is used to calculate prices for variants"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 31805,
						"name": "MedusaPricingContext",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 31692,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic context object that can be used across the request lifecycle"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 31693,
					"name": "additionalDataValidator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom validator to validate the "
							},
							{
								"kind": "code",
								"text": "`additional_data`"
							},
							{
								"kind": "text",
								"text": " property in\nrequests that allows for additional_data"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodObject"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodTypeAny"
								},
								"name": "ZodTypeAny",
								"package": "zod"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 31694,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 31695,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "ZodObject",
						"package": "zod"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						31696,
						31669,
						31670,
						31671,
						31672,
						31673,
						31674,
						31682,
						31683,
						31684,
						31685,
						31686,
						31687,
						31688,
						31689,
						31690,
						31691,
						31692,
						31693
					]
				}
			],
			"typeParameters": [
				{
					"id": 31700,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
						"qualifiedName": "e.Request"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../node_modules/@types/express-serve-static-core/index.d.ts",
								"qualifiedName": "ParamsDictionary"
							},
							"name": "core.ParamsDictionary",
							"package": "@types/express-serve-static-core",
							"qualifiedName": "ParamsDictionary"
						},
						{
							"type": "intrinsic",
							"name": "any"
						},
						{
							"type": "reference",
							"target": 31700,
							"name": "Body",
							"package": "@medusajs/medusa",
							"qualifiedName": "MedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "Request",
					"package": "@types/express",
					"qualifiedName": "e.Request"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 31706,
					"name": "AuthenticatedMedusaRequest"
				}
			]
		},
		{
			"id": 31701,
			"name": "AuthContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 31702,
					"name": "actor_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 31703,
					"name": "actor_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 31704,
					"name": "auth_identity_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 31705,
					"name": "app_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						31702,
						31703,
						31704,
						31705
					]
				}
			]
		},
		{
			"id": 31706,
			"name": "AuthenticatedMedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 31735,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31736,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31737,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31738,
									"name": "userId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31737,
										31738
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31696,
						"name": "MedusaRequest.user"
					}
				},
				{
					"id": 31708,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": 31739,
						"name": "Body",
						"package": "@medusajs/medusa",
						"qualifiedName": "AuthenticatedMedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31669,
						"name": "MedusaRequest.validatedBody"
					}
				},
				{
					"id": 31709,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 31799,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31670,
						"name": "MedusaRequest.validatedQuery"
					}
				},
				{
					"id": 31710,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31671,
						"name": "MedusaRequest.allowedProperties"
					}
				},
				{
					"id": 31711,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 31564,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31672,
						"name": "MedusaRequest.listConfig"
					}
				},
				{
					"id": 31712,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 31564,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31673,
						"name": "MedusaRequest.retrieveConfig"
					}
				},
				{
					"id": 31713,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31714,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31715,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 31716,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 31717,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 31718,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 31719,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 31720,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														31718,
														31719,
														31720
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31715,
										31716
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31674,
						"name": "MedusaRequest.remoteQueryConfig"
					}
				},
				{
					"id": 31721,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31682,
						"name": "MedusaRequest.filterableFields"
					}
				},
				{
					"id": 31722,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31683,
						"name": "MedusaRequest.includes"
					}
				},
				{
					"id": 31723,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31684,
						"name": "MedusaRequest.allowedFields"
					}
				},
				{
					"id": 31724,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31685,
						"name": "MedusaRequest.allowed"
					}
				},
				{
					"id": 31725,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31686,
						"name": "MedusaRequest.errors"
					}
				},
				{
					"id": 31726,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": 31761,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31687,
						"name": "MedusaRequest.scope"
					}
				},
				{
					"id": 31727,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31688,
						"name": "MedusaRequest.session"
					}
				},
				{
					"id": 31728,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31689,
						"name": "MedusaRequest.rawBody"
					}
				},
				{
					"id": 31729,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31690,
						"name": "MedusaRequest.requestId"
					}
				},
				{
					"id": 31730,
					"name": "pricingContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that carries the context that is used to calculate prices for variants"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 31805,
						"name": "MedusaPricingContext",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31691,
						"name": "MedusaRequest.pricingContext"
					}
				},
				{
					"id": 31731,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic context object that can be used across the request lifecycle"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31692,
						"name": "MedusaRequest.context"
					}
				},
				{
					"id": 31732,
					"name": "additionalDataValidator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom validator to validate the "
							},
							{
								"kind": "code",
								"text": "`additional_data`"
							},
							{
								"kind": "text",
								"text": " property in\nrequests that allows for additional_data"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodObject"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodTypeAny"
								},
								"name": "ZodTypeAny",
								"package": "zod"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 31733,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 31734,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "ZodObject",
						"package": "zod"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 31693,
						"name": "MedusaRequest.additionalDataValidator"
					}
				},
				{
					"id": 31707,
					"name": "auth_context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 31701,
						"name": "AuthContext",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						31735,
						31708,
						31709,
						31710,
						31711,
						31712,
						31713,
						31721,
						31722,
						31723,
						31724,
						31725,
						31726,
						31727,
						31728,
						31729,
						31730,
						31731,
						31732,
						31707
					]
				}
			],
			"typeParameters": [
				{
					"id": 31739,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 31668,
					"typeArguments": [
						{
							"type": "reference",
							"target": 31739,
							"name": "Body",
							"package": "@medusajs/medusa",
							"qualifiedName": "AuthenticatedMedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "MedusaRequest",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 31740,
			"name": "MedusaResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 31741,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.Response"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 31741,
						"name": "Body",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				],
				"name": "Response",
				"package": "@types/express",
				"qualifiedName": "e.Response"
			}
		},
		{
			"id": 31742,
			"name": "MedusaNextFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.NextFunction"
				},
				"name": "NextFunction",
				"package": "@types/express",
				"qualifiedName": "e.NextFunction"
			}
		},
		{
			"id": 31743,
			"name": "MedusaRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 31749,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 31750,
					"name": "Res",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31744,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 31745,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 31746,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31668,
										"typeArguments": [
											{
												"type": "reference",
												"target": 31749,
												"name": "Body",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaRequest",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 31747,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31740,
										"typeArguments": [
											{
												"type": "reference",
												"target": 31750,
												"name": "Res",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaResponse",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 31748,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 31742,
										"name": "MedusaNextFunction",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 31811,
			"name": "SubscriberContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 31812,
					"name": "subscriberId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						31812
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 31751,
			"name": "SubscriberConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31752,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 31753,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31754,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 31811,
								"name": "SubscriberContext",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31753,
								31754
							]
						}
					]
				}
			}
		},
		{
			"id": 31755,
			"name": "SubscriberArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 31760,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 31756,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 31757,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31813,
								"typeArguments": [
									{
										"type": "reference",
										"target": 31760,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Event",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31758,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31761,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31759,
							"name": "pluginOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31757,
								31758,
								31759
							]
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				31799,
				31895,
				31863,
				31819,
				31564,
				31668,
				31701,
				31706,
				31811
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				31761,
				31860,
				31813,
				31805,
				31873,
				31855,
				31790,
				31654,
				31792,
				31856,
				31791,
				31658,
				31664,
				31852,
				31854,
				31782,
				31574,
				31585,
				31590,
				31591,
				31649,
				31740,
				31742,
				31743,
				31751,
				31755
			]
		},
		{
			"title": "Variables",
			"children": [
				31894
			]
		}
	],
	"packageName": "@medusajs/medusa",
	"symbolIdMap": {
		"31563": {
			"sourceFileName": "../../../../packages/medusa/src/index.js",
			"qualifiedName": ""
		},
		"31564": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig"
		},
		"31565": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"31566": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"31567": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"31568": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"31569": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"31570": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"31571": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.__index"
		},
		"31573": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"31574": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "QueryConfig"
		},
		"31575": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"31576": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaults"
		},
		"31577": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultFields"
		},
		"31578": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultRelations"
		},
		"31579": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowed"
		},
		"31580": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedFields"
		},
		"31581": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedRelations"
		},
		"31582": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultLimit"
		},
		"31583": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.isList"
		},
		"31584": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"31585": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ClassConstructor"
		},
		"31586": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31587": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31588": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"31589": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"31590": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "MedusaContainer"
		},
		"31591": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Logger"
		},
		"31592": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31593": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.panic"
		},
		"31594": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31595": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31596": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "data"
		},
		"31597": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.shouldLog"
		},
		"31598": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31599": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31600": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"31601": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.setLogLevel"
		},
		"31602": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31603": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31604": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"31605": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.unsetLogLevel"
		},
		"31606": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31607": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31608": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.activity"
		},
		"31609": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31610": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31611": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"31612": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "config"
		},
		"31613": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.progress"
		},
		"31614": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31615": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31616": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"31617": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"31618": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.error"
		},
		"31619": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31620": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31621": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "messageOrError"
		},
		"31622": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "error"
		},
		"31623": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.failure"
		},
		"31624": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31625": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31626": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"31627": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"31628": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.success"
		},
		"31629": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31630": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31631": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"31632": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"31633": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.debug"
		},
		"31634": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31635": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31636": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"31637": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.info"
		},
		"31638": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31639": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31640": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"31641": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.warn"
		},
		"31642": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31643": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31644": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"31645": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.log"
		},
		"31646": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31647": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31648": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"31649": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Constructor"
		},
		"31650": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31651": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31652": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"31653": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"31654": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareFunction"
		},
		"31655": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"31656": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"31657": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "args"
		},
		"31658": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareRoute"
		},
		"31659": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"31660": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.method"
		},
		"31661": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.matcher"
		},
		"31662": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.bodyParser"
		},
		"31663": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.middlewares"
		},
		"31664": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MiddlewaresConfig"
		},
		"31665": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"31666": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.errorHandler"
		},
		"31667": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.routes"
		},
		"31668": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest"
		},
		"31669": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"31670": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"31671": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"31672": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"31673": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"31674": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"31675": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"31676": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.fields"
		},
		"31677": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.pagination"
		},
		"31678": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"31679": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.order"
		},
		"31680": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.skip"
		},
		"31681": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.take"
		},
		"31682": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"31683": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"31684": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"31685": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"31686": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"31687": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"31688": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"31689": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"31690": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"31691": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.pricingContext"
		},
		"31692": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.context"
		},
		"31693": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.additionalDataValidator"
		},
		"31694": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"31695": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"31696": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"31697": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31698": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.customer_id"
		},
		"31699": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.userId"
		},
		"31700": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.Body"
		},
		"31701": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext"
		},
		"31702": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.actor_id"
		},
		"31703": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.actor_type"
		},
		"31704": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.auth_identity_id"
		},
		"31705": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.app_metadata"
		},
		"31706": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest"
		},
		"31707": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.auth_context"
		},
		"31708": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"31709": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"31710": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"31711": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"31712": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"31713": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"31714": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"31715": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.fields"
		},
		"31716": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.pagination"
		},
		"31717": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"31718": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.order"
		},
		"31719": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.skip"
		},
		"31720": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.take"
		},
		"31721": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"31722": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"31723": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"31724": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"31725": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"31726": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"31727": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"31728": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"31729": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"31730": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.pricingContext"
		},
		"31731": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.context"
		},
		"31732": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.additionalDataValidator"
		},
		"31733": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"31734": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"31735": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"31736": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31737": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.customer_id"
		},
		"31738": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.userId"
		},
		"31739": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.Body"
		},
		"31740": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaResponse"
		},
		"31741": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Body"
		},
		"31742": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaNextFunction"
		},
		"31743": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequestHandler"
		},
		"31744": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"31745": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"31746": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "req"
		},
		"31747": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "res"
		},
		"31748": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "next"
		},
		"31749": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Body"
		},
		"31750": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Res"
		},
		"31751": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberConfig"
		},
		"31752": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"31753": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"31754": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.context"
		},
		"31755": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberArgs"
		},
		"31756": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"31757": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"31758": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.container"
		},
		"31759": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.pluginOptions"
		},
		"31760": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "T"
		},
		"31761": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"31762": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"31763": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"31764": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"31765": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"31766": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"31767": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"31768": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"31769": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"31770": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"31771": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"31781": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"31782": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequestHandler"
		},
		"31783": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"31784": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"31785": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "req"
		},
		"31786": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "res"
		},
		"31787": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "next"
		},
		"31788": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "Body"
		},
		"31789": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "Res"
		},
		"31790": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareVerb"
		},
		"31791": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "ParserConfig"
		},
		"31792": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaErrorHandlerFunction"
		},
		"31793": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"31794": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"31795": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "error"
		},
		"31796": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "req"
		},
		"31797": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "res"
		},
		"31798": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "next"
		},
		"31799": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"31800": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"31801": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"31802": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"31803": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"31804": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"31805": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "MedusaPricingContext"
		},
		"31806": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type"
		},
		"31807": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.region_id"
		},
		"31808": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.currency_code"
		},
		"31809": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.customer_id"
		},
		"31810": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.customer_group_id"
		},
		"31811": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext"
		},
		"31812": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext.subscriberId"
		},
		"31813": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"31814": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31815": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"31816": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"31817": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"31818": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"31819": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest"
		},
		"31820": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"31821": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"31822": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"31823": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"31824": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"31825": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"31826": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"31827": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.fields"
		},
		"31828": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.pagination"
		},
		"31829": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"31830": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.order"
		},
		"31831": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.skip"
		},
		"31832": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.take"
		},
		"31833": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"31834": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"31835": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"31836": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"31837": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"31838": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"31839": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"31840": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"31841": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"31842": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.pricingContext"
		},
		"31843": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.context"
		},
		"31844": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.additionalDataValidator"
		},
		"31845": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"31846": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"31847": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"31848": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"31849": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.customer_id"
		},
		"31850": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.userId"
		},
		"31851": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.Body"
		},
		"31852": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaResponse"
		},
		"31853": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "Body"
		},
		"31854": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaNextFunction"
		},
		"31855": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "RouteVerb"
		},
		"31856": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "ParserConfigArgs"
		},
		"31857": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"31858": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.sizeLimit"
		},
		"31859": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.preserveRawBody"
		},
		"31860": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"31861": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"31862": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"31863": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig"
		},
		"31864": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.select"
		},
		"31865": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"31866": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.take"
		},
		"31867": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"31868": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.order"
		},
		"31869": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"31870": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.__index"
		},
		"31872": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"31873": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"31874": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "__type"
		},
		"31875": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"31876": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"31877": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "K"
		},
		"31878": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "key"
		},
		"31879": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "resolveOptions"
		},
		"31880": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"31881": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "T"
		},
		"31882": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "key"
		},
		"31883": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "resolveOptions"
		},
		"31893": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "Cradle"
		},
		"31894": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "HTTP_METHODS"
		},
		"31895": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "ModuleImplementations"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/medusa/src/index.js"
		},
		"reflections": {
			"1": 31563
		}
	}
}