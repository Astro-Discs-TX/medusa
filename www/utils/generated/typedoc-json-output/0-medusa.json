{
	"id": 32974,
	"name": "medusa",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 33210,
			"name": "RequestQueryFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields that can be passed in the query parameters of a request."
					}
				]
			},
			"children": [
				{
					"id": 33211,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use "
									},
									{
										"kind": "code",
										"text": "`fields`"
									},
									{
										"kind": "text",
										"text": " instead and the relations will be inferred"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33212,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
							},
							{
								"kind": "code",
								"text": "`+`"
							},
							{
								"kind": "text",
								"text": " it will be added to the default fields, using "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33213,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33214,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33215,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33211,
						33212,
						33213,
						33214,
						33215
					]
				}
			]
		},
		{
			"id": 33172,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"typeParameters": [
				{
					"id": 33192,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
							"qualifiedName": "ModuleImplementations"
						},
						"name": "ModuleImplementations",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33173,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33174,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 33175,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 33176,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 33177,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 33176,
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 33178,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 33176,
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 33192,
													"name": "Cradle",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 33179,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 33180,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 33181,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 33182,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 33180,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										33174
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33271,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33272,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33273,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33273
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33224,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33229,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33225,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33226,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33227,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 33271,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33228,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33229,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33226,
								33227,
								33228
							]
						}
					]
				}
			}
		},
		{
			"id": 33216,
			"name": "MedusaPricingContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33217,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33218,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33219,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33220,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33221,
							"name": "customer_group_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33218,
								33219,
								33220,
								33221
							]
						}
					]
				}
			}
		},
		{
			"id": 33306,
			"name": "ModuleImplementations",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The following interface acts as a bucket that other modules or the\nutils package can fill using declaration merging"
					}
				]
			}
		},
		{
			"id": 33284,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"typeParameters": [
				{
					"id": 33304,
					"name": "Cradle",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "reference",
						"target": 33306,
						"name": "ModuleImplementations",
						"package": "@medusajs/framework"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
									"qualifiedName": "AwilixContainer"
								},
								"name": "AwilixContainer",
								"package": "awilix"
							},
							{
								"type": "literal",
								"value": "resolve"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33285,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33286,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 33287,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 33288,
													"name": "K",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															}
														]
													}
												}
											],
											"parameters": [
												{
													"id": 33289,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 33288,
														"name": "K",
														"package": "@medusajs/framework",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 33290,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 33288,
													"name": "K",
													"package": "@medusajs/framework",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 33304,
													"name": "Cradle",
													"package": "@medusajs/framework",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"id": 33291,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 33292,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {}
												}
											],
											"parameters": [
												{
													"id": 33293,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 33294,
													"name": "resolveOptions",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
															"qualifiedName": "ResolveOptions"
														},
														"name": "ResolveOptions",
														"package": "awilix"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 33292,
												"name": "T",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										33286
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33274,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33275,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 33283,
								"name": "Entity",
								"package": "@medusajs/framework",
								"qualifiedName": "FindConfig.Entity",
								"refersToTypeParameter": true
							}
						}
					}
				},
				{
					"id": 33276,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33277,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33278,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 33279,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33280,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 33281,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 33282,
											"name": "K",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33275,
						33276,
						33277,
						33278,
						33279
					]
				}
			],
			"typeParameters": [
				{
					"id": 33283,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 33305,
			"name": "HTTP_METHODS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of all the supported HTTP methods"
					}
				]
			},
			"type": {
				"type": "typeOperator",
				"operator": "readonly",
				"target": {
					"type": "tuple",
					"elements": [
						{
							"type": "literal",
							"value": "GET"
						},
						{
							"type": "literal",
							"value": "POST"
						},
						{
							"type": "literal",
							"value": "PUT"
						},
						{
							"type": "literal",
							"value": "PATCH"
						},
						{
							"type": "literal",
							"value": "DELETE"
						},
						{
							"type": "literal",
							"value": "OPTIONS"
						},
						{
							"type": "literal",
							"value": "HEAD"
						}
					]
				}
			}
		},
		{
			"id": 33266,
			"name": "RouteVerb",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "intrinsic",
					"name": "number"
				},
				"objectType": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"target": 33305,
						"name": "HTTP_METHODS",
						"package": "@medusajs/framework"
					}
				}
			}
		},
		{
			"id": 33201,
			"name": "MiddlewareVerb",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "USE"
					},
					{
						"type": "literal",
						"value": "ALL"
					},
					{
						"type": "reference",
						"target": 33266,
						"name": "RouteVerb",
						"package": "@medusajs/framework"
					}
				]
			}
		},
		{
			"id": 33065,
			"name": "MiddlewareFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 33193,
						"name": "MedusaRequestHandler",
						"package": "@medusajs/framework"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33066,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 33067,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 33068,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33203,
			"name": "MedusaErrorHandlerFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33204,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 33205,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33206,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 33207,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33230,
										"name": "MedusaRequest",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 33208,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33263,
										"name": "MedusaResponse",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 33209,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33265,
										"name": "MedusaNextFunction",
										"package": "@medusajs/framework"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 33267,
			"name": "ParserConfigArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33268,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33269,
							"name": "sizeLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 33270,
							"name": "preserveRawBody",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33269,
								33270
							]
						}
					]
				}
			}
		},
		{
			"id": 33202,
			"name": "ParserConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": false
					},
					{
						"type": "reference",
						"target": 33267,
						"name": "ParserConfigArgs",
						"package": "@medusajs/framework"
					}
				]
			}
		},
		{
			"id": 33069,
			"name": "MiddlewareRoute",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33070,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33071,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 33201,
										"name": "MiddlewareVerb",
										"package": "@medusajs/framework"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33201,
											"name": "MiddlewareVerb",
											"package": "@medusajs/framework"
										}
									}
								]
							}
						},
						{
							"id": 33072,
							"name": "matcher",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "RegExp"
										},
										"name": "RegExp",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 33073,
							"name": "bodyParser",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 33202,
								"name": "ParserConfig",
								"package": "@medusajs/framework"
							}
						},
						{
							"id": 33074,
							"name": "middlewares",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33065,
									"name": "MiddlewareFunction",
									"package": "@medusajs/framework"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33071,
								33072,
								33073,
								33074
							]
						}
					]
				}
			}
		},
		{
			"id": 33075,
			"name": "MiddlewaresConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33076,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33077,
							"name": "errorHandler",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "reference",
										"target": 33203,
										"name": "MedusaErrorHandlerFunction",
										"package": "@medusajs/framework"
									}
								]
							}
						},
						{
							"id": 33078,
							"name": "routes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33069,
									"name": "MiddlewareRoute",
									"package": "@medusajs/framework"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33077,
								33078
							]
						}
					]
				}
			}
		},
		{
			"id": 33230,
			"name": "MedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33231,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33262,
						"name": "Body",
						"package": "@medusajs/framework",
						"qualifiedName": "MedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedBody"
					}
				},
				{
					"id": 33232,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 33210,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedQuery"
					}
				},
				{
					"id": 33233,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedProperties"
					}
				},
				{
					"id": 33234,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33274,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/framework"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.listConfig"
					}
				},
				{
					"id": 33235,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33274,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/framework"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.retrieveConfig"
					}
				},
				{
					"id": 33236,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33237,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33238,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 33239,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 33240,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 33241,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 33242,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 33243,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														33241,
														33242,
														33243
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33238,
										33239
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.remoteQueryConfig"
					}
				},
				{
					"id": 33244,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.filterableFields"
					}
				},
				{
					"id": 33245,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.includes"
					}
				},
				{
					"id": 33246,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedFields"
					}
				},
				{
					"id": 33247,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowed"
					}
				},
				{
					"id": 33248,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.errors"
					}
				},
				{
					"id": 33249,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33284,
						"name": "MedusaContainer",
						"package": "@medusajs/framework"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.scope"
					}
				},
				{
					"id": 33250,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 33251,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 33252,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.requestId"
					}
				},
				{
					"id": 33253,
					"name": "pricingContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that carries the context that is used to calculate prices for variants"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33216,
						"name": "MedusaPricingContext",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33254,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic context object that can be used across the request lifecycle"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 33255,
					"name": "additionalDataValidator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom validator to validate the "
							},
							{
								"kind": "code",
								"text": "`additional_data`"
							},
							{
								"kind": "text",
								"text": " property in\nrequests that allows for additional_data"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodObject"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodTypeAny"
								},
								"name": "ZodTypeAny",
								"package": "zod"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33256,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33257,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "ZodObject",
						"package": "zod"
					}
				},
				{
					"id": 33258,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33259,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33260,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33261,
									"name": "userId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33260,
										33261
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.user"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33231,
						33232,
						33233,
						33234,
						33235,
						33236,
						33244,
						33245,
						33246,
						33247,
						33248,
						33249,
						33250,
						33251,
						33252,
						33253,
						33254,
						33255,
						33258
					]
				}
			],
			"typeParameters": [
				{
					"id": 33262,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
						"qualifiedName": "e.Request"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../node_modules/@types/express-serve-static-core/index.d.ts",
								"qualifiedName": "ParamsDictionary"
							},
							"name": "core.ParamsDictionary",
							"package": "@types/express-serve-static-core",
							"qualifiedName": "ParamsDictionary"
						},
						{
							"type": "intrinsic",
							"name": "any"
						},
						{
							"type": "reference",
							"target": 33262,
							"name": "Body",
							"package": "@medusajs/framework",
							"qualifiedName": "MedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "Request",
					"package": "@types/express",
					"qualifiedName": "e.Request"
				}
			]
		},
		{
			"id": 33263,
			"name": "MedusaResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33264,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.Response"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 33264,
						"name": "Body",
						"package": "@medusajs/framework",
						"refersToTypeParameter": true
					}
				],
				"name": "Response",
				"package": "@types/express",
				"qualifiedName": "e.Response"
			}
		},
		{
			"id": 33265,
			"name": "MedusaNextFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.NextFunction"
				},
				"name": "NextFunction",
				"package": "@types/express",
				"qualifiedName": "e.NextFunction"
			}
		},
		{
			"id": 33193,
			"name": "MedusaRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33199,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 33200,
					"name": "Res",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33194,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 33195,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33196,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33230,
										"typeArguments": [
											{
												"type": "reference",
												"target": 33199,
												"name": "Body",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaRequest",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 33197,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33263,
										"typeArguments": [
											{
												"type": "reference",
												"target": 33200,
												"name": "Res",
												"package": "@medusajs/framework",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaResponse",
										"package": "@medusajs/framework"
									}
								},
								{
									"id": 33198,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33265,
										"name": "MedusaNextFunction",
										"package": "@medusajs/framework"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 32975,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 32976,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 32984,
								"name": "Entity",
								"package": "@medusajs/medusa",
								"qualifiedName": "FindConfig.Entity",
								"refersToTypeParameter": true
							}
						}
					}
				},
				{
					"id": 32977,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 32978,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 32979,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 32980,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32981,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 32982,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 32983,
											"name": "K",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32976,
						32977,
						32978,
						32979,
						32980
					]
				}
			],
			"typeParameters": [
				{
					"id": 32984,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 32985,
			"name": "QueryConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 32995,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 32986,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 32987,
							"name": "defaults",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Default fields and relations to return"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 32995,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 32988,
							"name": "defaultFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`defaults`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 32995,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 32989,
							"name": "defaultRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`defaultFields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 32990,
							"name": "allowed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields and relations that are allowed to be requested"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 32991,
							"name": "allowedFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`allowed`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 32992,
							"name": "allowedRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`allowedFields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 32993,
							"name": "defaultLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 32994,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32987,
								32988,
								32989,
								32990,
								32991,
								32992,
								32993,
								32994
							]
						}
					]
				}
			}
		},
		{
			"id": 32996,
			"name": "ClassConstructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33000,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 32997,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 32998,
							"name": "new ClassConstructor",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 32999,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 33000,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 33001,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 33172,
				"name": "coreMedusaContainer",
				"package": "@medusajs/types",
				"qualifiedName": "MedusaContainer"
			}
		},
		{
			"id": 33002,
			"name": "Logger",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33003,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33004,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33005,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33006,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33007,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33008,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33009,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33010,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33011,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33012,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33013,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33014,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33015,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33016,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33017,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33018,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33019,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33020,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33021,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33022,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 33023,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33024,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33025,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33026,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33027,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 33028,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33029,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33030,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33031,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33032,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 33033,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33034,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33035,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33036,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33037,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 33038,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33039,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33040,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33041,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33042,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 33043,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33044,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33045,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33046,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33047,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33048,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33049,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33050,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33051,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33052,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33053,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33054,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33055,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 33056,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33057,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33058,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33059,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33004,
								33008,
								33012,
								33016,
								33019,
								33024,
								33029,
								33034,
								33039,
								33044,
								33048,
								33052,
								33056
							]
						}
					]
				}
			}
		},
		{
			"id": 33060,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33064,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33061,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 33062,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 33063,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 33064,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 33079,
			"name": "MedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33107,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33108,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33109,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33110,
									"name": "userId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33109,
										33110
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.user"
					}
				},
				{
					"id": 33080,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33111,
						"name": "Body",
						"package": "@medusajs/medusa",
						"qualifiedName": "MedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedBody"
					}
				},
				{
					"id": 33081,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 33210,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedQuery"
					}
				},
				{
					"id": 33082,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedProperties"
					}
				},
				{
					"id": 33083,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 32975,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.listConfig"
					}
				},
				{
					"id": 33084,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 32975,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.retrieveConfig"
					}
				},
				{
					"id": 33085,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33086,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33087,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 33088,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 33089,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 33090,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 33091,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 33092,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														33090,
														33091,
														33092
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33087,
										33088
									]
								}
							]
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.remoteQueryConfig"
					}
				},
				{
					"id": 33093,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.filterableFields"
					}
				},
				{
					"id": 33094,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.includes"
					}
				},
				{
					"id": 33095,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedFields"
					}
				},
				{
					"id": 33096,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowed"
					}
				},
				{
					"id": 33097,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.errors"
					}
				},
				{
					"id": 33098,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33172,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.scope"
					}
				},
				{
					"id": 33099,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 33100,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 33101,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.requestId"
					}
				},
				{
					"id": 33102,
					"name": "pricingContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that carries the context that is used to calculate prices for variants"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33216,
						"name": "MedusaPricingContext",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33103,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic context object that can be used across the request lifecycle"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 33104,
					"name": "additionalDataValidator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom validator to validate the "
							},
							{
								"kind": "code",
								"text": "`additional_data`"
							},
							{
								"kind": "text",
								"text": " property in\nrequests that allows for additional_data"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodObject"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodTypeAny"
								},
								"name": "ZodTypeAny",
								"package": "zod"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33105,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33106,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "ZodObject",
						"package": "zod"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33107,
						33080,
						33081,
						33082,
						33083,
						33084,
						33085,
						33093,
						33094,
						33095,
						33096,
						33097,
						33098,
						33099,
						33100,
						33101,
						33102,
						33103,
						33104
					]
				}
			],
			"typeParameters": [
				{
					"id": 33111,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
						"qualifiedName": "e.Request"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../node_modules/@types/express-serve-static-core/index.d.ts",
								"qualifiedName": "ParamsDictionary"
							},
							"name": "core.ParamsDictionary",
							"package": "@types/express-serve-static-core",
							"qualifiedName": "ParamsDictionary"
						},
						{
							"type": "intrinsic",
							"name": "any"
						},
						{
							"type": "reference",
							"target": 33111,
							"name": "Body",
							"package": "@medusajs/medusa",
							"qualifiedName": "MedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "Request",
					"package": "@types/express",
					"qualifiedName": "e.Request"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33117,
					"name": "AuthenticatedMedusaRequest"
				}
			]
		},
		{
			"id": 33112,
			"name": "AuthContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33113,
					"name": "actor_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33114,
					"name": "actor_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33115,
					"name": "auth_identity_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33116,
					"name": "app_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33113,
						33114,
						33115,
						33116
					]
				}
			]
		},
		{
			"id": 33117,
			"name": "AuthenticatedMedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33146,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33147,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33148,
									"name": "customer_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33149,
									"name": "userId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33148,
										33149
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33107,
						"name": "MedusaRequest.user"
					}
				},
				{
					"id": 33119,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": 33150,
						"name": "Body",
						"package": "@medusajs/medusa",
						"qualifiedName": "AuthenticatedMedusaRequest.Body",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33080,
						"name": "MedusaRequest.validatedBody"
					}
				},
				{
					"id": 33120,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 33210,
								"name": "RequestQueryFields",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33081,
						"name": "MedusaRequest.validatedQuery"
					}
				},
				{
					"id": 33121,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "TODO: shouldn't this correspond to returnable fields instead of allowed fields? also it is used by the cleanResponseData util"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33082,
						"name": "MedusaRequest.allowedProperties"
					}
				},
				{
					"id": 33122,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation, skip, take and order to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 32975,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33083,
						"name": "MedusaRequest.listConfig"
					}
				},
				{
					"id": 33123,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the select, relation to be used with medusa internal services"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 32975,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33084,
						"name": "MedusaRequest.retrieveConfig"
					}
				},
				{
					"id": 33124,
					"name": "remoteQueryConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing fields and variables to be used with the remoteQuery"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33125,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33126,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 33127,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 33128,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 33129,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 33130,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 33131,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														33129,
														33130,
														33131
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33126,
										33127
									]
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33085,
						"name": "MedusaRequest.remoteQueryConfig"
					}
				},
				{
					"id": 33132,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing the fields that are filterable e.g "
							},
							{
								"kind": "code",
								"text": "`{ id: Any<String> }`"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33093,
						"name": "MedusaRequest.filterableFields"
					}
				},
				{
					"id": 33133,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33094,
						"name": "MedusaRequest.includes"
					}
				},
				{
					"id": 33134,
					"name": "allowedFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`allowed`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33095,
						"name": "MedusaRequest.allowedFields"
					}
				},
				{
					"id": 33135,
					"name": "allowed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of fields and relations that are allowed to be queried, this can be set by the\nconsumer as part of a middleware and it will take precedence over the defaultAllowedFields set\nby the api"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33096,
						"name": "MedusaRequest.allowed"
					}
				},
				{
					"id": 33136,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33097,
						"name": "MedusaRequest.errors"
					}
				},
				{
					"id": 33137,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "reference",
						"target": 33172,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33098,
						"name": "MedusaRequest.scope"
					}
				},
				{
					"id": 33138,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33099,
						"name": "MedusaRequest.session"
					}
				},
				{
					"id": 33139,
					"name": "rawBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33100,
						"name": "MedusaRequest.rawBody"
					}
				},
				{
					"id": 33140,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33101,
						"name": "MedusaRequest.requestId"
					}
				},
				{
					"id": 33141,
					"name": "pricingContext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that carries the context that is used to calculate prices for variants"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33216,
						"name": "MedusaPricingContext",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33102,
						"name": "MedusaRequest.pricingContext"
					}
				},
				{
					"id": 33142,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic context object that can be used across the request lifecycle"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33103,
						"name": "MedusaRequest.context"
					}
				},
				{
					"id": 33143,
					"name": "additionalDataValidator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom validator to validate the "
							},
							{
								"kind": "code",
								"text": "`additional_data`"
							},
							{
								"kind": "text",
								"text": " property in\nrequests that allows for additional_data"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
							"qualifiedName": "ZodObject"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodTypeAny"
								},
								"name": "ZodTypeAny",
								"package": "zod"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33144,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33145,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						],
						"name": "ZodObject",
						"package": "zod"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33104,
						"name": "MedusaRequest.additionalDataValidator"
					}
				},
				{
					"id": 33118,
					"name": "auth_context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33112,
						"name": "AuthContext",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33146,
						33119,
						33120,
						33121,
						33122,
						33123,
						33124,
						33132,
						33133,
						33134,
						33135,
						33136,
						33137,
						33138,
						33139,
						33140,
						33141,
						33142,
						33143,
						33118
					]
				}
			],
			"typeParameters": [
				{
					"id": 33150,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33079,
					"typeArguments": [
						{
							"type": "reference",
							"target": 33150,
							"name": "Body",
							"package": "@medusajs/medusa",
							"qualifiedName": "AuthenticatedMedusaRequest.Body",
							"refersToTypeParameter": true
						}
					],
					"name": "MedusaRequest",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 33151,
			"name": "MedusaResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33152,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.Response"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 33152,
						"name": "Body",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				],
				"name": "Response",
				"package": "@types/express",
				"qualifiedName": "e.Response"
			}
		},
		{
			"id": 33153,
			"name": "MedusaNextFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.NextFunction"
				},
				"name": "NextFunction",
				"package": "@types/express",
				"qualifiedName": "e.NextFunction"
			}
		},
		{
			"id": 33154,
			"name": "MedusaRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33160,
					"name": "Body",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				},
				{
					"id": 33161,
					"name": "Res",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33155,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 33156,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33157,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33079,
										"typeArguments": [
											{
												"type": "reference",
												"target": 33160,
												"name": "Body",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaRequest",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 33158,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33151,
										"typeArguments": [
											{
												"type": "reference",
												"target": 33161,
												"name": "Res",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "MedusaResponse",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 33159,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33153,
										"name": "MedusaNextFunction",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 33222,
			"name": "SubscriberContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33223,
					"name": "subscriberId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33223
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 33162,
			"name": "SubscriberConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33163,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33164,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33165,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 33222,
								"name": "SubscriberContext",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33164,
								33165
							]
						}
					]
				}
			}
		},
		{
			"id": 33166,
			"name": "SubscriberArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33171,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33167,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33168,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33224,
								"typeArguments": [
									{
										"type": "reference",
										"target": 33171,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Event",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33169,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33172,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33170,
							"name": "pluginOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33168,
								33169,
								33170
							]
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				33210,
				33306,
				33274,
				33230,
				32975,
				33079,
				33112,
				33117,
				33222
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				33172,
				33271,
				33224,
				33216,
				33284,
				33266,
				33201,
				33065,
				33203,
				33267,
				33202,
				33069,
				33075,
				33263,
				33265,
				33193,
				32985,
				32996,
				33001,
				33002,
				33060,
				33151,
				33153,
				33154,
				33162,
				33166
			]
		},
		{
			"title": "Variables",
			"children": [
				33305
			]
		}
	],
	"packageName": "@medusajs/medusa",
	"symbolIdMap": {
		"32974": {
			"sourceFileName": "../../../../packages/medusa/src/index.js",
			"qualifiedName": ""
		},
		"32975": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig"
		},
		"32976": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"32977": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"32978": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"32979": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"32980": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"32981": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"32982": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.__index"
		},
		"32984": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"32985": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "QueryConfig"
		},
		"32986": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"32987": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaults"
		},
		"32988": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultFields"
		},
		"32989": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultRelations"
		},
		"32990": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowed"
		},
		"32991": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedFields"
		},
		"32992": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedRelations"
		},
		"32993": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultLimit"
		},
		"32994": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.isList"
		},
		"32995": {
			"sourceFileName": "../../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"32996": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ClassConstructor"
		},
		"32997": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"32998": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"32999": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"33000": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"33001": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "MedusaContainer"
		},
		"33002": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Logger"
		},
		"33003": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33004": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.panic"
		},
		"33005": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33006": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33007": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "data"
		},
		"33008": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.shouldLog"
		},
		"33009": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33010": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33011": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"33012": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.setLogLevel"
		},
		"33013": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33014": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33015": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"33016": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.unsetLogLevel"
		},
		"33017": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33018": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33019": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.activity"
		},
		"33020": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33021": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33022": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33023": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "config"
		},
		"33024": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.progress"
		},
		"33025": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33026": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33027": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"33028": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33029": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.error"
		},
		"33030": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33031": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33032": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "messageOrError"
		},
		"33033": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "error"
		},
		"33034": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.failure"
		},
		"33035": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33036": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33037": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"33038": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33039": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.success"
		},
		"33040": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33041": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33042": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"33043": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33044": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.debug"
		},
		"33045": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33046": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33047": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33048": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.info"
		},
		"33049": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33050": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33051": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33052": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.warn"
		},
		"33053": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33054": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33055": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"33056": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.log"
		},
		"33057": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33058": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33059": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"33060": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Constructor"
		},
		"33061": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33062": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33063": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"33064": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"33065": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareFunction"
		},
		"33066": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33067": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33068": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "args"
		},
		"33069": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareRoute"
		},
		"33070": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33071": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.method"
		},
		"33072": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.matcher"
		},
		"33073": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.bodyParser"
		},
		"33074": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.middlewares"
		},
		"33075": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MiddlewaresConfig"
		},
		"33076": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33077": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.errorHandler"
		},
		"33078": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.routes"
		},
		"33079": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest"
		},
		"33080": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"33081": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"33082": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"33083": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"33084": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"33085": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"33086": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"33087": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.fields"
		},
		"33088": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.pagination"
		},
		"33089": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"33090": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.order"
		},
		"33091": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.skip"
		},
		"33092": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.take"
		},
		"33093": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"33094": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"33095": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"33096": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"33097": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"33098": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"33099": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"33100": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"33101": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"33102": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.pricingContext"
		},
		"33103": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.context"
		},
		"33104": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.additionalDataValidator"
		},
		"33105": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"33106": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"33107": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"33108": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33109": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.customer_id"
		},
		"33110": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.userId"
		},
		"33111": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.Body"
		},
		"33112": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext"
		},
		"33113": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.actor_id"
		},
		"33114": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.actor_type"
		},
		"33115": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.auth_identity_id"
		},
		"33116": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthContext.app_metadata"
		},
		"33117": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest"
		},
		"33118": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.auth_context"
		},
		"33119": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"33120": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"33121": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"33122": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"33123": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"33124": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"33125": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"33126": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.fields"
		},
		"33127": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.pagination"
		},
		"33128": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"33129": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.order"
		},
		"33130": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.skip"
		},
		"33131": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type.take"
		},
		"33132": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"33133": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"33134": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"33135": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"33136": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"33137": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"33138": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"33139": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"33140": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"33141": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.pricingContext"
		},
		"33142": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.context"
		},
		"33143": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.additionalDataValidator"
		},
		"33144": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"33145": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"33146": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"33147": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33148": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.customer_id"
		},
		"33149": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.userId"
		},
		"33150": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "AuthenticatedMedusaRequest.Body"
		},
		"33151": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaResponse"
		},
		"33152": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Body"
		},
		"33153": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaNextFunction"
		},
		"33154": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequestHandler"
		},
		"33155": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"33156": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"33157": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "req"
		},
		"33158": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "res"
		},
		"33159": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "next"
		},
		"33160": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Body"
		},
		"33161": {
			"sourceFileName": "../../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "Res"
		},
		"33162": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberConfig"
		},
		"33163": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"33164": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"33165": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.context"
		},
		"33166": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberArgs"
		},
		"33167": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"33168": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"33169": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.container"
		},
		"33170": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.pluginOptions"
		},
		"33171": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "T"
		},
		"33172": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"33173": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"33174": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"33175": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"33176": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"33177": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"33178": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"33179": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"33180": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"33181": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"33182": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"33192": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"33193": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequestHandler"
		},
		"33194": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33195": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33196": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "req"
		},
		"33197": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "res"
		},
		"33198": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "next"
		},
		"33199": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "Body"
		},
		"33200": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "Res"
		},
		"33201": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MiddlewareVerb"
		},
		"33202": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "ParserConfig"
		},
		"33203": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaErrorHandlerFunction"
		},
		"33204": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33205": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33206": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "error"
		},
		"33207": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "req"
		},
		"33208": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "res"
		},
		"33209": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "next"
		},
		"33210": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"33211": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"33212": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"33213": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"33214": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"33215": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"33216": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "MedusaPricingContext"
		},
		"33217": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type"
		},
		"33218": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.region_id"
		},
		"33219": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.currency_code"
		},
		"33220": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.customer_id"
		},
		"33221": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/common/pricing-context.ts",
			"qualifiedName": "__type.customer_group_id"
		},
		"33222": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext"
		},
		"33223": {
			"sourceFileName": "../../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext.subscriberId"
		},
		"33224": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"33225": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"33226": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"33227": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"33228": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"33229": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"33230": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest"
		},
		"33231": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.validatedBody"
		},
		"33232": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.validatedQuery"
		},
		"33233": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.allowedProperties"
		},
		"33234": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.listConfig"
		},
		"33235": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.retrieveConfig"
		},
		"33236": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.remoteQueryConfig"
		},
		"33237": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33238": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.fields"
		},
		"33239": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.pagination"
		},
		"33240": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33241": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.order"
		},
		"33242": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.skip"
		},
		"33243": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.take"
		},
		"33244": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.filterableFields"
		},
		"33245": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.includes"
		},
		"33246": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.allowedFields"
		},
		"33247": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.allowed"
		},
		"33248": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.errors"
		},
		"33249": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"33250": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.session"
		},
		"33251": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.rawBody"
		},
		"33252": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.requestId"
		},
		"33253": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.pricingContext"
		},
		"33254": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.context"
		},
		"33255": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.additionalDataValidator"
		},
		"33256": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"33257": {
			"sourceFileName": "../../../../node_modules/zod/lib/helpers/util.d.ts",
			"qualifiedName": "__type"
		},
		"33258": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.user"
		},
		"33259": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"33260": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.customer_id"
		},
		"33261": {
			"sourceFileName": "../../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.userId"
		},
		"33262": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaRequest.Body"
		},
		"33263": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaResponse"
		},
		"33264": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "Body"
		},
		"33265": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "MedusaNextFunction"
		},
		"33266": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "RouteVerb"
		},
		"33267": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "ParserConfigArgs"
		},
		"33268": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33269": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.sizeLimit"
		},
		"33270": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.preserveRawBody"
		},
		"33271": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"33272": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"33273": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"33274": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig"
		},
		"33275": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.select"
		},
		"33276": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"33277": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.take"
		},
		"33278": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"33279": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.order"
		},
		"33280": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type"
		},
		"33281": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "__type.__index"
		},
		"33283": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"33284": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"33285": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "__type"
		},
		"33286": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"33287": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"33288": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "K"
		},
		"33289": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "key"
		},
		"33290": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "resolveOptions"
		},
		"33291": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "__type.resolve"
		},
		"33292": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "T"
		},
		"33293": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "key"
		},
		"33294": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "resolveOptions"
		},
		"33304": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "Cradle"
		},
		"33305": {
			"sourceFileName": "../../../../packages/framework/framework/src/http/types.ts",
			"qualifiedName": "HTTP_METHODS"
		},
		"33306": {
			"sourceFileName": "../../../../packages/framework/framework/src/container.ts",
			"qualifiedName": "ModuleImplementations"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/medusa/src/index.js"
		},
		"reflections": {
			"1": 32974
		}
	}
}