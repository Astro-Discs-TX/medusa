{
	"id": 8097,
	"name": "payment",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 8670,
			"name": "AddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8671,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8672,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8673,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8674,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 8675,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 8676,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8677,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 8678,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 8679,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 8680,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 8681,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 8682,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 8683,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 8684,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8672,
								8673,
								8674,
								8675,
								8676,
								8677,
								8678,
								8679,
								8680,
								8681,
								8682,
								8683,
								8684
							]
						}
					]
				}
			}
		},
		{
			"id": 8336,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 8337,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 8348,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 8338,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8339,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 8340,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8341,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8342,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 8343,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 8344,
											"name": "K",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 8345,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8346,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8347,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8337,
						8338,
						8339,
						8340,
						8341,
						8345,
						8346,
						8347
					]
				}
			],
			"typeParameters": [
				{
					"id": 8348,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 8735,
			"name": "CustomerAddressDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer address details."
					}
				]
			},
			"children": [
				{
					"id": 8736,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8737,
					"name": "address_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address name of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8738,
					"name": "is_default_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the customer address is default shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8739,
					"name": "is_default_billing",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the customer address is default billing."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8740,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8741,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The company of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8742,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8743,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8744,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address 1 of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8745,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address 2 of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8746,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The city of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8747,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country code of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8748,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The province of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8749,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The postal code of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8750,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The phone of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8751,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8752,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The created at of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8753,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The updated at of the customer address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8736,
						8737,
						8738,
						8739,
						8740,
						8741,
						8742,
						8743,
						8744,
						8745,
						8746,
						8747,
						8748,
						8749,
						8750,
						8751,
						8752,
						8753
					]
				}
			]
		},
		{
			"id": 8685,
			"name": "CustomerDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer details."
					}
				]
			},
			"children": [
				{
					"id": 8686,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8687,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email of the customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8688,
					"name": "has_account",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag indicating if customer has an account or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8689,
					"name": "default_billing_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default billing address's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8690,
					"name": "default_shipping_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated default shipping address's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8691,
					"name": "company_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The company name of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8692,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8693,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8694,
					"name": "addresses",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The addresses of the customer."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8735,
							"name": "CustomerAddressDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8695,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The phone of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8696,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The groups of the customer."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 8697,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 8698,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The ID of the group."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 8699,
										"name": "name",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The name of the group."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											8698,
											8699
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 8700,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8701,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8702,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8703,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8704,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8686,
						8687,
						8688,
						8689,
						8690,
						8691,
						8692,
						8693,
						8694,
						8695,
						8696,
						8700,
						8701,
						8702,
						8703,
						8704
					]
				}
			]
		},
		{
			"id": 8576,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 8577,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8579,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8579,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 8578,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8579,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8579,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8577,
						8578
					]
				}
			],
			"typeParameters": [
				{
					"id": 8579,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 8349,
					"name": "FilterablePaymentCollectionProps"
				},
				{
					"type": "reference",
					"target": 8423,
					"name": "FilterablePaymentSessionProps"
				},
				{
					"type": "reference",
					"target": 8435,
					"name": "FilterablePaymentProps"
				},
				{
					"type": "reference",
					"target": 8465,
					"name": "FilterablePaymentProviderProps"
				},
				{
					"type": "reference",
					"target": 8473,
					"name": "FilterableCaptureProps"
				},
				{
					"type": "reference",
					"target": 8489,
					"name": "FilterableRefundProps"
				},
				{
					"type": "reference",
					"target": 8524,
					"name": "FilterableRefundReasonProps"
				}
			]
		},
		{
			"id": 8367,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 8368,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8369,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8368
					]
				}
			],
			"typeParameters": [
				{
					"id": 8369,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 8370,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 8371,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8372,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8371
					]
				}
			],
			"typeParameters": [
				{
					"id": 8372,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 8666,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8667,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 8667,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 8667,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 8723,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 8727,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8667,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 8733,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8667,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 8668,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8669,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 8669,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 8669,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 8669,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 8723,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8724,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8725,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 8726,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										8725
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8770,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8771,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 8771,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 8771,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 8771,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 8760,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8769,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 8769,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 8761,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 8762,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									8762
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 8770,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 8769,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 8763,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8764,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8764
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 8770,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 8769,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 8765,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 8766,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											8766
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 8770,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 8769,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 8767,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 8768,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												8768
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 8770,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 8580,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8601,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8581,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8582,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8666,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8601,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 8583,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8666,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8601,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 8584,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 8668,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8601,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8668,
											"typeArguments": [
												{
													"type": "reference",
													"target": 8601,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 8585,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8668,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8601,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8586,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8668,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8601,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 8587,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8668,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8601,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 8588,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8666,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8601,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8589,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8668,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8601,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8590,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8668,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8601,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8591,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8668,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8601,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8592,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8668,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8601,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8593,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8594,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8595,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8596,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8597,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 8598,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 8599,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 8600,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8582,
								8583,
								8584,
								8585,
								8586,
								8587,
								8588,
								8589,
								8590,
								8591,
								8592,
								8593,
								8594,
								8595,
								8596,
								8597,
								8598,
								8599,
								8600
							]
						}
					]
				}
			}
		},
		{
			"id": 8758,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8759,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 8759,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 8668,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8759,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 8760,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8759,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 8733,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8734,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8758,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8734,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 8758,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8734,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8758,
							"typeArguments": [
								{
									"type": "reference",
									"target": 8734,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 8757,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 8727,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8731,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 8732,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 8732,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "mapped",
					"parameter": "Key",
					"parameterType": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 8731,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"templateType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 8731,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "boolean"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "bigint"
								},
								{
									"type": "intrinsic",
									"name": "symbol"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Date"
									},
									"name": "Date",
									"package": "typescript"
								}
							]
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 8731,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": 8580,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 8731,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "OperatorMap",
									"package": "@medusajs/types"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 8731,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "inferred",
								"name": "U"
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "U"
									},
									"name": "U",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 8728,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"indexSignatures": [
											{
												"id": 8729,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"parameters": [
													{
														"id": 8730,
														"name": "x",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"type": {
													"type": "inferred",
													"name": "V"
												}
											}
										]
									}
								},
								"trueType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "V"
										},
										"name": "V",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "object"
									},
									"trueType": {
										"type": "reference",
										"target": 8727,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "V"
														},
														"name": "V",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Partial",
												"package": "typescript"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 8732,
													"name": "Prev",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 8757,
													"name": "PrevLimit",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "FilterQuery",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					},
					"optionalModifier": "+"
				}
			}
		},
		{
			"id": 8754,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8755,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8756,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8756
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8717,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8722,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8718,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8719,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8720,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 8754,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 8721,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 8722,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8719,
								8720,
								8721
							]
						}
					]
				}
			}
		},
		{
			"id": 8645,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8648,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 8717,
						"typeArguments": [
							{
								"type": "reference",
								"target": 8648,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8646,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8647,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8647
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8656,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 8665,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8657,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8658,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8659,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 8665,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 8660,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8661,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8662,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8663,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 8664,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8658,
								8659,
								8660,
								8661,
								8662,
								8663,
								8664
							]
						}
					]
				}
			}
		},
		{
			"id": 8708,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8709,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8710,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8711,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8712,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8713,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 8714,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 8715,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 8716,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8710,
								8711,
								8712,
								8713,
								8714,
								8715,
								8716
							]
						}
					]
				}
			}
		},
		{
			"id": 8705,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8706,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8707,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8706,
						8707
					]
				}
			]
		},
		{
			"id": 8609,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8610,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8611,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 8705,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 8705,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 8612,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 8613,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 8614,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8615,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														8614,
														8615
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8616,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8617,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8708,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8618,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 8619,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 8620,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 8621,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 8708,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											8620,
											8621
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 8622,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8610,
						8611,
						8612,
						8616,
						8617,
						8618,
						8622
					]
				}
			]
		},
		{
			"id": 8626,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8627,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8628,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 8629,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8630,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 8631,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8628,
										8629,
										8630,
										8631
									]
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 8535,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 8609,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8536,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8537,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8538,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8623,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8539,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 8540,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 8541,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 8542,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 8543,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 8544,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 8545,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 8546,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							8544,
																							8545,
																							8546
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 8547,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 8623,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															8541,
															8542,
															8547
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 8548,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8549,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8550,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 8551,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 8552,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 8553,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8554,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 8555,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 8556,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8557,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 8558,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 8626,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														8556,
														8557,
														8558
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8537,
										8538,
										8539,
										8548,
										8549,
										8550,
										8551,
										8552,
										8553,
										8554
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8623,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 8708,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8624,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8625,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8625
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 8289,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"extendedBy": [
				{
					"type": "reference",
					"target": 8098,
					"name": "IPaymentModuleService"
				}
			]
		},
		{
			"id": 8575,
			"name": "PaymentCollectionStatus",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "not_paid"
					},
					{
						"type": "literal",
						"value": "awaiting"
					},
					{
						"type": "literal",
						"value": "authorized"
					},
					{
						"type": "literal",
						"value": "partially_authorized"
					},
					{
						"type": "literal",
						"value": "canceled"
					}
				]
			}
		},
		{
			"id": 8602,
			"name": "PaymentSessionStatus",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "authorized"
					},
					{
						"type": "literal",
						"value": "captured"
					},
					{
						"type": "literal",
						"value": "pending"
					},
					{
						"type": "literal",
						"value": "requires_more"
					},
					{
						"type": "literal",
						"value": "error"
					},
					{
						"type": "literal",
						"value": "canceled"
					}
				]
			}
		},
		{
			"id": 8320,
			"name": "PaymentCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection details."
					}
				]
			},
			"children": [
				{
					"id": 8321,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8322,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment sessions and payments associated with payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8323,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the associated region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8324,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total amount to be authorized and captured."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8325,
					"name": "authorized_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount authorized within the associated payment sessions."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8326,
					"name": "refunded_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount refunded within the associated payments."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8327,
					"name": "captured_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount captured within the associated payments."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8328,
					"name": "completed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was completed."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8329,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8330,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment collection was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8331,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8332,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the payment collection."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8575,
						"name": "PaymentCollectionStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8333,
					"name": "payment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment provider used to process the associated payment sessions and payments."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8470,
							"name": "PaymentProviderDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8334,
					"name": "payment_sessions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment sessions."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8373,
							"name": "PaymentSessionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8335,
					"name": "payments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payments."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8397,
							"name": "PaymentDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8321,
						8322,
						8323,
						8324,
						8325,
						8326,
						8327,
						8328,
						8329,
						8330,
						8331,
						8332,
						8333,
						8334,
						8335
					]
				}
			]
		},
		{
			"id": 8349,
			"name": "FilterablePaymentCollectionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payment collection."
					}
				]
			},
			"children": [
				{
					"id": 8354,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8320,
									"name": "PaymentCollectionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8320,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8577,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8355,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8320,
									"name": "PaymentCollectionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8320,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8578,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8350,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payment collection by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8351,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by associated region's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 8580,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8352,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter payment collections by created date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8353,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter payment collections by updated date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8354,
						8355,
						8350,
						8351,
						8352,
						8353
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8576,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8320,
							"name": "PaymentCollectionDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8423,
			"name": "FilterablePaymentSessionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payment sessions."
					}
				]
			},
			"children": [
				{
					"id": 8433,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8373,
									"name": "PaymentSessionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8373,
											"name": "PaymentSessionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8577,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8434,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8373,
									"name": "PaymentSessionDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8373,
											"name": "PaymentSessionDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8578,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8424,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payment sessions by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8425,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their currency code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8426,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their amount."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 8574,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 8580,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8574,
										"name": "BigNumberValue",
										"package": "@medusajs/types"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8427,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by the ID of their associated payment provider."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8428,
					"name": "payment_collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by the ID of their associated payment collection."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8429,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by the ID of their associated region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 8580,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8430,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8431,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8432,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payment sessions by their deletion date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8433,
						8434,
						8424,
						8425,
						8426,
						8427,
						8428,
						8429,
						8430,
						8431,
						8432
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8576,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8373,
							"name": "PaymentSessionDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8473,
			"name": "FilterableCaptureProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved captures."
					}
				]
			},
			"children": [
				{
					"id": 8481,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8483,
									"name": "CaptureDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8483,
											"name": "CaptureDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8577,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8482,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8483,
									"name": "CaptureDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8483,
											"name": "CaptureDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8578,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8474,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the captures by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8475,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their currency code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8476,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their amounts."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 8574,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 8580,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8574,
										"name": "BigNumberValue",
										"package": "@medusajs/types"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8477,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by the ID of their associated payment."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8478,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8479,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8480,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the captures by their deletion date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8481,
						8482,
						8474,
						8475,
						8476,
						8477,
						8478,
						8479,
						8480
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8576,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8483,
							"name": "CaptureDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8489,
			"name": "FilterableRefundProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved refunds."
					}
				]
			},
			"children": [
				{
					"id": 8497,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8499,
									"name": "RefundDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8499,
											"name": "RefundDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8577,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8498,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8499,
									"name": "RefundDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8499,
											"name": "RefundDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8578,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8490,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the refunds by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8491,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their currency code."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8492,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their amount."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 8574,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 8580,
								"typeArguments": [
									{
										"type": "reference",
										"target": 8574,
										"name": "BigNumberValue",
										"package": "@medusajs/types"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8493,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by the ID of their associated payment."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8494,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8495,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8496,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the refunds by their deletion date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8497,
						8498,
						8490,
						8491,
						8492,
						8493,
						8494,
						8495,
						8496
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8576,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8499,
							"name": "RefundDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8397,
			"name": "PaymentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8398,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8399,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's total amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8400,
					"name": "raw_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw amount of the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8401,
					"name": "authorized_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The authorized amount of the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8402,
					"name": "raw_authorized_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The raw authorized amount of the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8403,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8404,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated payment provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8405,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8406,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8407,
					"name": "order_edit_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8408,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8409,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data relevant for the payment provider to process the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8410,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8411,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8412,
					"name": "captured_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was captured."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8413,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment was canceled."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8414,
					"name": "captured_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sum of the associated captures' amounts."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8415,
					"name": "raw_captured_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sum of the associated captures' raw amounts."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8416,
					"name": "refunded_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sum of the associated refunds' amounts."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8417,
					"name": "raw_refunded_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sum of the associated refunds' raw amounts."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8418,
					"name": "captures",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated captures."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8483,
							"name": "CaptureDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8419,
					"name": "refunds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated refunds."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 8499,
							"name": "RefundDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 8420,
					"name": "payment_collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8421,
					"name": "payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment collection."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 8320,
						"name": "PaymentCollectionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8422,
					"name": "payment_session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment session from which the payment is created."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 8373,
						"name": "PaymentSessionDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8398,
						8399,
						8400,
						8401,
						8402,
						8403,
						8404,
						8405,
						8406,
						8407,
						8408,
						8409,
						8410,
						8411,
						8412,
						8413,
						8414,
						8415,
						8416,
						8417,
						8418,
						8419,
						8420,
						8421,
						8422
					]
				}
			]
		},
		{
			"id": 8435,
			"name": "FilterablePaymentProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payments."
					}
				]
			},
			"children": [
				{
					"id": 8447,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8435,
									"name": "FilterablePaymentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8435,
											"name": "FilterablePaymentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8577,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8448,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8435,
									"name": "FilterablePaymentProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8435,
											"name": "FilterablePaymentProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8578,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8436,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Find payments based on cart, order, or customer IDs through this search term."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8437,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payments by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 8438,
					"name": "payment_session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by the ID of their associated payment session."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 8580,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8439,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by the ID of their associated customer."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 8580,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8440,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by the ID of their associated cart."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 8580,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8441,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by the ID of their associated order."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 8580,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8442,
					"name": "order_edit_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by the ID of their associated order edit."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 8580,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8443,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by their creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8444,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by their update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8445,
					"name": "captured_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by their capture date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8446,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the payments by their cancelation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8580,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8447,
						8448,
						8436,
						8437,
						8438,
						8439,
						8440,
						8441,
						8442,
						8443,
						8444,
						8445,
						8446
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8576,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8435,
							"name": "FilterablePaymentProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8483,
			"name": "CaptureDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The capture details."
					}
				]
			},
			"children": [
				{
					"id": 8484,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the capture."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8485,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The captured amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8486,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the capture."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 8487,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who the capture was created by. For example,\nthe ID of a user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8488,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8397,
						"name": "PaymentDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8484,
						8485,
						8486,
						8487,
						8488
					]
				}
			]
		},
		{
			"id": 8499,
			"name": "RefundDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The refund details."
					}
				]
			},
			"children": [
				{
					"id": 8500,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the refund"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8501,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The refunded amount."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8502,
					"name": "refund_reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the refund_reason that is associated with the refund"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8503,
					"name": "refund_reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the refund_reason that is associated with the refund"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 8512,
								"name": "RefundReasonDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8504,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A field to add some additional information about the refund"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8505,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the refund."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 8506,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who created the refund. For example,\nthe user's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8507,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8397,
						"name": "PaymentDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8500,
						8501,
						8502,
						8503,
						8504,
						8505,
						8506,
						8507
					]
				}
			]
		},
		{
			"id": 8373,
			"name": "PaymentSessionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment session details."
					}
				]
			},
			"children": [
				{
					"id": 8374,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment session."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8375,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to authorize."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8574,
						"name": "BigNumberValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8376,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character currency code of the payment session."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8377,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated payment provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8378,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data necessary for the payment provider to process the payment session."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8379,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The context necessary for the payment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8380,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the payment session."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8602,
						"name": "PaymentSessionStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8381,
					"name": "authorized_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the payment session was authorized."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 8382,
					"name": "payment_collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8383,
					"name": "payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment collection the session is associated with."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 8320,
						"name": "PaymentCollectionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8384,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment created from the session."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 8397,
						"name": "PaymentDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8374,
						8375,
						8376,
						8377,
						8378,
						8379,
						8380,
						8381,
						8382,
						8383,
						8384
					]
				}
			]
		},
		{
			"id": 8470,
			"name": "PaymentProviderDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment provider details."
					}
				]
			},
			"children": [
				{
					"id": 8471,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8472,
					"name": "is_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the payment provider is enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8471,
						8472
					]
				}
			]
		},
		{
			"id": 8465,
			"name": "FilterablePaymentProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved payment providers."
					}
				]
			},
			"children": [
				{
					"id": 8468,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8470,
									"name": "PaymentProviderDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8470,
											"name": "PaymentProviderDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8577,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8469,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8470,
									"name": "PaymentProviderDTO",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8470,
											"name": "PaymentProviderDTO",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8578,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8466,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the payment provider by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 8580,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 8467,
					"name": "is_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by whether the payment provider is enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8468,
						8469,
						8466,
						8467
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8576,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8470,
							"name": "PaymentProviderDTO",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8524,
			"name": "FilterableRefundReasonProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 8526,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8524,
									"name": "FilterableRefundReasonProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8524,
											"name": "FilterableRefundReasonProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8577,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 8527,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 8524,
									"name": "FilterableRefundReasonProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 8576,
									"typeArguments": [
										{
											"type": "reference",
											"target": 8524,
											"name": "FilterableRefundReasonProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 8578,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 8525,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the refund reasons by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8526,
						8527,
						8525
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8576,
					"typeArguments": [
						{
							"type": "reference",
							"target": 8524,
							"name": "FilterableRefundReasonProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8512,
			"name": "RefundReasonDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8513,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the refund reason"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8514,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the refund reason"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8515,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the refund reason"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8516,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata of the refund reason"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8517,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the refund reason was created"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 8518,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the refund reason was updated"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8513,
						8514,
						8515,
						8516,
						8517,
						8518
					]
				}
			]
		},
		{
			"id": 8303,
			"name": "CreatePaymentCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection to be created."
					}
				]
			},
			"children": [
				{
					"id": 8304,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8305,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8306,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the payment collection."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8559,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8307,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8304,
						8305,
						8306,
						8307
					]
				}
			]
		},
		{
			"id": 8361,
			"name": "UpsertPaymentCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes in the payment collection to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 8362,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8363,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8364,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8365,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the payment collection."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8559,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8366,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8362,
						8363,
						8364,
						8365,
						8366
					]
				}
			]
		},
		{
			"id": 8356,
			"name": "PaymentCollectionUpdatableFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the payment collection."
					}
				]
			},
			"children": [
				{
					"id": 8357,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8358,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "{The ISO 3 character currency code of the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8359,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the payment collection."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8559,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8360,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8357,
						8358,
						8359,
						8360
					]
				}
			]
		},
		{
			"id": 8449,
			"name": "UpdatePaymentDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the payment."
					}
				]
			},
			"children": [
				{
					"id": 8450,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8451,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated cart's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8452,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated order's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8453,
					"name": "order_edit_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated order edit's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8454,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8450,
						8451,
						8452,
						8453,
						8454
					]
				}
			]
		},
		{
			"id": 8455,
			"name": "CreateCaptureDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The capture to be created."
					}
				]
			},
			"children": [
				{
					"id": 8456,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the capture."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8559,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8457,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8458,
					"name": "captured_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who captured the payment. For example,\na user's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8456,
						8457,
						8458
					]
				}
			]
		},
		{
			"id": 8459,
			"name": "CreateRefundDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The refund to be created."
					}
				]
			},
			"children": [
				{
					"id": 8460,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of the refund."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8559,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8461,
					"name": "payment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated payment's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8462,
					"name": "refund_reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated refund reason's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8463,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A text field that adds some information about the refund"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8464,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Who refunded the payment. For example,\na user's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8460,
						8461,
						8462,
						8463,
						8464
					]
				}
			]
		},
		{
			"id": 8385,
			"name": "CreatePaymentSessionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment session to be created."
					}
				]
			},
			"children": [
				{
					"id": 8386,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8387,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code of the payment session."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8388,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to be authorized."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8559,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8389,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Necessary data for the associated payment provider to process the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8390,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Necessary context data for the associated payment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8603,
						"name": "PaymentProviderContext",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8386,
						8387,
						8388,
						8389,
						8390
					]
				}
			]
		},
		{
			"id": 8391,
			"name": "UpdatePaymentSessionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a payment session."
					}
				]
			},
			"children": [
				{
					"id": 8392,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment session's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8393,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Necessary data for the associated payment provider to process the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 8394,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ISO 3 character currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8395,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to be authorized."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8559,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8396,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Necessary context data for the associated payment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8603,
						"name": "PaymentProviderContext",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8392,
						8393,
						8394,
						8395,
						8396
					]
				}
			]
		},
		{
			"id": 8528,
			"name": "ProviderWebhookPayload",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the webhook event payload."
					}
				]
			},
			"children": [
				{
					"id": 8529,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the provider to pass the webhook event payload to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8530,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The webhook event payload passed to the specified provider."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8531,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 8532,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The parsed webhook body."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 8533,
									"name": "rawData",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The raw webhook request body."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
													"qualifiedName": "__global.Buffer"
												},
												"name": "Buffer",
												"package": "@types/node",
												"qualifiedName": "__global.Buffer"
											}
										]
									}
								},
								{
									"id": 8534,
									"name": "headers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The headers of the webhook request."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										8532,
										8533,
										8534
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8529,
						8530
					]
				}
			]
		},
		{
			"id": 8508,
			"name": "CreateRefundReasonDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8509,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the refund reason"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8510,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the refund reason"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8511,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata of the refund reason"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8509,
						8510,
						8511
					]
				}
			]
		},
		{
			"id": 8519,
			"name": "UpdateRefundReasonDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8520,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the refund reason"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8521,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label of the refund reason"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8522,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the refund reason"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 8523,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata of the refund reason"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8520,
						8521,
						8522,
						8523
					]
				}
			]
		},
		{
			"id": 8603,
			"name": "PaymentProviderContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Context data provided to the payment provider when authorizing a payment session."
					}
				]
			},
			"children": [
				{
					"id": 8604,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's billing address."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 8670,
								"name": "AddressDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 8605,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8606,
					"name": "session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of payment session the provider payment is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8607,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer associated with this payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 8685,
								"name": "CustomerDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				},
				{
					"id": 8608,
					"name": "extra",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The extra fields specific to the provider session."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8604,
						8605,
						8606,
						8607,
						8608
					]
				}
			]
		},
		{
			"id": 8098,
			"name": "IPaymentModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Payment Module."
					}
				]
			},
			"children": [
				{
					"id": 8099,
					"name": "createPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8100,
							"name": "createPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates payment collections."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections = await paymentModuleService.createPaymentCollections([\n  {\n    region_id: \"reg_123\",\n    currency_code: \"usd\",\n    amount: 3000,\n  },\n  {\n    region_id: \"reg_321\",\n    currency_code: \"eur\",\n    amount: 2000,\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8101,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collections to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8303,
											"name": "CreatePaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8102,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8320,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8103,
							"name": "createPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a payment collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.createPaymentCollections({\n    region_id: \"reg_123\",\n    currency_code: \"usd\",\n    amount: 3000,\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8104,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8303,
										"name": "CreatePaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8105,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8320,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8106,
					"name": "retrievePaymentCollection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8107,
							"name": "retrievePaymentCollection",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a payment collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a {type name} by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.retrievePaymentCollection(\n    \"pay_col_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.retrievePaymentCollection(\n    \"pay_col_123\",\n    {\n      relations: [\"payment_sessions\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8108,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8109,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8336,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8320,
												"name": "PaymentCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8110,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8320,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8111,
					"name": "listPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8112,
							"name": "listPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment collections based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payment collections using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listPaymentCollections({\n    id: [\"pay_col_123\", \"pay_col_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the payment collection:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listPaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      relations: [\"payment_sessions\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listPaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      relations: [\"payment_sessions\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8113,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8349,
										"name": "FilterablePaymentCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8114,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8336,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8320,
												"name": "PaymentCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8115,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8320,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8116,
					"name": "listAndCountPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8117,
							"name": "listAndCountPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment collections along with the total count of available payment collections satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment collections along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of {type name} using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listAndCountPaymentCollections({\n    id: [\"pay_col_123\", \"pay_col_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the {type name}:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listAndCountPaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      relations: [\"payment_sessions\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`{default limit}`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.listAndCountPaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      relations: [\"payment_sessions\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8118,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8349,
										"name": "FilterablePaymentCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8119,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8336,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8320,
												"name": "PaymentCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8120,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8320,
													"name": "PaymentCollectionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8121,
					"name": "updatePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8122,
							"name": "updatePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing payment collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.updatePaymentCollections(\n    \"pay_col_123\",\n    {\n      amount: 3000,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8123,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8124,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8356,
										"name": "PaymentCollectionUpdatableFields",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8125,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8320,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8126,
							"name": "updatePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing payment collections matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.updatePaymentCollections(\n    {\n      id: [\"pay_col_123\", \"pay_col_321\"],\n    },\n    {\n      currency_code: \"usd\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8127,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which payment collections to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8349,
										"name": "FilterablePaymentCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8128,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8356,
										"name": "PaymentCollectionUpdatableFields",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8129,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8320,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8130,
					"name": "upsertPaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8131,
							"name": "upsertPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates payment collections if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated payment collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollections =\n  await paymentModuleService.upsertPaymentCollections([\n    {\n      id: \"pay_col_123\",\n      region_id: \"reg_123\",\n    },\n    {\n      region_id: \"reg_123\",\n      currency_code: \"usd\",\n      amount: 3000,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8132,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the payment collections to be created or updated. If\nthe object includes the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " field, then the payment collection is updated. Otherise, it's created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8361,
											"name": "UpsertPaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8133,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8320,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8134,
							"name": "upsertPaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates or creates a payment collection if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created or updated payment collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.upsertPaymentCollections({\n    id: \"pay_col_123\",\n    region_id: \"reg_123\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8135,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes in the payment collection to be created or updated. If the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": "\nfield is included, the payment collection is updated. Otherwise, it's created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8361,
										"name": "UpsertPaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8136,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8320,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8137,
					"name": "deletePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8138,
							"name": "deletePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a payment collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the payment collection is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.deletePaymentCollections([\n  \"pay_col_123\",\n  \"pay_col_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8139,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8140,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8141,
							"name": "deletePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a payment collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the payment collection is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.deletePaymentCollections(\n  \"pay_col_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8142,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8143,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8144,
					"name": "softDeletePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8145,
							"name": "softDeletePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes payment collections by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModule.softDeletePaymentCollections([\"paycol_123\"])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 8146,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8147,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of payment collections."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8148,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8367,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8146,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8149,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 8146,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8150,
					"name": "restorePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8151,
							"name": "restorePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted payment collection by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModule.restorePaymentCollections([\"paycol_123\"])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 8152,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8153,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of payment collections."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8154,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the payment collection. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the payment collection's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8370,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8152,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8155,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 8152,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8156,
					"name": "completePaymentCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8157,
							"name": "completePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method marks a payment collection as completed by settings its "
									},
									{
										"kind": "code",
										"text": "`completed_at`"
									},
									{
										"kind": "text",
										"text": " field to the current date and time."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment collection's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.completePaymentCollections(\n    \"pay_col_123\"\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8158,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collection's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8159,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8320,
										"name": "PaymentCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8160,
							"name": "completePaymentCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method marks payment collections as completed by settings their "
									},
									{
										"kind": "code",
										"text": "`completed_at`"
									},
									{
										"kind": "text",
										"text": " field to the current date and time."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment collections' details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentCollection =\n  await paymentModuleService.completePaymentCollections([\n    \"pay_col_123\",\n    \"pay_col_321\",\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8161,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment collections' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8162,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8320,
											"name": "PaymentCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8163,
					"name": "retrievePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8164,
							"name": "retrievePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 8165,
									"name": "paymentSessionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8166,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 8336,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8373,
												"name": "PaymentSessionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8167,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8373,
										"name": "PaymentSessionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8168,
					"name": "createPaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8169,
							"name": "createPaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a payment session in a payment collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment collection's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentSession =\n  await paymentModuleService.createPaymentSession(\n    \"pay_col_1\",\n    {\n      provider_id: \"stripe\",\n      currency_code: \"usd\",\n      amount: 3000,\n      data: {},\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8170,
									"name": "paymentCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the payment collection to create the session for."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8171,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8385,
										"name": "CreatePaymentSessionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8172,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8373,
										"name": "PaymentSessionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8173,
					"name": "updatePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8174,
							"name": "updatePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates a payment session."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment session's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst paymentSession =\n  await paymentModuleService.updatePaymentSession({\n    id: \"payses_123\",\n    currency_code: \"usd\",\n    amount: 3000,\n    data: {},\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8175,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8391,
										"name": "UpdatePaymentSessionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8176,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8373,
										"name": "PaymentSessionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8177,
					"name": "deletePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8178,
							"name": "deletePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a payment session."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves whent the payment session is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.deletePaymentSession(\"payses_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8179,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the payment session."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8180,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8181,
					"name": "authorizePaymentSession",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8182,
							"name": "authorizePaymentSession",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method authorizes a payment session using its associated payment provider. This creates a payment that can later be captured.\n\nLearn more about the payment flow in [this guide](https://docs.medusajs.com/experimental/payment/payment-flow/)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment =\n  await paymentModuleService.authorizePaymentSession(\n    \"payses_123\",\n    {}\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8183,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment session's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8184,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Context data to pass to the associated payment provider."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 8185,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8397,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8186,
					"name": "listPaymentSessions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8187,
							"name": "listPaymentSessions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment sessions based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment sessions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payment sessions using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentSessions =\n  await paymentModuleService.listPaymentSessions({\n    id: [\"payses_123\", \"payses_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the payment session:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentSessions =\n  await paymentModuleService.listPaymentSessions(\n    {\n      id: [\"payses_123\", \"payses_321\"],\n    },\n    {\n      relations: [\"payment\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentSessions =\n  await paymentModuleService.listPaymentSessions(\n    {\n      id: [\"payses_123\", \"payses_321\"],\n    },\n    {\n      relations: [\"payment\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8188,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment sessions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8423,
										"name": "FilterablePaymentSessionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8189,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment session is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8336,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8373,
												"name": "PaymentSessionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8190,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8373,
											"name": "PaymentSessionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8191,
					"name": "listPayments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8192,
							"name": "listPayments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payments based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A list of payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payments using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst payments = await paymentModuleService.listPayments({\n  id: [\"pay_123\", \"pay_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the payment:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst payments = await paymentModuleService.listPayments(\n  {\n    id: [\"pay_123\", \"pay_321\"],\n  },\n  {\n    relations: [\"payment_session\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst payments = await paymentModuleService.listPayments(\n  {\n    id: [\"pay_123\", \"pay_321\"],\n  },\n  {\n    relations: [\"payment_session\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8193,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8435,
										"name": "FilterablePaymentProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8194,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8336,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8397,
												"name": "PaymentDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8195,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8397,
											"name": "PaymentDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8196,
					"name": "updatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8197,
							"name": "updatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment = await paymentModuleService.updatePayment({\n  id: \"pay_123\",\n  customer_id: \"cus_123\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8198,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8449,
										"name": "UpdatePaymentDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8199,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8397,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8200,
					"name": "capturePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8201,
							"name": "capturePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method captures a payment using its associated payment provider.\n\nLearn more about the payment flow in [this guide](https://docs.medusajs.com/experimental/payment/payment-flow/)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment = await paymentModuleService.capturePayment({\n  payment_id: \"pay_123\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8202,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment capture to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8455,
										"name": "CreateCaptureDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8203,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8397,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8204,
					"name": "refundPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8205,
							"name": "refundPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method refunds a payment using its associated payment provider. An amount can only be refunded if it has been captured first."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment = await paymentModuleService.refundPayment({\n  payment_id: \"pay_123\",\n  amount: 300,\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8206,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The refund to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8459,
										"name": "CreateRefundDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8207,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8397,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8208,
					"name": "cancelPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8209,
							"name": "cancelPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method cancels a payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst payment =\n  await paymentModuleService.cancelPayment(\"pay_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8210,
									"name": "paymentId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The payment's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8211,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8397,
										"name": "PaymentDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8212,
					"name": "listPaymentProviders",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8213,
							"name": "listPaymentProviders",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of payment providers based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of payment providers."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of payment providers using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentProviders =\n  await paymentModuleService.listPaymentProviders({\n    id: [\"stripe\", \"system\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst paymentProviders =\n  await paymentModuleService.listPaymentProviders(\n    {\n      id: [\"stripe\", \"system\"],\n    },\n    {\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8214,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved payment providers."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8465,
										"name": "FilterablePaymentProviderProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8215,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the payment provider is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a payment provider."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8336,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8470,
												"name": "PaymentProviderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8216,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8470,
											"name": "PaymentProviderDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8217,
					"name": "listAndCountPaymentProviders",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8218,
							"name": "listAndCountPaymentProviders",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 8219,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 8465,
										"name": "FilterablePaymentProviderProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8220,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 8336,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8470,
												"name": "PaymentProviderDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8221,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8470,
													"name": "PaymentProviderDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8222,
					"name": "listCaptures",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8223,
							"name": "listCaptures",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of captures based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of captures."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of captures using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst captures = await paymentModuleService.listCaptures({\n  id: [\"capt_123\", \"capt_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the capture:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst captures = await paymentModuleService.listCaptures(\n  {\n    id: [\"capt_123\", \"capt_321\"],\n  },\n  {\n    relations: [\"payment\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst captures = await paymentModuleService.listCaptures(\n  {\n    id: [\"capt_123\", \"capt_321\"],\n  },\n  {\n    relations: [\"payment\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8224,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved captures."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8473,
										"name": "FilterableCaptureProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8225,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the capture is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a capture."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8336,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8483,
												"name": "CaptureDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8226,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8483,
											"name": "CaptureDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8227,
					"name": "listRefunds",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8228,
							"name": "listRefunds",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of refunds based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of refunds."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of refunds using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refunds = await paymentModuleService.listRefunds({\n  id: [\"ref_123\", \"ref_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the refund:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refunds = await paymentModuleService.listRefunds(\n  {\n    id: [\"ref_123\", \"ref_321\"],\n  },\n  {\n    relations: [\"payment\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refunds = await paymentModuleService.listRefunds(\n  {\n    id: [\"ref_123\", \"ref_321\"],\n  },\n  {\n    relations: [\"payment\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8229,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved refunds."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8489,
										"name": "FilterableRefundProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8230,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the refund is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a refund."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8336,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8499,
												"name": "RefundDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8231,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8499,
											"name": "RefundDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8232,
					"name": "createRefundReasons",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8233,
							"name": "createRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates refund reasons."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created refund reasons."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst refundReasons =\n  await paymentModuleService.createRefundReasons([\n    {\n      label: \"Too big\",\n    },\n    {\n      label: \"Too big\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8234,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The refund reasons to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8508,
											"name": "CreateRefundReasonDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8235,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8512,
											"name": "RefundReasonDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8236,
							"name": "createRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a refund reason."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created refund reason."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst refundReason =\n  await paymentModuleService.createRefundReasons({\n    label: \"Too big\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8237,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The refund reason to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8508,
										"name": "CreateRefundReasonDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8238,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8512,
										"name": "RefundReasonDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8239,
					"name": "deleteRefundReasons",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8240,
							"name": "deleteRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a refund reason by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the refund reason is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.deleteRefundReasons([\n  \"refr_123\",\n  \"refr_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8241,
									"name": "refundReasonId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The refund reason's ID."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8242,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8243,
							"name": "deleteRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a refund reason by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the refund reason is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.deleteRefundReasons(\n  \"refr_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8244,
									"name": "refundReasonId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The refund reason's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 8245,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8246,
					"name": "softDeleteRefundReasons",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8247,
							"name": "softDeleteRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes refund reasons by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModule.softDeleteRefundReasons([\"cus_123\"])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 8248,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8249,
									"name": "refundReasonId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of refund reasons."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8250,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8367,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8248,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8251,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 8248,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8252,
					"name": "restoreRefundReasons",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8253,
							"name": "restoreRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted refund reason by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait paymentModule.restoreRefundReasons([\"cus_123\"])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 8254,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 8255,
									"name": "refundReasonId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of refund reasons."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 8256,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the refund reason. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the refund reason's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8370,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8254,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8257,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 8254,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8258,
					"name": "updateRefundReasons",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8259,
							"name": "updateRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing refund reason."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated refund reason."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst refundReason =\n  await paymentModuleService.updateRefundReasons(\n    [{\n      id: \"refr_test1\",\n      amount: 3000,\n    }]\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8260,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the refund reason."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8519,
											"name": "UpdateRefundReasonDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 8261,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8512,
											"name": "RefundReasonDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 8262,
							"name": "updateRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 8263,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 8519,
										"name": "UpdateRefundReasonDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8264,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 8512,
										"name": "RefundReasonDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8265,
					"name": "listRefundReasons",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8266,
							"name": "listRefundReasons",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of refund reasons based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of refund reasons."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of refund reasons using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refundReasons =\n  await paymentModuleService.listRefundReasons({\n    id: [\"refr_123\", \"refr_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the refund :\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refundReasons =\n  await paymentModuleService.listRefundReasons(\n    {\n      id: [\"refr_123\", \"refr_321\"],\n    },\n    {}\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst refundReasons =\n  await paymentModuleService.listRefundReasons(\n    {\n      id: [\"refr_123\", \"refr_321\"],\n    },\n    {\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8267,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved refund reason."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8524,
										"name": "FilterableRefundReasonProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8268,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the refund reason is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a refund reason."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8336,
										"typeArguments": [
											{
												"type": "reference",
												"target": 8512,
												"name": "RefundReasonDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8269,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8308,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8512,
											"name": "RefundReasonDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8270,
					"name": "processEvent",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8271,
							"name": "processEvent",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method handles a webhook event with the associated payment provider.\n\nLearn more about handling webhook events in [this guide](https://docs.medusajs.com/experimental/payment/webhook-events/)"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the webhook event is handled successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "In the following example, "
											},
											{
												"kind": "code",
												"text": "`req`"
											},
											{
												"kind": "text",
												"text": " is an instance of "
											},
											{
												"kind": "code",
												"text": "`MedusaRequest`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nawait paymentModuleService.processEvent({\n  provider: \"stripe\",\n  payload: {\n    data: req.body,\n    rawData: req.rawBody,\n    headers: req.headers,\n  },\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 8272,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The webhook event's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 8528,
										"name": "ProviderWebhookPayload",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						8099,
						8106,
						8111,
						8116,
						8121,
						8130,
						8137,
						8144,
						8150,
						8156,
						8163,
						8168,
						8173,
						8177,
						8181,
						8186,
						8191,
						8196,
						8200,
						8204,
						8208,
						8212,
						8217,
						8222,
						8227,
						8232,
						8239,
						8246,
						8252,
						8258,
						8265,
						8270
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 8289,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 8286,
			"name": "PaymentModuleOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The options that the Payment Module accepts."
					}
				]
			},
			"children": [
				{
					"id": 8287,
					"name": "webhook_delay",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The delay in milliseconds before processing the webhook event."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n5000\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8288,
					"name": "webhook_retries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of times to retry the webhook event processing in case of an error."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n3\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8287,
						8288
					]
				}
			]
		},
		{
			"id": 8649,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8650,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 8651,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8652,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 8653,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 8654,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8650,
						8651
					]
				}
			]
		},
		{
			"id": 8560,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8561,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8562,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 8563,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 8645,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8645,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 8564,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8565,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 8566,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 8649,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 8645,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 8567,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8568,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 8569,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8570,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 8571,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 8572,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 8656,
												"typeArguments": [
													{
														"type": "reference",
														"target": 8571,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 8656,
													"typeArguments": [
														{
															"type": "reference",
															"target": 8571,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 8573,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						8561,
						8564,
						8567,
						8569
					]
				}
			]
		},
		{
			"id": 8308,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 8309,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 8310,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8319,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 8311,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8319,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 8312,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8313,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 8314,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8315,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8316,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 8560,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8317,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8318,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8309,
						8310,
						8311,
						8312,
						8313,
						8314,
						8315,
						8316,
						8317,
						8318
					]
				}
			],
			"typeParameters": [
				{
					"id": 8319,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 8637,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 8638,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 8639,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 8632,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 8640,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 8641,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8642,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 8643,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 8644,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						8638,
						8639,
						8640
					]
				},
				{
					"title": "Methods",
					"children": [
						8641,
						8643
					]
				}
			]
		},
		{
			"id": 8632,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8633,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 8634,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								8634
							]
						}
					],
					"indexSignatures": [
						{
							"id": 8635,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 8636,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 8559,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 8632,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 8637,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 8574,
			"name": "BigNumberValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 8637,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				8336,
				8735,
				8685,
				8576,
				8367,
				8370,
				8705,
				8609,
				8289,
				8320,
				8349,
				8423,
				8473,
				8489,
				8397,
				8435,
				8483,
				8499,
				8373,
				8470,
				8465,
				8524,
				8512,
				8303,
				8361,
				8356,
				8449,
				8455,
				8459,
				8385,
				8391,
				8528,
				8508,
				8519,
				8603,
				8098,
				8286,
				8649,
				8560,
				8308,
				8637
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				8670,
				8666,
				8668,
				8723,
				8770,
				8760,
				8580,
				8758,
				8733,
				8757,
				8727,
				8754,
				8717,
				8645,
				8656,
				8708,
				8626,
				8535,
				8623,
				8575,
				8602,
				8632,
				8559,
				8574
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"8097": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": ""
		},
		"8098": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService"
		},
		"8099": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentCollections"
		},
		"8100": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentCollections"
		},
		"8101": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8102": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8103": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentCollections"
		},
		"8104": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8105": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8106": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.retrievePaymentCollection"
		},
		"8107": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.retrievePaymentCollection"
		},
		"8108": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"8109": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8110": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8111": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentCollections"
		},
		"8112": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentCollections"
		},
		"8113": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"8114": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8115": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8116": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentCollections"
		},
		"8117": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentCollections"
		},
		"8118": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"8119": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8120": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8121": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentCollections"
		},
		"8122": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentCollections"
		},
		"8123": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"8124": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8125": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8126": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentCollections"
		},
		"8127": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "selector"
		},
		"8128": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8129": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8130": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.upsertPaymentCollections"
		},
		"8131": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.upsertPaymentCollections"
		},
		"8132": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8133": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8134": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.upsertPaymentCollections"
		},
		"8135": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8136": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8137": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentCollections"
		},
		"8138": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentCollections"
		},
		"8139": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"8140": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8141": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentCollections"
		},
		"8142": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"8143": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8144": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.softDeletePaymentCollections"
		},
		"8145": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.softDeletePaymentCollections"
		},
		"8146": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8147": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "id"
		},
		"8148": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8149": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8150": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.restorePaymentCollections"
		},
		"8151": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.restorePaymentCollections"
		},
		"8152": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8153": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "id"
		},
		"8154": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8155": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8156": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.completePaymentCollections"
		},
		"8157": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.completePaymentCollections"
		},
		"8158": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"8159": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8160": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.completePaymentCollections"
		},
		"8161": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"8162": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8163": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.retrievePaymentSession"
		},
		"8164": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.retrievePaymentSession"
		},
		"8165": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentSessionId"
		},
		"8166": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8167": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8168": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentSession"
		},
		"8169": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createPaymentSession"
		},
		"8170": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentCollectionId"
		},
		"8171": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8172": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8173": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentSession"
		},
		"8174": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePaymentSession"
		},
		"8175": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8176": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8177": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentSession"
		},
		"8178": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deletePaymentSession"
		},
		"8179": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "id"
		},
		"8180": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8181": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.authorizePaymentSession"
		},
		"8182": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.authorizePaymentSession"
		},
		"8183": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "id"
		},
		"8184": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "context"
		},
		"8185": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8186": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentSessions"
		},
		"8187": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentSessions"
		},
		"8188": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"8189": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8190": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8191": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPayments"
		},
		"8192": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPayments"
		},
		"8193": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"8194": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8195": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8196": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePayment"
		},
		"8197": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updatePayment"
		},
		"8198": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8199": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8200": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.capturePayment"
		},
		"8201": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.capturePayment"
		},
		"8202": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8203": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8204": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.refundPayment"
		},
		"8205": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.refundPayment"
		},
		"8206": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8207": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8208": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.cancelPayment"
		},
		"8209": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.cancelPayment"
		},
		"8210": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "paymentId"
		},
		"8211": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8212": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentProviders"
		},
		"8213": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listPaymentProviders"
		},
		"8214": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"8215": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8216": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8217": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentProviders"
		},
		"8218": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listAndCountPaymentProviders"
		},
		"8219": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"8220": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8221": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8222": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listCaptures"
		},
		"8223": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listCaptures"
		},
		"8224": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"8225": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8226": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8227": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listRefunds"
		},
		"8228": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listRefunds"
		},
		"8229": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"8230": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8231": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8232": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createRefundReasons"
		},
		"8233": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createRefundReasons"
		},
		"8234": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8235": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8236": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.createRefundReasons"
		},
		"8237": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8238": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8239": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deleteRefundReasons"
		},
		"8240": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deleteRefundReasons"
		},
		"8241": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "refundReasonId"
		},
		"8242": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8243": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.deleteRefundReasons"
		},
		"8244": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "refundReasonId"
		},
		"8245": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8246": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.softDeleteRefundReasons"
		},
		"8247": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.softDeleteRefundReasons"
		},
		"8248": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8249": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "refundReasonId"
		},
		"8250": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8251": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8252": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.restoreRefundReasons"
		},
		"8253": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.restoreRefundReasons"
		},
		"8254": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8255": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "refundReasonId"
		},
		"8256": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8257": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8258": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updateRefundReasons"
		},
		"8259": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updateRefundReasons"
		},
		"8260": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8261": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8262": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.updateRefundReasons"
		},
		"8263": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8264": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8265": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listRefundReasons"
		},
		"8266": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.listRefundReasons"
		},
		"8267": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "filters"
		},
		"8268": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "config"
		},
		"8269": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "sharedContext"
		},
		"8270": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.processEvent"
		},
		"8271": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "IPaymentModuleService.processEvent"
		},
		"8272": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "data"
		},
		"8286": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "PaymentModuleOptions"
		},
		"8287": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "PaymentModuleOptions.webhook_delay"
		},
		"8288": {
			"sourceFileName": "../../../../packages/core/types/src/payment/service.ts",
			"qualifiedName": "PaymentModuleOptions.webhook_retries"
		},
		"8289": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"8303": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO"
		},
		"8304": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.region_id"
		},
		"8305": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.currency_code"
		},
		"8306": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.amount"
		},
		"8307": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentCollectionDTO.metadata"
		},
		"8308": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"8309": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"8310": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"8311": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"8312": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"8313": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"8314": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"8315": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"8316": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"8317": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"8318": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"8319": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"8320": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO"
		},
		"8321": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.id"
		},
		"8322": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.currency_code"
		},
		"8323": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.region_id"
		},
		"8324": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.amount"
		},
		"8325": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.authorized_amount"
		},
		"8326": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.refunded_amount"
		},
		"8327": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.captured_amount"
		},
		"8328": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.completed_at"
		},
		"8329": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.created_at"
		},
		"8330": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.updated_at"
		},
		"8331": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.metadata"
		},
		"8332": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.status"
		},
		"8333": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.payment_providers"
		},
		"8334": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.payment_sessions"
		},
		"8335": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionDTO.payments"
		},
		"8336": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"8337": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"8338": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"8339": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"8340": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"8341": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"8342": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"8343": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"8345": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"8346": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"8347": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"8348": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"8349": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps"
		},
		"8350": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.id"
		},
		"8351": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.region_id"
		},
		"8352": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.created_at"
		},
		"8353": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentCollectionProps.updated_at"
		},
		"8354": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8355": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8356": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields"
		},
		"8357": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.region_id"
		},
		"8358": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.currency_code"
		},
		"8359": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.amount"
		},
		"8360": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "PaymentCollectionUpdatableFields.metadata"
		},
		"8361": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO"
		},
		"8362": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.id"
		},
		"8363": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.region_id"
		},
		"8364": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.currency_code"
		},
		"8365": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.amount"
		},
		"8366": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpsertPaymentCollectionDTO.metadata"
		},
		"8367": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"8368": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"8369": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8370": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"8371": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"8372": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"8373": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO"
		},
		"8374": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.id"
		},
		"8375": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.amount"
		},
		"8376": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.currency_code"
		},
		"8377": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.provider_id"
		},
		"8378": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.data"
		},
		"8379": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.context"
		},
		"8380": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.status"
		},
		"8381": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.authorized_at"
		},
		"8382": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.payment_collection_id"
		},
		"8383": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.payment_collection"
		},
		"8384": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionDTO.payment"
		},
		"8385": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO"
		},
		"8386": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.provider_id"
		},
		"8387": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.currency_code"
		},
		"8388": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.amount"
		},
		"8389": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.data"
		},
		"8390": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreatePaymentSessionDTO.context"
		},
		"8391": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO"
		},
		"8392": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.id"
		},
		"8393": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.data"
		},
		"8394": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.currency_code"
		},
		"8395": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.amount"
		},
		"8396": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentSessionDTO.context"
		},
		"8397": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO"
		},
		"8398": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.id"
		},
		"8399": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.amount"
		},
		"8400": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.raw_amount"
		},
		"8401": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.authorized_amount"
		},
		"8402": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.raw_authorized_amount"
		},
		"8403": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.currency_code"
		},
		"8404": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.provider_id"
		},
		"8405": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.cart_id"
		},
		"8406": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.order_id"
		},
		"8407": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.order_edit_id"
		},
		"8408": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.customer_id"
		},
		"8409": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.data"
		},
		"8410": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.created_at"
		},
		"8411": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.updated_at"
		},
		"8412": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.captured_at"
		},
		"8413": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.canceled_at"
		},
		"8414": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.captured_amount"
		},
		"8415": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.raw_captured_amount"
		},
		"8416": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.refunded_amount"
		},
		"8417": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.raw_refunded_amount"
		},
		"8418": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.captures"
		},
		"8419": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.refunds"
		},
		"8420": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.payment_collection_id"
		},
		"8421": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.payment_collection"
		},
		"8422": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentDTO.payment_session"
		},
		"8423": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps"
		},
		"8424": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.id"
		},
		"8425": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.currency_code"
		},
		"8426": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.amount"
		},
		"8427": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.provider_id"
		},
		"8428": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.payment_collection_id"
		},
		"8429": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.region_id"
		},
		"8430": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.created_at"
		},
		"8431": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.updated_at"
		},
		"8432": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentSessionProps.deleted_at"
		},
		"8433": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8434": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8435": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps"
		},
		"8436": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.q"
		},
		"8437": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.id"
		},
		"8438": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.payment_session_id"
		},
		"8439": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.customer_id"
		},
		"8440": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.cart_id"
		},
		"8441": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.order_id"
		},
		"8442": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.order_edit_id"
		},
		"8443": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.created_at"
		},
		"8444": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.updated_at"
		},
		"8445": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.captured_at"
		},
		"8446": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProps.canceled_at"
		},
		"8447": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8448": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8449": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO"
		},
		"8450": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.id"
		},
		"8451": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.cart_id"
		},
		"8452": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.order_id"
		},
		"8453": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.order_edit_id"
		},
		"8454": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdatePaymentDTO.customer_id"
		},
		"8455": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO"
		},
		"8456": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO.amount"
		},
		"8457": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO.payment_id"
		},
		"8458": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateCaptureDTO.captured_by"
		},
		"8459": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO"
		},
		"8460": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.amount"
		},
		"8461": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.payment_id"
		},
		"8462": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.refund_reason_id"
		},
		"8463": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.note"
		},
		"8464": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundDTO.created_by"
		},
		"8465": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProviderProps"
		},
		"8466": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProviderProps.id"
		},
		"8467": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterablePaymentProviderProps.is_enabled"
		},
		"8468": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8469": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8470": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentProviderDTO"
		},
		"8471": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentProviderDTO.id"
		},
		"8472": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentProviderDTO.is_enabled"
		},
		"8473": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps"
		},
		"8474": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.id"
		},
		"8475": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.currency_code"
		},
		"8476": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.amount"
		},
		"8477": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.payment_id"
		},
		"8478": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.created_at"
		},
		"8479": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.updated_at"
		},
		"8480": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableCaptureProps.deleted_at"
		},
		"8481": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8482": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8483": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO"
		},
		"8484": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.id"
		},
		"8485": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.amount"
		},
		"8486": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.created_at"
		},
		"8487": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.created_by"
		},
		"8488": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "CaptureDTO.payment"
		},
		"8489": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps"
		},
		"8490": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.id"
		},
		"8491": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.currency_code"
		},
		"8492": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.amount"
		},
		"8493": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.payment_id"
		},
		"8494": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.created_at"
		},
		"8495": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.updated_at"
		},
		"8496": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundProps.deleted_at"
		},
		"8497": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8498": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8499": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO"
		},
		"8500": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.id"
		},
		"8501": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.amount"
		},
		"8502": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.refund_reason_id"
		},
		"8503": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.refund_reason"
		},
		"8504": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.note"
		},
		"8505": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.created_at"
		},
		"8506": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.created_by"
		},
		"8507": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundDTO.payment"
		},
		"8508": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundReasonDTO"
		},
		"8509": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundReasonDTO.label"
		},
		"8510": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundReasonDTO.description"
		},
		"8511": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "CreateRefundReasonDTO.metadata"
		},
		"8512": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO"
		},
		"8513": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO.id"
		},
		"8514": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO.label"
		},
		"8515": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO.description"
		},
		"8516": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO.metadata"
		},
		"8517": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO.created_at"
		},
		"8518": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "RefundReasonDTO.updated_at"
		},
		"8519": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdateRefundReasonDTO"
		},
		"8520": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdateRefundReasonDTO.id"
		},
		"8521": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdateRefundReasonDTO.label"
		},
		"8522": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdateRefundReasonDTO.description"
		},
		"8523": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "UpdateRefundReasonDTO.metadata"
		},
		"8524": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundReasonProps"
		},
		"8525": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "FilterableRefundReasonProps.id"
		},
		"8526": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8527": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8528": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "ProviderWebhookPayload"
		},
		"8529": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "ProviderWebhookPayload.provider"
		},
		"8530": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "ProviderWebhookPayload.payload"
		},
		"8531": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "__type"
		},
		"8532": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "__type.data"
		},
		"8533": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "__type.rawData"
		},
		"8534": {
			"sourceFileName": "../../../../packages/core/types/src/payment/mutations.ts",
			"qualifiedName": "__type.headers"
		},
		"8535": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"8536": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8537": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"8538": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"8539": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"8540": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8541": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8542": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"8543": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8544": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"8545": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"8546": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"8547": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"8548": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8549": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"8550": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"8551": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"8552": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"8553": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"8554": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"8555": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8556": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"8557": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"8558": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"8559": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"8560": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"8561": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"8562": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"8563": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"8564": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"8565": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"8566": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"8567": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"8568": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"8569": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"8570": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"8571": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"8572": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"8573": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"8574": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberValue"
		},
		"8575": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentCollectionStatus"
		},
		"8576": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"8577": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"8578": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"8579": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"8580": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"8581": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8582": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"8583": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"8584": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"8585": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"8586": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"8587": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"8588": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"8589": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"8590": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"8591": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"8592": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"8593": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"8594": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"8595": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"8596": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"8597": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"8598": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"8599": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"8600": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"8601": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8602": {
			"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
			"qualifiedName": "PaymentSessionStatus"
		},
		"8603": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "PaymentProviderContext"
		},
		"8604": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.billing_address"
		},
		"8605": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.email"
		},
		"8606": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.session_id"
		},
		"8607": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.customer"
		},
		"8608": {
			"sourceFileName": "../../../../packages/core/types/src/payment/provider.ts",
			"qualifiedName": "__type.extra"
		},
		"8609": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"8610": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"8611": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"8612": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"8613": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"8614": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"8615": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"8616": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"8617": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"8618": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"8619": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"8620": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8621": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"8622": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"8623": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"8624": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8625": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"8626": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"8627": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"8628": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"8629": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"8630": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"8631": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"8632": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"8633": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"8634": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"8635": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"8637": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"8638": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"8639": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"8640": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"8641": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"8642": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"8643": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"8644": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"8645": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"8646": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8647": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"8648": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"8649": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"8650": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"8651": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"8652": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"8653": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"8656": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"8657": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8658": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"8659": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"8660": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"8661": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"8662": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"8663": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"8664": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"8665": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"8666": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"8667": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8668": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"8669": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8670": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "AddressDTO"
		},
		"8671": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type"
		},
		"8672": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.id"
		},
		"8673": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"8674": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"8675": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.company"
		},
		"8676": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"8677": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.city"
		},
		"8678": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.phone"
		},
		"8679": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"8680": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.province"
		},
		"8681": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"8682": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"8683": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"8684": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"8685": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO"
		},
		"8686": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.id"
		},
		"8687": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.email"
		},
		"8688": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.has_account"
		},
		"8689": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.default_billing_address_id"
		},
		"8690": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.default_shipping_address_id"
		},
		"8691": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.company_name"
		},
		"8692": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.first_name"
		},
		"8693": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.last_name"
		},
		"8694": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.addresses"
		},
		"8695": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.phone"
		},
		"8696": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.groups"
		},
		"8697": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "__type"
		},
		"8698": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "__type.id"
		},
		"8699": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "__type.name"
		},
		"8700": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.metadata"
		},
		"8701": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.created_by"
		},
		"8702": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.deleted_at"
		},
		"8703": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.created_at"
		},
		"8704": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerDTO.updated_at"
		},
		"8705": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"8706": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"8707": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"8708": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"8709": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"8710": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"8711": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"8712": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"8713": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"8714": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"8715": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"8716": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"8717": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"8718": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8719": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"8720": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"8721": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"8722": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"8723": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"8724": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8725": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"8726": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"8727": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"8728": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8729": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"8731": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8732": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"8733": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"8734": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8735": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO"
		},
		"8736": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.id"
		},
		"8737": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.address_name"
		},
		"8738": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.is_default_shipping"
		},
		"8739": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.is_default_billing"
		},
		"8740": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.customer_id"
		},
		"8741": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.company"
		},
		"8742": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.first_name"
		},
		"8743": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.last_name"
		},
		"8744": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.address_1"
		},
		"8745": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.address_2"
		},
		"8746": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.city"
		},
		"8747": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.country_code"
		},
		"8748": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.province"
		},
		"8749": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.postal_code"
		},
		"8750": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.phone"
		},
		"8751": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.metadata"
		},
		"8752": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.created_at"
		},
		"8753": {
			"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
			"qualifiedName": "CustomerAddressDTO.updated_at"
		},
		"8754": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"8755": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"8756": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"8757": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"8758": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"8759": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8760": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"8761": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8762": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"8763": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8764": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"8765": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8766": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"8767": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"8768": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"8769": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"8770": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"8771": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/payment/service.ts"
		},
		"reflections": {
			"1": 8097
		}
	}
}