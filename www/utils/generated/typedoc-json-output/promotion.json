{
	"id": 13019,
	"name": "promotion",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 13484,
			"name": "FindConfigOrder",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Temporary type fixing to allow any level of orders until we get to properly clean all the types"
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
					"line": 55,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13485,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 55,
							"character": 30
						}
					],
					"indexSignatures": [
						{
							"id": 13486,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
									"line": 56,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 13487,
									"name": "Key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 13488,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										]
									},
									{
										"type": "reference",
										"target": 13484,
										"name": "FindConfigOrder",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "ASC"
									},
									{
										"type": "literal",
										"value": "DESC"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 13269,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 13270,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 69,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intersection",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 13271,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {}
											}
										}
									]
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 13279,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 13272,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 74,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13273,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 79,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13274,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 84,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 13275,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 90,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13484,
						"name": "FindConfigOrder",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13276,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 96,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13277,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 101,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 13278,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13270,
						13272,
						13273,
						13274,
						13275,
						13276,
						13277,
						13278
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/common/common.ts",
					"line": 65,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 13279,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 13458,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 13459,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13458,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13461,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13461,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 13460,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13458,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13461,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13461,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13459,
						13460
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
					"line": 11,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 13461,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 13258,
					"name": "FilterablePromotionProps"
				},
				{
					"type": "reference",
					"target": 13321,
					"name": "FilterablePromotionRuleProps"
				},
				{
					"type": "reference",
					"target": 13331,
					"name": "FilterableCampaignProps"
				}
			]
		},
		{
			"id": 13280,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 13281,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 145,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13282,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13281
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 141,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13282,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 13283,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 13284,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 157,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13285,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13284
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 153,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13285,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 13577,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 9,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 13578,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 13578,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 13578,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 13602,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 13606,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13578,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 13609,
					"typeArguments": [
						{
							"type": "reference",
							"target": 13578,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 13579,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 15,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 13580,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 13580,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 13580,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 13580,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 13602,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 18,
					"character": 5
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13603,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13604,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
											"line": 28,
											"character": 6
										}
									],
									"signatures": [
										{
											"id": 13605,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
													"line": 28,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										13604
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 27,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 13640,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 37,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 13641,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 13641,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 13641,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 13641,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 13630,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 40,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 13639,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 13639,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 13631,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 13632,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"sources": [
									{
										"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
										"line": 41,
										"character": 2
									}
								],
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									13632
								]
							}
						],
						"sources": [
							{
								"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
								"line": 40,
								"character": 28
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 13640,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 13639,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 13633,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13634,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
											"line": 45,
											"character": 6
										}
									],
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13634
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 44,
									"character": 14
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 13640,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 13639,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 13635,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 13636,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
												"line": 49,
												"character": 6
											}
										],
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											13636
										]
									}
								],
								"sources": [
									{
										"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
										"line": 48,
										"character": 14
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 13640,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 13639,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 13637,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 13638,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
													"line": 53,
													"character": 6
												}
											],
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												13638
											]
										}
									],
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
											"line": 52,
											"character": 14
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 13640,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 13462,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 58,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13483,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13463,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13464,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 13577,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13483,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 13465,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 13577,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13483,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 13466,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 13579,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13483,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13579,
											"typeArguments": [
												{
													"type": "reference",
													"target": 13483,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 13467,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13579,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13483,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13468,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 13579,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13483,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 13469,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 13579,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13483,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 13470,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13577,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13483,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13471,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13579,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13483,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13472,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 67,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13579,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13483,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13473,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13579,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13483,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13474,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 69,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13579,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13483,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13475,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13476,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 71,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13477,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13478,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13479,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 74,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 13480,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 13481,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 76,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 13482,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13464,
								13465,
								13466,
								13467,
								13468,
								13469,
								13470,
								13471,
								13472,
								13473,
								13474,
								13475,
								13476,
								13477,
								13478,
								13479,
								13480,
								13481,
								13482
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
							"line": 58,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 13627,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 80,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 13628,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 13628,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 13579,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13628,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 13630,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13628,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 13609,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 81,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 13610,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 13462,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13627,
								"typeArguments": [
									{
										"type": "reference",
										"target": 13610,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 13627,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13610,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13627,
							"typeArguments": [
								{
									"type": "reference",
									"target": 13610,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 13629,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 87,
					"character": 5
				}
			],
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 0
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					}
				]
			}
		},
		{
			"id": 13621,
			"name": "FilterQueryProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 89,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13625,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 13626,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 13625,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "Key"
							},
							"name": "Key",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 13625,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"extendsType": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "bigint"
							},
							{
								"type": "intrinsic",
								"name": "symbol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 13625,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": 13462,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 13625,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 13625,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "inferred",
							"name": "U"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 13622,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
											"line": 99,
											"character": 16
										}
									],
									"indexSignatures": [
										{
											"id": 13623,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
													"line": 99,
													"character": 18
												}
											],
											"parameters": [
												{
													"id": 13624,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "V"
									},
									"name": "V",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "object"
								},
								"trueType": {
									"type": "reference",
									"target": 13606,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "V"
													},
													"name": "V",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Partial",
											"package": "typescript"
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 13626,
												"name": "Prev",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 13629,
												"name": "PrevLimit",
												"package": "@medusajs/types"
											}
										}
									],
									"name": "FilterQuery",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 13606,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/utils.ts",
					"line": 107,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13607,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 13608,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 13608,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 13607,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 13614,
						"typeArguments": [
							{
								"type": "inferred",
								"name": "Prototype"
							}
						],
						"name": "Constructor",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "reference",
						"target": 13621,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Prototype"
								},
								"name": "Prototype",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 13608,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 13621,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13607,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 13608,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					}
				}
			}
		},
		{
			"id": 13611,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13612,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13613,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the event's group. Grouped events are useful when you have distributed transactions\nwhere you need to explicitly group, release and clear events upon lifecycle events of a transaction.\n\nWhen set, you must release the grouped events using the Event Module's "
											},
											{
												"kind": "code",
												"text": "`releaseGroupedEvents`"
											},
											{
												"kind": "text",
												"text": " method to emit the events."
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 24,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13613
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 17,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 13596,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 27,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13601,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13597,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13598,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event's name."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nuser.created\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13599,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional meadata to pass with the event."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13611,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13600,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data payload that subscribers receive. For example, the ID or IDs of the created user. (e.g. { id: \"123\" } or { ids: [\"123\", \"456\"] })"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 42,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13601,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13598,
								13599,
								13600
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 27,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 13556,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of an event to emit."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 48,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13559,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 13596,
						"typeArguments": [
							{
								"type": "reference",
								"target": 13559,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13557,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13558,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 49,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13558
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 48,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 13567,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 52,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13576,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13568,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13569,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13570,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 54,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13576,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 13571,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13572,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13573,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 57,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13574,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 58,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 13575,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13569,
								13570,
								13571,
								13572,
								13573,
								13574,
								13575
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 52,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 13586,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13587,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13588,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 2,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13589,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 3,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13590,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 4,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13591,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 5,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13592,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 13593,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 13594,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 13595,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
									"line": 18,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13588,
								13589,
								13590,
								13591,
								13592,
								13593,
								13594,
								13595
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 1,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 13582,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13583,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 13584,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 23,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13585,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13583,
						13584,
						13585
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
					"line": 21,
					"character": 17
				}
			]
		},
		{
			"id": 13510,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13511,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13512,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 13582,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 13582,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 13513,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 13514,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 13515,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
															"line": 43,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 13516,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
															"line": 44,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														13515,
														13516
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
													"line": 42,
													"character": 6
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 13517,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 13518,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13586,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13519,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 13520,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 13521,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
												"line": 50,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 13522,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
												"line": 51,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 13523,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
												"line": 52,
												"character": 4
											}
										],
										"type": {
											"type": "reference",
											"target": 13586,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											13521,
											13522,
											13523
										]
									}
								],
								"sources": [
									{
										"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
										"line": 49,
										"character": 12
									}
								]
							}
						}
					}
				},
				{
					"id": 13524,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
							"line": 57,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13511,
						13512,
						13513,
						13517,
						13518,
						13519,
						13524
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/joiner/index.ts",
					"line": 30,
					"character": 17
				}
			]
		},
		{
			"id": 13614,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 21,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13620,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13615,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 21,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 13616,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 13619,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 13620,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 13617,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 21,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 13618,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 13620,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 13529,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 143,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13530,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13531,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 146,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 13532,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 168,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13533,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 169,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 13534,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 173,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13531,
										13532,
										13533,
										13534
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 145,
									"character": 2
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 13343,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 191,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 13510,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13344,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13345,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 198,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13346,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 199,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13525,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 13347,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 200,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 13348,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 13349,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 201,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 13350,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 202,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 13351,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 203,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 13352,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 13353,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 207,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 13354,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 208,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 13355,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 209,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							13353,
																							13354,
																							13355
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																						"line": 206,
																						"character": 8
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 13356,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 212,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Omit"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 13525,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																},
																{
																	"type": "literal",
																	"value": "hasMany"
																}
															],
															"name": "Omit",
															"package": "typescript"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															13349,
															13350,
															13351,
															13356
														]
													}
												],
												"sources": [
													{
														"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
														"line": 200,
														"character": 12
													}
												]
											}
										}
									}
								},
								{
									"id": 13357,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 214,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13358,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 215,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 13359,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 219,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 13360,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 223,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 13361,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 227,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 13362,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 232,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 13363,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 233,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 13364,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 13365,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 237,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 13366,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 241,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 13367,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 242,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 13529,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														13365,
														13366,
														13367
													]
												}
											],
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 233,
													"character": 19
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13345,
										13346,
										13347,
										13357,
										13358,
										13359,
										13360,
										13361,
										13362,
										13363
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 194,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 13525,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 246,
					"character": 20
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 13586,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 13526,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13527,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 250,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 13528,
									"name": "hasMany",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allow multiple relationships to exist for this\nentity"
											}
										]
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 255,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13527,
										13528
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 246,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 13192,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13193,
					"name": "__joinerConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 319,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13194,
							"name": "__joinerConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 319,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13343,
								"name": "ModuleJoinerConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 13195,
					"name": "__hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@ignore"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 324,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 13196,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 13197,
									"name": "onApplicationStart",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 325,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 13198,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 325,
													"character": 25
												}
											],
											"signatures": [
												{
													"id": 13199,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 325,
															"character": 25
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 13200,
									"name": "onApplicationShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 326,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 13201,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 326,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 13202,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 326,
															"character": 28
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 13203,
									"name": "onApplicationPrepareShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 327,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 13204,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 327,
													"character": 35
												}
											],
											"signatures": [
												{
													"id": 13205,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 327,
															"character": 35
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										13197,
										13200,
										13203
									]
								}
							],
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 324,
									"character": 12
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13195
					]
				},
				{
					"title": "Methods",
					"children": [
						13193
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 315,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 13020,
					"name": "IPromotionModuleService"
				}
			]
		},
		{
			"id": 13553,
			"name": "ApplicationMethodTypeValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method's possible types."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
					"line": 8,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "fixed"
					},
					{
						"type": "literal",
						"value": "percentage"
					}
				]
			}
		},
		{
			"id": 13554,
			"name": "ApplicationMethodTargetTypeValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method's possible target types."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
					"line": 13,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "order"
					},
					{
						"type": "literal",
						"value": "shipping_methods"
					},
					{
						"type": "literal",
						"value": "items"
					}
				]
			}
		},
		{
			"id": 13555,
			"name": "ApplicationMethodAllocationValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method's possible allocation values."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
					"line": 21,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "each"
					},
					{
						"type": "literal",
						"value": "across"
					}
				]
			}
		},
		{
			"id": 13434,
			"name": "ApplicationMethodDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method details."
					}
				]
			},
			"children": [
				{
					"id": 13435,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13436,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the application method indicating how\nthe associated promotion is applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13553,
						"name": "ApplicationMethodTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13437,
					"name": "target_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target type of the application method indicating\nwhether the associated promotion is applied to the cart's items,\nshipping methods, or the whole order."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13554,
						"name": "ApplicationMethodTargetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13438,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The allocation value that indicates whether the associated promotion\nis applied on each item in a cart or split between the items in the cart."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13555,
						"name": "ApplicationMethodAllocationValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13439,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discounted amount applied by the associated promotion based on the "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 54,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13440,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the application method"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 59,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13441,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The max quantity allowed in the cart for the associated promotion to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 64,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13442,
					"name": "buy_rules_min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required for a "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion to be applied.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the\nvalue of this attribute is "
							},
							{
								"kind": "code",
								"text": "`2`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 71,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13443,
					"name": "apply_to_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity that results from matching the "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion's condition.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the value\nof this attribute is "
							},
							{
								"kind": "code",
								"text": "`1`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 78,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13444,
					"name": "promotion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 83,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 13240,
								"name": "PromotionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 13445,
					"name": "target_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target rules of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 88,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13291,
							"name": "PromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13446,
					"name": "buy_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The buy rules of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 93,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13291,
							"name": "PromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13435,
						13436,
						13437,
						13438,
						13439,
						13440,
						13441,
						13442,
						13443,
						13444,
						13445,
						13446
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
					"line": 26,
					"character": 17
				}
			]
		},
		{
			"id": 13408,
			"name": "CreateApplicationMethodDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The application method to be created."
					}
				]
			},
			"children": [
				{
					"id": 13409,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the application method indicating how\nthe associated promotion is applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13553,
						"name": "ApplicationMethodTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13410,
					"name": "target_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target type of the application method indicating\nwhether the associated promotion is applied to the cart's items,\nshipping methods, or the whole order."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13554,
						"name": "ApplicationMethodTargetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13411,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The allocation value that indicates whether the associated promotion\nis applied on each item in a cart or split between the items in the cart."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 117,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13555,
						"name": "ApplicationMethodAllocationValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13412,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discounted amount applied by the associated promotion based on the "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 122,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13413,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency of the value to apply."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 127,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13414,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The max quantity allowed in the cart for the associated promotion to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 132,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13415,
					"name": "buy_rules_min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required for a "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion to be applied.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the\nvalue of this attribute is "
							},
							{
								"kind": "code",
								"text": "`2`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 139,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13416,
					"name": "apply_to_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity that results from matching the "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion's condition.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the value\nof this attribute is "
							},
							{
								"kind": "code",
								"text": "`1`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 146,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13417,
					"name": "promotion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 151,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 13240,
								"name": "PromotionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 13418,
					"name": "target_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target rules of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 156,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13286,
							"name": "CreatePromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13419,
					"name": "buy_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The buy rules of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 161,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13286,
							"name": "CreatePromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13409,
						13410,
						13411,
						13412,
						13413,
						13414,
						13415,
						13416,
						13417,
						13418,
						13419
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
					"line": 99,
					"character": 17
				}
			]
		},
		{
			"id": 13447,
			"name": "UpdateApplicationMethodDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the application method."
					}
				]
			},
			"children": [
				{
					"id": 13448,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 171,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13449,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the application method indicating how\nthe associated promotion is applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 177,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13553,
						"name": "ApplicationMethodTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13450,
					"name": "target_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The target type of the application method indicating\nwhether the associated promotion is applied to the cart's items,\nshipping methods, or the whole order."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 184,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13554,
						"name": "ApplicationMethodTargetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13451,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The allocation value that indicates whether the associated promotion\nis applied on each item in a cart or split between the items in the cart."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 190,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13555,
						"name": "ApplicationMethodAllocationValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13452,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discounted amount applied by the associated promotion based on the "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 195,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13453,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code of the promotions application"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 200,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13454,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The max quantity allowed in the cart for the associated promotion to be applied."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 205,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13455,
					"name": "buy_rules_min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required for a "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion to be applied.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the\nvalue of this attribute is "
							},
							{
								"kind": "code",
								"text": "`2`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 212,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13456,
					"name": "apply_to_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity that results from matching the "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " promotion's condition.\nFor example, if the promotion is a \"Buy 2 shirts get 1 free\", the value\nof this attribute is "
							},
							{
								"kind": "code",
								"text": "`1`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13457,
					"name": "promotion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion of the application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
							"line": 224,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 13240,
								"name": "PromotionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13448,
						13449,
						13450,
						13451,
						13452,
						13453,
						13454,
						13455,
						13456,
						13457
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/application-method.ts",
					"line": 167,
					"character": 17
				}
			]
		},
		{
			"id": 13581,
			"name": "CampaignBudgetTypeValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The campaign budget's possible types."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "spend"
					},
					{
						"type": "literal",
						"value": "usage"
					}
				]
			}
		},
		{
			"id": 13498,
			"name": "CampaignBudgetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The campaign budget details."
					}
				]
			},
			"children": [
				{
					"id": 13499,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13500,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the campaign budget:\n\n- "
							},
							{
								"kind": "code",
								"text": "`spend`"
							},
							{
								"kind": "text",
								"text": " indicates that the budget is limited by the amount discounted by the promotions in the associated campaign.\n- "
							},
							{
								"kind": "code",
								"text": "`usage`"
							},
							{
								"kind": "text",
								"text": " indicates that the budget is limited by the number of times the promotions of the associated campaign have been used."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13581,
						"name": "CampaignBudgetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13501,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The limit of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
							"line": 29,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13502,
					"name": "used",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The usage from the campaign budget's limit:\n\n- If the budget's type is "
							},
							{
								"kind": "code",
								"text": "`spend`"
							},
							{
								"kind": "text",
								"text": ", the value of this attribute is the amount discounted so far by the promotions in the associated campaign.\n- If the budget's type is "
							},
							{
								"kind": "code",
								"text": "`usage`"
							},
							{
								"kind": "text",
								"text": ", the value of this attribute is the number of times the promotions of the associated campaign have been used so far."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13503,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13499,
						13500,
						13501,
						13502,
						13503
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign-budget.ts",
					"line": 11,
					"character": 17
				}
			]
		},
		{
			"id": 13304,
			"name": "CampaignDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The campaign details."
					}
				]
			},
			"children": [
				{
					"id": 13305,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13306,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 17,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13307,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13308,
					"name": "campaign_identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The campaign identifier of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 27,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13309,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The start date of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 32,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 13310,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The end date of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 37,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 13311,
					"name": "budget",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 42,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13498,
						"name": "CampaignBudgetDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13312,
					"name": "promotions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated promotions."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13240,
							"name": "PromotionDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13305,
						13306,
						13307,
						13308,
						13309,
						13310,
						13311,
						13312
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
					"line": 8,
					"character": 17
				}
			]
		},
		{
			"id": 13331,
			"name": "FilterableCampaignProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved campaigns."
					}
				]
			},
			"children": [
				{
					"id": 13335,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13331,
									"name": "FilterableCampaignProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13458,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13331,
											"name": "FilterableCampaignProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13459,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 13336,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13331,
									"name": "FilterableCampaignProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13458,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13331,
											"name": "FilterableCampaignProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13460,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 13332,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Find campaigns by their name or description through this search term."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 58,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13333,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the campaigns by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 62,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 13334,
					"name": "campaign_identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters the campaigns by their campaign identifier."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
							"line": 67,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13335,
						13336,
						13332,
						13333,
						13334
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/campaign.ts",
					"line": 53,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 13458,
					"typeArguments": [
						{
							"type": "reference",
							"target": 13331,
							"name": "FilterableCampaignProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 13216,
			"name": "ComputeActions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A compute action informs you what adjustment must be made to a cart item or shipping method."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 13382,
						"name": "AddItemAdjustmentAction",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 13388,
						"name": "RemoveItemAdjustmentAction",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 13393,
						"name": "AddShippingMethodAdjustment",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 13399,
						"name": "RemoveShippingMethodAdjustment",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 13403,
						"name": "CampaignBudgetExceededAction",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 13206,
			"name": "UsageComputedActions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "These computed action types can affect a campaign's budget."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 16,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13207,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13208,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount to remove off the shipping method's total."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
									"line": 20,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 13368,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 13209,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The promotion's code."
									}
								]
							},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
									"line": 25,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13208,
								13209
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 16,
							"character": 35
						}
					]
				}
			}
		},
		{
			"id": 13403,
			"name": "CampaignBudgetExceededAction",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This action indicates that the promotions within a campaign can no longer be used\nas the campaign budget has been exceeded."
					}
				]
			},
			"children": [
				{
					"id": 13404,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of action."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "campaignBudgetExceeded"
					}
				},
				{
					"id": 13405,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 41,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13404,
						13405
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 32,
					"character": 17
				}
			]
		},
		{
			"id": 13382,
			"name": "AddItemAdjustmentAction",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This action indicates that an adjustment must be made to an item. For example, removing $5 off its amount."
					}
				]
			},
			"children": [
				{
					"id": 13383,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of action."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "addItemAdjustment"
					}
				},
				{
					"id": 13384,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated item's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13385,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to remove off the item's total."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 61,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13368,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13386,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 66,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13387,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's description."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 71,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13383,
						13384,
						13385,
						13386,
						13387
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 47,
					"character": 17
				}
			]
		},
		{
			"id": 13388,
			"name": "RemoveItemAdjustmentAction",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This action indicates that an adjustment must be removed from a line item. For example, remove the $5 discount applied before."
					}
				]
			},
			"children": [
				{
					"id": 13389,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of action."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "removeItemAdjustment"
					}
				},
				{
					"id": 13390,
					"name": "adjustment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated adjustment's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 86,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13391,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's description."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13392,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 96,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13389,
						13390,
						13391,
						13392
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 77,
					"character": 17
				}
			]
		},
		{
			"id": 13393,
			"name": "AddShippingMethodAdjustment",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This action indicates that an adjustment must be made on a shipping method. For example, make the shipping method free."
					}
				]
			},
			"children": [
				{
					"id": 13394,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of action."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 106,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "addShippingMethodAdjustment"
					}
				},
				{
					"id": 13395,
					"name": "shipping_method_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated shipping method's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 111,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13396,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to remove off the shipping method's total."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 116,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13368,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13397,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 121,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13398,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's description."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 126,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13394,
						13395,
						13396,
						13397,
						13398
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 102,
					"character": 17
				}
			]
		},
		{
			"id": 13399,
			"name": "RemoveShippingMethodAdjustment",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This action indicates that an adjustment must be removed from a shipping method. For example, remove the free shipping discount applied before."
					}
				]
			},
			"children": [
				{
					"id": 13400,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of action"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 136,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "removeShippingMethodAdjustment"
					}
				},
				{
					"id": 13401,
					"name": "adjustment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated adjustment's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 141,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13402,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 146,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13400,
						13401,
						13402
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 132,
					"character": 17
				}
			]
		},
		{
			"id": 13548,
			"name": "ComputeActionAdjustmentLine",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An action's adjustment line."
					}
				]
			},
			"children": [
				{
					"id": 13549,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the compute action's adjustment line."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 156,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13550,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The promotion's code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 161,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13549,
						13550
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 152,
					"character": 17
				}
			],
			"indexSignatures": [
				{
					"id": 13551,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 13552,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 13369,
			"name": "ComputeActionItemLine",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A cart's line item passed in the context when computing actions."
					}
				]
			},
			"children": [
				{
					"id": 13370,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the item line."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 171,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13371,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 176,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13368,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13372,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal of the line item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 181,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13368,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13373,
					"name": "adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The adjustments applied before on the line item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 186,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13548,
							"name": "ComputeActionAdjustmentLine",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13370,
						13371,
						13372,
						13373
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 167,
					"character": 17
				}
			],
			"indexSignatures": [
				{
					"id": 13374,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 13375,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 13376,
			"name": "ComputeActionShippingLine",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A cart's shipping method passed in the content when computing actions."
					}
				]
			},
			"children": [
				{
					"id": 13377,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 196,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13378,
					"name": "subtotal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtotal of the shipping method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 201,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13368,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13379,
					"name": "adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The adjustments applied before on the shipping method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 206,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13548,
							"name": "ComputeActionAdjustmentLine",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13377,
						13378,
						13379
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 192,
					"character": 17
				}
			],
			"indexSignatures": [
				{
					"id": 13380,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 13381,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 13210,
			"name": "ComputeActionContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context provided when computing actions of promotions."
					}
				]
			},
			"children": [
				{
					"id": 13211,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The cart's currency"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 216,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13212,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The cart's line items."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 221,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13369,
							"name": "ComputeActionItemLine",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13213,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The cart's shipping methods."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
							"line": 226,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13376,
							"name": "ComputeActionShippingLine",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13211,
						13212,
						13213
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/compute-actions.ts",
					"line": 212,
					"character": 17
				}
			],
			"indexSignatures": [
				{
					"id": 13214,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 13215,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 13490,
			"name": "PromotionRuleValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion rule value details."
					}
				]
			},
			"children": [
				{
					"id": 13491,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the promotion rule value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule-value.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13492,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the promotion rule value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule-value.ts",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13491,
						13492
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule-value.ts",
					"line": 7,
					"character": 17
				}
			]
		},
		{
			"id": 13489,
			"name": "PromotionRuleOperatorValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible operators to use in a promotion rule."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
					"line": 7,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "gt"
					},
					{
						"type": "literal",
						"value": "lt"
					},
					{
						"type": "literal",
						"value": "eq"
					},
					{
						"type": "literal",
						"value": "ne"
					},
					{
						"type": "literal",
						"value": "in"
					},
					{
						"type": "literal",
						"value": "lte"
					},
					{
						"type": "literal",
						"value": "gte"
					}
				]
			}
		},
		{
			"id": 13291,
			"name": "PromotionRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion rule details."
					}
				]
			},
			"children": [
				{
					"id": 13292,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 23,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13293,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13294,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 33,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13295,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13489,
						"name": "PromotionRuleOperatorValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13296,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13490,
							"name": "PromotionRuleValueDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13292,
						13293,
						13294,
						13295,
						13296
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
					"line": 19,
					"character": 17
				}
			]
		},
		{
			"id": 13286,
			"name": "CreatePromotionRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion rule to be created."
					}
				]
			},
			"children": [
				{
					"id": 13287,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 53,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13288,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 58,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13289,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 63,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13489,
						"name": "PromotionRuleOperatorValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13290,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values of the promotion rule.\nWhen provided, "
							},
							{
								"kind": "code",
								"text": "`PromotionRuleValue`"
							},
							{
								"kind": "text",
								"text": " records are\ncreated and associated with the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13287,
						13288,
						13289,
						13290
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
					"line": 49,
					"character": 17
				}
			]
		},
		{
			"id": 13325,
			"name": "UpdatePromotionRuleDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the promotion rule."
					}
				]
			},
			"children": [
				{
					"id": 13326,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13327,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 85,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13328,
					"name": "attribute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attribute of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 90,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13329,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 95,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13489,
						"name": "PromotionRuleOperatorValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13330,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The values of the promotion rule.\nWhen provided, "
							},
							{
								"kind": "code",
								"text": "`PromotionRuleValue`"
							},
							{
								"kind": "text",
								"text": " records are\ncreated and associated with the promotion rule."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 102,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13326,
						13327,
						13328,
						13329,
						13330
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
					"line": 76,
					"character": 17
				}
			]
		},
		{
			"id": 13321,
			"name": "FilterablePromotionRuleProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved promotion rules."
					}
				]
			},
			"children": [
				{
					"id": 13323,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13321,
									"name": "FilterablePromotionRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13458,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13321,
											"name": "FilterablePromotionRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13459,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 13324,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13321,
									"name": "FilterablePromotionRuleProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13458,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13321,
											"name": "FilterablePromotionRuleProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13460,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 13322,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the promotion rules by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
							"line": 123,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13323,
						13324,
						13322
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion-rule.ts",
					"line": 118,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 13458,
					"typeArguments": [
						{
							"type": "reference",
							"target": 13321,
							"name": "FilterablePromotionRuleProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 13406,
			"name": "PromotionTypeValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion's possible types."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "standard"
					},
					{
						"type": "literal",
						"value": "buyget"
					}
				]
			}
		},
		{
			"id": 13407,
			"name": "PromotionStatusValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion's possible types."
					}
				]
			},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
					"line": 19,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "draft"
					},
					{
						"type": "literal",
						"value": "active"
					},
					{
						"type": "literal",
						"value": "inactive"
					}
				]
			}
		},
		{
			"id": 13240,
			"name": "PromotionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion details."
					}
				]
			},
			"children": [
				{
					"id": 13241,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 33,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13242,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 38,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13243,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the promotion:\n\n- "
							},
							{
								"kind": "code",
								"text": "`standard`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is a standard one applied with conditions.\n- "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is a \"Buy X get Y\" promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13406,
						"name": "PromotionTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13244,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the promotion:\n\n- "
							},
							{
								"kind": "code",
								"text": "`active`"
							},
							{
								"kind": "text",
								"text": " promotion is available for user to consume\n- "
							},
							{
								"kind": "code",
								"text": "`inactive`"
							},
							{
								"kind": "text",
								"text": " promotion is no longer available to the user\n- "
							},
							{
								"kind": "code",
								"text": "`draft`"
							},
							{
								"kind": "text",
								"text": " promotion is currently being prepared"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13407,
						"name": "PromotionStatusValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13245,
					"name": "is_automatic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the promotion is applied automatically."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 61,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13246,
					"name": "application_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 66,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13434,
						"name": "ApplicationMethodDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13247,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 71,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13291,
							"name": "PromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13248,
					"name": "campaign_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 76,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13249,
					"name": "campaign",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13304,
						"name": "CampaignDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13241,
						13242,
						13243,
						13244,
						13245,
						13246,
						13247,
						13248,
						13249
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
					"line": 29,
					"character": 17
				}
			]
		},
		{
			"id": 13217,
			"name": "CreatePromotionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The promotion to be created."
					}
				]
			},
			"children": [
				{
					"id": 13218,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13219,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the promotion:\n\n- "
							},
							{
								"kind": "code",
								"text": "`standard`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is a standard one applied with conditions.\n- "
							},
							{
								"kind": "code",
								"text": "`buyget`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is a \"Buy X get Y\" promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13406,
						"name": "PromotionTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13220,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the promotion:\n\n- "
							},
							{
								"kind": "code",
								"text": "`draft`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is currently being prepared\n- "
							},
							{
								"kind": "code",
								"text": "`active`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is active\n- "
							},
							{
								"kind": "code",
								"text": "`inactive`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is no longer active"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 109,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13407,
						"name": "PromotionStatusValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13221,
					"name": "is_automatic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the promotion is applied automatically."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 114,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13222,
					"name": "application_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 119,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13408,
						"name": "CreateApplicationMethodDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13223,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rules of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 124,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13286,
							"name": "CreatePromotionRuleDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13224,
					"name": "campaign",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 129,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13297,
						"name": "CreateCampaignDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13225,
					"name": "campaign_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 134,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13218,
						13219,
						13220,
						13221,
						13222,
						13223,
						13224,
						13225
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
					"line": 87,
					"character": 17
				}
			]
		},
		{
			"id": 13250,
			"name": "UpdatePromotionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the promotion."
					}
				]
			},
			"children": [
				{
					"id": 13251,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 144,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13252,
					"name": "is_automatic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the promotion is applied automatically."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 149,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13253,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 154,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13254,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the promotion."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 159,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13406,
						"name": "PromotionTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13255,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the promotion:\n\n- "
							},
							{
								"kind": "code",
								"text": "`draft`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is currently being prepared\n- "
							},
							{
								"kind": "code",
								"text": "`active`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is active\n- "
							},
							{
								"kind": "code",
								"text": "`inactive`"
							},
							{
								"kind": "text",
								"text": " indicates that a promotion is no longer active"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 168,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13407,
						"name": "PromotionStatusValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13256,
					"name": "application_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated application method."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 173,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 13447,
								"name": "UpdateApplicationMethodDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "literal",
								"value": "id"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				},
				{
					"id": 13257,
					"name": "campaign_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 178,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13251,
						13252,
						13253,
						13254,
						13255,
						13256,
						13257
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
					"line": 140,
					"character": 17
				}
			]
		},
		{
			"id": 13258,
			"name": "FilterablePromotionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved promotions."
					}
				]
			},
			"children": [
				{
					"id": 13267,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13258,
									"name": "FilterablePromotionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13458,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13258,
											"name": "FilterablePromotionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13459,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 13268,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 13258,
									"name": "FilterablePromotionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 13458,
									"typeArguments": [
										{
											"type": "reference",
											"target": 13258,
											"name": "FilterablePromotionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 13460,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 13259,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the promotions by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 189,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13260,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter the promotions by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 194,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 13261,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter promotions by their code."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 199,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 13462,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 13262,
					"name": "budget_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter promotions by the ID of their associated campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 204,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 13462,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 13263,
					"name": "is_automatic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter promotions by whether they're applied automatically."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 209,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13264,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter promotions by their type."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 214,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13406,
							"name": "PromotionTypeValues",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13265,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter promotions by their status."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 219,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 13407,
							"name": "PromotionStatusValues",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 13266,
					"name": "campaign",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter promotions by their campaign"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
							"line": 224,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13331,
						"name": "FilterableCampaignProps",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13267,
						13268,
						13259,
						13260,
						13261,
						13262,
						13263,
						13264,
						13265,
						13266
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/common/promotion.ts",
					"line": 184,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 13458,
					"typeArguments": [
						{
							"type": "reference",
							"target": 13258,
							"name": "FilterablePromotionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 13493,
			"name": "CreateCampaignBudgetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The campaign budget to be created."
					}
				]
			},
			"children": [
				{
					"id": 13494,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13581,
						"name": "CampaignBudgetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13495,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The limit of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13496,
					"name": "used",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "How much is used of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13497,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 25,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13494,
						13495,
						13496,
						13497
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 13504,
			"name": "UpdateCampaignBudgetDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the campaign budget."
					}
				]
			},
			"children": [
				{
					"id": 13505,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13506,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 40,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13581,
						"name": "CampaignBudgetTypeValues",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13507,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The limit of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 45,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 13508,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The limit of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13509,
					"name": "used",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "How much is used of the campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13505,
						13506,
						13507,
						13508,
						13509
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
					"line": 31,
					"character": 17
				}
			]
		},
		{
			"id": 13297,
			"name": "CreateCampaignDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The campaign to be created."
					}
				]
			},
			"children": [
				{
					"id": 13298,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13299,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13300,
					"name": "campaign_identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The campaign identifier of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13301,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The start date of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 13302,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The end date of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 85,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 13303,
					"name": "budget",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated campaign budget."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 90,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 13493,
								"name": "CreateCampaignBudgetDTO",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13298,
						13299,
						13300,
						13301,
						13302,
						13303
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
					"line": 61,
					"character": 17
				}
			]
		},
		{
			"id": 13313,
			"name": "UpdateCampaignDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the campaign."
					}
				]
			},
			"children": [
				{
					"id": 13314,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 100,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13315,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 105,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13316,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 110,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 13317,
					"name": "campaign_identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The campaign identifier of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 115,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13318,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The start date of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 120,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 13319,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The end date of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 125,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 13320,
					"name": "budget",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The budget of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 130,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 13504,
								"name": "UpdateCampaignBudgetDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "literal",
								"value": "id"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13314,
						13315,
						13316,
						13317,
						13318,
						13319,
						13320
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
					"line": 96,
					"character": 17
				}
			]
		},
		{
			"id": 13337,
			"name": "AddPromotionsToCampaignDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13338,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 137,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13339,
					"name": "promotion_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Ids of promotions to add"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 142,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13338,
						13339
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
					"line": 133,
					"character": 17
				}
			]
		},
		{
			"id": 13340,
			"name": "RemovePromotionsFromCampaignDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13341,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the campaign."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 149,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13342,
					"name": "promotion_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Ids of promotions to add"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
							"line": 154,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13341,
						13342
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/promotion/mutations.ts",
					"line": 145,
					"character": 17
				}
			]
		},
		{
			"id": 13020,
			"name": "IPromotionModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Promotion Module."
					}
				]
			},
			"children": [
				{
					"id": 13021,
					"name": "registerUsage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 51,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L51"
						}
					],
					"signatures": [
						{
							"id": 13022,
							"name": "registerUsage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adjusts the budget for each campaign associated with the promotions' specified computed actions.\nIt adjusts the "
									},
									{
										"kind": "code",
										"text": "`used`"
									},
									{
										"kind": "text",
										"text": " property of a "
									},
									{
										"kind": "code",
										"text": "`CampaignBudget`"
									},
									{
										"kind": "text",
										"text": " to account for the adjustment amounts in the specified associated\ncomputed actions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the campaign budgets have been adjusted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.registerUsage([\n  {\n    amount: 50,\n    code: \"50OFF\",\n  },\n  {\n    amount: 5000,\n    code: \"FREESHIPPING\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L51"
								}
							],
							"parameters": [
								{
									"id": 13023,
									"name": "computedActions",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The computed actions to adjust their promotion's campaign budget."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13206,
											"name": "UsageComputedActions",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13024,
					"name": "revertUsage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 71,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L71"
						}
					],
					"signatures": [
						{
							"id": 13025,
							"name": "revertUsage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to revert the changes made by registerUsage action"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the campaign budgets have been adjusted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.revertUsage([\n  {\n    amount: 50,\n    code: \"50OFF\",\n  },\n  {\n    amount: 5000,\n    code: \"FREESHIPPING\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 71,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L71"
								}
							],
							"parameters": [
								{
									"id": 13026,
									"name": "computedActions",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The computed actions to adjust their promotion's campaign budget."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13206,
											"name": "UsageComputedActions",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13027,
					"name": "computeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 108,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L108"
						}
					],
					"signatures": [
						{
							"id": 13028,
							"name": "computeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method provides the actions to perform on a cart based on the specified promotions\nand context."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of computed actions to be applied on the cart."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst actions = await promotionModuleService.computeActions(\n  [\"50OFF\"],\n  {\n    items: [\n      {\n        id: \"cali_123\",\n        quantity: 2,\n        subtotal: 1000,\n      },\n    ],\n    shipping_methods: [\n      {\n        id: \"casm_123\",\n        subtotal: 0,\n        adjustments: [\n          {\n            id: \"adj_123\",\n            code: \"FREESHIPPING\",\n          },\n        ],\n      },\n    ],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 108,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L108"
								}
							],
							"parameters": [
								{
									"id": 13029,
									"name": "promotionCodesToApply",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion codes to be applied on the cart."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 13030,
									"name": "applicationContext",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The items and shipping methods of the cart."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13210,
										"name": "ComputeActionContext",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13031,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any relevant options that may change how the actions are computed."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13216,
											"name": "ComputeActions",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13032,
					"name": "createPromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 160,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L160"
						},
						{
							"fileName": "promotion/service.ts",
							"line": 211,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L211"
						}
					],
					"signatures": [
						{
							"id": 13033,
							"name": "createPromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates promotions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created promotions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst promotions = await promotionModuleService.createPromotions([\n  {\n    code: \"50OFF\",\n    type: \"standard\",\n    application_method: {\n      type: \"percentage\",\n      target_type: \"items\",\n      value: 50,\n    },\n  },\n  {\n    code: \"FREESHIPPING\",\n    type: \"standard\",\n    application_method: {\n      type: \"percentage\",\n      target_type: \"shipping_methods\",\n      value: 100,\n    },\n  },\n  {\n    code: \"BUY2GET1\",\n    type: \"buyget\",\n    application_method: {\n      type: \"fixed\",\n      target_type: \"items\",\n      buy_rules_min_quantity: 2,\n      apply_to_quantity: 1,\n      buy_rules: [\n        {\n          attribute: \"SKU\",\n          operator: \"eq\",\n          values: [\"SHIRT\"],\n        },\n      ],\n    },\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 160,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L160"
								}
							],
							"parameters": [
								{
									"id": 13034,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotions to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13217,
											"name": "CreatePromotionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 13035,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13240,
											"name": "PromotionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 13036,
							"name": "createPromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a promotion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created promotion."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst promotionA = await promotionModuleService.createPromotions({\n  code: \"50OFF\",\n  type: \"standard\",\n  application_method: {\n    type: \"percentage\",\n    target_type: \"items\",\n    value: 50,\n  },\n})\n\nconst promotionB = await promotionModuleService.createPromotions({\n  code: \"FREESHIPPING\",\n  type: \"standard\",\n  application_method: {\n    type: \"percentage\",\n    target_type: \"shipping_methods\",\n    value: 100,\n  },\n})\n\nconst promotionC = await promotionModuleService.createPromotions({\n  code: \"BUY2GET1\",\n  type: \"buyget\",\n  application_method: {\n    type: \"fixed\",\n    target_type: \"items\",\n    buy_rules_min_quantity: 2,\n    apply_to_quantity: 1,\n    buy_rules: [\n      {\n        attribute: \"SKU\",\n        operator: \"eq\",\n        values: [\"SHIRT\"],\n      },\n    ],\n  },\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 211,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L211"
								}
							],
							"parameters": [
								{
									"id": 13037,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13217,
										"name": "CreatePromotionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13038,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13240,
										"name": "PromotionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13039,
					"name": "updatePromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 231,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L231"
						},
						{
							"fileName": "promotion/service.ts",
							"line": 249,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L249"
						}
					],
					"signatures": [
						{
							"id": 13040,
							"name": "updatePromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing promotions."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated promotions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst promotions = await promotionModuleService.updatePromotions([\n  {\n    id: \"promo_123\",\n    is_automatic: true,\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 231,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L231"
								}
							],
							"parameters": [
								{
									"id": 13041,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the promotions."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13250,
											"name": "UpdatePromotionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 13042,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13240,
											"name": "PromotionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 13043,
							"name": "updatePromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing promotion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated promotion."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst promotion = await promotionModuleService.updatePromotions({\n  id: \"promo_123\",\n  is_automatic: true,\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 249,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L249"
								}
							],
							"parameters": [
								{
									"id": 13044,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the promotion."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13250,
										"name": "UpdatePromotionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13045,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13240,
										"name": "PromotionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13046,
					"name": "listPromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 300,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L300"
						}
					],
					"signatures": [
						{
							"id": 13047,
							"name": "listPromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of promotions based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of promotions."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of promotions using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotions = await promotionModuleService.listPromotions({\n  id: [\"promo_123\", \"promo_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the promotions:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotions = await promotionModuleService.listPromotions(\n  {\n    id: [\"promo_123\", \"promo_321\"],\n  },\n  {\n    relations: [\"application_method\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotions = await promotionModuleService.listPromotions(\n  {\n    id: [\"promo_123\", \"promo_321\"],\n  },\n  {\n    relations: [\"application_method\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 300,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L300"
								}
							],
							"parameters": [
								{
									"id": 13048,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved promotions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13258,
										"name": "FilterablePromotionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13049,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the promotion is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a promotion."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13269,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13240,
												"name": "PromotionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13050,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13240,
											"name": "PromotionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13051,
					"name": "listAndCountPromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 355,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L355"
						}
					],
					"signatures": [
						{
							"id": 13052,
							"name": "listAndCountPromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of promotions along with the total count of available promotions satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of promotions along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of promotions using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [promotions, count] =\n  await promotionModuleService.listAndCountPromotions({\n    id: [\"promo_123\", \"promo_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the promotions:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [promotions, count] =\n  await promotionModuleService.listAndCountPromotions(\n    {\n      id: [\"promo_123\", \"promo_321\"],\n    },\n    {\n      relations: [\"application_method\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [promotions, count] =\n  await promotionModuleService.listAndCountPromotions(\n    {\n      id: [\"promo_123\", \"promo_321\"],\n    },\n    {\n      relations: [\"application_method\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 355,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L355"
								}
							],
							"parameters": [
								{
									"id": 13053,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved promotions."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13258,
										"name": "FilterablePromotionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13054,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the promotion is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a promotion."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13269,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13240,
												"name": "PromotionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13055,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 13240,
													"name": "PromotionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13056,
					"name": "retrievePromotion",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 389,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L389"
						}
					],
					"signatures": [
						{
							"id": 13057,
							"name": "retrievePromotion",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a promotion by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved promotion."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a promotion by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotion =\n  await promotionModuleService.retrievePromotion(\"promo_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotion = await promotionModuleService.retrievePromotion(\n  \"promo_123\",\n  {\n    relations: [\"application_method\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 389,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L389"
								}
							],
							"parameters": [
								{
									"id": 13058,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the promotion."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13059,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the promotion is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a promotion."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13269,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13240,
												"name": "PromotionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13060,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13240,
										"name": "PromotionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13061,
					"name": "deletePromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 408,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L408"
						},
						{
							"fileName": "promotion/service.ts",
							"line": 420,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L420"
						}
					],
					"signatures": [
						{
							"id": 13062,
							"name": "deletePromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes promotions by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the promotions are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.deletePromotions([\n  \"promo_123\",\n  \"promo_321\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 408,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L408"
								}
							],
							"parameters": [
								{
									"id": 13063,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the promotion."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 13064,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 13065,
							"name": "deletePromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a promotion by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the promotion is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.deletePromotions(\"promo_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 420,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L420"
								}
							],
							"parameters": [
								{
									"id": 13066,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the promotion."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13067,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13068,
					"name": "softDeletePromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 437,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L437"
						}
					],
					"signatures": [
						{
							"id": 13069,
							"name": "softDeletePromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes a promotion by its IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated application method.\nThe object's keys are the ID attribute names of the promotion entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`application_method_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the promotion through this relation, such as the IDs of associated application method.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.softDeletePromotions(\"promo_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 437,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L437"
								}
							],
							"typeParameters": [
								{
									"id": 13070,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 13071,
									"name": "promotionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of promotions to soft delete."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 13072,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13280,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13070,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13073,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13074,
					"name": "restorePromotions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 460,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L460"
						}
					],
					"signatures": [
						{
							"id": 13075,
							"name": "restorePromotions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted promotions by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated application method.\nThe object's keys are the ID attribute names of the promotion entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`application_method_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the promotion through this relation,\nsuch as the IDs of associated application method.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.restorePromotions(\"promo_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 460,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L460"
								}
							],
							"typeParameters": [
								{
									"id": 13076,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 13077,
									"name": "promotionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotions' IDs."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 13078,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the promotion. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the promotion's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`application_method_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13283,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13076,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13079,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13080,
					"name": "addPromotionRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 487,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L487"
						}
					],
					"signatures": [
						{
							"id": 13081,
							"name": "addPromotionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds promotion rules to a promotion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The promotion rules created."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst promotionRules =\n  await promotionModuleService.addPromotionRules(\n    \"promo_123\",\n    [\n      {\n        attribute: \"customer_group_id\",\n        operator: \"in\",\n        values: [\"VIP\", \"VVIP\"],\n      },\n    ]\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 487,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L487"
								}
							],
							"parameters": [
								{
									"id": 13082,
									"name": "promotionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13083,
									"name": "rulesData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion rules to be created and added to the promotion."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13286,
											"name": "CreatePromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 13084,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13291,
											"name": "PromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13085,
					"name": "addPromotionTargetRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 514,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L514"
						}
					],
					"signatures": [
						{
							"id": 13086,
							"name": "addPromotionTargetRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds target promotion rules to a promotion's application method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created promotion rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst targetPromotionRules =\n  await promotionModuleService.addPromotionTargetRules(\n    \"promo_123\",\n    [\n      {\n        attribute: \"SKU\",\n        operator: \"eq\",\n        values: \"SHIRT\",\n      },\n    ]\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 514,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L514"
								}
							],
							"parameters": [
								{
									"id": 13087,
									"name": "promotionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13088,
									"name": "rulesData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion rules to be created and added as target rules to the promotion's application method."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13286,
											"name": "CreatePromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 13089,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13291,
											"name": "PromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13090,
					"name": "addPromotionBuyRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 541,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L541"
						}
					],
					"signatures": [
						{
							"id": 13091,
							"name": "addPromotionBuyRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adds buy promotion rules to a promotion's application method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created promotion rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst buyPromotionRules =\n  await promotionModuleService.addPromotionBuyRules(\n    \"promo_123\",\n    [\n      {\n        attribute: \"SKU\",\n        operator: \"eq\",\n        values: \"SHIRT\",\n      },\n    ]\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 541,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L541"
								}
							],
							"parameters": [
								{
									"id": 13092,
									"name": "promotionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13093,
									"name": "rulesData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion rules to be created and added as buy rules to the promotion's applicatio method."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13286,
											"name": "CreatePromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 13094,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13291,
											"name": "PromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13095,
					"name": "removePromotionRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 561,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L561"
						}
					],
					"signatures": [
						{
							"id": 13096,
							"name": "removePromotionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method removes promotion rules from a promotion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the promotion rules are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.removePromotionRules(\n  \"promo_123\",\n  [\"prorul_123\", \"prorul_321\"]\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 561,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L561"
								}
							],
							"parameters": [
								{
									"id": 13097,
									"name": "promotionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13098,
									"name": "ruleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion rules' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 13099,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13100,
					"name": "removePromotionTargetRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 581,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L581"
						}
					],
					"signatures": [
						{
							"id": 13101,
							"name": "removePromotionTargetRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method removes target promotion rules from a promotion's application method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the target promotion rules are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.removePromotionTargetRules(\n  \"promo_123\",\n  [\"prorul_123\", \"prorul_321\"]\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 581,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L581"
								}
							],
							"parameters": [
								{
									"id": 13102,
									"name": "promotionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13103,
									"name": "ruleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The target promotion rules' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 13104,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13105,
					"name": "removePromotionBuyRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 601,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L601"
						}
					],
					"signatures": [
						{
							"id": 13106,
							"name": "removePromotionBuyRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method removes buy promotion rules from a promotion's application method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the buy promotion rules are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.removePromotionBuyRules(\n  \"promo_123\",\n  [\"prorul_123\", \"prorul_321\"]\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 601,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L601"
								}
							],
							"parameters": [
								{
									"id": 13107,
									"name": "promotionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The promotion's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13108,
									"name": "ruleIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The buy promotion rules' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 13109,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13110,
					"name": "createCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 628,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L628"
						},
						{
							"fileName": "promotion/service.ts",
							"line": 655,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L655"
						}
					],
					"signatures": [
						{
							"id": 13111,
							"name": "createCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a campaign."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created campaign."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst campaign = await promotionModuleService.createCampaigns(\n  {\n    name: \"Summer discounts\",\n    campaign_identifier: \"G-123456\",\n    starts_at: new Date(\"2025-06-01\"),\n    ends_at: new Date(\"2025-09-01\"),\n    budget: {\n      type: \"usage\",\n      limit: 10,\n    },\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 628,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L628"
								}
							],
							"parameters": [
								{
									"id": 13112,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The campaign to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13297,
										"name": "CreateCampaignDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13113,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13304,
										"name": "CampaignDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 13114,
							"name": "createCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates campaigns."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created campaigns."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst campaigns =\n  await promotionModuleService.createCampaigns([\n    {\n      name: \"Summer discounts\",\n      campaign_identifier: \"G-123456\",\n      starts_at: new Date(\"2025-06-01\"),\n      ends_at: new Date(\"2025-09-01\"),\n      budget: {\n        type: \"usage\",\n        limit: 10,\n      },\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 655,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L655"
								}
							],
							"parameters": [
								{
									"id": 13115,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The campaigns to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13297,
											"name": "CreateCampaignDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 13116,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13304,
											"name": "CampaignDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13117,
					"name": "updateCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 676,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L676"
						},
						{
							"fileName": "promotion/service.ts",
							"line": 695,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L695"
						}
					],
					"signatures": [
						{
							"id": 13118,
							"name": "updateCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing campaigns."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated campaigns."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst campaigns =\n  await promotionModuleService.updateCampaigns([\n    {\n      id: \"procamp_123\",\n      name: \"Summer Sales\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 676,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L676"
								}
							],
							"parameters": [
								{
									"id": 13119,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the campaigns."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13313,
											"name": "UpdateCampaignDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 13120,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13304,
											"name": "CampaignDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 13121,
							"name": "updateCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing campaign."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated campaign."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst campaigns =\n  await promotionModuleService.updateCampaigns({\n    id: \"procamp_123\",\n    name: \"Summer Sales\",\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 695,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L695"
								}
							],
							"parameters": [
								{
									"id": 13122,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the campaign."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13313,
										"name": "UpdateCampaignDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13123,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13304,
										"name": "CampaignDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13124,
					"name": "listPromotionRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 749,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L749"
						}
					],
					"signatures": [
						{
							"id": 13125,
							"name": "listPromotionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of promotion rules based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of promotion rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of promotion rules using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotionRules =\n  await promotionModuleService.listPromotionRules({\n    id: [\"prorul_123\", \"prorul_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the promotion rules:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotionRules =\n  await promotionModuleService.listPromotionRules(\n    {\n      id: [\"prorul_123\", \"prorul_321\"],\n    },\n    {\n      relations: [\"promotions\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst promotionRules =\n  await promotionModuleService.listPromotionRules(\n    {\n      id: [\"prorul_123\", \"prorul_321\"],\n    },\n    {\n      relations: [\"promotions\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 749,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L749"
								}
							],
							"parameters": [
								{
									"id": 13126,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved promotion rules."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13321,
										"name": "FilterablePromotionRuleProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13127,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the promotion rule is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a promotion rule."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13269,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13291,
												"name": "PromotionRuleDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13128,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13291,
											"name": "PromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13129,
					"name": "updatePromotionRules",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 771,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L771"
						}
					],
					"signatures": [
						{
							"id": 13130,
							"name": "updatePromotionRules",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing promotion rules."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated promotion rules."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst promotionRules =\n  await promotionModuleService.updatePromotionRules([\n    {\n      id: \"prorul_123\",\n      description: \"Only allow VIP customers\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 771,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L771"
								}
							],
							"parameters": [
								{
									"id": 13131,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the promotion rules."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13325,
											"name": "UpdatePromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 13132,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13291,
											"name": "PromotionRuleDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13133,
					"name": "listCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 822,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L822"
						}
					],
					"signatures": [
						{
							"id": 13134,
							"name": "listCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of campaigns based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of campaigns."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of campaigns using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst campaigns = await promotionModuleService.listCampaigns({\n  id: [\"procamp_123\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the campaigns:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst campaigns = await promotionModuleService.listCampaigns(\n  {\n    id: [\"procamp_123\"],\n  },\n  {\n    relations: [\"promotions\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst campaigns = await promotionModuleService.listCampaigns(\n  {\n    id: [\"procamp_123\"],\n  },\n  {\n    relations: [\"promotions\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 822,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L822"
								}
							],
							"parameters": [
								{
									"id": 13135,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved campaigns."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13331,
										"name": "FilterableCampaignProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13136,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the campaign is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a campaign."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13269,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13304,
												"name": "CampaignDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13137,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13304,
											"name": "CampaignDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13138,
					"name": "listAndCountCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 877,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L877"
						}
					],
					"signatures": [
						{
							"id": 13139,
							"name": "listAndCountCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of campaigns along with the total count of available campaigns satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of campaigns along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of campaigns using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [campaigns, count] =\n  await promotionModuleService.listAndCountCampaigns({\n    id: [\"procamp_123\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the campaigns:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [campaigns, count] =\n  await promotionModuleService.listAndCountCampaigns(\n    {\n      id: [\"procamp_123\"],\n    },\n    {\n      relations: [\"promotions\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [campaigns, count] =\n  await promotionModuleService.listAndCountCampaigns(\n    {\n      id: [\"procamp_123\"],\n    },\n    {\n      relations: [\"promotions\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 877,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L877"
								}
							],
							"parameters": [
								{
									"id": 13140,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved campaigns."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13331,
										"name": "FilterableCampaignProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13141,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the campaign is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a campaign."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13269,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13304,
												"name": "CampaignDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13142,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 13304,
													"name": "CampaignDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13143,
					"name": "retrieveCampaign",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 912,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L912"
						}
					],
					"signatures": [
						{
							"id": 13144,
							"name": "retrieveCampaign",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a campaigns by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved campaigns."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a promotion by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst campaign =\n  await promotionModuleService.retrieveCampaign(\"procamp_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst campaign =\n  await promotionModuleService.retrieveCampaign(\n    \"procamp_123\",\n    {\n      relations: [\"promotions\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 912,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L912"
								}
							],
							"parameters": [
								{
									"id": 13145,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the campaigns."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13146,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the campaign is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a campaign."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13269,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13304,
												"name": "CampaignDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13147,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 13304,
										"name": "CampaignDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13148,
					"name": "deleteCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 928,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L928"
						},
						{
							"fileName": "promotion/service.ts",
							"line": 940,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L940"
						}
					],
					"signatures": [
						{
							"id": 13149,
							"name": "deleteCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes campaigns by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the campaigns are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.deleteCampaigns([\"procamp_123\"])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 928,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L928"
								}
							],
							"parameters": [
								{
									"id": 13150,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the campaigns."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 13151,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 13152,
							"name": "deleteCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a campaign by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the campaign is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.deleteCampaigns(\"procamp_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 940,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L940"
								}
							],
							"parameters": [
								{
									"id": 13153,
									"name": "ids",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the campaign."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 13154,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13155,
					"name": "softDeleteCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 962,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L962"
						}
					],
					"signatures": [
						{
							"id": 13156,
							"name": "softDeleteCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes campaigns by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated campaign budget.\nThe object's keys are the ID attribute names of the campaign entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`budget_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the campaign through this relation, such as the IDs of associated campaign budget.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.softDeleteCampaigns(\n  \"procamp_123\",\n  {\n    returnLinkableKeys: [\"budget_id\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 962,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L962"
								}
							],
							"typeParameters": [
								{
									"id": 13157,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 13158,
									"name": "campaignIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the campaigns."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 13159,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13280,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13157,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13160,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13161,
					"name": "restoreCampaigns",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 987,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L987"
						}
					],
					"signatures": [
						{
							"id": 13162,
							"name": "restoreCampaigns",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted campaigns by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated campaign budget.\nThe object's keys are the ID attribute names of the campaign entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`budget_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the campaign through this relation,\nsuch as the IDs of associated campaign budget.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait promotionModuleService.restoreCampaigns(\"procamp_123\", {\n  returnLinkableKeys: [\"budget_id\"],\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 987,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L987"
								}
							],
							"typeParameters": [
								{
									"id": 13163,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 13164,
									"name": "campaignIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the campaigns"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 13165,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the campaigns. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the campaign's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`budget_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13283,
										"typeArguments": [
											{
												"type": "reference",
												"target": 13163,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13166,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13167,
					"name": "addPromotionsToCampaign",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 993,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L993"
						}
					],
					"signatures": [
						{
							"id": 13168,
							"name": "addPromotionsToCampaign",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 993,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L993"
								}
							],
							"parameters": [
								{
									"id": 13169,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 13337,
										"name": "AddPromotionsToCampaignDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13170,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 13171,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 13172,
													"name": "ids",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "promotion/service.ts",
															"line": 996,
															"character": 15,
															"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L996"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														13172
													]
												}
											],
											"sources": [
												{
													"fileName": "promotion/service.ts",
													"line": 996,
													"character": 13,
													"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L996"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13173,
					"name": "removePromotionsFromCampaign",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "promotion/service.ts",
							"line": 998,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L998"
						}
					],
					"signatures": [
						{
							"id": 13174,
							"name": "removePromotionsFromCampaign",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "promotion/service.ts",
									"line": 998,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L998"
								}
							],
							"parameters": [
								{
									"id": 13175,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 13340,
										"name": "RemovePromotionsFromCampaignDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13176,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 13226,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 13177,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 13178,
													"name": "ids",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "promotion/service.ts",
															"line": 1001,
															"character": 15,
															"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L1001"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														13178
													]
												}
											],
											"sources": [
												{
													"fileName": "promotion/service.ts",
													"line": 1001,
													"character": 13,
													"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L1001"
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						13021,
						13024,
						13027,
						13032,
						13039,
						13046,
						13051,
						13056,
						13061,
						13068,
						13074,
						13080,
						13085,
						13090,
						13095,
						13100,
						13105,
						13110,
						13117,
						13124,
						13129,
						13133,
						13138,
						13143,
						13148,
						13155,
						13161,
						13167,
						13173
					]
				}
			],
			"sources": [
				{
					"fileName": "promotion/service.ts",
					"line": 30,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/e096af8b1b72b19e01f8d09cc50c7222d8459af1/packages/core/types/src/promotion/service.ts#L30"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 13192,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 13560,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13561,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 13562,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 13563,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 6,
									"character": 11
								}
							],
							"indexSignatures": [
								{
									"id": 13564,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
											"line": 6,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 13565,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 13566,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13561,
						13562,
						13566
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 13420,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13421,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 15,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13422,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 15,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 13423,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 13556,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 13556,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 13424,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 16,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13425,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 16,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 13426,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 13560,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 13556,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 13427,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 17,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13428,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 17,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 13429,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 18,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13430,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
									"line": 18,
									"character": 2
								}
							],
							"typeParameters": [
								{
									"id": 13431,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 13432,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 13567,
												"typeArguments": [
													{
														"type": "reference",
														"target": 13431,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 13567,
													"typeArguments": [
														{
															"type": "reference",
															"target": 13431,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 13433,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						13421,
						13424,
						13427,
						13429
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 13226,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 13227,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 13228,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13239,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 13229,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13239,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 13230,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13231,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 13232,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13233,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13234,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13420,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13235,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13236,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13237,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 13238,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "preventReleaseEvents"
							}
						]
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13227,
						13228,
						13229,
						13230,
						13231,
						13232,
						13233,
						13234,
						13235,
						13236,
						13237,
						13238
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/shared-context.ts",
					"line": 30,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 13239,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 13540,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 13541,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 13542,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 13535,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 13543,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 13544,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 8,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13545,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 13546,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 9,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 13547,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 9,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						13541,
						13542,
						13543
					]
				},
				{
					"title": "Methods",
					"children": [
						13544,
						13546
					]
				}
			],
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 13535,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 12,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13536,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 13537,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								13537
							]
						}
					],
					"sources": [
						{
							"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 12,
							"character": 32
						}
					],
					"indexSignatures": [
						{
							"id": 13538,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 14,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 13539,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 13368,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/Users/shahednasser/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 13535,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 13540,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				13269,
				13458,
				13280,
				13283,
				13582,
				13510,
				13192,
				13434,
				13408,
				13447,
				13498,
				13304,
				13331,
				13403,
				13382,
				13388,
				13393,
				13399,
				13548,
				13369,
				13376,
				13210,
				13490,
				13291,
				13286,
				13325,
				13321,
				13240,
				13217,
				13250,
				13258,
				13493,
				13504,
				13297,
				13313,
				13337,
				13340,
				13020,
				13560,
				13420,
				13226,
				13540
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				13484,
				13577,
				13579,
				13602,
				13640,
				13630,
				13462,
				13627,
				13609,
				13629,
				13621,
				13606,
				13611,
				13596,
				13556,
				13567,
				13586,
				13614,
				13529,
				13343,
				13525,
				13553,
				13554,
				13555,
				13581,
				13216,
				13206,
				13489,
				13406,
				13407,
				13535,
				13368
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"13019": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": ""
		},
		"13020": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService"
		},
		"13021": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.registerUsage"
		},
		"13022": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.registerUsage"
		},
		"13023": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "computedActions"
		},
		"13024": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.revertUsage"
		},
		"13025": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.revertUsage"
		},
		"13026": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "computedActions"
		},
		"13027": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.computeActions"
		},
		"13028": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.computeActions"
		},
		"13029": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionCodesToApply"
		},
		"13030": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "applicationContext"
		},
		"13031": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "options"
		},
		"13032": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createPromotions"
		},
		"13033": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createPromotions"
		},
		"13034": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"13035": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13036": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createPromotions"
		},
		"13037": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"13038": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13039": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updatePromotions"
		},
		"13040": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updatePromotions"
		},
		"13041": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"13042": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13043": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updatePromotions"
		},
		"13044": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"13045": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13046": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listPromotions"
		},
		"13047": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listPromotions"
		},
		"13048": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"13049": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"13050": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13051": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listAndCountPromotions"
		},
		"13052": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listAndCountPromotions"
		},
		"13053": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"13054": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"13055": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13056": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.retrievePromotion"
		},
		"13057": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.retrievePromotion"
		},
		"13058": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "id"
		},
		"13059": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"13060": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13061": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deletePromotions"
		},
		"13062": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deletePromotions"
		},
		"13063": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ids"
		},
		"13064": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13065": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deletePromotions"
		},
		"13066": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ids"
		},
		"13067": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13068": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.softDeletePromotions"
		},
		"13069": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.softDeletePromotions"
		},
		"13070": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"13071": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionIds"
		},
		"13072": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"13073": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13074": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.restorePromotions"
		},
		"13075": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.restorePromotions"
		},
		"13076": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"13077": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionIds"
		},
		"13078": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"13079": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13080": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionRules"
		},
		"13081": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionRules"
		},
		"13082": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"13083": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "rulesData"
		},
		"13084": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13085": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionTargetRules"
		},
		"13086": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionTargetRules"
		},
		"13087": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"13088": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "rulesData"
		},
		"13089": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13090": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionBuyRules"
		},
		"13091": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionBuyRules"
		},
		"13092": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"13093": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "rulesData"
		},
		"13094": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13095": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionRules"
		},
		"13096": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionRules"
		},
		"13097": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"13098": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ruleIds"
		},
		"13099": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13100": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionTargetRules"
		},
		"13101": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionTargetRules"
		},
		"13102": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"13103": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ruleIds"
		},
		"13104": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13105": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionBuyRules"
		},
		"13106": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionBuyRules"
		},
		"13107": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "promotionId"
		},
		"13108": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ruleIds"
		},
		"13109": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13110": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createCampaigns"
		},
		"13111": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createCampaigns"
		},
		"13112": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"13113": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13114": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.createCampaigns"
		},
		"13115": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"13116": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13117": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updateCampaigns"
		},
		"13118": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updateCampaigns"
		},
		"13119": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"13120": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13121": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updateCampaigns"
		},
		"13122": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"13123": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13124": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listPromotionRules"
		},
		"13125": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listPromotionRules"
		},
		"13126": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"13127": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"13128": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13129": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updatePromotionRules"
		},
		"13130": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.updatePromotionRules"
		},
		"13131": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"13132": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13133": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listCampaigns"
		},
		"13134": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listCampaigns"
		},
		"13135": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"13136": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"13137": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13138": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listAndCountCampaigns"
		},
		"13139": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.listAndCountCampaigns"
		},
		"13140": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "filters"
		},
		"13141": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"13142": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13143": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.retrieveCampaign"
		},
		"13144": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.retrieveCampaign"
		},
		"13145": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "id"
		},
		"13146": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"13147": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13148": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deleteCampaigns"
		},
		"13149": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deleteCampaigns"
		},
		"13150": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ids"
		},
		"13151": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13152": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.deleteCampaigns"
		},
		"13153": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "ids"
		},
		"13154": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13155": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.softDeleteCampaigns"
		},
		"13156": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.softDeleteCampaigns"
		},
		"13157": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"13158": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "campaignIds"
		},
		"13159": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"13160": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13161": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.restoreCampaigns"
		},
		"13162": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.restoreCampaigns"
		},
		"13163": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"13164": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "campaignIds"
		},
		"13165": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "config"
		},
		"13166": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13167": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionsToCampaign"
		},
		"13168": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.addPromotionsToCampaign"
		},
		"13169": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"13170": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13171": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "__type"
		},
		"13172": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "__type.ids"
		},
		"13173": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionsFromCampaign"
		},
		"13174": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "IPromotionModuleService.removePromotionsFromCampaign"
		},
		"13175": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "data"
		},
		"13176": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "sharedContext"
		},
		"13177": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "__type"
		},
		"13178": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/service.ts",
			"qualifiedName": "__type.ids"
		},
		"13192": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"13193": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"13194": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"13195": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__hooks"
		},
		"13196": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13197": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationStart"
		},
		"13198": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13199": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13200": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationShutdown"
		},
		"13201": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13202": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13203": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationPrepareShutdown"
		},
		"13204": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13205": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13206": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "UsageComputedActions"
		},
		"13207": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "__type"
		},
		"13208": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "__type.amount"
		},
		"13209": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "__type.code"
		},
		"13210": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionContext"
		},
		"13211": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionContext.currency_code"
		},
		"13212": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionContext.items"
		},
		"13213": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionContext.shipping_methods"
		},
		"13216": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActions"
		},
		"13217": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO"
		},
		"13218": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.code"
		},
		"13219": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.type"
		},
		"13220": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.status"
		},
		"13221": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.is_automatic"
		},
		"13222": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.application_method"
		},
		"13223": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.rules"
		},
		"13224": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.campaign"
		},
		"13225": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "CreatePromotionDTO.campaign_id"
		},
		"13226": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"13227": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"13228": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"13229": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"13230": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"13231": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"13232": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"13233": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"13234": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"13235": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"13236": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"13237": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"13238": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"13239": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"13240": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO"
		},
		"13241": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.id"
		},
		"13242": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.code"
		},
		"13243": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.type"
		},
		"13244": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.status"
		},
		"13245": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.is_automatic"
		},
		"13246": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.application_method"
		},
		"13247": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.rules"
		},
		"13248": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.campaign_id"
		},
		"13249": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionDTO.campaign"
		},
		"13250": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO"
		},
		"13251": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.id"
		},
		"13252": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.is_automatic"
		},
		"13253": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.code"
		},
		"13254": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.type"
		},
		"13255": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.status"
		},
		"13256": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.application_method"
		},
		"13257": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "UpdatePromotionDTO.campaign_id"
		},
		"13258": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps"
		},
		"13259": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.q"
		},
		"13260": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.id"
		},
		"13261": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.code"
		},
		"13262": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.budget_id"
		},
		"13263": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.is_automatic"
		},
		"13264": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.type"
		},
		"13265": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.status"
		},
		"13266": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "FilterablePromotionProps.campaign"
		},
		"13267": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"13268": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"13269": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"13270": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"13271": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"13272": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"13273": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"13274": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"13275": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"13276": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"13277": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"13278": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"13279": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"13280": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"13281": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"13282": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"13283": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"13284": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"13285": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"13286": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO"
		},
		"13287": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO.description"
		},
		"13288": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO.attribute"
		},
		"13289": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO.operator"
		},
		"13290": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "CreatePromotionRuleDTO.values"
		},
		"13291": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO"
		},
		"13292": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.id"
		},
		"13293": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.description"
		},
		"13294": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.attribute"
		},
		"13295": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.operator"
		},
		"13296": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleDTO.values"
		},
		"13297": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO"
		},
		"13298": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.name"
		},
		"13299": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.description"
		},
		"13300": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.campaign_identifier"
		},
		"13301": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.starts_at"
		},
		"13302": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.ends_at"
		},
		"13303": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignDTO.budget"
		},
		"13304": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO"
		},
		"13305": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.id"
		},
		"13306": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.name"
		},
		"13307": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.description"
		},
		"13308": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.campaign_identifier"
		},
		"13309": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.starts_at"
		},
		"13310": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.ends_at"
		},
		"13311": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.budget"
		},
		"13312": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "CampaignDTO.promotions"
		},
		"13313": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO"
		},
		"13314": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.id"
		},
		"13315": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.name"
		},
		"13316": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.description"
		},
		"13317": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.campaign_identifier"
		},
		"13318": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.starts_at"
		},
		"13319": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.ends_at"
		},
		"13320": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignDTO.budget"
		},
		"13321": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "FilterablePromotionRuleProps"
		},
		"13322": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "FilterablePromotionRuleProps.id"
		},
		"13323": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"13324": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"13325": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO"
		},
		"13326": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.id"
		},
		"13327": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.description"
		},
		"13328": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.attribute"
		},
		"13329": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.operator"
		},
		"13330": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "UpdatePromotionRuleDTO.values"
		},
		"13331": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "FilterableCampaignProps"
		},
		"13332": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "FilterableCampaignProps.q"
		},
		"13333": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "FilterableCampaignProps.id"
		},
		"13334": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign.ts",
			"qualifiedName": "FilterableCampaignProps.campaign_identifier"
		},
		"13335": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"13336": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"13337": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "AddPromotionsToCampaignDTO"
		},
		"13338": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "AddPromotionsToCampaignDTO.id"
		},
		"13339": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "AddPromotionsToCampaignDTO.promotion_ids"
		},
		"13340": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "RemovePromotionsFromCampaignDTO"
		},
		"13341": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "RemovePromotionsFromCampaignDTO.id"
		},
		"13342": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "RemovePromotionsFromCampaignDTO.promotion_ids"
		},
		"13343": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"13344": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13345": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"13346": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"13347": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"13348": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13349": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"13350": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"13351": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"13352": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13353": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"13354": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"13355": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"13356": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"13357": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"13358": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"13359": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"13360": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"13361": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"13362": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"13363": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"13364": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13365": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"13366": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"13367": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"13368": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"13369": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine"
		},
		"13370": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine.id"
		},
		"13371": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine.quantity"
		},
		"13372": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine.subtotal"
		},
		"13373": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionItemLine.adjustments"
		},
		"13376": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionShippingLine"
		},
		"13377": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionShippingLine.id"
		},
		"13378": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionShippingLine.subtotal"
		},
		"13379": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionShippingLine.adjustments"
		},
		"13382": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction"
		},
		"13383": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.action"
		},
		"13384": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.item_id"
		},
		"13385": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.amount"
		},
		"13386": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.code"
		},
		"13387": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddItemAdjustmentAction.description"
		},
		"13388": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction"
		},
		"13389": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction.action"
		},
		"13390": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction.adjustment_id"
		},
		"13391": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction.description"
		},
		"13392": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveItemAdjustmentAction.code"
		},
		"13393": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment"
		},
		"13394": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.action"
		},
		"13395": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.shipping_method_id"
		},
		"13396": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.amount"
		},
		"13397": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.code"
		},
		"13398": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "AddShippingMethodAdjustment.description"
		},
		"13399": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveShippingMethodAdjustment"
		},
		"13400": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveShippingMethodAdjustment.action"
		},
		"13401": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveShippingMethodAdjustment.adjustment_id"
		},
		"13402": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "RemoveShippingMethodAdjustment.code"
		},
		"13403": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "CampaignBudgetExceededAction"
		},
		"13404": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "CampaignBudgetExceededAction.action"
		},
		"13405": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "CampaignBudgetExceededAction.code"
		},
		"13406": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionTypeValues"
		},
		"13407": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion.ts",
			"qualifiedName": "PromotionStatusValues"
		},
		"13408": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO"
		},
		"13409": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.type"
		},
		"13410": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.target_type"
		},
		"13411": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.allocation"
		},
		"13412": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.value"
		},
		"13413": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.currency_code"
		},
		"13414": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.max_quantity"
		},
		"13415": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.buy_rules_min_quantity"
		},
		"13416": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.apply_to_quantity"
		},
		"13417": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.promotion"
		},
		"13418": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.target_rules"
		},
		"13419": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "CreateApplicationMethodDTO.buy_rules"
		},
		"13420": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"13421": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"13422": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"13423": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"13424": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"13425": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"13426": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"13427": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"13428": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"13429": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"13430": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"13431": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"13432": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"13433": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"13434": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO"
		},
		"13435": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.id"
		},
		"13436": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.type"
		},
		"13437": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.target_type"
		},
		"13438": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.allocation"
		},
		"13439": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.value"
		},
		"13440": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.currency_code"
		},
		"13441": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.max_quantity"
		},
		"13442": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.buy_rules_min_quantity"
		},
		"13443": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.apply_to_quantity"
		},
		"13444": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.promotion"
		},
		"13445": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.target_rules"
		},
		"13446": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodDTO.buy_rules"
		},
		"13447": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO"
		},
		"13448": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.id"
		},
		"13449": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.type"
		},
		"13450": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.target_type"
		},
		"13451": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.allocation"
		},
		"13452": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.value"
		},
		"13453": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.currency_code"
		},
		"13454": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.max_quantity"
		},
		"13455": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.buy_rules_min_quantity"
		},
		"13456": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.apply_to_quantity"
		},
		"13457": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "UpdateApplicationMethodDTO.promotion"
		},
		"13458": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"13459": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"13460": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"13461": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"13462": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"13463": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13464": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"13465": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"13466": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"13467": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"13468": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"13469": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"13470": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"13471": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"13472": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"13473": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"13474": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"13475": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"13476": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"13477": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"13478": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"13479": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"13480": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"13481": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"13482": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"13483": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13484": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfigOrder"
		},
		"13485": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"13486": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"13488": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"13489": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
			"qualifiedName": "PromotionRuleOperatorValues"
		},
		"13490": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "PromotionRuleValueDTO"
		},
		"13491": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "PromotionRuleValueDTO.id"
		},
		"13492": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule-value.ts",
			"qualifiedName": "PromotionRuleValueDTO.value"
		},
		"13493": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO"
		},
		"13494": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO.type"
		},
		"13495": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO.limit"
		},
		"13496": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO.used"
		},
		"13497": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "CreateCampaignBudgetDTO.currency_code"
		},
		"13498": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO"
		},
		"13499": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.id"
		},
		"13500": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.type"
		},
		"13501": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.limit"
		},
		"13502": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.used"
		},
		"13503": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetDTO.currency_code"
		},
		"13504": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO"
		},
		"13505": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.id"
		},
		"13506": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.type"
		},
		"13507": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.limit"
		},
		"13508": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.currency_code"
		},
		"13509": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/mutations.ts",
			"qualifiedName": "UpdateCampaignBudgetDTO.used"
		},
		"13510": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"13511": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"13512": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"13513": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"13514": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"13515": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"13516": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"13517": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"13518": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"13519": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"13520": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"13521": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"13522": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"13523": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"13524": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"13525": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"13526": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13527": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"13528": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.hasMany"
		},
		"13529": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"13530": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13531": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"13532": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"13533": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"13534": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"13535": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"13536": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"13537": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"13538": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"13540": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"13541": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"13542": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"13543": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"13544": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"13545": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"13546": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"13547": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"13548": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionAdjustmentLine"
		},
		"13549": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionAdjustmentLine.id"
		},
		"13550": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/compute-actions.ts",
			"qualifiedName": "ComputeActionAdjustmentLine.code"
		},
		"13553": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodTypeValues"
		},
		"13554": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodTargetTypeValues"
		},
		"13555": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/application-method.ts",
			"qualifiedName": "ApplicationMethodAllocationValues"
		},
		"13556": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"13557": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"13558": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"13559": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"13560": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"13561": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"13562": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"13563": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"13564": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"13566": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"13567": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"13568": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"13569": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"13570": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"13571": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"13572": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"13573": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"13574": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"13575": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"13576": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"13577": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"13578": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13579": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"13580": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13581": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
			"qualifiedName": "CampaignBudgetTypeValues"
		},
		"13582": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"13583": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"13584": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"13585": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"13586": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"13587": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"13588": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"13589": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"13590": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"13591": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"13592": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"13593": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"13594": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"13595": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"13596": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"13597": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"13598": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"13599": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"13600": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"13601": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"13602": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"13603": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13604": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"13605": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"13606": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"13607": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13608": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"13609": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"13610": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13611": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"13612": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"13613": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"13614": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"13615": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13616": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13617": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13618": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"13619": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"13620": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"13621": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQueryProperties"
		},
		"13622": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13623": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"13625": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13626": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"13627": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"13628": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13629": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"13630": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"13631": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13632": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"13633": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13634": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"13635": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13636": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"13637": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"13638": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"13639": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"13640": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"13641": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/promotion/service.ts"
		},
		"reflections": {
			"1": 13019
		}
	}
}
