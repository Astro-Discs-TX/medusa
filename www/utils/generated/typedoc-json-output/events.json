{
	"id": 0,
	"name": "events",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 1,
			"name": "CartWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Cart"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 4,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L4"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3,
							"name": "CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when a cart is created."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  id, // The ID of the cart\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "cart.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createCartWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"cart.created\""
						},
						{
							"id": 4,
							"name": "UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when a cart's details are updated."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  id, // The ID of the cart\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "cart.updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateLineItemInCartWorkflow, updateCartWorkflow, addToCartWorkflow, addShippingMethodToCartWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L26"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"cart.updated\""
						},
						{
							"id": 5,
							"name": "CUSTOMER_UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when the customer in the cart is updated."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  id, // The ID of the cart\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "cart.customer_updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateCartWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 37,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L37"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"cart.customer_updated\""
						},
						{
							"id": 6,
							"name": "REGION_UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when the cart's region is updated. This\nevent is emitted alongside the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "CartWorkflowEvents.UPDATED",
										"target": 4
									},
									{
										"kind": "text",
										"text": " event."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  id, // The ID of the cart\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "cart.region_updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateCartWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"cart.region_updated\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3,
								4,
								5,
								6
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 4,
							"character": 34,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L4"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 7,
			"name": "CustomerWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Cart"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 55,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L55"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 8,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 9,
							"name": "CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when a customer is created."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the customer\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "customer.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createCustomersWorkflow, createCustomerAccountWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 66,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L66"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"customer.created\""
						},
						{
							"id": 10,
							"name": "UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when a customer is updated."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the customer\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "customer.updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateCustomersWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 77,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L77"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"customer.updated\""
						},
						{
							"id": 11,
							"name": "DELETED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when a customer is deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the customer\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "customer.deleted"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "deleteCustomersWorkflow, removeCustomerAccountWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 88,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L88"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"customer.deleted\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								9,
								10,
								11
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 55,
							"character": 38,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L55"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 12,
			"name": "OrderWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Order"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 94,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L94"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 13,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 14,
							"name": "UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when the details of an order or draft order is updated. This\ndoesn't include updates made by an edit."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  id, // The ID of the order\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order.updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateOrderWorkflow, updateDraftOrderWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 106,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L106"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order.updated\""
						},
						{
							"id": 15,
							"name": "PLACED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when an order is placed, or when a draft order is converted to an\norder."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  id, // The ID of the order\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order.placed"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "completeCartWorkflow, convertDraftOrderWorkflow, processPaymentWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 119,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L119"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order.placed\""
						},
						{
							"id": 16,
							"name": "CANCELED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when an order is canceld."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  id, // The ID of the order\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order.canceled"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "cancelOrderWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 130,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L130"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order.canceled\""
						},
						{
							"id": 17,
							"name": "COMPLETED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when orders are completed."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the order\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order.completed"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "completeOrderWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 141,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L141"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order.completed\""
						},
						{
							"id": 18,
							"name": "ARCHIVED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when an order is archived."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the order\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order.archived"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "archiveOrderWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 152,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L152"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order.archived\""
						},
						{
							"id": 19,
							"name": "FULFILLMENT_CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when a fulfillment is created for an order."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  order_id, // The ID of the order\n  fulfillment_id, // The ID of the fulfillment\n  no_notification, // Whether to notify the customer\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order.fulfillment_created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createOrderFulfillmentWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 166,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L166"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order.fulfillment_created\""
						},
						{
							"id": 20,
							"name": "FULFILLMENT_CANCELED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when an order's fulfillment is canceled."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  order_id, // The ID of the order\n  fulfillment_id, // The ID of the fulfillment\n  no_notification, // Whether to notify the customer\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order.fulfillment_canceled"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "cancelOrderFulfillmentWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 179,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L179"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order.fulfillment_canceled\""
						},
						{
							"id": 21,
							"name": "RETURN_REQUESTED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when a return request is confirmed."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  order_id, // The ID of the order\n  return_id, // The ID of the return\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order.return_requested"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createAndCompleteReturnOrderWorkflow, confirmReturnRequestWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 192,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L192"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order.return_requested\""
						},
						{
							"id": 22,
							"name": "RETURN_RECEIVED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when a return is marked as received."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  order_id, // The ID of the order\n  return_id, // The ID of the return\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order.return_received"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createAndCompleteReturnOrderWorkflow, confirmReturnReceiveWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 204,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L204"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order.return_received\""
						},
						{
							"id": 23,
							"name": "CLAIM_CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when a claim is created for an order."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  order_id, // The ID of the order\n  claim_id, // The ID of the claim\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order.claim_created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "confirmClaimRequestWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 217,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L217"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order.claim_created\""
						},
						{
							"id": 24,
							"name": "EXCHANGE_CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when an exchange is created for an order."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  order_id, // The ID of the order\n  exchange_id, // The ID of the exchange\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order.exchange_created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "confirmExchangeRequestWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 229,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L229"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order.exchange_created\""
						},
						{
							"id": 25,
							"name": "TRANSFER_REQUESTED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when an order is requested to be transferred to\nanother customer."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  id, // The ID of the order\n  order_change_id, // The ID of the order change created for the transfer\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order.transfer_requested"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "requestOrderTransferWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 243,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L243"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order.transfer_requested\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								14,
								15,
								16,
								17,
								18,
								19,
								20,
								21,
								22,
								23,
								24,
								25
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 94,
							"character": 35,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L94"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 26,
			"name": "OrderEditWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Order"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 249,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L249"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 27,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 28,
							"name": "REQUESTED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when an order edit is requested."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  order_id, // The ID of the order\n  actions, // The actions to edit the order\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order-edit.requested"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "requestOrderEditRequestWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 261,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L261"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order-edit.requested\""
						},
						{
							"id": 29,
							"name": "CONFIRMED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when an order edit request is confirmed."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  order_id, // The ID of the order\n  actions, // The actions to edit the order\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order-edit.confirmed"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "confirmOrderEditRequestWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 273,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L273"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order-edit.confirmed\""
						},
						{
							"id": 30,
							"name": "CANCELED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when an order edit request is canceled."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  order_id, // The ID of the order\n  actions, // The actions to edit the order\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "order-edit.canceled"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "cancelBeginOrderEditWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 285,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L285"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"order-edit.canceled\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28,
								29,
								30
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 249,
							"character": 39,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L249"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 31,
			"name": "UserWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "User"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 291,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L291"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 32,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33,
							"name": "CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when users are created."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the user\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "user.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createUsersWorkflow, createUserAccountWorkflow, acceptInviteWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 302,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L302"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"user.created\""
						},
						{
							"id": 34,
							"name": "UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when users are updated."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the user\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "user.updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateUsersWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 313,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L313"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"user.updated\""
						},
						{
							"id": 35,
							"name": "DELETED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when users are deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the user\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "user.deleted"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "deleteUsersWorkflow, removeUserAccountWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 324,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L324"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"user.deleted\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33,
								34,
								35
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 291,
							"character": 34,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L291"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 36,
			"name": "AuthWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Auth"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 330,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L330"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 37,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 38,
							"name": "PASSWORD_RESET",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when a reset password token is generated. You can listen to this event\nto send a reset password email to the user or customer, for example."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  entity_id, // The identifier of the user or customer. For example, an email address.\n  actor_type, // The type of actor. For example, \"customer\", \"user\", or custom.\n  token, // The generated token.\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "auth.password_reset"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "generateResetPasswordTokenWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 344,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L344"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"auth.password_reset\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 330,
							"character": 34,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L330"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 39,
			"name": "SalesChannelWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Sales Channel"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 350,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L350"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 40,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 41,
							"name": "CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when sales channels are created."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the sales channel\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "sales-channel.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createSalesChannelsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 361,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L361"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sales-channel.created\""
						},
						{
							"id": 42,
							"name": "UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when sales channels are updated."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the sales channel\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "sales-channel.updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateSalesChannelsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 372,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L372"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sales-channel.updated\""
						},
						{
							"id": 43,
							"name": "DELETED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when sales channels are deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the sales channel\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "sales-channel.deleted"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "deleteSalesChannelsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 383,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L383"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"sales-channel.deleted\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41,
								42,
								43
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 350,
							"character": 42,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L350"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 44,
			"name": "ProductCategoryWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Product"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 389,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L389"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 45,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 46,
							"name": "CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product categories are created."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product category\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-category.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createProductCategoriesWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 400,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L400"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-category.created\""
						},
						{
							"id": 47,
							"name": "UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product categories are updated."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product category\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-category.updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateProductCategoriesWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 411,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L411"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-category.updated\""
						},
						{
							"id": 48,
							"name": "DELETED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product categories are deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product category\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-category.deleted"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "deleteProductCategoriesWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 422,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L422"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-category.deleted\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								46,
								47,
								48
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 389,
							"character": 45,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L389"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 49,
			"name": "ProductCollectionWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Product"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 428,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L428"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 50,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 51,
							"name": "CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product collections are created."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product collection\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-collection.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createCollectionsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 439,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L439"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-collection.created\""
						},
						{
							"id": 52,
							"name": "UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product collections are updated."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product collection\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-collection.updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateCollectionsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 450,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L450"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-collection.updated\""
						},
						{
							"id": 53,
							"name": "DELETED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product collections are deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product collection\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-collection.deleted"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "deleteCollectionsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 461,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L461"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-collection.deleted\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								51,
								52,
								53
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 428,
							"character": 47,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L428"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 54,
			"name": "ProductVariantWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Product"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 467,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L467"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 55,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 56,
							"name": "UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product variants are updated."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product variant\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-variant.updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateProductVariantsWorkflow, batchProductVariantsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 478,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L478"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-variant.updated\""
						},
						{
							"id": 57,
							"name": "CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product variants are created."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product variant\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-variant.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createProductVariantsWorkflow, createProductsWorkflow, batchProductVariantsWorkflow, batchProductsWorkflow, importProductsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 489,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L489"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-variant.created\""
						},
						{
							"id": 58,
							"name": "DELETED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product variants are deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product variant\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-variant.deleted"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "deleteProductVariantsWorkflow, batchProductVariantsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 500,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L500"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-variant.deleted\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								56,
								57,
								58
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 467,
							"character": 44,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L467"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 59,
			"name": "ProductWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Product"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 506,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L506"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 60,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 61,
							"name": "UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when products are updated."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product.updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateProductsWorkflow, batchProductsWorkflow, importProductsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 517,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L517"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product.updated\""
						},
						{
							"id": 62,
							"name": "CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when products are created."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createProductsWorkflow, batchProductsWorkflow, importProductsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 528,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L528"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product.created\""
						},
						{
							"id": 63,
							"name": "DELETED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when products are deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product.deleted"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "deleteProductsWorkflow, batchProductsWorkflow, importProductsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 539,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L539"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product.deleted\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								61,
								62,
								63
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 506,
							"character": 37,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L506"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 64,
			"name": "ProductTypeWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Product"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 545,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L545"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 65,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 66,
							"name": "UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product types are updated."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product type\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-type.updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateProductTypesWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 556,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L556"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-type.updated\""
						},
						{
							"id": 67,
							"name": "CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product types are created."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product type\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-type.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createProductTypesWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 567,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L567"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-type.created\""
						},
						{
							"id": 68,
							"name": "DELETED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product types are deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product type\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-type.deleted"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "deleteProductTypesWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 578,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L578"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-type.deleted\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								66,
								67,
								68
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 545,
							"character": 41,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L545"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 69,
			"name": "ProductTagWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Product"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 584,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L584"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 70,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 71,
							"name": "UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product tags are updated."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product tag\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-tag.updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateProductTagsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 595,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L595"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-tag.updated\""
						},
						{
							"id": 72,
							"name": "CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product tags are created."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product tag\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-tag.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createProductTagsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 606,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L606"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-tag.created\""
						},
						{
							"id": 73,
							"name": "DELETED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product tags are deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product tag\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-tag.deleted"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "deleteProductTagsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 617,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L617"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-tag.deleted\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								71,
								72,
								73
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 584,
							"character": 40,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L584"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 74,
			"name": "ProductOptionWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Product"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 623,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L623"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 75,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 76,
							"name": "UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product options are updated."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product option\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-option.updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateProductOptionsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 634,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L634"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-option.updated\""
						},
						{
							"id": 77,
							"name": "CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product options are created."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product option\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-option.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createProductOptionsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 645,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L645"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-option.created\""
						},
						{
							"id": 78,
							"name": "DELETED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when product options are deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the product option\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "product-option.deleted"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "deleteProductOptionsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 656,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L656"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"product-option.deleted\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								76,
								77,
								78
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 623,
							"character": 43,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L623"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 79,
			"name": "InviteWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "User"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 662,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L662"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 80,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 81,
							"name": "ACCEPTED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when an invite is accepted."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  id, // The ID of the invite\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "invite.accepted"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "acceptInviteWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 673,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L673"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"invite.accepted\""
						},
						{
							"id": 82,
							"name": "CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when invites are created. You can listen to this event\nto send an email to the invited users, for example."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the invite\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "invite.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createInvitesWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 685,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L685"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"invite.created\""
						},
						{
							"id": 83,
							"name": "DELETED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when invites are deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the invite\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "invite.deleted"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "deleteInvitesWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 696,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L696"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"invite.deleted\""
						},
						{
							"id": 84,
							"name": "RESENT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when invites should be resent because their token was\nrefreshed. You can listen to this event to send an email to the invited users,\nfor example."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the invite\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "invite.resent"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "refreshInviteTokensWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 709,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L709"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"invite.resent\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								81,
								82,
								83,
								84
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 662,
							"character": 36,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L662"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 85,
			"name": "RegionWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Region"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 715,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L715"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 86,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 87,
							"name": "UPDATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when regions are updated."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the region\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "region.updated"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "updateRegionsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 726,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L726"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"region.updated\""
						},
						{
							"id": 88,
							"name": "CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when regions are created."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the region\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "region.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createRegionsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 737,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L737"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"region.created\""
						},
						{
							"id": 89,
							"name": "DELETED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when regions are deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n[{\n  id, // The ID of the region\n}]\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "region.deleted"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "deleteRegionsWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 748,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L748"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"region.deleted\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								87,
								88,
								89
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 715,
							"character": 36,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L715"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 90,
			"name": "FulfillmentWorkflowEvents",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@category",
						"content": [
							{
								"kind": "text",
								"text": "Fulfillment"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "events.ts",
					"line": 754,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L754"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 91,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 92,
							"name": "SHIPMENT_CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when a shipment is created for an order."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  id, // the ID of the shipment\n  no_notification, // whether to notify the customer\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "shipment.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "createOrderShipmentWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 766,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L766"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"shipment.created\""
						},
						{
							"id": 93,
							"name": "DELIVERY_CREATED",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Emitted when a fulfillment is marked as delivered."
									}
								],
								"blockTags": [
									{
										"tag": "@eventPayload",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n{\n  id, // the ID of the fulfillment\n}\n```"
											}
										]
									},
									{
										"tag": "@eventName",
										"content": [
											{
												"kind": "code",
												"text": "delivery.created"
											}
										]
									},
									{
										"tag": "@workflows",
										"content": [
											{
												"kind": "text",
												"text": "markOrderFulfillmentAsDeliveredWorkflow"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "events.ts",
									"line": 777,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L777"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"delivery.created\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								92,
								93
							]
						}
					],
					"sources": [
						{
							"fileName": "events.ts",
							"line": 754,
							"character": 41,
							"url": "https://github.com/medusajs/medusa/blob/91f5ac91a9c14b0fdc7caf5830c6b54f94889414/packages/core/utils/src/core-flows/events.ts#L754"
						}
					]
				}
			},
			"defaultValue": "..."
		}
	],
	"groups": [
		{
			"title": "Variables",
			"children": [
				1,
				7,
				12,
				26,
				31,
				36,
				39,
				44,
				49,
				54,
				59,
				64,
				69,
				74,
				79,
				85,
				90
			]
		}
	],
	"categories": [
		{
			"title": "Auth",
			"children": [
				36
			]
		},
		{
			"title": "Cart",
			"children": [
				1,
				7
			]
		},
		{
			"title": "Fulfillment",
			"children": [
				90
			]
		},
		{
			"title": "Order",
			"children": [
				12,
				26
			]
		},
		{
			"title": "Product",
			"children": [
				44,
				49,
				54,
				59,
				64,
				69,
				74
			]
		},
		{
			"title": "Region",
			"children": [
				85
			]
		},
		{
			"title": "Sales Channel",
			"children": [
				39
			]
		},
		{
			"title": "User",
			"children": [
				31,
				79
			]
		}
	],
	"packageName": "@medusajs/utils",
	"symbolIdMap": {
		"0": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "CartWorkflowEvents"
		},
		"2": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"3": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CREATED"
		},
		"4": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.UPDATED"
		},
		"5": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CUSTOMER_UPDATED"
		},
		"6": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.REGION_UPDATED"
		},
		"7": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "CustomerWorkflowEvents"
		},
		"8": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"9": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CREATED"
		},
		"10": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.UPDATED"
		},
		"11": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.DELETED"
		},
		"12": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "OrderWorkflowEvents"
		},
		"13": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"14": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.UPDATED"
		},
		"15": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.PLACED"
		},
		"16": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CANCELED"
		},
		"17": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.COMPLETED"
		},
		"18": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.ARCHIVED"
		},
		"19": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.FULFILLMENT_CREATED"
		},
		"20": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.FULFILLMENT_CANCELED"
		},
		"21": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.RETURN_REQUESTED"
		},
		"22": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.RETURN_RECEIVED"
		},
		"23": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CLAIM_CREATED"
		},
		"24": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.EXCHANGE_CREATED"
		},
		"25": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.TRANSFER_REQUESTED"
		},
		"26": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "OrderEditWorkflowEvents"
		},
		"27": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"28": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.REQUESTED"
		},
		"29": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CONFIRMED"
		},
		"30": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CANCELED"
		},
		"31": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "UserWorkflowEvents"
		},
		"32": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"33": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CREATED"
		},
		"34": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.UPDATED"
		},
		"35": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.DELETED"
		},
		"36": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "AuthWorkflowEvents"
		},
		"37": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"38": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.PASSWORD_RESET"
		},
		"39": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "SalesChannelWorkflowEvents"
		},
		"40": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"41": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CREATED"
		},
		"42": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.UPDATED"
		},
		"43": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.DELETED"
		},
		"44": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "ProductCategoryWorkflowEvents"
		},
		"45": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"46": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CREATED"
		},
		"47": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.UPDATED"
		},
		"48": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.DELETED"
		},
		"49": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "ProductCollectionWorkflowEvents"
		},
		"50": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"51": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CREATED"
		},
		"52": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.UPDATED"
		},
		"53": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.DELETED"
		},
		"54": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "ProductVariantWorkflowEvents"
		},
		"55": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"56": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.UPDATED"
		},
		"57": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CREATED"
		},
		"58": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.DELETED"
		},
		"59": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "ProductWorkflowEvents"
		},
		"60": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"61": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.UPDATED"
		},
		"62": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CREATED"
		},
		"63": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.DELETED"
		},
		"64": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "ProductTypeWorkflowEvents"
		},
		"65": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"66": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.UPDATED"
		},
		"67": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CREATED"
		},
		"68": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.DELETED"
		},
		"69": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "ProductTagWorkflowEvents"
		},
		"70": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"71": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.UPDATED"
		},
		"72": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CREATED"
		},
		"73": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.DELETED"
		},
		"74": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "ProductOptionWorkflowEvents"
		},
		"75": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"76": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.UPDATED"
		},
		"77": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CREATED"
		},
		"78": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.DELETED"
		},
		"79": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "InviteWorkflowEvents"
		},
		"80": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"81": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.ACCEPTED"
		},
		"82": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CREATED"
		},
		"83": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.DELETED"
		},
		"84": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.RESENT"
		},
		"85": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "RegionWorkflowEvents"
		},
		"86": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"87": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.UPDATED"
		},
		"88": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.CREATED"
		},
		"89": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.DELETED"
		},
		"90": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "FulfillmentWorkflowEvents"
		},
		"91": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object"
		},
		"92": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.SHIPMENT_CREATED"
		},
		"93": {
			"sourceFileName": "../../../../packages/core/utils/src/core-flows/events.ts",
			"qualifiedName": "__object.DELIVERY_CREATED"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/utils/src/core-flows/events.ts"
		},
		"reflections": {
			"1": 0
		}
	}
}
