{
	"id": 9567,
	"name": "product",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 9974,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 9975,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 9986,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 9976,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9977,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9978,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 9979,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 9980,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 9981,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 9982,
											"name": "K",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 9983,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9984,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 9985,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9975,
						9976,
						9977,
						9978,
						9979,
						9983,
						9984,
						9985
					]
				}
			],
			"typeParameters": [
				{
					"id": 9986,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 10425,
			"name": "MetadataType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 10440,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 10441,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10443,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10443,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 10442,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10443,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10443,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10441,
						10442
					]
				}
			],
			"typeParameters": [
				{
					"id": 10443,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10031,
					"name": "FilterableProductProps"
				},
				{
					"type": "reference",
					"target": 10147,
					"name": "FilterableProductTagProps"
				},
				{
					"type": "reference",
					"target": 10167,
					"name": "FilterableProductTypeProps"
				},
				{
					"type": "reference",
					"target": 10193,
					"name": "FilterableProductOptionProps"
				},
				{
					"type": "reference",
					"target": 10239,
					"name": "FilterableProductVariantProps"
				},
				{
					"type": "reference",
					"target": 10312,
					"name": "FilterableProductCollectionProps"
				},
				{
					"type": "reference",
					"target": 10353,
					"name": "FilterableProductCategoryProps"
				}
			]
		},
		{
			"id": 10136,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 10137,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10138,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10137
					]
				}
			],
			"typeParameters": [
				{
					"id": 10138,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 10139,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 10140,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10141,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10140
					]
				}
			],
			"typeParameters": [
				{
					"id": 10141,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 10522,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 10523,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 10523,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 10523,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 10547,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 10551,
						"typeArguments": [
							{
								"type": "reference",
								"target": 10523,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 10557,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10523,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 10524,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 10525,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 10525,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 10525,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 10525,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 10547,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 10548,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10549,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 10550,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										10549
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 10575,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 10576,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 10576,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 10576,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 10576,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 10565,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 10574,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 10574,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 10566,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 10567,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									10567
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 10575,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 10574,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 10568,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10569,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10569
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 10575,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 10574,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 10570,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 10571,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											10571
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 10575,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 10574,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 10572,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 10573,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												10573
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 10575,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 10444,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 10465,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 10445,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 10446,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10522,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10465,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 10447,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10522,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10465,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 10448,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 10524,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10465,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10524,
											"typeArguments": [
												{
													"type": "reference",
													"target": 10465,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 10449,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 10524,
								"typeArguments": [
									{
										"type": "reference",
										"target": 10465,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 10450,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10524,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10465,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 10451,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10524,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10465,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 10452,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 10522,
								"typeArguments": [
									{
										"type": "reference",
										"target": 10465,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 10453,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 10524,
								"typeArguments": [
									{
										"type": "reference",
										"target": 10465,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 10454,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 10524,
								"typeArguments": [
									{
										"type": "reference",
										"target": 10465,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 10455,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 10524,
								"typeArguments": [
									{
										"type": "reference",
										"target": 10465,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 10456,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 10524,
								"typeArguments": [
									{
										"type": "reference",
										"target": 10465,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 10457,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10458,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10459,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10460,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10461,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 10462,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 10463,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 10464,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								10446,
								10447,
								10448,
								10449,
								10450,
								10451,
								10452,
								10453,
								10454,
								10455,
								10456,
								10457,
								10458,
								10459,
								10460,
								10461,
								10462,
								10463,
								10464
							]
						}
					]
				}
			}
		},
		{
			"id": 10563,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 10564,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 10564,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 10524,
						"typeArguments": [
							{
								"type": "reference",
								"target": 10564,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 10565,
						"typeArguments": [
							{
								"type": "reference",
								"target": 10564,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 10557,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 10558,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 10444,
						"typeArguments": [
							{
								"type": "reference",
								"target": 10563,
								"typeArguments": [
									{
										"type": "reference",
										"target": 10558,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 10563,
						"typeArguments": [
							{
								"type": "reference",
								"target": 10558,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10563,
							"typeArguments": [
								{
									"type": "reference",
									"target": 10558,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 10562,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 10551,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 10555,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 10556,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 10556,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "mapped",
					"parameter": "Key",
					"parameterType": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 10555,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"templateType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 10555,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "boolean"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "bigint"
								},
								{
									"type": "intrinsic",
									"name": "symbol"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Date"
									},
									"name": "Date",
									"package": "typescript"
								}
							]
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 10555,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": 10444,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 10555,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "OperatorMap",
									"package": "@medusajs/types"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 10555,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "inferred",
								"name": "U"
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "U"
									},
									"name": "U",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 10552,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"indexSignatures": [
											{
												"id": 10553,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"parameters": [
													{
														"id": 10554,
														"name": "x",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"type": {
													"type": "inferred",
													"name": "V"
												}
											}
										]
									}
								},
								"trueType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "V"
										},
										"name": "V",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "object"
									},
									"trueType": {
										"type": "reference",
										"target": 10551,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "V"
														},
														"name": "V",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Partial",
												"package": "typescript"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 10556,
													"name": "Prev",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 10562,
													"name": "PrevLimit",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "FilterQuery",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					},
					"optionalModifier": "+"
				}
			}
		},
		{
			"id": 10559,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 10560,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10561,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10561
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 10541,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 10546,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 10542,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 10543,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10544,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 10559,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 10545,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 10546,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								10543,
								10544,
								10545
							]
						}
					]
				}
			}
		},
		{
			"id": 10502,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 10505,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 10541,
						"typeArguments": [
							{
								"type": "reference",
								"target": 10505,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 10503,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10504,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10504
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 10512,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 10521,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 10513,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 10514,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10515,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 10521,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 10516,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10517,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10518,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10519,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 10520,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								10514,
								10515,
								10516,
								10517,
								10518,
								10519,
								10520
							]
						}
					]
				}
			}
		},
		{
			"id": 10532,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 10533,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 10534,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10535,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10536,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10537,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 10538,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 10539,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 10540,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								10534,
								10535,
								10536,
								10537,
								10538,
								10539,
								10540
							]
						}
					]
				}
			}
		},
		{
			"id": 10529,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 10530,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10531,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10530,
						10531
					]
				}
			]
		},
		{
			"id": 10479,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 10480,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10481,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 10529,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10529,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 10482,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 10483,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 10484,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 10485,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														10484,
														10485
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10486,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10487,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10532,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10488,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 10489,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 10490,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 10491,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 10532,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											10490,
											10491
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 10492,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10480,
						10481,
						10482,
						10486,
						10487,
						10488,
						10492
					]
				}
			]
		},
		{
			"id": 10496,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 10497,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10498,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 10499,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10500,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 10501,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10498,
										10499,
										10500,
										10501
									]
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 10393,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 10479,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 10394,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10395,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10396,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10493,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 10397,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 10398,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 10399,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 10400,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 10401,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 10402,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 10403,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 10404,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							10402,
																							10403,
																							10404
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 10405,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 10493,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															10399,
															10400,
															10405
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 10406,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10407,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10408,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 10409,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 10410,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 10411,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 10412,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 10413,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 10414,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 10415,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 10416,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 10496,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														10414,
														10415,
														10416
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10395,
										10396,
										10397,
										10406,
										10407,
										10408,
										10409,
										10410,
										10411,
										10412
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 10493,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 10532,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 10494,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10495,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10495
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 9960,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"extendedBy": [
				{
					"type": "reference",
					"target": 9568,
					"name": "IProductModuleService"
				}
			]
		},
		{
			"id": 10417,
			"name": "ProductStatus",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "draft"
					},
					{
						"type": "literal",
						"value": "proposed"
					},
					{
						"type": "literal",
						"value": "published"
					},
					{
						"type": "literal",
						"value": "rejected"
					}
				]
			}
		},
		{
			"id": 9987,
			"name": "ProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product's data."
					}
				]
			},
			"children": [
				{
					"id": 9988,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9989,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9990,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 9991,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9992,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9993,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9994,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10417,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 9995,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 9996,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9997,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9998,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 9999,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10000,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10001,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10002,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10003,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10004,
					"name": "collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product collection."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10303,
								"name": "ProductCollectionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 10005,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product collection id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10006,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product categories."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10337,
									"name": "ProductCategoryDTO",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 10007,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10160,
								"name": "ProductTypeDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 10008,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product type id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10009,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product tags."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10142,
							"name": "ProductTagDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10010,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product variants."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10213,
							"name": "ProductVariantDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10011,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product options."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10183,
							"name": "ProductOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10012,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product images."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10418,
							"name": "ProductImageDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10013,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10014,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product in an external system. This is useful if you're integrating the product with a third-party service and want to maintain\na reference to the ID in the integrated service."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10015,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10016,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10017,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10018,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						9988,
						9989,
						9990,
						9991,
						9992,
						9993,
						9994,
						9995,
						9996,
						9997,
						9998,
						9999,
						10000,
						10001,
						10002,
						10003,
						10004,
						10005,
						10006,
						10007,
						10008,
						10009,
						10010,
						10011,
						10012,
						10013,
						10014,
						10015,
						10016,
						10017,
						10018
					]
				}
			]
		},
		{
			"id": 10213,
			"name": "ProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product variant's data."
					}
				]
			},
			"children": [
				{
					"id": 10214,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10215,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10216,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10217,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10218,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10219,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10220,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10221,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10222,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's requires shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10223,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10224,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10225,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10226,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10227,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10228,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10229,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10230,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10231,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product options."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10470,
							"name": "ProductOptionValueDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10232,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10233,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9987,
								"name": "ProductDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 10234,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10235,
					"name": "variant_rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "he ranking of the variant among other variants associated with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10236,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10237,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10238,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10214,
						10215,
						10216,
						10217,
						10218,
						10219,
						10220,
						10221,
						10222,
						10223,
						10224,
						10225,
						10226,
						10227,
						10228,
						10229,
						10230,
						10231,
						10232,
						10233,
						10234,
						10235,
						10236,
						10237,
						10238
					]
				}
			]
		},
		{
			"id": 10337,
			"name": "ProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product category's data."
					}
				]
			},
			"children": [
				{
					"id": 10338,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10339,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10340,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10341,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category. The handle can be used to create slug URL paths."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10342,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10343,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10344,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the product category among sibling categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10345,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the product category among sibling categories."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10346,
					"name": "parent_category",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated parent category."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10337,
								"name": "ProductCategoryDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 10347,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated parent category id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10348,
					"name": "category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated child categories."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10337,
							"name": "ProductCategoryDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10349,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated products."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9987,
							"name": "ProductDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10350,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product category was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10351,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product category was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10352,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product category was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10338,
						10339,
						10340,
						10341,
						10342,
						10343,
						10344,
						10345,
						10346,
						10347,
						10348,
						10349,
						10350,
						10351,
						10352
					]
				}
			]
		},
		{
			"id": 10365,
			"name": "CreateProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product category to create."
					}
				]
			},
			"children": [
				{
					"id": 10366,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10367,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10368,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's handle."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10369,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10370,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10371,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the category among sibling categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10372,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category, if it has any."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10373,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10366,
						10367,
						10368,
						10369,
						10370,
						10371,
						10372,
						10373
					]
				}
			]
		},
		{
			"id": 10374,
			"name": "UpsertProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product category."
					}
				]
			},
			"children": [
				{
					"id": 10375,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product category to update. If not provided, the product category is created. In this case, the "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10376,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10385,
						"name": "UpdateProductCategoryDTO.name"
					}
				},
				{
					"id": 10377,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10386,
						"name": "UpdateProductCategoryDTO.description"
					}
				},
				{
					"id": 10378,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10387,
						"name": "UpdateProductCategoryDTO.handle"
					}
				},
				{
					"id": 10379,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10388,
						"name": "UpdateProductCategoryDTO.is_active"
					}
				},
				{
					"id": 10380,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10389,
						"name": "UpdateProductCategoryDTO.is_internal"
					}
				},
				{
					"id": 10381,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the category among sibling categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10390,
						"name": "UpdateProductCategoryDTO.rank"
					}
				},
				{
					"id": 10382,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category, if it has any."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10391,
						"name": "UpdateProductCategoryDTO.parent_category_id"
					}
				},
				{
					"id": 10383,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10392,
						"name": "UpdateProductCategoryDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10375,
						10376,
						10377,
						10378,
						10379,
						10380,
						10381,
						10382,
						10383
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10384,
					"name": "UpdateProductCategoryDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10384,
			"name": "UpdateProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product category."
					}
				]
			},
			"children": [
				{
					"id": 10385,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10386,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product category's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10387,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10388,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10389,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10390,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the category among sibling categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10391,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category, if it has any."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10392,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10385,
						10386,
						10387,
						10388,
						10389,
						10390,
						10391,
						10392
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10374,
					"name": "UpsertProductCategoryDTO"
				}
			]
		},
		{
			"id": 10142,
			"name": "ProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product tag's data."
					}
				]
			},
			"children": [
				{
					"id": 10143,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10144,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10145,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10146,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated products."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9987,
							"name": "ProductDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10143,
						10144,
						10145,
						10146
					]
				}
			]
		},
		{
			"id": 10303,
			"name": "ProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product collection's data."
					}
				]
			},
			"children": [
				{
					"id": 10304,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10305,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10306,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product collection. The handle can be used to create slug URL paths."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10307,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10308,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product collection was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10309,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product collection was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10310,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product collection was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10311,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated products."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 9987,
							"name": "ProductDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10304,
						10305,
						10306,
						10307,
						10308,
						10309,
						10310,
						10311
					]
				}
			]
		},
		{
			"id": 10160,
			"name": "ProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product type's data."
					}
				]
			},
			"children": [
				{
					"id": 10161,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10162,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10163,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10164,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product type was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10165,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product type was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10166,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product type was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10161,
						10162,
						10163,
						10164,
						10165,
						10166
					]
				}
			]
		},
		{
			"id": 10183,
			"name": "ProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product option's data."
					}
				]
			},
			"children": [
				{
					"id": 10184,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10185,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10186,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 9987,
								"name": "ProductDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 10187,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10188,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option values."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10470,
							"name": "ProductOptionValueDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10189,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10190,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10191,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10192,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10184,
						10185,
						10186,
						10187,
						10188,
						10189,
						10190,
						10191,
						10192
					]
				}
			]
		},
		{
			"id": 10418,
			"name": "ProductImageDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product image's data."
					}
				]
			},
			"children": [
				{
					"id": 10419,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10420,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10421,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10422,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product image was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10423,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product image was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10424,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product image was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10419,
						10420,
						10421,
						10422,
						10423,
						10424
					]
				}
			]
		},
		{
			"id": 10470,
			"name": "ProductOptionValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product option value's data."
					}
				]
			},
			"children": [
				{
					"id": 10471,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10472,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product option value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10473,
					"name": "option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option. It may only be available if the "
							},
							{
								"kind": "code",
								"text": "`option`"
							},
							{
								"kind": "text",
								"text": " relation is expanded."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 10183,
								"name": "ProductOptionDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 10474,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option id."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10475,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10476,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option value was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10477,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option value was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 10478,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option value was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10471,
						10472,
						10473,
						10474,
						10475,
						10476,
						10477,
						10478
					]
				}
			]
		},
		{
			"id": 10031,
			"name": "FilterableProductProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved products."
					}
				]
			},
			"children": [
				{
					"id": 10057,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10031,
									"name": "FilterableProductProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10031,
											"name": "FilterableProductProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10441,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10058,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10031,
									"name": "FilterableProductProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10031,
											"name": "FilterableProductProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10442,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10032,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the products' attributes, such as titles and descriptions, using this search term."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10033,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status to filter products by"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 10417,
								"name": "ProductStatus",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 10417,
									"name": "ProductStatus",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 10034,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The titles to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10035,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handles to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10036,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10037,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters only or excluding gift card products"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10038,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters on a product's tags."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 10039,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10040,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Filter a product by the IDs of their associated tags."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10040
									]
								}
							]
						}
					}
				},
				{
					"id": 10041,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters on a product's variant properties."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 10042,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 10043,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 10044,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 10045,
													"name": "value",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 10046,
													"name": "option_id",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														10045,
														10046
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										10043
									]
								}
							]
						}
					}
				},
				{
					"id": 10047,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter a product by the ID of the associated type"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10048,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter a product by the IDs of their associated categories."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 10049,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 10050,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 10444,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "OperatorMap",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												10050
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 10051,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 10052,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 10444,
												"typeArguments": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "OperatorMap",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												10052
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 10053,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters a product by its associated collections."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 10444,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 10054,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters a product based on when it was created"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10444,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10055,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters a product based on when it was updated"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10444,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10056,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters soft-deleted products based on the date they were deleted at."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10444,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10057,
						10058,
						10032,
						10033,
						10034,
						10035,
						10036,
						10037,
						10038,
						10041,
						10047,
						10048,
						10053,
						10054,
						10055,
						10056
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10440,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10031,
							"name": "FilterableProductProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10147,
			"name": "FilterableProductTagProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product tags."
					}
				]
			},
			"children": [
				{
					"id": 10151,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10147,
									"name": "FilterableProductTagProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10147,
											"name": "FilterableProductTagProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10441,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10152,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10147,
									"name": "FilterableProductTagProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10147,
											"name": "FilterableProductTagProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10442,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10148,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the tags' values."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10149,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10150,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10151,
						10152,
						10148,
						10149,
						10150
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10440,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10147,
							"name": "FilterableProductTagProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10167,
			"name": "FilterableProductTypeProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product types."
					}
				]
			},
			"children": [
				{
					"id": 10171,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10167,
									"name": "FilterableProductTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10167,
											"name": "FilterableProductTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10441,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10172,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10167,
									"name": "FilterableProductTypeProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10167,
											"name": "FilterableProductTypeProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10442,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10168,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the types' values."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10169,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10170,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to filter product types by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10171,
						10172,
						10168,
						10169,
						10170
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10440,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10167,
							"name": "FilterableProductTypeProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10193,
			"name": "FilterableProductOptionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product options."
					}
				]
			},
			"children": [
				{
					"id": 10198,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10193,
									"name": "FilterableProductOptionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10193,
											"name": "FilterableProductOptionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10441,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10199,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10193,
									"name": "FilterableProductOptionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10193,
											"name": "FilterableProductOptionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10442,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10194,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the options' titles."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10195,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product options by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10196,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The titles to filter product options by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10197,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the product options by their associated products' IDs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10198,
						10199,
						10194,
						10195,
						10196,
						10197
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10440,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10193,
							"name": "FilterableProductOptionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10312,
			"name": "FilterableProductCollectionProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product collections."
					}
				]
			},
			"children": [
				{
					"id": 10317,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10312,
									"name": "FilterableProductCollectionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10312,
											"name": "FilterableProductCollectionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10441,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10318,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10312,
									"name": "FilterableProductCollectionProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10312,
											"name": "FilterableProductCollectionProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10442,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10313,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the collections' titles."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10314,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product collections by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10315,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handles to filter product collections by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10316,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title to filter product collections by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10317,
						10318,
						10313,
						10314,
						10315,
						10316
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10440,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10312,
							"name": "FilterableProductCollectionProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10239,
			"name": "FilterableProductVariantProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product variants."
					}
				]
			},
			"children": [
				{
					"id": 10245,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10239,
									"name": "FilterableProductVariantProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10239,
											"name": "FilterableProductVariantProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10441,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10246,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10239,
									"name": "FilterableProductVariantProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10239,
											"name": "FilterableProductVariantProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10442,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10240,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search through the title and different code attributes on the variant"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10241,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10242,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKUs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10243,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the product variants by their associated products' IDs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10244,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by their associated options."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10245,
						10246,
						10240,
						10241,
						10242,
						10243,
						10244
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10440,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10239,
							"name": "FilterableProductVariantProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10353,
			"name": "FilterableProductCategoryProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved product categories."
					}
				]
			},
			"children": [
				{
					"id": 10363,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10353,
									"name": "FilterableProductCategoryProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10353,
											"name": "FilterableProductCategoryProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10441,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 10364,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 10353,
									"name": "FilterableProductCategoryProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 10440,
									"typeArguments": [
										{
											"type": "reference",
											"target": 10353,
											"name": "FilterableProductCategoryProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10442,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 10354,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories based on searchable fields"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10355,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter product categories by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10356,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The names to filter product categories by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10357,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by their parent category's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10358,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handles to filter product categories by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 10359,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10360,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're internal."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10361,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include children of retrieved product categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10362,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include parents of retrieved product categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10363,
						10364,
						10354,
						10355,
						10356,
						10357,
						10358,
						10359,
						10360,
						10361,
						10362
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10440,
					"typeArguments": [
						{
							"type": "reference",
							"target": 10353,
							"name": "FilterableProductCategoryProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10319,
			"name": "CreateProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product collection to create."
					}
				]
			},
			"children": [
				{
					"id": 10320,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10321,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection's handle. If not provided, the value of this attribute is set to the slug version of the title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10322,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products to associate with the collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10323,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10320,
						10321,
						10322,
						10323
					]
				}
			]
		},
		{
			"id": 10324,
			"name": "UpsertProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product collection to create or update."
					}
				]
			},
			"children": [
				{
					"id": 10325,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product collection to update. If not provided,\nthe product collection is created. In this case, the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " property is\nrequired."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10326,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10332,
						"name": "UpdateProductCollectionDTO.value"
					}
				},
				{
					"id": 10327,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10333,
						"name": "UpdateProductCollectionDTO.title"
					}
				},
				{
					"id": 10328,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10334,
						"name": "UpdateProductCollectionDTO.handle"
					}
				},
				{
					"id": 10329,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to associate with the product collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10335,
						"name": "UpdateProductCollectionDTO.product_ids"
					}
				},
				{
					"id": 10330,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10336,
						"name": "UpdateProductCollectionDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10325,
						10326,
						10327,
						10328,
						10329,
						10330
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10331,
					"name": "UpdateProductCollectionDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10331,
			"name": "UpdateProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product collection. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product collection to update."
					}
				]
			},
			"children": [
				{
					"id": 10332,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10333,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10334,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10335,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to associate with the product collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10336,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10332,
						10333,
						10334,
						10335,
						10336
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10324,
					"name": "UpsertProductCollectionDTO"
				}
			]
		},
		{
			"id": 10173,
			"name": "CreateProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product type to create."
					}
				]
			},
			"children": [
				{
					"id": 10174,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type's value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10175,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10174,
						10175
					]
				}
			]
		},
		{
			"id": 10176,
			"name": "UpsertProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product type to create or update"
					}
				]
			},
			"children": [
				{
					"id": 10177,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type's ID. If provided, the product\ntag is updated. Otheriwse, it's created.\nIn that case, the "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10178,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new value of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10181,
						"name": "UpdateProductTypeDTO.value"
					}
				},
				{
					"id": 10179,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10182,
						"name": "UpdateProductTypeDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10177,
						10178,
						10179
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10180,
					"name": "UpdateProductTypeDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10180,
			"name": "UpdateProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product type. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product type to update."
					}
				]
			},
			"children": [
				{
					"id": 10181,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new value of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10182,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10181,
						10182
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10176,
					"name": "UpsertProductTypeDTO"
				}
			]
		},
		{
			"id": 10466,
			"name": "UpsertProductImageDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product image to create or update."
					}
				]
			},
			"children": [
				{
					"id": 10467,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product image's ID. If not provided, the image is created. In\nthat case, the "
							},
							{
								"kind": "code",
								"text": "`url`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10468,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new URL of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10527,
						"name": "UpdateProductImageDTO.url"
					}
				},
				{
					"id": 10469,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10528,
						"name": "UpdateProductImageDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10467,
						10468,
						10469
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10526,
					"name": "UpdateProductImageDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10526,
			"name": "UpdateProductImageDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product image. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product image to update."
					}
				]
			},
			"children": [
				{
					"id": 10527,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new URL of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10528,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10527,
						10528
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10466,
					"name": "UpsertProductImageDTO"
				}
			]
		},
		{
			"id": 10153,
			"name": "CreateProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product tag to create."
					}
				]
			},
			"children": [
				{
					"id": 10154,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10154
					]
				}
			]
		},
		{
			"id": 10155,
			"name": "UpsertProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product tag to create or update."
					}
				]
			},
			"children": [
				{
					"id": 10156,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product tag to update. If not provided, the tag\nis created. In that case, the "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10157,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10159,
						"name": "UpdateProductTagDTO.value"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10156,
						10157
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10158,
					"name": "UpdateProductTagDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10158,
			"name": "UpdateProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product tag. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product tag to update."
					}
				]
			},
			"children": [
				{
					"id": 10159,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10159
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10155,
					"name": "UpsertProductTagDTO"
				}
			]
		},
		{
			"id": 10200,
			"name": "CreateProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product option to create."
					}
				]
			},
			"children": [
				{
					"id": 10201,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10202,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10203,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10201,
						10202,
						10203
					]
				}
			]
		},
		{
			"id": 10204,
			"name": "UpsertProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product option to create or update."
					}
				]
			},
			"children": [
				{
					"id": 10205,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option to update. If not provided, the product\noption is created. In that case, the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": " properties are\nrequired."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10206,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10210,
						"name": "UpdateProductOptionDTO.title"
					}
				},
				{
					"id": 10207,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10211,
						"name": "UpdateProductOptionDTO.values"
					}
				},
				{
					"id": 10208,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10212,
						"name": "UpdateProductOptionDTO.product_id"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10205,
						10206,
						10207,
						10208
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10209,
					"name": "UpdateProductOptionDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10209,
			"name": "UpdateProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 10210,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10211,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10212,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10210,
						10211,
						10212
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10204,
					"name": "UpsertProductOptionDTO"
				}
			]
		},
		{
			"id": 10247,
			"name": "CreateProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product variant to create."
					}
				]
			},
			"children": [
				{
					"id": 10248,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10249,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10250,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10251,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10252,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10253,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10254,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10255,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10256,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10257,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10258,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10259,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10260,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10261,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10262,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10263,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10264,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options of the variant. Each key is an option's title, and value\nis an option's value. If an option with the specified title doesn't exist,\na new one is created."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n`{ Color: \"Blue\" }`\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10265,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10248,
						10249,
						10250,
						10251,
						10252,
						10253,
						10254,
						10255,
						10256,
						10257,
						10258,
						10259,
						10260,
						10261,
						10262,
						10263,
						10264,
						10265
					]
				}
			]
		},
		{
			"id": 10266,
			"name": "UpsertProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product variant to create or update."
					}
				]
			},
			"children": [
				{
					"id": 10267,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10268,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10286,
						"name": "UpdateProductVariantDTO.title"
					}
				},
				{
					"id": 10269,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10287,
						"name": "UpdateProductVariantDTO.sku"
					}
				},
				{
					"id": 10270,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10288,
						"name": "UpdateProductVariantDTO.barcode"
					}
				},
				{
					"id": 10271,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10289,
						"name": "UpdateProductVariantDTO.ean"
					}
				},
				{
					"id": 10272,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10290,
						"name": "UpdateProductVariantDTO.upc"
					}
				},
				{
					"id": 10273,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10291,
						"name": "UpdateProductVariantDTO.allow_backorder"
					}
				},
				{
					"id": 10274,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10292,
						"name": "UpdateProductVariantDTO.manage_inventory"
					}
				},
				{
					"id": 10275,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10293,
						"name": "UpdateProductVariantDTO.hs_code"
					}
				},
				{
					"id": 10276,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10294,
						"name": "UpdateProductVariantDTO.origin_country"
					}
				},
				{
					"id": 10277,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10295,
						"name": "UpdateProductVariantDTO.mid_code"
					}
				},
				{
					"id": 10278,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10296,
						"name": "UpdateProductVariantDTO.material"
					}
				},
				{
					"id": 10279,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10297,
						"name": "UpdateProductVariantDTO.weight"
					}
				},
				{
					"id": 10280,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10298,
						"name": "UpdateProductVariantDTO.length"
					}
				},
				{
					"id": 10281,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10299,
						"name": "UpdateProductVariantDTO.height"
					}
				},
				{
					"id": 10282,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10300,
						"name": "UpdateProductVariantDTO.width"
					}
				},
				{
					"id": 10283,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variant options to associate with the product variant."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10301,
						"name": "UpdateProductVariantDTO.options"
					}
				},
				{
					"id": 10284,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10302,
						"name": "UpdateProductVariantDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10267,
						10268,
						10269,
						10270,
						10271,
						10272,
						10273,
						10274,
						10275,
						10276,
						10277,
						10278,
						10279,
						10280,
						10281,
						10282,
						10283,
						10284
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10285,
					"name": "UpdateProductVariantDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10285,
			"name": "UpdateProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product variant. The "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " is used to identify which product variant to update."
					}
				]
			},
			"children": [
				{
					"id": 10286,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10287,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10288,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10289,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10290,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10291,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10292,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10293,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10294,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10295,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10296,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10297,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10298,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10299,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10300,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10301,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variant options to associate with the product variant."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 10302,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10286,
						10287,
						10288,
						10289,
						10290,
						10291,
						10292,
						10293,
						10294,
						10295,
						10296,
						10297,
						10298,
						10299,
						10300,
						10301,
						10302
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10266,
					"name": "UpsertProductVariantDTO"
				}
			]
		},
		{
			"id": 10059,
			"name": "CreateProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product to create."
					}
				]
			},
			"children": [
				{
					"id": 10060,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optionally pass an ID when creating a product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10061,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10062,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10063,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10064,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10065,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10066,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10067,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths.\nIf not supplied, the value of the "
							},
							{
								"kind": "code",
								"text": "`handle`"
							},
							{
								"kind": "text",
								"text": " attribute of the product is set to the slug version of the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10068,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10417,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10069,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated images to created or updated."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10466,
							"name": "UpsertProductImageDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10070,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type id to associate with the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10071,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection to associate with the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10072,
					"name": "tag_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tags to be associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10073,
					"name": "category_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product categories to associate with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10074,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product options to be created and associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10200,
							"name": "CreateProductOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10075,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variants to be created and associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10247,
							"name": "CreateProductVariantDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10076,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10077,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10078,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10079,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 10080,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10081,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10082,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10083,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10084,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10060,
						10061,
						10062,
						10063,
						10064,
						10065,
						10066,
						10067,
						10068,
						10069,
						10070,
						10071,
						10072,
						10073,
						10074,
						10075,
						10076,
						10077,
						10078,
						10079,
						10080,
						10081,
						10082,
						10083,
						10084
					]
				}
			]
		},
		{
			"id": 10085,
			"name": "UpsertProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product to be created or updated."
					}
				]
			},
			"children": [
				{
					"id": 10086,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product to update. If not provided, a product\nis created instead. In that case, the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10087,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10112,
						"name": "UpdateProductDTO.title"
					}
				},
				{
					"id": 10088,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10113,
						"name": "UpdateProductDTO.subtitle"
					}
				},
				{
					"id": 10089,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10114,
						"name": "UpdateProductDTO.description"
					}
				},
				{
					"id": 10090,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10115,
						"name": "UpdateProductDTO.is_giftcard"
					}
				},
				{
					"id": 10091,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10116,
						"name": "UpdateProductDTO.discountable"
					}
				},
				{
					"id": 10092,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10117,
						"name": "UpdateProductDTO.thumbnail"
					}
				},
				{
					"id": 10093,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths.\nIf not supplied, the value of the "
							},
							{
								"kind": "code",
								"text": "`handle`"
							},
							{
								"kind": "text",
								"text": " attribute of the product is set to the slug version of the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10118,
						"name": "UpdateProductDTO.handle"
					}
				},
				{
					"id": 10094,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10417,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10119,
						"name": "UpdateProductDTO.status"
					}
				},
				{
					"id": 10095,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated images to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10466,
							"name": "UpsertProductImageDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10120,
						"name": "UpdateProductDTO.images"
					}
				},
				{
					"id": 10096,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type to associate with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10121,
						"name": "UpdateProductDTO.type_id"
					}
				},
				{
					"id": 10097,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection to associate with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10122,
						"name": "UpdateProductDTO.collection_id"
					}
				},
				{
					"id": 10098,
					"name": "tag_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tags to associate with the product"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10123,
						"name": "UpdateProductDTO.tag_ids"
					}
				},
				{
					"id": 10099,
					"name": "category_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product categories to associate with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10124,
						"name": "UpdateProductDTO.category_ids"
					}
				},
				{
					"id": 10100,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated options to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10204,
							"name": "UpsertProductOptionDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10125,
						"name": "UpdateProductDTO.options"
					}
				},
				{
					"id": 10101,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variants to be created and associated with the product.\nYou can also update existing product variants associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10266,
							"name": "UpsertProductVariantDTO",
							"package": "@medusajs/types"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10126,
						"name": "UpdateProductDTO.variants"
					}
				},
				{
					"id": 10102,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10127,
						"name": "UpdateProductDTO.width"
					}
				},
				{
					"id": 10103,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10128,
						"name": "UpdateProductDTO.height"
					}
				},
				{
					"id": 10104,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10129,
						"name": "UpdateProductDTO.length"
					}
				},
				{
					"id": 10105,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10130,
						"name": "UpdateProductDTO.weight"
					}
				},
				{
					"id": 10106,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10131,
						"name": "UpdateProductDTO.origin_country"
					}
				},
				{
					"id": 10107,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10132,
						"name": "UpdateProductDTO.hs_code"
					}
				},
				{
					"id": 10108,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10133,
						"name": "UpdateProductDTO.material"
					}
				},
				{
					"id": 10109,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10134,
						"name": "UpdateProductDTO.mid_code"
					}
				},
				{
					"id": 10110,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 10135,
						"name": "UpdateProductDTO.metadata"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10086,
						10087,
						10088,
						10089,
						10090,
						10091,
						10092,
						10093,
						10094,
						10095,
						10096,
						10097,
						10098,
						10099,
						10100,
						10101,
						10102,
						10103,
						10104,
						10105,
						10106,
						10107,
						10108,
						10109,
						10110
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 10111,
					"name": "UpdateProductDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10111,
			"name": "UpdateProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in a product."
					}
				]
			},
			"children": [
				{
					"id": 10112,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10113,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10114,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10115,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10116,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10117,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10118,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths.\nIf not supplied, the value of the "
							},
							{
								"kind": "code",
								"text": "`handle`"
							},
							{
								"kind": "text",
								"text": " attribute of the product is set to the slug version of the "
							},
							{
								"kind": "code",
								"text": "`title`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10119,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10417,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10120,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated images to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10466,
							"name": "UpsertProductImageDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10121,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product type to associate with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10122,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collection to associate with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10123,
					"name": "tag_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tags to associate with the product"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10124,
					"name": "category_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product categories to associate with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10125,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated options to create or update."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10204,
							"name": "UpsertProductOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10126,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product variants to be created and associated with the product.\nYou can also update existing product variants associated with the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 10266,
							"name": "UpsertProductVariantDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 10127,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10128,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10129,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10130,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 10131,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10132,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10133,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10134,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 10135,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10425,
						"name": "MetadataType",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10112,
						10113,
						10114,
						10115,
						10116,
						10117,
						10118,
						10119,
						10120,
						10121,
						10122,
						10123,
						10124,
						10125,
						10126,
						10127,
						10128,
						10129,
						10130,
						10131,
						10132,
						10133,
						10134,
						10135
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 10085,
					"name": "UpsertProductDTO"
				}
			]
		},
		{
			"id": 9568,
			"name": "IProductModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Product Module."
					}
				]
			},
			"children": [
				{
					"id": 9569,
					"name": "retrieveProduct",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9570,
							"name": "retrieveProduct",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product by its ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.retrieveProduct(\"prod_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.retrieveProduct(\"prod_123\", {\n  relations: [\"categories\"],\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9571,
									"name": "productId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9572,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9987,
												"name": "ProductDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9573,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9987,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9574,
					"name": "listProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9575,
							"name": "listProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of products based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of products using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.listProducts({\n  id: [\"prod_123\", \"prod_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.listProducts(\n  {\n    id: [\"prod_123\", \"prod_321\"],\n  },\n  {\n    relations: [\"categories\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.listProducts(\n  {\n    id: [\"prod_123\", \"prod_321\"],\n  },\n  {\n    relations: [\"categories\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9576,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved products."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10031,
										"name": "FilterableProductProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9577,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the products are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9987,
												"name": "ProductDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9578,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9987,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9579,
					"name": "listAndCountProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9580,
							"name": "listAndCountProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of products along with the total count of available products satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of products along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of products using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [products, count] =\n  await productModuleService.listAndCountProducts({\n    id: [\"prod_123\", \"prod_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the products:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [products, count] =\n  await productModuleService.listAndCountProducts(\n    {\n      id: [\"prod_123\", \"prod_321\"],\n    },\n    {\n      relations: [\"categories\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [products, count] =\n  await productModuleService.listAndCountProducts(\n    {\n      id: [\"prod_123\", \"prod_321\"],\n    },\n    {\n      relations: [\"categories\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9581,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved products."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10031,
										"name": "FilterableProductProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9582,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the products are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9987,
												"name": "ProductDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9583,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 9987,
													"name": "ProductDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9584,
					"name": "createProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9585,
							"name": "createProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a list of products."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.createProducts([\n  {\n    title: \"Shirt\",\n  },\n  {\n    title: \"Pants\",\n    handle: \"pants\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9586,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The products to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10059,
											"name": "CreateProductDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9587,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9987,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9588,
							"name": "createProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.createProducts({\n  title: \"Shirt\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9589,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10059,
										"name": "CreateProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9590,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9987,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9591,
					"name": "upsertProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9592,
							"name": "upsertProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing products, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.upsertProducts([\n  {\n    id: \"prod_123\",\n    handle: \"pant\",\n  },\n  {\n    title: \"Shirt\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9593,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each product."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10085,
											"name": "UpsertProductDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9594,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9987,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9595,
							"name": "upsertProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates the product if it exists, or creates a new ones if it doesn't."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.upsertProducts({\n  title: \"Shirt\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9596,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the new product."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10085,
										"name": "UpsertProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9597,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9987,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9598,
					"name": "updateProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9599,
							"name": "updateProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a product."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated product."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst product = await productModuleService.updateProducts(\n  \"prod_123\",\n  {\n    handle: \"pant\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9600,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9601,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the product to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10111,
										"name": "UpdateProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9602,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 9987,
										"name": "ProductDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9603,
							"name": "updateProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of products matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated products."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst products = await productModuleService.updateProducts(\n  {\n    title: \"Pant\",\n  },\n  {\n    handle: \"pant\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9604,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which products to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10031,
										"name": "FilterableProductProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9605,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected products"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10111,
										"name": "UpdateProductDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9606,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 9987,
											"name": "ProductDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9607,
					"name": "deleteProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9608,
							"name": "deleteProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete products. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method, this method will completely remove the products and they can no longer be accessed or retrieved."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the products are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProducts([\"prod_123\", \"prod_321\"])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9609,
									"name": "productIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the products to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9610,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9611,
					"name": "softDeleteProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9612,
							"name": "softDeleteProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete products. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the product. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted products can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of associated product variants. The object's keys are the ID attribute names of the product entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated with the product through this relation, such as the IDs of associated product variants.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProducts([\n  \"prod_123\",\n  \"prod_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9613,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9614,
									"name": "productIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the products to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9615,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the products. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the product's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10136,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9613,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9616,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9617,
					"name": "restoreProducts",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9618,
							"name": "restoreProducts",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore products which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated product variants. The object's keys are the ID attribute names of the product entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of the record associated with the product through this relation, such as the IDs of associated product variants.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProducts([\"prod_123\", \"prod_321\"])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9619,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9620,
									"name": "productIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the products to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9621,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the products. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the product's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`variant_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10139,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9619,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9622,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9623,
					"name": "retrieveProductTag",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9624,
							"name": "retrieveProductTag",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a tag by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product tag."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product tag by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tag = await productModuleService.retrieveProductTag(\"ptag_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tag = await productModuleService.retrieveProductTag(\n  \"ptag_123\",\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9625,
									"name": "tagId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the tag to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9626,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product tag is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10142,
												"name": "ProductTagDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9627,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10142,
										"name": "ProductTagDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9628,
					"name": "listProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9629,
							"name": "listProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of tags based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product tags using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tags = await productModuleService.listProductTags({\n  id: [\"ptag_123\", \"ptag_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product tags:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tags = await productModuleService.listProductTags(\n  {\n    id: [\"ptag_123\", \"ptag_321\"],\n  },\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst tags = await productModuleService.listProductTags(\n  {\n    id: [\"ptag_123\", \"ptag_321\"],\n  },\n  {\n    relations: [\"products\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9630,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product tags."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10147,
										"name": "FilterableProductTagProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9631,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product tags are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10142,
												"name": "ProductTagDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9632,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10142,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9633,
					"name": "listAndCountProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9634,
							"name": "listAndCountProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product tags along with the total count of available product tags satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product tags along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product tags using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [tags, count] =\n  await productModuleService.listAndCountProductTags({\n    id: [\"ptag_123\", \"ptag_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product tags:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [tags, count] =\n  await productModuleService.listAndCountProductTags(\n    {\n      id: [\"ptag_123\", \"ptag_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [tags, count] =\n  await productModuleService.listAndCountProductTags(\n    {\n      id: [\"ptag_123\", \"ptag_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9635,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product tags."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10147,
										"name": "FilterableProductTagProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9636,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product tags are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10142,
												"name": "ProductTagDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9637,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 10142,
													"name": "ProductTagDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9638,
					"name": "createProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9639,
							"name": "createProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product tag."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTags = await productModuleService.createProductTags([\n  {\n    value: \"digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9640,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product tags to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10153,
											"name": "CreateProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9641,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10142,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9642,
							"name": "createProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product tag."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product tag."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTag = await productModuleService.createProductTags({\n  value: \"digital\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9643,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product tag to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10153,
										"name": "CreateProductTagDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9644,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10142,
										"name": "ProductTagDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9645,
					"name": "upsertProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9646,
							"name": "upsertProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing tags, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTags = await productModuleService.upsertProductTags([\n  {\n    id: \"ptag_123\",\n    metadata: {\n      test: true,\n    },\n  },\n  {\n    value: \"Digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9647,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each tag."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10155,
											"name": "UpsertProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9648,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10142,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9649,
							"name": "upsertProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing tag, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created tag."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTag = await productModuleService.upsertProductTags({\n  id: \"ptag_123\",\n  metadata: {\n    test: true,\n  },\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9650,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the tag."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10155,
										"name": "UpsertProductTagDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9651,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10142,
										"name": "ProductTagDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9652,
					"name": "updateProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9653,
							"name": "updateProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a tag."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tag."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTag = await productModuleService.updateProductTags(\n  \"ptag_123\",\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9654,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the tag to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9655,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the tag to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10158,
										"name": "UpdateProductTagDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9656,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10142,
										"name": "ProductTagDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9657,
							"name": "updateProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of tags matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated tags."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTags = await productModuleService.updateProductTags(\n  {\n    id: [\"ptag_123\", \"ptag_321\"],\n  },\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9658,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which tags to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10147,
										"name": "FilterableProductTagProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9659,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected tags"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10158,
										"name": "UpdateProductTagDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9660,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10142,
											"name": "ProductTagDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9661,
					"name": "deleteProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9662,
							"name": "deleteProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete product tags by their ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product tags are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductTags([\n  \"ptag_123\",\n  \"ptag_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9663,
									"name": "productTagIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product tags to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9664,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9665,
					"name": "softDeleteProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9666,
							"name": "softDeleteProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete tags. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the tag. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted tags can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the tag entity's relations, and its value is an array of strings, each being the ID of a record associated with the tag through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductTags([\n  \"ptag_123\",\n  \"ptag_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9667,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9668,
									"name": "tagIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tags to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9669,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the tags. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the tag's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10136,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9667,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9670,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9671,
					"name": "restoreProductTags",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9672,
							"name": "restoreProductTags",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore tags which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the tag entity's relations, and its value is an array of strings, each being the ID of the record associated with the tag through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductTags([\n  \"ptag_123\",\n  \"ptag_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9673,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9674,
									"name": "tagIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the tags to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9675,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the tags. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the tag's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10139,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9673,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9676,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9677,
					"name": "retrieveProductType",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9678,
							"name": "retrieveProductType",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product type by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType =\n  await productModuleService.retrieveProductType(\"ptyp_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9679,
									"name": "typeId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product type to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9680,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product type is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10160,
												"name": "ProductTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9681,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10160,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9682,
					"name": "listProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9683,
							"name": "listProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product types based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product types using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.listProductTypes({\n  id: [\"ptyp_123\", \"ptyp_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.listProductTypes(\n  {\n    id: [\"ptyp_123\", \"ptyp_321\"],\n  },\n  {\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9684,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved product types."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10167,
										"name": "FilterableProductTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9685,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product types are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10160,
												"name": "ProductTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9686,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10160,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9687,
					"name": "listAndCountProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9688,
							"name": "listAndCountProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product types along with the total count of available product types satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product types along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product types using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [productTypes, count] =\n  await productModuleService.listAndCountProductTypes({\n    id: [\"ptyp_123\", \"ptyp_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [productTypes, count] =\n  await productModuleService.listAndCountProductTypes(\n    {\n      id: [\"ptyp_123\", \"ptyp_321\"],\n    },\n    {\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9689,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to be applied on the retrieved product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10167,
										"name": "FilterableProductTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9690,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product types are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10160,
												"name": "ProductTypeDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9691,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 10160,
													"name": "ProductTypeDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9692,
					"name": "createProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9693,
							"name": "createProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.createProductTypes([\n  {\n    value: \"digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9694,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product types to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10173,
											"name": "CreateProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9695,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10160,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9696,
							"name": "createProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType = await productModuleService.createProductTypes({\n  value: \"digital\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9697,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product type to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10173,
										"name": "CreateProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9698,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10160,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9699,
					"name": "upsertProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9700,
							"name": "upsertProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing types, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.upsertProductTypes([\n  {\n    id: \"ptyp_123\",\n    metadata: {\n      test: true,\n    },\n  },\n  {\n    value: \"Digital\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9701,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each type."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10176,
											"name": "UpsertProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9702,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10160,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9703,
							"name": "upsertProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing type, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType = await productModuleService.upsertProductTypes({\n  id: \"ptyp_123\",\n  metadata: {\n    test: true,\n  },\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9704,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the type."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10176,
										"name": "UpsertProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9705,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10160,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9706,
					"name": "updateProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9707,
							"name": "updateProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productType = await productModuleService.updateProductTypes(\n  \"ptyp_123\",\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9708,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the type to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9709,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the type to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10180,
										"name": "UpdateProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9710,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10160,
										"name": "ProductTypeDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9711,
							"name": "updateProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of types matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated types."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst productTypes = await productModuleService.updateProductTypes(\n  {\n    id: [\"ptyp_123\", \"ptyp_321\"],\n  },\n  {\n    value: \"Digital\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9712,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which types to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10167,
										"name": "FilterableProductTypeProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9713,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected types"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10180,
										"name": "UpdateProductTypeDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9714,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10160,
											"name": "ProductTypeDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9715,
					"name": "deleteProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9716,
							"name": "deleteProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete a product type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product types are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductTypes([\n  \"ptyp_123\",\n  \"ptyp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9717,
									"name": "productTypeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product types to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9718,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9719,
					"name": "softDeleteProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9720,
							"name": "softDeleteProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete types. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the type. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted types can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the type entity's relations, and its value is an array of strings, each being the ID of a record associated with the type through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductTypes([\n  \"ptyp_123\",\n  \"ptyp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9721,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9722,
									"name": "typeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the types to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9723,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the types. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the type's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10136,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9721,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9724,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9725,
					"name": "restoreProductTypes",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9726,
							"name": "restoreProductTypes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore types which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the type entity's relations, and its value is an array of strings, each being the ID of the record associated with the type through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductTypes([\n  \"ptyp_123\",\n  \"ptyp_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9727,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9728,
									"name": "typeIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the types to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9729,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the types. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the type's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10139,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9727,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9730,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9731,
					"name": "retrieveProductOption",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9732,
							"name": "retrieveProductOption",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product option by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product option by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst option =\n  await productModuleService.retrieveProductOption(\"opt_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.retrieveProductOption(\n  \"opt_123\",\n  {\n    relations: [\"product\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9733,
									"name": "optionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product option to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9734,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product option is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10183,
												"name": "ProductOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9735,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10183,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9736,
					"name": "listProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9737,
							"name": "listProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product options based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product options using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptions({\n id: [\"opt_123\", \"opt_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product options:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptions(\n  {\n    id: [\"opt_123\", \"opt_321\"],\n  },\n  {\n    relations: [\"product\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.listProductOptions(\n  {\n    id: [\"opt_123\", \"opt_321\"],\n  },\n  {\n    relations: [\"product\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9738,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10193,
										"name": "FilterableProductOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9739,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product options are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10183,
												"name": "ProductOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9740,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10183,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9741,
					"name": "listAndCountProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9742,
							"name": "listAndCountProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product options along with the total count of available product options satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product options along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product options using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptions({\n    id: [\"opt_123\", \"opt_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product types:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptions(\n    {\n      id: [\"opt_123\", \"opt_321\"],\n    },\n    {\n      relations: [\"product\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [options, count] =\n  await productModuleService.listAndCountProductOptions(\n    {\n      id: [\"opt_123\", \"opt_321\"],\n    },\n    {\n      relations: [\"product\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9743,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10193,
										"name": "FilterableProductOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9744,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product options are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10183,
												"name": "ProductOptionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9745,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 10183,
													"name": "ProductOptionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9746,
					"name": "createProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9747,
							"name": "createProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product options."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.createProductOptions([\n  {\n    title: \"Color\",\n    values: [\"Blue\", \"Green\"],\n    product_id: \"prod_123\",\n  },\n  {\n    title: \"Size\",\n    values: [\"Small\", \"Medium\"],\n    product_id: \"prod_321\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9748,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product options to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10200,
											"name": "CreateProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9749,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10183,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9750,
							"name": "createProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.createProductOptions({\n  title: \"Color\",\n  values: [\"Blue\", \"Green\"],\n  product_id: \"prod_123\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9751,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product option to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10200,
										"name": "CreateProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9752,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10183,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9753,
					"name": "upsertProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9754,
							"name": "upsertProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing options, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.upsertProductOptions([\n  {\n    id: \"opt_123\",\n    title: \"Color\",\n  },\n  {\n    title: \"Color\",\n    values: [\"Blue\", \"Green\"],\n    product_id: \"prod_123\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9755,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each option."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10204,
											"name": "UpsertProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9756,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10183,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9757,
							"name": "upsertProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing option, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.upsertProductOptions({\n  id: \"opt_123\",\n  title: \"Color\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9758,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10204,
										"name": "UpsertProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9759,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10183,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9760,
					"name": "updateProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9761,
							"name": "updateProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst option = await productModuleService.updateProductOptions(\n  \"opt_123\",\n  {\n    title: \"Color\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9762,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the option to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9763,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the option to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10209,
										"name": "UpdateProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9764,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10183,
										"name": "ProductOptionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9765,
							"name": "updateProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of options matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated options."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst options = await productModuleService.updateProductOptions(\n  {\n    title: \"Color\",\n  },\n  {\n    values: [\"Blue\", \"Green\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9766,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which options to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10193,
										"name": "FilterableProductOptionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9767,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected options"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10209,
										"name": "UpdateProductOptionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9768,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10183,
											"name": "ProductOptionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9769,
					"name": "deleteProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9770,
							"name": "deleteProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete a product option."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product options are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductOptions([\n  \"opt_123\",\n  \"opt_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9771,
									"name": "productOptionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product options to delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9772,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9773,
					"name": "softDeleteProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9774,
							"name": "softDeleteProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete options. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the option. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted options can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the option entity's relations, and its value is an array of strings, each being the ID of a record associated with the option through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductOptions([\n  \"opt_123\",\n  \"opt_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9775,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9776,
									"name": "optionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the options to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9777,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the options. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the option's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`option_value_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10136,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9775,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9778,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9779,
					"name": "restoreProductOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9780,
							"name": "restoreProductOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore options which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the option entity's relations, and its value is an array of strings, each being the ID of the record associated with the option through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductOptions([\n  \"opt_123\",\n  \"opt_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9781,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9782,
									"name": "optionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the options to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9783,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the options. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the option's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10139,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9781,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9784,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9785,
					"name": "retrieveProductVariant",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9786,
							"name": "retrieveProductVariant",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product variant by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product variant by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variant =\n  await productModuleService.retrieveProductVariant(\"variant_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.retrieveProductVariant(\n  \"variant_123\",\n  {\n    relations: [\"options\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9787,
									"name": "productVariantId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product variant to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9788,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product variant is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10213,
												"name": "ProductVariantDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9789,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10213,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9790,
					"name": "listProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9791,
							"name": "listProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product variants based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product variants using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.listProductVariants({\n  id: [\"variant_123\", \"variant_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product variants:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.listProductVariants(\n  {\n    id: [\"variant_123\", \"variant_321\"],\n  },\n  {\n    relations: [\"options\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.listProductVariants(\n  {\n    id: [\"variant_123\", \"variant_321\"],\n  },\n  {\n    relations: [\"options\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9792,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product variants."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10239,
										"name": "FilterableProductVariantProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9793,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product variants are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10213,
												"name": "ProductVariantDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9794,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10213,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9795,
					"name": "listAndCountProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9796,
							"name": "listAndCountProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product variants along with the total count of available product variants satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product variants along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product variants using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [variants, count] =\n  await productModuleService.listAndCountProductVariants({\n    id: [\"variant_123\", \"variant_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product variants:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [variants, count] =\n  await productModuleService.listAndCountProductVariants(\n    {\n      id: [\"variant_123\", \"variant_321\"],\n    },\n    {\n      relations: [\"options\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [variants, count] =\n  await productModuleService.listAndCountProductVariants(\n    {\n      id: [\"variant_123\", \"variant_321\"],\n    },\n    {\n      relations: [\"options\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9797,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product variants."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10239,
										"name": "FilterableProductVariantProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9798,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product variants are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10213,
												"name": "ProductVariantDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9799,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 10213,
													"name": "ProductVariantDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9800,
					"name": "createProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9801,
							"name": "createProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product variants."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.createProductVariants([\n  {\n    title: \"Blue Shirt\",\n    product_id: \"prod_123\",\n    options: {\n      Color: \"Blue\",\n    },\n  },\n  {\n    title: \"Green Shirt\",\n    product_id: \"prod_321\",\n    options: {\n      Color: \"Green\",\n    },\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9802,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variants to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10247,
											"name": "CreateProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9803,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10213,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9804,
							"name": "createProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product variant."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.createProductVariants({\n  title: \"Blue Shirt\",\n  product_id: \"prod_123\",\n  options: {\n    Color: \"Blue\",\n  },\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9805,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variant to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10247,
										"name": "CreateProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9806,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10213,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9807,
					"name": "upsertProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9808,
							"name": "upsertProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing variants, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.upsertProductVariants([\n  {\n    id: \"variant_123\",\n    title: \"Green Shirt\",\n  },\n  {\n    title: \"Blue Shirt\",\n    options: {\n      Color: \"Blue\",\n    },\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9809,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each variant."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10266,
											"name": "UpsertProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9810,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10213,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9811,
							"name": "upsertProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing variant, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.upsertProductVariants({\n  id: \"variant_123\",\n  title: \"Green Shirt\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9812,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the variant."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10266,
										"name": "UpsertProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9813,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10213,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9814,
					"name": "updateProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9815,
							"name": "updateProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a variant."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated variant."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variant = await productModuleService.updateProductVariants(\n  \"variant_123\",\n  {\n    title: \"Blue Shirt\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9816,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the variant to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9817,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the variant to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10285,
										"name": "UpdateProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9818,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10213,
										"name": "ProductVariantDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9819,
							"name": "updateProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of variants matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated variants."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst variants = await productModuleService.updateProductVariants(\n  {\n    id: [\"variant_123\", \"variant_321\"],\n  },\n  {\n    title: \"Blue Shirt\",\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9820,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which variants to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10239,
										"name": "FilterableProductVariantProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9821,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected variants"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10285,
										"name": "UpdateProductVariantDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9822,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10213,
											"name": "ProductVariantDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9823,
					"name": "deleteProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9824,
							"name": "deleteProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete ProductVariant. This method will completely remove the ProductVariant and they can no longer be accessed or retrieved."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the ProductVariant are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductVariants([\n  \"variant_123\",\n  \"variant_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9825,
									"name": "productVariantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the ProductVariant to be deleted."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9826,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9827,
					"name": "softDeleteProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9828,
							"name": "softDeleteProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete variants. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "delete"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the variant. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieve"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted variants can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restore"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the variant entity's relations, and its value is an array of strings, each being the ID of a record associated with the variant through this relation.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductVariants([\n  \"variant_123\",\n  \"variant_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9829,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9830,
									"name": "variantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the variants to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9831,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the variants. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the variant's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`option_value_id`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10136,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9829,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9832,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9833,
					"name": "restoreProductVariants",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9834,
							"name": "restoreProductVariants",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore variants which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the variant entity's relations, and its value is an array of strings, each being the ID of the record associated with the variant through this relation.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductVariants([\n  \"variant_123\",\n  \"variant_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9835,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9836,
									"name": "variantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the variants to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9837,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the variants. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the variant's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10139,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9835,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9838,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9839,
					"name": "retrieveProductCollection",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9840,
							"name": "retrieveProductCollection",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product collection by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product collection by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.retrieveProductCollection(\"pcol_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.retrieveProductCollection(\"pcol_123\", {\n    relations: [\"products\"],\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9841,
									"name": "productCollectionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product collection to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9842,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product collection is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10303,
												"name": "ProductCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9843,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10303,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9844,
					"name": "listProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9845,
							"name": "listProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product collections based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product collections using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.listProductCollections({\n    id: [\"pcol_123\", \"pcol_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product collections:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.listProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.listProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9846,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10312,
										"name": "FilterableProductCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9847,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product collections are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10303,
												"name": "ProductCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9848,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10303,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9849,
					"name": "listAndCountProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9850,
							"name": "listAndCountProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product collections along with the total count of available product collections satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product collections along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product collections using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [collections, count] =\n  await productModuleService.listAndCountProductCollections({\n    id: [\"pcol_123\", \"pcol_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product collections:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [collections, count] =\n  await productModuleService.listAndCountProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [collections, count] =\n  await productModuleService.listAndCountProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9851,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters applied on the retrieved product collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10312,
										"name": "FilterableProductCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9852,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product collections are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10303,
												"name": "ProductCollectionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9853,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 10303,
													"name": "ProductCollectionDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9854,
					"name": "createProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9855,
							"name": "createProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product collections."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.createProductCollections([\n    {\n      title: \"Summer Collection\",\n    },\n    {\n      title: \"Winter Collection\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9856,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product collections to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10319,
											"name": "CreateProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9857,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10303,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9858,
							"name": "createProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.createProductCollections({\n    title: \"Summer Collection\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9859,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product collection to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10319,
										"name": "CreateProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9860,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10303,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9861,
					"name": "upsertProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9862,
							"name": "upsertProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing collections, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.upsertProductCollections([\n    {\n      id: \"pcol_123\",\n      title: \"Winter Collection\",\n    },\n    {\n      title: \"Summer Collection\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9863,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each collection."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10324,
											"name": "UpsertProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9864,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10303,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9865,
							"name": "upsertProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing collection, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.upsertProductCollections({\n    id: \"pcol_123\",\n    title: \"Winter Collection\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9866,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the collection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10324,
										"name": "UpsertProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9867,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10303,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9868,
					"name": "updateProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9869,
							"name": "updateProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a collection."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated collection."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collection =\n  await productModuleService.updateProductCollections(\"pcol_123\", {\n    title: \"Summer Collection\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9870,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the collection to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9871,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the collection to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10331,
										"name": "UpdateProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9872,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10303,
										"name": "ProductCollectionDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9873,
							"name": "updateProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of collections matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated collections."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst collections =\n  await productModuleService.updateProductCollections(\n    {\n      id: [\"pcol_123\", \"pcol_321\"],\n    },\n    {\n      title: \"Summer Collection\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9874,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which collections to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10312,
										"name": "FilterableProductCollectionProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9875,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected collections"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10331,
										"name": "UpdateProductCollectionDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9876,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10303,
											"name": "ProductCollectionDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9877,
					"name": "deleteProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9878,
							"name": "deleteProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete collections by their ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product options are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductCollections([\n  \"pcol_123\",\n  \"pcol_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9879,
									"name": "productCollectionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product collections to be updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9880,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9881,
					"name": "softDeleteProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9882,
							"name": "softDeleteProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete product collections. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "deleteCollections"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the collection. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieveCollections"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted collections can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restoreCollections"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the collection entity's relations.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductCollections([\n  \"pcol_123\",\n  \"pcol_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9883,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9884,
									"name": "collectionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the collections to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9885,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the collections. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the collection's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10136,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9883,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9886,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9887,
					"name": "restoreProductCollections",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9888,
							"name": "restoreProductCollections",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore collections which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the product entity's relations.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductCollections([\n  \"pcol_123\",\n  \"pcol_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9889,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9890,
									"name": "collectionIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the collections to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9891,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the collections. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the collection's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10139,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9889,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9892,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9893,
					"name": "retrieveProductCategory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9894,
							"name": "retrieveProductCategory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a product category by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved product category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a product category by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst category =\n  await productModuleService.retrieveProductCategory(\"pcat_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst category = await productModuleService.retrieveProductCategory(\n  \"pcat_123\",\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9895,
									"name": "productCategoryId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the product category to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9896,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product category is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10337,
												"name": "ProductCategoryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9897,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10337,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9898,
					"name": "listProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9899,
							"name": "listProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product categories based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product categories."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product categories using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst categories = await productModuleService.listProductCategories({\n  id: [\"pcat_123\", \"pcat_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product categories:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst categories = await productModuleService.listProductCategories(\n  {\n    id: [\"pcat_123\", \"pcat_321\"],\n  },\n  {\n    relations: [\"products\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst categories = await productModuleService.listProductCategories(\n  {\n    id: [\"pcat_123\", \"pcat_321\"],\n  },\n  {\n    relations: [\"products\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9900,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to be applied on the retrieved product categories."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10353,
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9901,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product categories are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10337,
												"name": "ProductCategoryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9902,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10337,
											"name": "ProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9903,
					"name": "listAndCountProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9904,
							"name": "listAndCountProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of product categories along with the total count of available product categories satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of product categories along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of product categories using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [categories, count] =\n  await productModuleService.listAndCountProductCategories({\n    id: [\"pcat_123\", \"pcat_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the product categories:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [categories, count] =\n  await productModuleService.listAndCountProductCategories(\n    {\n      id: [\"pcat_123\", \"pcat_321\"],\n    },\n    {\n      relations: [\"products\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`15`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [categories, count] =\n  await productModuleService.listAndCountProductCategories(\n    {\n      id: [\"pcat_123\", \"pcat_321\"],\n    },\n    {\n      relations: [\"products\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9905,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved product categories."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10353,
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9906,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the product categories are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a product category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 9974,
										"typeArguments": [
											{
												"type": "reference",
												"target": 10337,
												"name": "ProductCategoryDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9907,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 10337,
													"name": "ProductCategoryDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9908,
					"name": "createProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9909,
							"name": "createProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create product categories."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of created product categories."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst categories =\n  await productModuleService.createProductCategories([\n    {\n      name: \"Tools\",\n    },\n    {\n      name: \"Clothing\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9910,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product categories to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10365,
											"name": "CreateProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9911,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10337,
											"name": "ProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9912,
							"name": "createProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a product category."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created product category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst category =\n  await productModuleService.createProductCategories({\n    name: \"Tools\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9913,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product category to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10365,
										"name": "CreateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9914,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10337,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9915,
					"name": "upsertProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9916,
							"name": "upsertProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing categories, or creates new ones if they don't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated and created categories."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst categories =\n  await productModuleService.upsertProductCategories([\n    {\n      id: \"pcat_123\",\n      name: \"Clothing\",\n    },\n    {\n      name: \"Tools\",\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9917,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for each category."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10374,
											"name": "UpsertProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 9918,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10337,
											"name": "ProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9919,
							"name": "upsertProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing category, or creates a new one if it doesn't exist."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated or created category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst category =\n  await productModuleService.upsertProductCategories({\n    id: \"pcat_123\",\n    name: \"Clothing\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9920,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update or create for the category."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10374,
										"name": "UpsertProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9921,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10337,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9922,
					"name": "updateProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9923,
							"name": "updateProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a category."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated category."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst category =\n  await productModuleService.updateProductCategories(\"pcat_123\", {\n    title: \"Tools\",\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9924,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the category to be updated."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 9925,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes of the category to be updated"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10384,
										"name": "UpdateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9926,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 10337,
										"name": "ProductCategoryDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 9927,
							"name": "updateProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a list of categories matching the specified filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated categories."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst categories =\n  await productModuleService.updateProductCategories(\n    {\n      id: [\"pcat_123\", \"pcat_321\"],\n    },\n    {\n      title: \"Tools\",\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9928,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters specifying which categories to update."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10353,
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9929,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to be updated on the selected categories"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10384,
										"name": "UpdateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9930,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10337,
											"name": "ProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9931,
					"name": "deleteProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9932,
							"name": "deleteProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete categories by their ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the product options are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.deleteProductCategories([\n  \"pcat_123\",\n  \"pcat_321\",\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 9933,
									"name": "productCategoryIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the product categories to be updated."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9934,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9935,
					"name": "softDeleteProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9936,
							"name": "softDeleteProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete product categories. Unlike the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "deleteCategories"
									},
									{
										"kind": "text",
										"text": " method, this method won't completely remove the category. It can still be accessed or retrieved using methods like "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "retrieveCategories"
									},
									{
										"kind": "text",
										"text": " if you pass the "
									},
									{
										"kind": "code",
										"text": "`withDeleted`"
									},
									{
										"kind": "text",
										"text": " property to the "
									},
									{
										"kind": "code",
										"text": "`config`"
									},
									{
										"kind": "text",
										"text": " object parameter.\n\nThe soft-deleted categories can be restored using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restoreCategories"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted. The object's keys are the ID attribute names of the category entity's relations.\n\nIf there are no related records, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.softDeleteProductCategories([\n  \"pcat_123\",\n  \"pcat_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9937,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9938,
									"name": "categoryIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the categories to soft-delete."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9939,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to soft delete along with the each of the categories. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the category's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10136,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9937,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9940,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9941,
					"name": "restoreProductCategories",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 9942,
							"name": "restoreProductCategories",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore categories which were deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "softDelete"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored. The object's keys are the ID attribute names of the product entity's relations.\n\nIf there are no related records that were restored, the promise resolved to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait productModuleService.restoreProductCategories([\n  \"pcat_123\",\n  \"pcat_321\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 9943,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 9944,
									"name": "categoryIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the categories to restore."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 9945,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the categories. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the category's relation attribute names."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10139,
										"typeArguments": [
											{
												"type": "reference",
												"target": 9943,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 9946,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 10019,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						9569,
						9574,
						9579,
						9584,
						9591,
						9598,
						9607,
						9611,
						9617,
						9623,
						9628,
						9633,
						9638,
						9645,
						9652,
						9661,
						9665,
						9671,
						9677,
						9682,
						9687,
						9692,
						9699,
						9706,
						9715,
						9719,
						9725,
						9731,
						9736,
						9741,
						9746,
						9753,
						9760,
						9769,
						9773,
						9779,
						9785,
						9790,
						9795,
						9800,
						9807,
						9814,
						9823,
						9827,
						9833,
						9839,
						9844,
						9849,
						9854,
						9861,
						9868,
						9877,
						9881,
						9887,
						9893,
						9898,
						9903,
						9908,
						9915,
						9922,
						9931,
						9935,
						9941
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 9960,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 10506,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 10507,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 10508,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 10509,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 10510,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 10511,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10507,
						10508
					]
				}
			]
		},
		{
			"id": 10426,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 10427,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 10428,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 10429,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 10502,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 10502,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 10430,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 10431,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 10432,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 10506,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 10502,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 10433,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 10434,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 10435,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 10436,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 10437,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 10438,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 10512,
												"typeArguments": [
													{
														"type": "reference",
														"target": 10437,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 10512,
													"typeArguments": [
														{
															"type": "reference",
															"target": 10437,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 10439,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						10427,
						10430,
						10433,
						10435
					]
				}
			]
		},
		{
			"id": 10019,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 10020,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 10021,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10030,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 10022,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10030,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 10023,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10024,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 10025,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10026,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10027,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 10426,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 10028,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 10029,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						10020,
						10021,
						10022,
						10023,
						10024,
						10025,
						10026,
						10027,
						10028,
						10029
					]
				}
			],
			"typeParameters": [
				{
					"id": 10030,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				9974,
				10440,
				10136,
				10139,
				10529,
				10479,
				9960,
				9987,
				10213,
				10337,
				10365,
				10374,
				10384,
				10142,
				10303,
				10160,
				10183,
				10418,
				10470,
				10031,
				10147,
				10167,
				10193,
				10312,
				10239,
				10353,
				10319,
				10324,
				10331,
				10173,
				10176,
				10180,
				10466,
				10526,
				10153,
				10155,
				10158,
				10200,
				10204,
				10209,
				10247,
				10266,
				10285,
				10059,
				10085,
				10111,
				9568,
				10506,
				10426,
				10019
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				10425,
				10522,
				10524,
				10547,
				10575,
				10565,
				10444,
				10563,
				10557,
				10562,
				10551,
				10559,
				10541,
				10502,
				10512,
				10532,
				10496,
				10393,
				10493,
				10417
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"9567": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": ""
		},
		"9568": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService"
		},
		"9569": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProduct"
		},
		"9570": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProduct"
		},
		"9571": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productId"
		},
		"9572": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9573": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9574": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProducts"
		},
		"9575": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProducts"
		},
		"9576": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9577": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9578": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9579": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProducts"
		},
		"9580": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProducts"
		},
		"9581": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9582": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9583": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9584": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProducts"
		},
		"9585": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProducts"
		},
		"9586": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9587": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9588": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProducts"
		},
		"9589": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9590": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9591": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProducts"
		},
		"9592": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProducts"
		},
		"9593": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9594": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9595": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProducts"
		},
		"9596": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9597": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9598": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProducts"
		},
		"9599": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProducts"
		},
		"9600": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"9601": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9602": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9603": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProducts"
		},
		"9604": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"9605": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9606": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9607": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProducts"
		},
		"9608": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProducts"
		},
		"9609": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productIds"
		},
		"9610": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9611": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProducts"
		},
		"9612": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProducts"
		},
		"9613": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9614": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productIds"
		},
		"9615": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9616": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9617": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProducts"
		},
		"9618": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProducts"
		},
		"9619": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9620": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productIds"
		},
		"9621": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9622": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9623": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductTag"
		},
		"9624": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductTag"
		},
		"9625": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "tagId"
		},
		"9626": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9627": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9628": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductTags"
		},
		"9629": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductTags"
		},
		"9630": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9631": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9632": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9633": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductTags"
		},
		"9634": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductTags"
		},
		"9635": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9636": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9637": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9638": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTags"
		},
		"9639": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTags"
		},
		"9640": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9641": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9642": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTags"
		},
		"9643": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9644": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9645": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTags"
		},
		"9646": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTags"
		},
		"9647": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9648": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9649": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTags"
		},
		"9650": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9651": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9652": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTags"
		},
		"9653": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTags"
		},
		"9654": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"9655": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9656": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9657": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTags"
		},
		"9658": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"9659": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9660": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9661": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductTags"
		},
		"9662": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductTags"
		},
		"9663": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productTagIds"
		},
		"9664": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9665": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductTags"
		},
		"9666": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductTags"
		},
		"9667": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9668": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "tagIds"
		},
		"9669": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9670": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9671": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductTags"
		},
		"9672": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductTags"
		},
		"9673": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9674": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "tagIds"
		},
		"9675": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9676": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9677": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductType"
		},
		"9678": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductType"
		},
		"9679": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "typeId"
		},
		"9680": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9681": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9682": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductTypes"
		},
		"9683": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductTypes"
		},
		"9684": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9685": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9686": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9687": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductTypes"
		},
		"9688": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductTypes"
		},
		"9689": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9690": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9691": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9692": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTypes"
		},
		"9693": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTypes"
		},
		"9694": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9695": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9696": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductTypes"
		},
		"9697": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9698": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9699": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTypes"
		},
		"9700": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTypes"
		},
		"9701": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9702": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9703": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductTypes"
		},
		"9704": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9705": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9706": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTypes"
		},
		"9707": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTypes"
		},
		"9708": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"9709": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9710": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9711": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductTypes"
		},
		"9712": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"9713": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9714": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9715": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductTypes"
		},
		"9716": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductTypes"
		},
		"9717": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productTypeIds"
		},
		"9718": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9719": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductTypes"
		},
		"9720": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductTypes"
		},
		"9721": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9722": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "typeIds"
		},
		"9723": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9724": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9725": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductTypes"
		},
		"9726": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductTypes"
		},
		"9727": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9728": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "typeIds"
		},
		"9729": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9730": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9731": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductOption"
		},
		"9732": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductOption"
		},
		"9733": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "optionId"
		},
		"9734": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9735": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9736": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductOptions"
		},
		"9737": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductOptions"
		},
		"9738": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9739": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9740": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9741": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductOptions"
		},
		"9742": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductOptions"
		},
		"9743": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9744": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9745": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9746": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptions"
		},
		"9747": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptions"
		},
		"9748": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9749": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9750": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductOptions"
		},
		"9751": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9752": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9753": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductOptions"
		},
		"9754": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductOptions"
		},
		"9755": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9756": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9757": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductOptions"
		},
		"9758": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9759": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9760": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptions"
		},
		"9761": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptions"
		},
		"9762": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"9763": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9764": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9765": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductOptions"
		},
		"9766": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"9767": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9768": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9769": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductOptions"
		},
		"9770": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductOptions"
		},
		"9771": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productOptionIds"
		},
		"9772": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9773": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductOptions"
		},
		"9774": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductOptions"
		},
		"9775": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9776": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "optionIds"
		},
		"9777": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9778": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9779": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductOptions"
		},
		"9780": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductOptions"
		},
		"9781": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9782": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "optionIds"
		},
		"9783": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9784": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9785": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductVariant"
		},
		"9786": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductVariant"
		},
		"9787": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productVariantId"
		},
		"9788": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9789": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9790": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductVariants"
		},
		"9791": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductVariants"
		},
		"9792": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9793": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9794": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9795": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductVariants"
		},
		"9796": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductVariants"
		},
		"9797": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9798": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9799": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9800": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductVariants"
		},
		"9801": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductVariants"
		},
		"9802": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9803": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9804": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductVariants"
		},
		"9805": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9806": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9807": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductVariants"
		},
		"9808": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductVariants"
		},
		"9809": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9810": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9811": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductVariants"
		},
		"9812": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9813": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9814": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductVariants"
		},
		"9815": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductVariants"
		},
		"9816": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"9817": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9818": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9819": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductVariants"
		},
		"9820": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"9821": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9822": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9823": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductVariants"
		},
		"9824": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductVariants"
		},
		"9825": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productVariantIds"
		},
		"9826": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9827": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductVariants"
		},
		"9828": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductVariants"
		},
		"9829": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9830": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "variantIds"
		},
		"9831": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9832": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9833": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductVariants"
		},
		"9834": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductVariants"
		},
		"9835": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9836": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "variantIds"
		},
		"9837": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9838": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9839": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductCollection"
		},
		"9840": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductCollection"
		},
		"9841": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productCollectionId"
		},
		"9842": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9843": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9844": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductCollections"
		},
		"9845": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductCollections"
		},
		"9846": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9847": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9848": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9849": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductCollections"
		},
		"9850": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductCollections"
		},
		"9851": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9852": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9853": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9854": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCollections"
		},
		"9855": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCollections"
		},
		"9856": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9857": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9858": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCollections"
		},
		"9859": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9860": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9861": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCollections"
		},
		"9862": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCollections"
		},
		"9863": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9864": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9865": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCollections"
		},
		"9866": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9867": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9868": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCollections"
		},
		"9869": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCollections"
		},
		"9870": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"9871": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9872": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9873": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCollections"
		},
		"9874": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"9875": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9876": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9877": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductCollections"
		},
		"9878": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductCollections"
		},
		"9879": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productCollectionIds"
		},
		"9880": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9881": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductCollections"
		},
		"9882": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductCollections"
		},
		"9883": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9884": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "collectionIds"
		},
		"9885": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9886": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9887": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductCollections"
		},
		"9888": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductCollections"
		},
		"9889": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9890": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "collectionIds"
		},
		"9891": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9892": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9893": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductCategory"
		},
		"9894": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.retrieveProductCategory"
		},
		"9895": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productCategoryId"
		},
		"9896": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9897": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9898": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductCategories"
		},
		"9899": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listProductCategories"
		},
		"9900": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9901": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9902": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9903": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductCategories"
		},
		"9904": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.listAndCountProductCategories"
		},
		"9905": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "filters"
		},
		"9906": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9907": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9908": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCategories"
		},
		"9909": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCategories"
		},
		"9910": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9911": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9912": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.createProductCategories"
		},
		"9913": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9914": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9915": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCategories"
		},
		"9916": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCategories"
		},
		"9917": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9918": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9919": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.upsertProductCategories"
		},
		"9920": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9921": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9922": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCategories"
		},
		"9923": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCategories"
		},
		"9924": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "id"
		},
		"9925": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9926": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9927": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.updateProductCategories"
		},
		"9928": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "selector"
		},
		"9929": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "data"
		},
		"9930": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9931": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductCategories"
		},
		"9932": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.deleteProductCategories"
		},
		"9933": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "productCategoryIds"
		},
		"9934": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9935": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductCategories"
		},
		"9936": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.softDeleteProductCategories"
		},
		"9937": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9938": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "categoryIds"
		},
		"9939": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9940": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9941": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductCategories"
		},
		"9942": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "IProductModuleService.restoreProductCategories"
		},
		"9943": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"9944": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "categoryIds"
		},
		"9945": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "config"
		},
		"9946": {
			"sourceFileName": "../../../../packages/core/types/src/product/service.ts",
			"qualifiedName": "sharedContext"
		},
		"9960": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"9974": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"9975": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"9976": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"9977": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"9978": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"9979": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"9980": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"9981": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"9983": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"9984": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"9985": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"9986": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"9987": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO"
		},
		"9988": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.id"
		},
		"9989": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.title"
		},
		"9990": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.handle"
		},
		"9991": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.subtitle"
		},
		"9992": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.description"
		},
		"9993": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.is_giftcard"
		},
		"9994": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.status"
		},
		"9995": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.thumbnail"
		},
		"9996": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.width"
		},
		"9997": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.weight"
		},
		"9998": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.length"
		},
		"9999": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.height"
		},
		"10000": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.origin_country"
		},
		"10001": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.hs_code"
		},
		"10002": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.mid_code"
		},
		"10003": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.material"
		},
		"10004": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.collection"
		},
		"10005": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.collection_id"
		},
		"10006": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.categories"
		},
		"10007": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.type"
		},
		"10008": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.type_id"
		},
		"10009": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.tags"
		},
		"10010": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.variants"
		},
		"10011": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.options"
		},
		"10012": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.images"
		},
		"10013": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.discountable"
		},
		"10014": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.external_id"
		},
		"10015": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.created_at"
		},
		"10016": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.updated_at"
		},
		"10017": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.deleted_at"
		},
		"10018": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.metadata"
		},
		"10019": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"10020": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"10021": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"10022": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"10023": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"10024": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"10025": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"10026": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"10027": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"10028": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"10029": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"10030": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"10031": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps"
		},
		"10032": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.q"
		},
		"10033": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.status"
		},
		"10034": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.title"
		},
		"10035": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.handle"
		},
		"10036": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.id"
		},
		"10037": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.is_giftcard"
		},
		"10038": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.tags"
		},
		"10039": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"10040": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.id"
		},
		"10041": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.variants"
		},
		"10042": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"10043": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.options"
		},
		"10044": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"10045": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.value"
		},
		"10046": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.option_id"
		},
		"10047": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.type_id"
		},
		"10048": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.categories"
		},
		"10049": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"10050": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.id"
		},
		"10051": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type"
		},
		"10052": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "__type.id"
		},
		"10053": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.collection_id"
		},
		"10054": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.created_at"
		},
		"10055": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.updated_at"
		},
		"10056": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductProps.deleted_at"
		},
		"10057": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10058": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10059": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO"
		},
		"10060": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.id"
		},
		"10061": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.title"
		},
		"10062": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.subtitle"
		},
		"10063": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.description"
		},
		"10064": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.is_giftcard"
		},
		"10065": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.discountable"
		},
		"10066": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.thumbnail"
		},
		"10067": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.handle"
		},
		"10068": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.status"
		},
		"10069": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.images"
		},
		"10070": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.type_id"
		},
		"10071": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.collection_id"
		},
		"10072": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.tag_ids"
		},
		"10073": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.category_ids"
		},
		"10074": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.options"
		},
		"10075": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.variants"
		},
		"10076": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.width"
		},
		"10077": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.height"
		},
		"10078": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.length"
		},
		"10079": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.weight"
		},
		"10080": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.origin_country"
		},
		"10081": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.hs_code"
		},
		"10082": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.material"
		},
		"10083": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.mid_code"
		},
		"10084": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductDTO.metadata"
		},
		"10085": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductDTO"
		},
		"10086": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductDTO.id"
		},
		"10087": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.title"
		},
		"10088": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.subtitle"
		},
		"10089": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.description"
		},
		"10090": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.is_giftcard"
		},
		"10091": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.discountable"
		},
		"10092": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.thumbnail"
		},
		"10093": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.handle"
		},
		"10094": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.status"
		},
		"10095": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.images"
		},
		"10096": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.type_id"
		},
		"10097": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.collection_id"
		},
		"10098": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.tag_ids"
		},
		"10099": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.category_ids"
		},
		"10100": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.options"
		},
		"10101": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.variants"
		},
		"10102": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.width"
		},
		"10103": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.height"
		},
		"10104": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.length"
		},
		"10105": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.weight"
		},
		"10106": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.origin_country"
		},
		"10107": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.hs_code"
		},
		"10108": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.material"
		},
		"10109": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.mid_code"
		},
		"10110": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.metadata"
		},
		"10111": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO"
		},
		"10112": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.title"
		},
		"10113": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.subtitle"
		},
		"10114": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.description"
		},
		"10115": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.is_giftcard"
		},
		"10116": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.discountable"
		},
		"10117": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.thumbnail"
		},
		"10118": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.handle"
		},
		"10119": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.status"
		},
		"10120": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.images"
		},
		"10121": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.type_id"
		},
		"10122": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.collection_id"
		},
		"10123": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.tag_ids"
		},
		"10124": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.category_ids"
		},
		"10125": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.options"
		},
		"10126": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.variants"
		},
		"10127": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.width"
		},
		"10128": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.height"
		},
		"10129": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.length"
		},
		"10130": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.weight"
		},
		"10131": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.origin_country"
		},
		"10132": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.hs_code"
		},
		"10133": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.material"
		},
		"10134": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.mid_code"
		},
		"10135": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductDTO.metadata"
		},
		"10136": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"10137": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"10138": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"10139": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"10140": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"10141": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"10142": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO"
		},
		"10143": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.id"
		},
		"10144": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.value"
		},
		"10145": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.metadata"
		},
		"10146": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.products"
		},
		"10147": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps"
		},
		"10148": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps.q"
		},
		"10149": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps.id"
		},
		"10150": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTagProps.value"
		},
		"10151": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10152": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10153": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTagDTO"
		},
		"10154": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTagDTO.value"
		},
		"10155": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTagDTO"
		},
		"10156": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTagDTO.id"
		},
		"10157": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTagDTO.value"
		},
		"10158": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTagDTO"
		},
		"10159": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTagDTO.value"
		},
		"10160": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO"
		},
		"10161": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.id"
		},
		"10162": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.value"
		},
		"10163": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.metadata"
		},
		"10164": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.created_at"
		},
		"10165": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.updated_at"
		},
		"10166": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.deleted_at"
		},
		"10167": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps"
		},
		"10168": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps.q"
		},
		"10169": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps.id"
		},
		"10170": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductTypeProps.value"
		},
		"10171": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10172": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10173": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTypeDTO"
		},
		"10174": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTypeDTO.value"
		},
		"10175": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductTypeDTO.metadata"
		},
		"10176": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTypeDTO"
		},
		"10177": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductTypeDTO.id"
		},
		"10178": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.value"
		},
		"10179": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.metadata"
		},
		"10180": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO"
		},
		"10181": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.value"
		},
		"10182": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductTypeDTO.metadata"
		},
		"10183": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO"
		},
		"10184": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.id"
		},
		"10185": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.title"
		},
		"10186": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.product"
		},
		"10187": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.product_id"
		},
		"10188": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.values"
		},
		"10189": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.metadata"
		},
		"10190": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.created_at"
		},
		"10191": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.updated_at"
		},
		"10192": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.deleted_at"
		},
		"10193": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps"
		},
		"10194": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.q"
		},
		"10195": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.id"
		},
		"10196": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.title"
		},
		"10197": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductOptionProps.product_id"
		},
		"10198": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10199": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10200": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO"
		},
		"10201": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO.title"
		},
		"10202": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO.values"
		},
		"10203": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductOptionDTO.product_id"
		},
		"10204": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductOptionDTO"
		},
		"10205": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductOptionDTO.id"
		},
		"10206": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.title"
		},
		"10207": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.values"
		},
		"10208": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.product_id"
		},
		"10209": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO"
		},
		"10210": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.title"
		},
		"10211": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.values"
		},
		"10212": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductOptionDTO.product_id"
		},
		"10213": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO"
		},
		"10214": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"10215": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"10216": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"10217": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"10218": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"10219": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"10220": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"10221": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"10222": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.requires_shipping"
		},
		"10223": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"10224": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"10225": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"10226": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"10227": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"10228": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"10229": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"10230": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"10231": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"10232": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"10233": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"10234": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"10235": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"10236": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"10237": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"10238": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"10239": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps"
		},
		"10240": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.q"
		},
		"10241": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.id"
		},
		"10242": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.sku"
		},
		"10243": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.product_id"
		},
		"10244": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductVariantProps.options"
		},
		"10245": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10246": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10247": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO"
		},
		"10248": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.product_id"
		},
		"10249": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.title"
		},
		"10250": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.sku"
		},
		"10251": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.barcode"
		},
		"10252": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.ean"
		},
		"10253": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.upc"
		},
		"10254": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.allow_backorder"
		},
		"10255": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.manage_inventory"
		},
		"10256": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.hs_code"
		},
		"10257": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.origin_country"
		},
		"10258": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.mid_code"
		},
		"10259": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.material"
		},
		"10260": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.weight"
		},
		"10261": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.length"
		},
		"10262": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.height"
		},
		"10263": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.width"
		},
		"10264": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.options"
		},
		"10265": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductVariantDTO.metadata"
		},
		"10266": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductVariantDTO"
		},
		"10267": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductVariantDTO.id"
		},
		"10268": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.title"
		},
		"10269": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.sku"
		},
		"10270": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.barcode"
		},
		"10271": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.ean"
		},
		"10272": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.upc"
		},
		"10273": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.allow_backorder"
		},
		"10274": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.manage_inventory"
		},
		"10275": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.hs_code"
		},
		"10276": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.origin_country"
		},
		"10277": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.mid_code"
		},
		"10278": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.material"
		},
		"10279": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.weight"
		},
		"10280": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.length"
		},
		"10281": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.height"
		},
		"10282": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.width"
		},
		"10283": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.options"
		},
		"10284": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.metadata"
		},
		"10285": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO"
		},
		"10286": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.title"
		},
		"10287": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.sku"
		},
		"10288": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.barcode"
		},
		"10289": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.ean"
		},
		"10290": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.upc"
		},
		"10291": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.allow_backorder"
		},
		"10292": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.manage_inventory"
		},
		"10293": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.hs_code"
		},
		"10294": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.origin_country"
		},
		"10295": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.mid_code"
		},
		"10296": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.material"
		},
		"10297": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.weight"
		},
		"10298": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.length"
		},
		"10299": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.height"
		},
		"10300": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.width"
		},
		"10301": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.options"
		},
		"10302": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductVariantDTO.metadata"
		},
		"10303": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO"
		},
		"10304": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.id"
		},
		"10305": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.title"
		},
		"10306": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.handle"
		},
		"10307": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.metadata"
		},
		"10308": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.created_at"
		},
		"10309": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.updated_at"
		},
		"10310": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.deleted_at"
		},
		"10311": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.products"
		},
		"10312": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps"
		},
		"10313": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.q"
		},
		"10314": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.id"
		},
		"10315": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.handle"
		},
		"10316": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCollectionProps.title"
		},
		"10317": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10318": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10319": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO"
		},
		"10320": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.title"
		},
		"10321": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.handle"
		},
		"10322": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.product_ids"
		},
		"10323": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCollectionDTO.metadata"
		},
		"10324": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCollectionDTO"
		},
		"10325": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCollectionDTO.id"
		},
		"10326": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.value"
		},
		"10327": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.title"
		},
		"10328": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.handle"
		},
		"10329": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.product_ids"
		},
		"10330": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.metadata"
		},
		"10331": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO"
		},
		"10332": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.value"
		},
		"10333": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.title"
		},
		"10334": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.handle"
		},
		"10335": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.product_ids"
		},
		"10336": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCollectionDTO.metadata"
		},
		"10337": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO"
		},
		"10338": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.id"
		},
		"10339": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.name"
		},
		"10340": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.description"
		},
		"10341": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.handle"
		},
		"10342": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.is_active"
		},
		"10343": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.is_internal"
		},
		"10344": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.rank"
		},
		"10345": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.metadata"
		},
		"10346": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.parent_category"
		},
		"10347": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.parent_category_id"
		},
		"10348": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.category_children"
		},
		"10349": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.products"
		},
		"10350": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.created_at"
		},
		"10351": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.updated_at"
		},
		"10352": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.deleted_at"
		},
		"10353": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps"
		},
		"10354": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.q"
		},
		"10355": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.id"
		},
		"10356": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.name"
		},
		"10357": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.parent_category_id"
		},
		"10358": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.handle"
		},
		"10359": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.is_active"
		},
		"10360": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.is_internal"
		},
		"10361": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.include_descendants_tree"
		},
		"10362": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "FilterableProductCategoryProps.include_ancestors_tree"
		},
		"10363": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10364": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10365": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO"
		},
		"10366": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.name"
		},
		"10367": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.description"
		},
		"10368": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.handle"
		},
		"10369": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.is_active"
		},
		"10370": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.is_internal"
		},
		"10371": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.rank"
		},
		"10372": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.parent_category_id"
		},
		"10373": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "CreateProductCategoryDTO.metadata"
		},
		"10374": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCategoryDTO"
		},
		"10375": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductCategoryDTO.id"
		},
		"10376": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.name"
		},
		"10377": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.description"
		},
		"10378": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.handle"
		},
		"10379": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_active"
		},
		"10380": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_internal"
		},
		"10381": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.rank"
		},
		"10382": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.parent_category_id"
		},
		"10383": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.metadata"
		},
		"10384": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO"
		},
		"10385": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.name"
		},
		"10386": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.description"
		},
		"10387": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.handle"
		},
		"10388": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_active"
		},
		"10389": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.is_internal"
		},
		"10390": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.rank"
		},
		"10391": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.parent_category_id"
		},
		"10392": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductCategoryDTO.metadata"
		},
		"10393": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"10394": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10395": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"10396": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"10397": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"10398": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10399": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"10400": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"10401": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10402": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"10403": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"10404": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"10405": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"10406": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"10407": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"10408": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"10409": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"10410": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"10411": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"10412": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"10413": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10414": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"10415": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"10416": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"10417": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductStatus"
		},
		"10418": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO"
		},
		"10419": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.id"
		},
		"10420": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.url"
		},
		"10421": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.metadata"
		},
		"10422": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.created_at"
		},
		"10423": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.updated_at"
		},
		"10424": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.deleted_at"
		},
		"10425": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "MetadataType"
		},
		"10426": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"10427": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"10428": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"10429": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"10430": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"10431": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"10432": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"10433": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"10434": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"10435": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"10436": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"10437": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"10438": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"10439": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"10440": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"10441": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"10442": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"10443": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"10444": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"10445": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"10446": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"10447": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"10448": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"10449": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"10450": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"10451": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"10452": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"10453": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"10454": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"10455": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"10456": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"10457": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"10458": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"10459": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"10460": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"10461": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"10462": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"10463": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"10464": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"10465": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"10466": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductImageDTO"
		},
		"10467": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpsertProductImageDTO.id"
		},
		"10468": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.url"
		},
		"10469": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.metadata"
		},
		"10470": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO"
		},
		"10471": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.id"
		},
		"10472": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.value"
		},
		"10473": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.option"
		},
		"10474": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.option_id"
		},
		"10475": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.metadata"
		},
		"10476": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.created_at"
		},
		"10477": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.updated_at"
		},
		"10478": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.deleted_at"
		},
		"10479": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"10480": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"10481": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"10482": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"10483": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"10484": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"10485": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"10486": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"10487": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"10488": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"10489": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"10490": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"10491": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"10492": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"10493": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"10494": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10495": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"10496": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"10497": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"10498": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"10499": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"10500": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"10501": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"10502": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"10503": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"10504": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"10505": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"10506": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"10507": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"10508": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"10509": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"10510": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"10512": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"10513": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"10514": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"10515": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"10516": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"10517": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"10518": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"10519": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"10520": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"10521": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"10522": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"10523": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"10524": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"10525": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"10526": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO"
		},
		"10527": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.url"
		},
		"10528": {
			"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
			"qualifiedName": "UpdateProductImageDTO.metadata"
		},
		"10529": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"10530": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"10531": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"10532": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"10533": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"10534": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"10535": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"10536": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"10537": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"10538": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"10539": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"10540": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"10541": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"10542": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"10543": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"10544": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"10545": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"10546": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"10547": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"10548": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"10549": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"10550": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"10551": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"10552": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"10553": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"10555": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"10556": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"10557": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"10558": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"10559": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"10560": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"10561": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"10562": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"10563": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"10564": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"10565": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"10566": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"10567": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"10568": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"10569": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"10570": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"10571": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"10572": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"10573": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"10574": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"10575": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"10576": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/product/service.ts"
		},
		"reflections": {
			"1": 9567
		}
	}
}