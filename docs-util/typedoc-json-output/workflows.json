{
	"id": 0,
	"name": "workflows",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 671,
			"name": "MODULE_RESOURCE_TYPE",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 673,
					"name": "ISOLATED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/dist/modules-sdk/index.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "isolated"
					}
				},
				{
					"id": 672,
					"name": "SHARED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "types/dist/modules-sdk/index.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "shared"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						673,
						672
					]
				}
			],
			"sources": [
				{
					"fileName": "types/dist/modules-sdk/index.d.ts",
					"line": 13,
					"character": 20
				}
			]
		},
		{
			"id": 535,
			"name": "TransactionHandlerType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 537,
					"name": "COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensate"
					}
				},
				{
					"id": 536,
					"name": "INVOKE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 2,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoke"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						537,
						536
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/types.d.ts",
					"line": 1,
					"character": 20
				}
			]
		},
		{
			"id": 757,
			"name": "TransactionState",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 761,
					"name": "COMPENSATING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "compensating"
					}
				},
				{
					"id": 762,
					"name": "DONE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "done"
					}
				},
				{
					"id": 765,
					"name": "DORMANT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "dormant"
					}
				},
				{
					"id": 764,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "failed"
					}
				},
				{
					"id": 759,
					"name": "INVOKING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "invoking"
					}
				},
				{
					"id": 758,
					"name": "NOT_STARTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "not_started"
					}
				},
				{
					"id": 763,
					"name": "REVERTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "reverted"
					}
				},
				{
					"id": 766,
					"name": "SKIPPED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "skipped"
					}
				},
				{
					"id": 760,
					"name": "WAITING_TO_COMPENSATE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "waiting_to_compensate"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						761,
						762,
						765,
						764,
						759,
						758,
						763,
						766,
						760
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/types.d.ts",
					"line": 24,
					"character": 20
				}
			]
		},
		{
			"id": 819,
			"name": "TransactionStepStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 820,
					"name": "IDLE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "idle"
					}
				},
				{
					"id": 821,
					"name": "OK",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "ok"
					}
				},
				{
					"id": 824,
					"name": "PERMANENT_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "permanent_failure"
					}
				},
				{
					"id": 823,
					"name": "TEMPORARY_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "temp_failure"
					}
				},
				{
					"id": 822,
					"name": "WAITING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"type": {
						"type": "literal",
						"value": "waiting_response"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						820,
						821,
						824,
						823,
						822
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/types.d.ts",
					"line": 17,
					"character": 20
				}
			]
		},
		{
			"id": 674,
			"name": "EXTERNAL",
			"variant": "declaration",
			"kind": 16,
			"flags": {},
			"sources": [
				{
					"fileName": "types/dist/modules-sdk/index.d.ts",
					"line": 11,
					"character": 4
				}
			],
			"type": {
				"type": "literal",
				"value": "external"
			}
		},
		{
			"id": 670,
			"name": "INTERNAL",
			"variant": "declaration",
			"kind": 16,
			"flags": {},
			"sources": [
				{
					"fileName": "types/dist/modules-sdk/index.d.ts",
					"line": 10,
					"character": 4
				}
			],
			"type": {
				"type": "literal",
				"value": "internal"
			}
		},
		{
			"id": 597,
			"name": "DistributedTransaction",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "DistributedTransaction represents a distributed transaction, which is a transaction that is composed of multiple steps that are executed in a specific order."
					}
				]
			},
			"children": [
				{
					"id": 603,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 69,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 604,
							"name": "new DistributedTransaction",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 69,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 605,
									"name": "flow",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 745,
										"name": "TransactionFlow",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 606,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 675,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 607,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 608,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 648,
											"name": "TransactionStepError",
											"package": "@medusajs/orchestration"
										}
									}
								},
								{
									"id": 609,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 347,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 597,
								"name": "DistributedTransaction",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 616,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 68,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 615,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 67,
							"character": 21
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 610,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 62,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 611,
					"name": "handler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 63,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 675,
						"name": "TransactionStepHandler",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 613,
					"name": "modelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 65,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 612,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 64,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 614,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 66,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 599,
					"name": "keyPrefix",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 81,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 598,
					"name": "keyValueStore",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 80,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 638,
					"name": "isPartiallyCompleted",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 77,
							"character": 8
						}
					],
					"getSignature": {
						"id": 639,
						"name": "isPartiallyCompleted",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
								"line": 77,
								"character": 8
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 624,
					"name": "addError",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 73,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 625,
							"name": "addError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 73,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 626,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 627,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 535,
										"name": "TransactionHandlerType",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 628,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 629,
					"name": "addResponse",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 74,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 630,
							"name": "addResponse",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 74,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 631,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 632,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 535,
										"name": "TransactionHandlerType",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 633,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 640,
					"name": "canInvoke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 78,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 641,
							"name": "canInvoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 78,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 642,
					"name": "canRevert",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 79,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 643,
							"name": "canRevert",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 79,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 646,
					"name": "deleteCheckpoint",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 84,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 647,
							"name": "deleteCheckpoint",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 84,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 619,
					"name": "getContext",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 71,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 620,
							"name": "getContext",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 71,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 347,
								"name": "TransactionContext",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 621,
					"name": "getErrors",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 72,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 622,
							"name": "getErrors",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 72,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 623,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 535,
										"name": "TransactionHandlerType",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 648,
									"name": "TransactionStepError",
									"package": "@medusajs/orchestration"
								}
							}
						}
					]
				},
				{
					"id": 617,
					"name": "getFlow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 70,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 618,
							"name": "getFlow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 70,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 745,
								"name": "TransactionFlow",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 636,
					"name": "getState",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 76,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 637,
							"name": "getState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 76,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 757,
								"name": "TransactionState",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 634,
					"name": "hasFinished",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 75,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 635,
							"name": "hasFinished",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 644,
					"name": "saveCheckpoint",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 82,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 645,
							"name": "saveCheckpoint",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 82,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 736,
										"name": "TransactionCheckpoint",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 600,
					"name": "loadTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 83,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 601,
							"name": "loadTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 83,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 602,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": 736,
												"name": "TransactionCheckpoint",
												"package": "@medusajs/orchestration"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						603
					]
				},
				{
					"title": "Properties",
					"children": [
						616,
						615,
						610,
						611,
						613,
						612,
						614,
						599,
						598
					]
				},
				{
					"title": "Accessors",
					"children": [
						638
					]
				},
				{
					"title": "Methods",
					"children": [
						624,
						629,
						640,
						642,
						646,
						619,
						621,
						617,
						636,
						634,
						644,
						600
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 61,
					"character": 21
				}
			]
		},
		{
			"id": 395,
			"name": "LocalWorkflow",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 396,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 397,
							"name": "new LocalWorkflow",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 398,
									"name": "workflowId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 399,
									"name": "modulesLoaded",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 320,
												"name": "MedusaContainer",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 400,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 402,
																"name": "__definition",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "types/dist/modules-sdk/index.d.ts",
																		"line": 92,
																		"character": 4
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 383,
																	"name": "ModuleDefinition",
																	"package": "@medusajs/types"
																}
															},
															{
																"id": 401,
																"name": "__joinerConfig",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "types/dist/modules-sdk/index.d.ts",
																		"line": 91,
																		"character": 4
																	}
																],
																"type": {
																	"type": "reference",
																	"target": 356,
																	"name": "ModuleJoinerConfig",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	402,
																	401
																]
															}
														],
														"sources": [
															{
																"fileName": "types/dist/modules-sdk/index.d.ts",
																"line": 90,
																"character": 37
															}
														]
													}
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 395,
								"name": "LocalWorkflow",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 403,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 10,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 320,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 405,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 12,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 227,
						"name": "OrchestratorBuilder",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 407,
					"name": "handlers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 14,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 593,
								"name": "StepHandler",
								"package": "@medusajs/orchestration"
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 406,
					"name": "workflow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 13,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 578,
						"name": "WorkflowDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 404,
					"name": "workflowId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 11,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 427,
					"name": "addAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 21,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 428,
							"name": "addAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 429,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 430,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 593,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 431,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 492,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 450,
					"name": "appendAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 451,
							"name": "appendAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 452,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 453,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 454,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 593,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 455,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 492,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 475,
					"name": "assertHandler",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 31,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 476,
							"name": "assertHandler",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 31,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 477,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 593,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 478,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 408,
					"name": "commit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 16,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 409,
							"name": "commit",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 16,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 468,
					"name": "deleteAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 469,
							"name": "deleteAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 29,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 470,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 471,
									"name": "parentSteps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 410,
					"name": "getFlow",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 17,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 411,
							"name": "getFlow",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 492,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 444,
					"name": "insertActionAfter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 445,
							"name": "insertActionAfter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 446,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 447,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 448,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 593,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 449,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 492,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 438,
					"name": "insertActionBefore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 439,
							"name": "insertActionBefore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 440,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 441,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 442,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 593,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 443,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 492,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 464,
					"name": "mergeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 465,
							"name": "mergeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 28,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 466,
									"name": "where",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 467,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 456,
					"name": "moveAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 457,
							"name": "moveAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 458,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 459,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 460,
					"name": "moveAndMergeNextAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 461,
							"name": "moveAndMergeNextAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 462,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 463,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 472,
					"name": "pruneAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 473,
							"name": "pruneAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 30,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 474,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 422,
					"name": "registerStepFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 20,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 423,
							"name": "registerStepFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 424,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 425,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 426,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 340,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 597,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 417,
					"name": "registerStepSuccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 19,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 418,
							"name": "registerStepSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 419,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 420,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 421,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 340,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 597,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 432,
					"name": "replaceAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 433,
							"name": "replaceAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 434,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 435,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 436,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 593,
										"name": "StepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 437,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 492,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 412,
					"name": "run",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 413,
							"name": "run",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 414,
									"name": "uniqueTransactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 415,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 416,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 340,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 597,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						396
					]
				},
				{
					"title": "Properties",
					"children": [
						403,
						405,
						407,
						406,
						404
					]
				},
				{
					"title": "Methods",
					"children": [
						427,
						450,
						475,
						408,
						468,
						410,
						444,
						438,
						464,
						456,
						460,
						472,
						422,
						417,
						432,
						412
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
					"line": 9,
					"character": 21
				}
			]
		},
		{
			"id": 227,
			"name": "OrchestratorBuilder",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 228,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 229,
							"name": "new OrchestratorBuilder",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 230,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 492,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 232,
					"name": "hasChanges_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 9,
							"character": 14
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 231,
					"name": "steps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 8,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"target": 504,
						"name": "InternalStep",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 233,
					"name": "hasChanges",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 10,
							"character": 8
						}
					],
					"getSignature": {
						"id": 234,
						"name": "hasChanges",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"sources": [
							{
								"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
								"line": 10,
								"character": 8
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 238,
					"name": "addAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 239,
							"name": "addAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 240,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 241,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 492,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 261,
					"name": "appendAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 18,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 262,
							"name": "appendAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 263,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 264,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 265,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 492,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 257,
					"name": "appendTo",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 17,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 258,
							"name": "appendTo",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 17,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 259,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 504,
												"name": "InternalStep",
												"package": "@medusajs/orchestration"
											}
										]
									}
								},
								{
									"id": 260,
									"name": "newStep",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 504,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 314,
					"name": "build",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 315,
							"name": "build",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 492,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 286,
					"name": "deleteAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 287,
							"name": "deleteAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 26,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 288,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 289,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 504,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 305,
					"name": "findLastStep",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 31,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 306,
							"name": "findLastStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 31,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 307,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 504,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 504,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 297,
					"name": "findOrThrowStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 29,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 298,
							"name": "findOrThrowStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 29,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 299,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 300,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 504,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 504,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 301,
					"name": "findParentStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 30,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 302,
							"name": "findParentStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 30,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 303,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 304,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 504,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 504,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					]
				},
				{
					"id": 293,
					"name": "findStepByAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 28,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 294,
							"name": "findStepByAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 28,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 295,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 296,
									"name": "step",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 504,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": 504,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								]
							}
						}
					]
				},
				{
					"id": 252,
					"name": "insertActionAfter",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 16,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 253,
							"name": "insertActionAfter",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 254,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 255,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 256,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 492,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 247,
					"name": "insertActionBefore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 15,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 248,
							"name": "insertActionBefore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 249,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 250,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 251,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 492,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 235,
					"name": "load",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 236,
							"name": "load",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 237,
									"name": "steps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 492,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 282,
					"name": "mergeActions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 283,
							"name": "mergeActions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 25,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 284,
									"name": "where",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 285,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 266,
					"name": "move",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 19,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 267,
							"name": "move",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 19,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 268,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 269,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 270,
									"name": "__namedParameters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 271,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 273,
													"name": "mergeNext",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
															"line": 21,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 272,
													"name": "runInParallel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
															"line": 20,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														273,
														272
													]
												}
											],
											"sources": [
												{
													"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
													"line": 19,
													"character": 95
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 274,
					"name": "moveAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 275,
							"name": "moveAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 276,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 277,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 278,
					"name": "moveAndMergeNextAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 279,
							"name": "moveAndMergeNextAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 24,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 280,
									"name": "actionToMove",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 281,
									"name": "targetAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 290,
					"name": "pruneAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 27,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 291,
							"name": "pruneAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 292,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 242,
					"name": "replaceAction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 243,
							"name": "replaceAction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 244,
									"name": "existingAction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 245,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 246,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 492,
												"name": "TransactionStepsDefinition",
												"package": "@medusajs/orchestration"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 308,
					"name": "updateDepths",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 32,
							"character": 14
						}
					],
					"signatures": [
						{
							"id": 309,
							"name": "updateDepths",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
									"line": 32,
									"character": 14
								}
							],
							"parameters": [
								{
									"id": 310,
									"name": "startingStep",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 504,
										"name": "InternalStep",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 311,
									"name": "parent",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 312,
									"name": "incr",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 313,
									"name": "beginFrom",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						228
					]
				},
				{
					"title": "Properties",
					"children": [
						232,
						231
					]
				},
				{
					"title": "Accessors",
					"children": [
						233
					]
				},
				{
					"title": "Methods",
					"children": [
						238,
						261,
						257,
						314,
						286,
						305,
						297,
						301,
						293,
						252,
						247,
						235,
						282,
						266,
						274,
						278,
						290,
						242,
						308
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
					"line": 7,
					"character": 21
				}
			]
		},
		{
			"id": 40,
			"name": "StepResponse",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This class is used to create the response returned by a step. A step return its data by returning an instance of "
					},
					{
						"kind": "code",
						"text": "`StepResponse`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 41,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 24,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/step-response.ts#L24"
						}
					],
					"signatures": [
						{
							"id": 42,
							"name": "new StepResponse",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor of the StepResponse"
									}
								]
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/step-response.ts#L24"
								}
							],
							"typeParameter": [
								{
									"id": 43,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the output of the step."
											}
										]
									}
								},
								{
									"id": 44,
									"name": "TCompensateInput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
											},
											{
												"kind": "code",
												"text": "`TCompensateInput`"
											},
											{
												"kind": "text",
												"text": " is the same\nas that of "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"default": {
										"type": "reference",
										"target": -1,
										"name": "TOutput",
										"refersToTypeParameter": true
									}
								}
							],
							"parameters": [
								{
									"id": 45,
									"name": "output",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The output of the step."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "TOutput",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 46,
									"name": "compensateInput",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The input to be passed as a parameter to the step's compensation function. If not provided, the "
											},
											{
												"kind": "code",
												"text": "`output`"
											},
											{
												"kind": "text",
												"text": " will be provided instead."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "TCompensateInput",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 40,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TOutput",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "TCompensateInput",
										"refersToTypeParameter": true
									}
								],
								"name": "StepResponse",
								"package": "@medusajs/workflows-sdk"
							}
						}
					]
				},
				{
					"id": 47,
					"name": "#__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 12,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/step-response.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "symbol"
					},
					"defaultValue": "SymbolWorkflowStepResponse"
				},
				{
					"id": 49,
					"name": "#compensateInput",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isOptional": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 14,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/step-response.ts#L14"
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TCompensateInput",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 48,
					"name": "#output",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isReadonly": true
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
							"line": 13,
							"character": 11,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/step-response.ts#L13"
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TOutput",
						"refersToTypeParameter": true
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						41
					]
				},
				{
					"title": "Properties",
					"children": [
						47,
						49,
						48
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/step-response.ts",
					"line": 11,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/step-response.ts#L11"
				}
			],
			"typeParameters": [
				{
					"id": 62,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					}
				},
				{
					"id": 63,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the compensation input. If the step doesn't specify any compensation input, then the type of "
							},
							{
								"kind": "code",
								"text": "`TCompensateInput`"
							},
							{
								"kind": "text",
								"text": " is the same\nas that of "
							},
							{
								"kind": "code",
								"text": "`TOutput`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"default": {
						"type": "reference",
						"target": -1,
						"name": "TOutput",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 736,
			"name": "TransactionCheckpoint",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 737,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 738,
							"name": "new TransactionCheckpoint",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 45,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 739,
									"name": "flow",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 745,
										"name": "TransactionFlow",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 740,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 347,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 741,
									"name": "errors",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 648,
											"name": "TransactionStepError",
											"package": "@medusajs/orchestration"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 736,
								"name": "TransactionCheckpoint",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 743,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 347,
						"name": "TransactionContext",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 744,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 648,
							"name": "TransactionStepError",
							"package": "@medusajs/orchestration"
						}
					}
				},
				{
					"id": 742,
					"name": "flow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 745,
						"name": "TransactionFlow",
						"package": "@medusajs/orchestration"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						737
					]
				},
				{
					"title": "Properties",
					"children": [
						743,
						744,
						742
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 41,
					"character": 21
				}
			]
		},
		{
			"id": 347,
			"name": "TransactionContext",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 348,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 349,
							"name": "new TransactionContext",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 33,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 350,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 351,
									"name": "invoke",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 352,
									"name": "compensate",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 347,
								"name": "TransactionContext",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 355,
					"name": "compensate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing responses of Compensate handlers on steps flagged with saveResponse."
							}
						]
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 354,
					"name": "invoke",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing responses of Invoke handlers on steps flagged with saveResponse."
							}
						]
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 31,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 353,
					"name": "payload",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Object containing the initial payload."
							}
						]
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						348
					]
				},
				{
					"title": "Properties",
					"children": [
						355,
						354,
						353
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 29,
					"character": 21
				}
			]
		},
		{
			"id": 682,
			"name": "TransactionOrchestrator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 695,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 28,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 696,
							"name": "new TransactionOrchestrator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 28,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 697,
									"name": "id",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 698,
									"name": "definition",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 492,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 682,
								"name": "TransactionOrchestrator",
								"package": "@medusajs/orchestration"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 708,
					"name": "canContinue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 36,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 707,
					"name": "canMoveBackward",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 35,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 706,
					"name": "canMoveForward",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 34,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 709,
					"name": "checkAllSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 37,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 702,
					"name": "compensateSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 26,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 718,
					"name": "createTransactionFlow",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 52,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 700,
					"name": "definition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 23,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 711,
					"name": "executeNext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 41,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 710,
					"name": "flagStepsToRevert",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 38,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 705,
					"name": "getCompensationSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 33,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 704,
					"name": "getInvokeSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 32,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 703,
					"name": "getPreviousStep",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 31,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 699,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 701,
					"name": "invokeSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 25,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 684,
					"name": "DEFAULT_RETRIES",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 27,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 683,
					"name": "ROOT_STEP",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 24,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 685,
					"name": "SEPARATOR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 29,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 692,
					"name": "buildSteps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 54,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 693,
					"name": "getStepByAction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 61,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 694,
					"name": "getTransactionAndStepFromIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 62,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 691,
					"name": "loadTransactionById",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 53,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 690,
					"name": "setStepFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 40,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 689,
					"name": "setStepSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 39,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 719,
					"name": "beginTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 60,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 720,
							"name": "beginTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new transaction"
									}
								]
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 60,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 721,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "unique identifier of the transaction"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 722,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "function to handle action of the transaction"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 675,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 723,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "payload to be passed to all the transaction steps"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 597,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 715,
					"name": "cancelTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 51,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 716,
							"name": "cancelTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Cancel and revert a transaction compensating all its executed steps. It can be an ongoing transaction or a completed one"
									}
								]
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 51,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 717,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to be reverted"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 597,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 730,
					"name": "registerStepFailure",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 78,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 731,
							"name": "registerStepFailure",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a step failure for a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 78,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 732,
									"name": "responseIdempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The idempotency key for the step"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 733,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The error that caused the failure"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 734,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The handler function to execute the step"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 675,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 735,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current transaction"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 597,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 597,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 724,
					"name": "registerStepSuccess",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 69,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 725,
							"name": "registerStepSuccess",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a step success for a specific transaction and step"
									}
								]
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 69,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 726,
									"name": "responseIdempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The idempotency key for the step"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 727,
									"name": "handler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The handler function to execute the step"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 675,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 728,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The current transaction. If not provided it will be loaded based on the responseIdempotencyKey"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 597,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 729,
									"name": "response",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The response of the step"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 597,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 712,
					"name": "resume",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 46,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 713,
							"name": "resume",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Start a new transaction or resume a transaction that has been previously started"
									}
								]
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 46,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 714,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to resume"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 597,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 686,
					"name": "getKeyName",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 30,
							"character": 11
						}
					],
					"signatures": [
						{
							"id": 687,
							"name": "getKeyName",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 30,
									"character": 11
								}
							],
							"parameters": [
								{
									"id": 688,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						695
					]
				},
				{
					"title": "Properties",
					"children": [
						708,
						707,
						706,
						709,
						702,
						718,
						700,
						711,
						710,
						705,
						704,
						703,
						699,
						701,
						684,
						683,
						685,
						692,
						693,
						694,
						691,
						690,
						689
					]
				},
				{
					"title": "Methods",
					"children": [
						719,
						715,
						730,
						724,
						712,
						686
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
					"line": 21,
					"character": 21
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 767,
			"name": "TransactionPayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 768,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 56,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 769,
							"name": "new TransactionPayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 56,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 770,
									"name": "metadata",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The metadata of the transaction."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 331,
										"name": "TransactionMetadata",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 771,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The initial payload data to begin a transation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 772,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Object gathering responses of all steps flagged with saveResponse."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 347,
										"name": "TransactionContext",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 767,
								"name": "TransactionPayload",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 775,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 50,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 347,
						"name": "TransactionContext",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 774,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 49,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 773,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 331,
						"name": "TransactionMetadata",
						"package": "@medusajs/orchestration"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						768
					]
				},
				{
					"title": "Properties",
					"children": [
						775,
						774,
						773
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 47,
					"character": 21
				}
			]
		},
		{
			"id": 776,
			"name": "TransactionStep",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@classdesc",
						"content": [
							{
								"kind": "text",
								"text": "A class representing a single step in a transaction flow"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 777,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 778,
							"name": "new TransactionStep",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 776,
								"name": "TransactionStep",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 791,
					"name": "attempts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 33,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 787,
					"name": "compensate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 788,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 789,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
											"line": 30,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 757,
										"name": "TransactionState",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 790,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
											"line": 31,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 819,
										"name": "TransactionStepStatus",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										789,
										790
									]
								}
							],
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
									"line": 29,
									"character": 16
								}
							]
						}
					}
				},
				{
					"id": 782,
					"name": "definition",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 24,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 492,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 781,
					"name": "depth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 23,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 792,
					"name": "failures",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 780,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 22,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 783,
					"name": "invoke",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 784,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 785,
									"name": "state",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
											"line": 26,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 757,
										"name": "TransactionState",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 786,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
											"line": 27,
											"character": 8
										}
									],
									"type": {
										"type": "reference",
										"target": 819,
										"name": "TransactionStepStatus",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										785,
										786
									]
								}
							],
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
									"line": 25,
									"character": 12
								}
							]
						}
					}
				},
				{
					"id": 793,
					"name": "lastAttempt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 35,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 794,
					"name": "next",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 795,
					"name": "saveResponse",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 779,
					"name": "stepFailed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "id - The id of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "depth - The depth of the step in the flow"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "definition - The definition of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "invoke - The current state and status of the invoke action of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "compensate - The current state and status of the compensate action of the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "attempts - The number of attempts made to execute the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "failures - The number of failures encountered while executing the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "lastAttempt - The timestamp of the last attempt made to execute the step"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "next - The ids of the next steps in the flow"
									}
								]
							},
							{
								"tag": "@member",
								"content": [
									{
										"kind": "text",
										"text": "saveResponse - A flag indicating if the response of a step should be shared in the transaction context and available to subsequent steps - default is true"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 21,
							"character": 12
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 801,
					"name": "beginCompensation",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 802,
							"name": "beginCompensation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
									"line": 42,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 816,
					"name": "canCompensate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 48,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 817,
							"name": "canCompensate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
									"line": 48,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 818,
									"name": "flowState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 757,
										"name": "TransactionState",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 813,
					"name": "canInvoke",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 47,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 814,
							"name": "canInvoke",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
									"line": 47,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 815,
									"name": "flowState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 757,
										"name": "TransactionState",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 811,
					"name": "canRetry",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 46,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 812,
							"name": "canRetry",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
									"line": 46,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 805,
					"name": "changeState",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 806,
							"name": "changeState",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
									"line": 44,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 807,
									"name": "toState",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 757,
										"name": "TransactionState",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 808,
					"name": "changeStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 809,
							"name": "changeStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
									"line": 45,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 810,
									"name": "toStatus",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 819,
										"name": "TransactionStepStatus",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 796,
					"name": "getStates",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 797,
							"name": "getStates",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
									"line": 38,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 798,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 799,
											"name": "state",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 757,
												"name": "TransactionState",
												"package": "@medusajs/orchestration"
											}
										},
										{
											"id": 800,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
													"line": 40,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 819,
												"name": "TransactionStepStatus",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												799,
												800
											]
										}
									],
									"sources": [
										{
											"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
											"line": 38,
											"character": 17
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 803,
					"name": "isCompensating",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 43,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 804,
							"name": "isCompensating",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
									"line": 43,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						777
					]
				},
				{
					"title": "Properties",
					"children": [
						791,
						787,
						782,
						781,
						792,
						780,
						783,
						793,
						794,
						795,
						779
					]
				},
				{
					"title": "Methods",
					"children": [
						801,
						816,
						813,
						811,
						805,
						808,
						796,
						803
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
					"line": 8,
					"character": 21
				}
			]
		},
		{
			"id": 648,
			"name": "TransactionStepError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 649,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 39,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 650,
							"name": "new TransactionStepError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 39,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 651,
									"name": "action",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 652,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 535,
										"name": "TransactionHandlerType",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 653,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 648,
								"name": "TransactionStepError",
								"package": "@medusajs/orchestration"
							}
						}
					]
				},
				{
					"id": 654,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 656,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 655,
					"name": "handlerType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 37,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 535,
						"name": "TransactionHandlerType",
						"package": "@medusajs/orchestration"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						649
					]
				},
				{
					"title": "Properties",
					"children": [
						654,
						656,
						655
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 35,
					"character": 21
				}
			]
		},
		{
			"id": 340,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A shared context object that is used to share resources between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 344,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/dist/shared-context.d.ts",
							"line": 38,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 343,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/dist/shared-context.d.ts",
							"line": 34,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 342,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/dist/shared-context.d.ts",
							"line": 30,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TManager",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 345,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/dist/shared-context.d.ts",
							"line": 42,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 341,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/dist/shared-context.d.ts",
							"line": 26,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TManager",
						"refersToTypeParameter": true
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						344,
						343,
						342,
						345,
						341
					]
				}
			],
			"sources": [
				{
					"fileName": "types/dist/shared-context.d.ts",
					"line": 22,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 346,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 504,
			"name": "InternalStep",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 508,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.action"
					}
				},
				{
					"id": 514,
					"name": "async",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.async"
					}
				},
				{
					"id": 509,
					"name": "continueOnPermanentFailure",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.continueOnPermanentFailure"
					}
				},
				{
					"id": 506,
					"name": "depth",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 511,
					"name": "maxRetries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 9,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.maxRetries"
					}
				},
				{
					"id": 505,
					"name": "next",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 3,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 504,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 504,
									"name": "InternalStep",
									"package": "@medusajs/orchestration"
								}
							}
						]
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.next"
					}
				},
				{
					"id": 510,
					"name": "noCompensation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.noCompensation"
					}
				},
				{
					"id": 515,
					"name": "noWait",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.noWait"
					}
				},
				{
					"id": 507,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 504,
								"name": "InternalStep",
								"package": "@medusajs/orchestration"
							}
						]
					}
				},
				{
					"id": 512,
					"name": "retryInterval",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 10,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.retryInterval"
					}
				},
				{
					"id": 516,
					"name": "saveResponse",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 14,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.saveResponse"
					}
				},
				{
					"id": 513,
					"name": "timeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "TransactionStepsDefinition.timeout"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						508,
						514,
						509,
						506,
						511,
						505,
						510,
						515,
						507,
						512,
						516,
						513
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/orchestrator-builder.d.ts",
					"line": 2,
					"character": 10
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 492,
					"name": "TransactionStepsDefinition",
					"package": "@medusajs/orchestration"
				}
			]
		},
		{
			"id": 538,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 540,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/dist/joiner/index.d.ts",
							"line": 36,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 657,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 657,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 551,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/dist/joiner/index.d.ts",
							"line": 53,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 547,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/dist/joiner/index.d.ts",
							"line": 46,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 548,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 550,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "types/dist/joiner/index.d.ts",
												"line": 48,
												"character": 8
											}
										],
										"type": {
											"type": "reference",
											"target": 660,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									},
									{
										"id": 549,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "types/dist/joiner/index.d.ts",
												"line": 47,
												"character": 8
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											550,
											549
										]
									}
								],
								"sources": [
									{
										"fileName": "types/dist/joiner/index.d.ts",
										"line": 46,
										"character": 14
									}
								]
							}
						}
					}
				},
				{
					"id": 541,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/dist/joiner/index.d.ts",
							"line": 40,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 542,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 544,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types/dist/joiner/index.d.ts",
															"line": 42,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 543,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "types/dist/joiner/index.d.ts",
															"line": 41,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														544,
														543
													]
												}
											],
											"sources": [
												{
													"fileName": "types/dist/joiner/index.d.ts",
													"line": 40,
													"character": 41
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 545,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/dist/joiner/index.d.ts",
							"line": 44,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 546,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/dist/joiner/index.d.ts",
							"line": 45,
							"character": 4
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 660,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 539,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/dist/joiner/index.d.ts",
							"line": 32,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						540,
						551,
						547,
						541,
						545,
						546,
						539
					]
				}
			],
			"sources": [
				{
					"fileName": "types/dist/joiner/index.d.ts",
					"line": 31,
					"character": 17
				}
			]
		},
		{
			"id": 657,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 659,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/dist/joiner/index.d.ts",
							"line": 29,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 658,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "types/dist/joiner/index.d.ts",
							"line": 25,
							"character": 4
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						659,
						658
					]
				}
			],
			"sources": [
				{
					"fileName": "types/dist/joiner/index.d.ts",
					"line": 24,
					"character": 17
				}
			]
		},
		{
			"id": 165,
			"name": "StepExecutionContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The step's context."
					}
				]
			},
			"children": [
				{
					"id": 166,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The container used to access resources, such as services, in the step."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 74,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L74"
						}
					],
					"type": {
						"type": "reference",
						"target": 320,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 168,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A shared context object that is used to share resources between the application and the module."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 82,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L82"
						}
					],
					"type": {
						"type": "reference",
						"target": 340,
						"name": "Context",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 167,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata passed in the input."
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 78,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L78"
						}
					],
					"type": {
						"type": "reference",
						"target": 331,
						"name": "TransactionMetadata",
						"package": "@medusajs/orchestration"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						166,
						168,
						167
					]
				}
			],
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 70,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L70"
				}
			]
		},
		{
			"id": 578,
			"name": "WorkflowDefinition",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 586,
					"name": "flow_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 7,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 492,
						"name": "TransactionStepsDefinition",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 580,
					"name": "handler",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 5,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 581,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 5,
									"character": 13
								}
							],
							"signatures": [
								{
									"id": 582,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 5,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 583,
											"name": "container",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 320,
												"name": "MedusaContainer",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 584,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 340,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 675,
										"name": "TransactionStepHandler",
										"package": "@medusajs/orchestration"
									}
								}
							]
						}
					}
				},
				{
					"id": 587,
					"name": "handlers_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 8,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Map"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 588,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 590,
											"name": "compensate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 10,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 517,
												"name": "WorkflowStepHandler",
												"package": "@medusajs/orchestration"
											}
										},
										{
											"id": 589,
											"name": "invoke",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 9,
													"character": 8
												}
											],
											"type": {
												"type": "reference",
												"target": 517,
												"name": "WorkflowStepHandler",
												"package": "@medusajs/orchestration"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												590,
												589
											]
										}
									],
									"sources": [
										{
											"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 8,
											"character": 27
										}
									]
								}
							}
						],
						"name": "Map",
						"package": "typescript"
					}
				},
				{
					"id": 579,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 592,
					"name": "optionalModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				},
				{
					"id": 585,
					"name": "orchestrator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 6,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": 682,
						"name": "TransactionOrchestrator",
						"package": "@medusajs/orchestration"
					}
				},
				{
					"id": 591,
					"name": "requiredModules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
							"qualifiedName": "Set"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Set",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						586,
						580,
						587,
						579,
						592,
						585,
						591
					]
				}
			],
			"sources": [
				{
					"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 185,
			"name": "CompensateFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 58,
					"character": 5,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-step.ts#L58"
				}
			],
			"typeParameters": [
				{
					"id": 190,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the argument passed to the compensation function. If not specified, then it will be the same type as the invocation function's output."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 186,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 58,
							"character": 23,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-step.ts#L58"
						}
					],
					"signatures": [
						{
							"id": 187,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of compensation function passed to a step."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There's no expected type to be returned by the compensation function."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 188,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 189,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 165,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 139,
			"name": "CreateWorkflowComposerContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 49,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L49"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 140,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 144,
							"name": "flow",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 53,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L53"
								}
							],
							"type": {
								"type": "reference",
								"target": 227,
								"name": "OrchestratorBuilder",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 145,
							"name": "handlers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L54"
								}
							],
							"type": {
								"type": "reference",
								"target": 316,
								"name": "WorkflowHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 151,
							"name": "hookBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 58,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L58"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 152,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 58,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L58"
										}
									],
									"signatures": [
										{
											"id": 153,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameter": [
												{
													"id": 156,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 154,
													"name": "name",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 155,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Function"
														},
														"name": "Function",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 137,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TOutput",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							}
						},
						{
							"id": 142,
							"name": "hooksCallback_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L51"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Function"
											},
											"name": "Function",
											"package": "typescript"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 141,
							"name": "hooks_",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L50"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 157,
							"name": "parallelizeBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 62,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L62"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 158,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 62,
											"character": 21,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L62"
										}
									],
									"signatures": [
										{
											"id": 159,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameter": [
												{
													"id": 164,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 137,
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													},
													"default": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 137,
															"name": "WorkflowData",
															"package": "@medusajs/workflows-sdk"
														}
													}
												}
											],
											"parameters": [
												{
													"id": 160,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 161,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/type.ts",
																	"line": 63,
																	"character": 8,
																	"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L63"
																}
															],
															"signatures": [
																{
																	"id": 162,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 163,
																			"name": "this",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "reference",
																				"target": 139,
																				"name": "CreateWorkflowComposerContext",
																				"package": "@medusajs/workflows-sdk"
																			}
																		}
																	],
																	"type": {
																		"type": "reference",
																		"target": -1,
																		"name": "TOutput",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "TOutput",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 146,
							"name": "stepBinder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 55,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L55"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 147,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 55,
											"character": 14,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L55"
										}
									],
									"signatures": [
										{
											"id": 148,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameter": [
												{
													"id": 150,
													"name": "TOutput",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 149,
													"name": "fn",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 121,
														"name": "StepFunctionResult",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 137,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TOutput",
														"refersToTypeParameter": true
													}
												],
												"name": "WorkflowData",
												"package": "@medusajs/workflows-sdk"
											}
										}
									]
								}
							}
						},
						{
							"id": 143,
							"name": "workflowId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L52"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								144,
								145,
								151,
								142,
								141,
								157,
								146,
								143
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 49,
							"character": 44,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L49"
						}
					]
				}
			}
		},
		{
			"id": 566,
			"name": "ExternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types/dist/modules-sdk/index.d.ts",
					"line": 33,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 567,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 576,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 45,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 569,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 35,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 383,
								"name": "ModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 577,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 49,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 575,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 41,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 568,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 34,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 674,
								"name": "MODULE_SCOPE.EXTERNAL",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 570,
							"name": "server",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 36,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 571,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 574,
											"name": "keepAlive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/dist/modules-sdk/index.d.ts",
													"line": 39,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 572,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/dist/modules-sdk/index.d.ts",
													"line": 37,
													"character": 8
												}
											],
											"type": {
												"type": "literal",
												"value": "http"
											}
										},
										{
											"id": 573,
											"name": "url",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/dist/modules-sdk/index.d.ts",
													"line": 38,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												574,
												572,
												573
											]
										}
									],
									"sources": [
										{
											"fileName": "types/dist/modules-sdk/index.d.ts",
											"line": 36,
											"character": 13
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								576,
								569,
								577,
								575,
								568,
								570
							]
						}
					],
					"sources": [
						{
							"fileName": "types/dist/modules-sdk/index.d.ts",
							"line": 33,
							"character": 40
						}
					]
				}
			}
		},
		{
			"id": 485,
			"name": "FlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/helper/workflow-export.ts",
					"line": 15,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/helper/workflow-export.ts#L15"
				}
			],
			"typeParameters": [
				{
					"id": 491,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 486,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 488,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/helper/workflow-export.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/helper/workflow-export.ts#L17"
								}
							],
							"type": {
								"type": "reference",
								"target": 340,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 487,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/helper/workflow-export.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/helper/workflow-export.ts#L16"
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "TData",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 489,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/helper/workflow-export.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/helper/workflow-export.ts#L18"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 490,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "workflows-sdk/src/helper/workflow-export.ts",
									"line": 19,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/helper/workflow-export.ts#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								488,
								487,
								489,
								490
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/helper/workflow-export.ts",
							"line": 15,
							"character": 46,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/helper/workflow-export.ts#L15"
						}
					]
				}
			}
		},
		{
			"id": 220,
			"name": "Func",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/transform.ts",
					"line": 14,
					"character": 5,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/transform.ts#L14"
				}
			],
			"typeParameters": [
				{
					"id": 225,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 226,
					"name": "U",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 221,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/transform.ts",
							"line": 14,
							"character": 18,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/transform.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 222,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 223,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 224,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 165,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": -1,
										"name": "U",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "U",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 212,
			"name": "Func1",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/transform.ts",
					"line": 5,
					"character": 5,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/transform.ts#L5"
				}
			],
			"typeParameters": [
				{
					"id": 218,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "reference",
								"target": 137,
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				},
				{
					"id": 219,
					"name": "U",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 213,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/transform.ts",
							"line": 5,
							"character": 49,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/transform.ts#L5"
						}
					],
					"signatures": [
						{
							"id": 214,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 215,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reference",
											"target": 137,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "U"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										},
										"trueType": {
											"type": "reference",
											"target": -1,
											"name": "U",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "typeOperator",
													"operator": "keyof",
													"target": {
														"type": "reference",
														"target": -1,
														"name": "T",
														"refersToTypeParameter": true
													}
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": -1,
															"name": "K",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "reference",
														"target": 137,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "U"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													},
													"trueType": {
														"type": "reference",
														"target": -1,
														"name": "U",
														"refersToTypeParameter": true
													},
													"falseType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": -1,
															"name": "K",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "T",
															"refersToTypeParameter": true
														}
													}
												}
											},
											"falseType": {
												"type": "reflection",
												"declaration": {
													"id": 216,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/transform.ts",
															"line": 10,
															"character": 6,
															"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/transform.ts#L10"
														}
													]
												}
											}
										}
									}
								},
								{
									"id": 217,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 165,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": -1,
										"name": "U",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "U",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 556,
			"name": "InternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types/dist/modules-sdk/index.d.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 557,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 564,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 27,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 561,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 383,
								"name": "ModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 560,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 565,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 31,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 563,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 23,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 562,
							"name": "resolve",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 559,
							"name": "resources",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 671,
								"name": "MODULE_RESOURCE_TYPE",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 558,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 670,
								"name": "MODULE_SCOPE.INTERNAL",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								564,
								561,
								560,
								565,
								563,
								562,
								559,
								558
							]
						}
					],
					"sources": [
						{
							"fileName": "types/dist/modules-sdk/index.d.ts",
							"line": 17,
							"character": 40
						}
					]
				}
			}
		},
		{
			"id": 177,
			"name": "InvokeFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 28,
					"character": 5,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-step.ts#L28"
				}
			],
			"typeParameters": [
				{
					"id": 182,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the function expects."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 183,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output that the function returns."
							}
						]
					}
				},
				{
					"id": 184,
					"name": "TCompensateInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input that the compensation function expects."
							}
						]
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 178,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 28,
							"character": 66,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-step.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 179,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of invocation function passed to a step."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The expected output based on the type parameter "
											},
											{
												"kind": "code",
												"text": "`TOutput`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 180,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "mapped",
										"parameter": "Key",
										"parameterType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": -1,
												"name": "TInput",
												"refersToTypeParameter": true
											}
										},
										"templateType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": -1,
												"name": "Key",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": -1,
												"name": "TInput",
												"refersToTypeParameter": true
											}
										}
									}
								},
								{
									"id": 181,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 165,
										"name": "StepExecutionContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "void"
									},
									{
										"type": "reference",
										"target": 40,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TOutput",
												"refersToTypeParameter": true
											},
											{
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": -1,
													"name": "TCompensateInput",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "intrinsic",
													"name": "undefined"
												},
												"trueType": {
													"type": "reference",
													"target": -1,
													"name": "TOutput",
													"refersToTypeParameter": true
												},
												"falseType": {
													"type": "reference",
													"target": -1,
													"name": "TCompensateInput",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "StepResponse",
										"package": "@medusajs/workflows-sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 40,
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "TOutput",
																"refersToTypeParameter": true
															},
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": -1,
																	"name": "TCompensateInput",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "undefined"
																},
																"trueType": {
																	"type": "reference",
																	"target": -1,
																	"name": "TOutput",
																	"refersToTypeParameter": true
																},
																"falseType": {
																	"type": "reference",
																	"target": -1,
																	"name": "TCompensateInput",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "StepResponse",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 660,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types/dist/joiner/index.d.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 661,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 662,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/dist/joiner/index.d.ts",
									"line": 2,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 669,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/dist/joiner/index.d.ts",
									"line": 22,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 663,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/dist/joiner/index.d.ts",
									"line": 3,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 667,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/dist/joiner/index.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 666,
							"name": "isInternalService",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the relationship is an internal service from the medusa core\nTODO: Remove when there are no more \"internal\" services"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/dist/joiner/index.d.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 668,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/dist/joiner/index.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 664,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/dist/joiner/index.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 665,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/dist/joiner/index.d.ts",
									"line": 5,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								662,
								669,
								663,
								667,
								666,
								668,
								664,
								665
							]
						}
					],
					"sources": [
						{
							"fileName": "types/dist/joiner/index.d.ts",
							"line": 1,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 320,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types/dist/common/medusa-container.d.ts",
					"line": 2,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/awilix/lib/container.d.ts",
							"qualifiedName": "AwilixContainer"
						},
						"name": "AwilixContainer",
						"package": "awilix"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 321,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 328,
									"name": "createScope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types/dist/common/medusa-container.d.ts",
											"line": 4,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 329,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "types/dist/common/medusa-container.d.ts",
													"line": 4,
													"character": 17
												}
											],
											"signatures": [
												{
													"id": 330,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 320,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								},
								{
									"id": 322,
									"name": "registerAdd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types/dist/common/medusa-container.d.ts",
											"line": 3,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 323,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "types/dist/common/medusa-container.d.ts",
													"line": 3,
													"character": 17
												}
											],
											"signatures": [
												{
													"id": 324,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameter": [
														{
															"id": 327,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 325,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 326,
															"name": "registration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": -1,
																"name": "T",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 320,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										328,
										322
									]
								}
							],
							"sources": [
								{
									"fileName": "types/dist/common/medusa-container.d.ts",
									"line": 2,
									"character": 48
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 383,
			"name": "ModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types/dist/modules-sdk/index.d.ts",
					"line": 59,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 384,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 389,
							"name": "canOverride",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "property will be removed in future versions"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 67,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 394,
							"name": "defaultModuleDeclaration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 75,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 556,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 566,
										"name": "ExternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 387,
							"name": "defaultPackage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 62,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 393,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 74,
									"character": 4
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 392,
							"name": "isLegacy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 73,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 391,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 72,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 390,
							"name": "isRequired",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "property will be removed in future versions"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 71,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 385,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 60,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 388,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 63,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 386,
							"name": "registrationName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 61,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								389,
								394,
								387,
								393,
								392,
								391,
								390,
								385,
								388,
								386
							]
						}
					],
					"sources": [
						{
							"fileName": "types/dist/modules-sdk/index.d.ts",
							"line": 59,
							"character": 31
						}
					]
				}
			}
		},
		{
			"id": 356,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types/dist/modules-sdk/index.d.ts",
					"line": 104,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 538,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 357,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 373,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/dist/modules-sdk/index.d.ts",
											"line": 132,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 374,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 377,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "types/dist/modules-sdk/index.d.ts",
															"line": 141,
															"character": 8
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 378,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 380,
																			"name": "defaultValue",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "types/dist/modules-sdk/index.d.ts",
																					"line": 143,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 381,
																			"name": "nullable",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "types/dist/modules-sdk/index.d.ts",
																					"line": 144,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 382,
																			"name": "options",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Mikro-orm options for the column"
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "types/dist/modules-sdk/index.d.ts",
																					"line": 148,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Record"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				],
																				"name": "Record",
																				"package": "typescript"
																			}
																		},
																		{
																			"id": 379,
																			"name": "type",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "types/dist/modules-sdk/index.d.ts",
																					"line": 142,
																					"character": 12
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "date"
																					},
																					{
																						"type": "literal",
																						"value": "time"
																					},
																					{
																						"type": "literal",
																						"value": "datetime"
																					},
																					{
																						"type": "literal",
																						"value": "bigint"
																					},
																					{
																						"type": "literal",
																						"value": "blob"
																					},
																					{
																						"type": "literal",
																						"value": "uint8array"
																					},
																					{
																						"type": "literal",
																						"value": "array"
																					},
																					{
																						"type": "literal",
																						"value": "enumArray"
																					},
																					{
																						"type": "literal",
																						"value": "enum"
																					},
																					{
																						"type": "literal",
																						"value": "json"
																					},
																					{
																						"type": "literal",
																						"value": "integer"
																					},
																					{
																						"type": "literal",
																						"value": "smallint"
																					},
																					{
																						"type": "literal",
																						"value": "tinyint"
																					},
																					{
																						"type": "literal",
																						"value": "mediumint"
																					},
																					{
																						"type": "literal",
																						"value": "float"
																					},
																					{
																						"type": "literal",
																						"value": "double"
																					},
																					{
																						"type": "literal",
																						"value": "boolean"
																					},
																					{
																						"type": "literal",
																						"value": "decimal"
																					},
																					{
																						"type": "literal",
																						"value": "string"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "text"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				380,
																				381,
																				382,
																				379
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "types/dist/modules-sdk/index.d.ts",
																			"line": 141,
																			"character": 37
																		}
																	]
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 376,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "types/dist/modules-sdk/index.d.ts",
															"line": 140,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 375,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "types/dist/modules-sdk/index.d.ts",
															"line": 136,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														377,
														376,
														375
													]
												}
											],
											"sources": [
												{
													"fileName": "types/dist/modules-sdk/index.d.ts",
													"line": 132,
													"character": 21
												}
											]
										}
									}
								},
								{
									"id": 360,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/dist/modules-sdk/index.d.ts",
											"line": 110,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 361,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 363,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "types/dist/modules-sdk/index.d.ts",
																"line": 112,
																"character": 8
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 364,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 366,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "types/dist/modules-sdk/index.d.ts",
																								"line": 114,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 365,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "types/dist/modules-sdk/index.d.ts",
																								"line": 113,
																								"character": 12
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							366,
																							365
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "types/dist/modules-sdk/index.d.ts",
																						"line": 112,
																						"character": 45
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 367,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "types/dist/modules-sdk/index.d.ts",
																"line": 116,
																"character": 8
															}
														],
														"type": {
															"type": "reference",
															"target": 552,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 362,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "types/dist/modules-sdk/index.d.ts",
																"line": 111,
																"character": 8
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															363,
															367,
															362
														]
													}
												],
												"sources": [
													{
														"fileName": "types/dist/modules-sdk/index.d.ts",
														"line": 110,
														"character": 14
													}
												]
											}
										}
									}
								},
								{
									"id": 370,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/dist/modules-sdk/index.d.ts",
											"line": 123,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 372,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/dist/modules-sdk/index.d.ts",
											"line": 131,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 371,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/dist/modules-sdk/index.d.ts",
											"line": 127,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 369,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/dist/modules-sdk/index.d.ts",
											"line": 119,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 359,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/dist/modules-sdk/index.d.ts",
											"line": 109,
											"character": 4
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 552,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 358,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/dist/modules-sdk/index.d.ts",
											"line": 108,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 368,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "types/dist/modules-sdk/index.d.ts",
											"line": 118,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										373,
										360,
										370,
										372,
										371,
										369,
										359,
										358,
										368
									]
								}
							],
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 104,
									"character": 122
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 552,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types/dist/modules-sdk/index.d.ts",
					"line": 152,
					"character": 20
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 660,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 553,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 555,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/dist/modules-sdk/index.d.ts",
											"line": 160,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 554,
									"name": "isInternalService",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the relationship is an internal service from the medusa core TODO: Remove when there are no more \"internal\" services"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/dist/modules-sdk/index.d.ts",
											"line": 156,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										555,
										554
									]
								}
							],
							"sources": [
								{
									"fileName": "types/dist/modules-sdk/index.d.ts",
									"line": 152,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 191,
			"name": "ReturnWorkflow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An exported workflow, which is the type of a workflow constructed by the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "createWorkflow",
						"target": 9,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " function. The exported workflow can be invoked to create\nan executable workflow, optionally within a specified container. So, to execute the workflow, you must invoke the exported workflow, then run the\n"
					},
					{
						"kind": "code",
						"text": "`run`"
					},
					{
						"kind": "text",
						"text": " method of the exported workflow."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "To execute a workflow:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nmyWorkflow()\n  .run({\n    input: {\n      name: \"John\"\n    }\n  })\n  .then(({ result }) => {\n    console.log(result)\n  })\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTo specify the container of the workflow, you can pass it as an argument to the call of the exported workflow. This is necessary when executing the workflow\nwithin a Medusa resource such as an API Route or a Subscriber.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nimport type {\n  MedusaRequest,\n  MedusaResponse\n} from \"@medusajs/medusa\";\nimport myWorkflow from \"../../../workflows/hello-world\";\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        name: req.query.name as string\n      }\n    })\n\n  res.send(result)\n}\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
					"line": 70,
					"character": 5,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-workflow.ts#L70"
				}
			],
			"typeParameters": [
				{
					"id": 209,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 210,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 211,
					"name": "THooks",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Function"
								},
								"name": "Function",
								"package": "typescript"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 192,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
									"line": 70,
									"character": 79,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-workflow.ts#L70"
								}
							],
							"signatures": [
								{
									"id": 193,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
											"line": 71,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-workflow.ts#L71"
										}
									],
									"typeParameter": [
										{
											"id": 194,
											"name": "TDataOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										},
										{
											"id": 195,
											"name": "TResultOverride",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "undefined"
											}
										}
									],
									"parameters": [
										{
											"id": 196,
											"name": "container",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 320,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 197,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {},
																"children": [
																	{
																		"id": 199,
																		"name": "__definition",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 92,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 383,
																			"name": "ModuleDefinition",
																			"package": "@medusajs/types"
																		}
																	},
																	{
																		"id": 198,
																		"name": "__joinerConfig",
																		"variant": "declaration",
																		"kind": 1024,
																		"flags": {},
																		"sources": [
																			{
																				"fileName": "types/dist/modules-sdk/index.d.ts",
																				"line": 91,
																				"character": 4
																			}
																		],
																		"type": {
																			"type": "reference",
																			"target": 356,
																			"name": "ModuleJoinerConfig",
																			"package": "@medusajs/types"
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Properties",
																		"children": [
																			199,
																			198
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "types/dist/modules-sdk/index.d.ts",
																		"line": 90,
																		"character": 37
																	}
																]
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Omit"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 395,
														"name": "LocalWorkflow",
														"package": "@medusajs/orchestration"
													},
													{
														"type": "literal",
														"value": "run"
													}
												],
												"name": "Omit",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 200,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 201,
															"name": "run",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
																	"line": 74,
																	"character": 4,
																	"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-workflow.ts#L74"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 202,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
																			"line": 74,
																			"character": 9,
																			"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-workflow.ts#L74"
																		}
																	],
																	"signatures": [
																		{
																			"id": 203,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 204,
																					"name": "args",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "reference",
																						"target": 485,
																						"typeArguments": [
																							{
																								"type": "conditional",
																								"checkType": {
																									"type": "reference",
																									"target": -1,
																									"name": "TDataOverride",
																									"refersToTypeParameter": true
																								},
																								"extendsType": {
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								"trueType": {
																									"type": "reference",
																									"target": -1,
																									"name": "TData",
																									"refersToTypeParameter": true
																								},
																								"falseType": {
																									"type": "reference",
																									"target": -1,
																									"name": "TDataOverride",
																									"refersToTypeParameter": true
																								}
																							}
																						],
																						"name": "FlowRunOptions",
																						"package": "@medusajs/workflows-sdk"
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Promise"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": 479,
																						"typeArguments": [
																							{
																								"type": "conditional",
																								"checkType": {
																									"type": "reference",
																									"target": -1,
																									"name": "TResultOverride",
																									"refersToTypeParameter": true
																								},
																								"extendsType": {
																									"type": "intrinsic",
																									"name": "undefined"
																								},
																								"trueType": {
																									"type": "reference",
																									"target": -1,
																									"name": "TResult",
																									"refersToTypeParameter": true
																								},
																								"falseType": {
																									"type": "reference",
																									"target": -1,
																									"name": "TResultOverride",
																									"refersToTypeParameter": true
																								}
																							}
																						],
																						"name": "WorkflowResult",
																						"package": "@medusajs/workflows-sdk"
																					}
																				],
																				"name": "Promise",
																				"package": "typescript"
																			}
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																201
															]
														}
													],
													"sources": [
														{
															"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
															"line": 73,
															"character": 34,
															"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-workflow.ts#L73"
														}
													]
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"type": "reference",
						"target": -1,
						"name": "THooks",
						"refersToTypeParameter": true
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 205,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 206,
									"name": "getName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
											"line": 85,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-workflow.ts#L85"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 207,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
													"line": 85,
													"character": 13,
													"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-workflow.ts#L85"
												}
											],
											"signatures": [
												{
													"id": 208,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										206
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
									"line": 84,
									"character": 13,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-workflow.ts#L84"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 126,
			"name": "StepFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A step function to be used in a workflow."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 24,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L24"
				}
			],
			"typeParameters": [
				{
					"id": 130,
					"name": "TInput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the input of the step."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "object"
					},
					"default": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 131,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the output of the step."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 127,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 24,
									"character": 78,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L24"
								}
							],
							"signatures": [
								{
									"id": 128,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 25,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L25"
										}
									],
									"parameters": [
										{
											"id": 129,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "reference",
													"target": 137,
													"typeArguments": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": -1,
																"name": "K",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": -1,
																"name": "TInput",
																"refersToTypeParameter": true
															}
														}
													],
													"name": "WorkflowData",
													"package": "@medusajs/workflows-sdk"
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 137,
										"typeArguments": [
											{
												"type": "mapped",
												"parameter": "K",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": -1,
														"name": "K",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": -1,
														"name": "TOutput",
														"refersToTypeParameter": true
													}
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								}
							]
						}
					},
					{
						"type": "reference",
						"target": 132,
						"typeArguments": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": -1,
										"name": "TOutput",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "TOutput",
										"refersToTypeParameter": true
									}
								}
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					}
				]
			}
		},
		{
			"id": 121,
			"name": "StepFunctionResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 9,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L9"
				}
			],
			"typeParameters": [
				{
					"id": 125,
					"name": "TOutput",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 122,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 10,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L10"
						}
					],
					"signatures": [
						{
							"id": 123,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 124,
									"name": "this",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 139,
										"name": "CreateWorkflowComposerContext",
										"package": "@medusajs/workflows-sdk"
									}
								}
							],
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": -1,
									"name": "TOutput",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "tuple"
								},
								"trueType": {
									"type": "tuple",
									"elements": [
										{
											"type": "rest",
											"elementType": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 137,
													"typeArguments": [
														{
															"type": "mapped",
															"parameter": "K",
															"parameterType": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"target": -1,
																	"name": "TOutput",
																	"refersToTypeParameter": true
																}
															},
															"templateType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": -1,
																	"name": "K",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "intrinsic",
																		"name": "number"
																	},
																	"objectType": {
																		"type": "reference",
																		"target": -1,
																		"name": "TOutput",
																		"refersToTypeParameter": true
																	}
																}
															}
														}
													],
													"name": "WorkflowData",
													"package": "@medusajs/workflows-sdk"
												}
											}
										}
									]
								},
								"falseType": {
									"type": "reference",
									"target": 137,
									"typeArguments": [
										{
											"type": "mapped",
											"parameter": "K",
											"parameterType": {
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"target": -1,
													"name": "TOutput",
													"refersToTypeParameter": true
												}
											},
											"templateType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": -1,
													"name": "K",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": -1,
													"name": "TOutput",
													"refersToTypeParameter": true
												}
											}
										}
									],
									"name": "WorkflowData",
									"package": "@medusajs/workflows-sdk"
								}
							}
						}
					]
				}
			}
		},
		{
			"id": 593,
			"name": "StepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
					"line": 5,
					"character": 5
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 594,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 596,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 517,
								"name": "WorkflowStepHandler",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 595,
							"name": "invoke",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 517,
								"name": "WorkflowStepHandler",
								"package": "@medusajs/orchestration"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								596,
								595
							]
						}
					],
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/local-workflow.d.ts",
							"line": 5,
							"character": 19
						}
					]
				}
			}
		},
		{
			"id": 745,
			"name": "TransactionFlow",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
					"line": 6,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 746,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 748,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 8,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 492,
								"name": "TransactionStepsDefinition",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 750,
							"name": "hasFailedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 751,
							"name": "hasSkippedSteps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 747,
							"name": "modelId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 752,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 757,
								"name": "TransactionState",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 753,
							"name": "steps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 754,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
											"line": 13,
											"character": 11
										}
									],
									"indexSignature": {
										"id": 755,
										"name": "__index",
										"variant": "signature",
										"kind": 8192,
										"flags": {},
										"sources": [
											{
												"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
												"line": 14,
												"character": 8
											}
										],
										"parameters": [
											{
												"id": 756,
												"name": "key",
												"variant": "param",
												"kind": 32768,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"type": {
											"type": "reference",
											"target": 776,
											"name": "TransactionStep",
											"package": "@medusajs/orchestration"
										}
									}
								}
							}
						},
						{
							"id": 749,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
									"line": 9,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								748,
								750,
								751,
								747,
								752,
								753,
								749
							]
						}
					],
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-orchestrator.d.ts",
							"line": 6,
							"character": 30
						}
					]
				}
			}
		},
		{
			"id": 331,
			"name": "TransactionMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
					"line": 14,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 332,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 336,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 18,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 337,
							"name": "action_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 19,
									"character": 4
								}
							],
							"type": {
								"type": "reference",
								"target": 535,
								"name": "TransactionHandlerType",
								"package": "@medusajs/orchestration"
							}
						},
						{
							"id": 338,
							"name": "attempt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 20,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 335,
							"name": "idempotency_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 17,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 333,
							"name": "model_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 334,
							"name": "reply_to_topic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 16,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 339,
							"name": "timestamp",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
									"line": 21,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								336,
								337,
								338,
								335,
								333,
								334,
								339
							]
						}
					],
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/distributed-transaction.d.ts",
							"line": 14,
							"character": 34
						}
					]
				}
			}
		},
		{
			"id": 675,
			"name": "TransactionStepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
					"line": 3,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 676,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/transaction-step.d.ts",
							"line": 3,
							"character": 37
						}
					],
					"signatures": [
						{
							"id": 677,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 678,
									"name": "actionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 679,
									"name": "handlerType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 535,
										"name": "TransactionHandlerType",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 680,
									"name": "payload",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 767,
										"name": "TransactionPayload",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 681,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 597,
										"name": "DistributedTransaction",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 492,
			"name": "TransactionStepsDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "orchestration/dist/transaction/types.d.ts",
					"line": 5,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 493,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 494,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/types.d.ts",
									"line": 6,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 500,
							"name": "async",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/types.d.ts",
									"line": 12,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 495,
							"name": "continueOnPermanentFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/types.d.ts",
									"line": 7,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 497,
							"name": "maxRetries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/types.d.ts",
									"line": 9,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 503,
							"name": "next",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/types.d.ts",
									"line": 15,
									"character": 4
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 492,
										"name": "TransactionStepsDefinition",
										"package": "@medusajs/orchestration"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 492,
											"name": "TransactionStepsDefinition",
											"package": "@medusajs/orchestration"
										}
									}
								]
							}
						},
						{
							"id": 496,
							"name": "noCompensation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/types.d.ts",
									"line": 8,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 501,
							"name": "noWait",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/types.d.ts",
									"line": 13,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 498,
							"name": "retryInterval",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/types.d.ts",
									"line": 10,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 502,
							"name": "saveResponse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/types.d.ts",
									"line": 14,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 499,
							"name": "timeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "orchestration/dist/transaction/types.d.ts",
									"line": 11,
									"character": 4
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								494,
								500,
								495,
								497,
								503,
								496,
								501,
								498,
								502,
								499
							]
						}
					],
					"sources": [
						{
							"fileName": "orchestration/dist/transaction/types.d.ts",
							"line": 5,
							"character": 41
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 504,
					"name": "InternalStep"
				}
			]
		},
		{
			"id": 137,
			"name": "WorkflowData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This type is used to encapsulate the input or output type of all utils."
					}
				]
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 42,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L42"
				}
			],
			"typeParameters": [
				{
					"id": 138,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of a step's input or result."
							}
						]
					},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": -1,
							"name": "T",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "object"
						},
						"trueType": {
							"type": "mapped",
							"parameter": "Key",
							"parameterType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							},
							"templateType": {
								"type": "reference",
								"target": 137,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": -1,
											"name": "Key",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": -1,
											"name": "T",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "WorkflowData",
								"package": "@medusajs/workflows-sdk"
							}
						},
						"falseType": {
							"type": "reference",
							"target": 132,
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								}
							],
							"name": "WorkflowDataProperties",
							"package": "@medusajs/workflows-sdk"
						}
					},
					{
						"type": "reference",
						"target": 132,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowDataProperties",
						"package": "@medusajs/workflows-sdk"
					}
				]
			}
		},
		{
			"id": 132,
			"name": "WorkflowDataProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 32,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L32"
				}
			],
			"typeParameters": [
				{
					"id": 136,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 133,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 135,
							"name": "__step__",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 34,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L34"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 134,
							"name": "__type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 33,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L33"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Symbol"
								},
								"name": "Symbol",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								135,
								134
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/type.ts",
							"line": 32,
							"character": 50,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L32"
						}
					]
				}
			}
		},
		{
			"id": 316,
			"name": "WorkflowHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 15,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
					"qualifiedName": "Map"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 317,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 319,
									"name": "compensate",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 17,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 517,
										"name": "WorkflowStepHandler",
										"package": "@medusajs/orchestration"
									}
								},
								{
									"id": 318,
									"name": "invoke",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
											"line": 16,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": 517,
										"name": "WorkflowStepHandler",
										"package": "@medusajs/orchestration"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										319,
										318
									]
								}
							],
							"sources": [
								{
									"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
									"line": 15,
									"character": 42
								}
							]
						}
					}
				],
				"name": "Map",
				"package": "typescript"
			}
		},
		{
			"id": 479,
			"name": "WorkflowResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/helper/workflow-export.ts",
					"line": 22,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/helper/workflow-export.ts#L22"
				}
			],
			"typeParameters": [
				{
					"id": 484,
					"name": "TResult",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 480,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 481,
							"name": "errors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/helper/workflow-export.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/helper/workflow-export.ts#L23"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 648,
									"name": "TransactionStepError",
									"package": "@medusajs/orchestration"
								}
							}
						},
						{
							"id": 483,
							"name": "result",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/helper/workflow-export.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/helper/workflow-export.ts#L25"
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "TResult",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 482,
							"name": "transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "workflows-sdk/src/helper/workflow-export.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/helper/workflow-export.ts#L24"
								}
							],
							"type": {
								"type": "reference",
								"target": 597,
								"name": "DistributedTransaction",
								"package": "@medusajs/orchestration"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								481,
								483,
								482
							]
						}
					],
					"sources": [
						{
							"fileName": "workflows-sdk/src/helper/workflow-export.ts",
							"line": 22,
							"character": 48,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/helper/workflow-export.ts#L22"
						}
					]
				}
			}
		},
		{
			"id": 517,
			"name": "WorkflowStepHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
					"line": 19,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 518,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
							"line": 19,
							"character": 34
						}
					],
					"signatures": [
						{
							"id": 519,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 520,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 521,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 528,
													"name": "compensate",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
															"line": 25,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 529,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
																	"line": 25,
																	"character": 16
																}
															],
															"indexSignature": {
																"id": 530,
																"name": "__index",
																"variant": "signature",
																"kind": 8192,
																"flags": {},
																"sources": [
																	{
																		"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
																		"line": 26,
																		"character": 8
																	}
																],
																"parameters": [
																	{
																		"id": 531,
																		"name": "actions",
																		"variant": "param",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														}
													}
												},
												{
													"id": 522,
													"name": "container",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
															"line": 20,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 320,
														"name": "MedusaContainer",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 534,
													"name": "context",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
															"line": 30,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 340,
														"name": "Context",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 524,
													"name": "invoke",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
															"line": 22,
															"character": 4
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 525,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
																	"line": 22,
																	"character": 12
																}
															],
															"indexSignature": {
																"id": 526,
																"name": "__index",
																"variant": "signature",
																"kind": 8192,
																"flags": {},
																"sources": [
																	{
																		"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
																		"line": 23,
																		"character": 8
																	}
																],
																"parameters": [
																	{
																		"id": 527,
																		"name": "actions",
																		"variant": "param",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "intrinsic",
																			"name": "string"
																		}
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														}
													}
												},
												{
													"id": 532,
													"name": "metadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
															"line": 28,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 331,
														"name": "TransactionMetadata",
														"package": "@medusajs/orchestration"
													}
												},
												{
													"id": 523,
													"name": "payload",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
															"line": 21,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 533,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
															"line": 29,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 597,
														"name": "DistributedTransaction",
														"package": "@medusajs/orchestration"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														528,
														522,
														534,
														524,
														532,
														523,
														533
													]
												}
											],
											"sources": [
												{
													"fileName": "orchestration/dist/workflow/workflow-manager.d.ts",
													"line": 19,
													"character": 41
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 169,
			"name": "WorkflowTransactionContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/type.ts",
					"line": 85,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L85"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 165,
						"name": "StepExecutionContext",
						"package": "@medusajs/workflows-sdk"
					},
					{
						"type": "reference",
						"target": 347,
						"name": "OriginalWorkflowTransactionContext",
						"package": "@medusajs/orchestration",
						"qualifiedName": "TransactionContext"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 170,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 171,
									"name": "invoke",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/type.ts",
											"line": 87,
											"character": 4,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L87"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 172,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/type.ts",
													"line": 87,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L87"
												}
											],
											"indexSignature": {
												"id": 173,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"sources": [
													{
														"fileName": "workflows-sdk/src/utils/composer/type.ts",
														"line": 87,
														"character": 14,
														"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L87"
													}
												],
												"parameters": [
													{
														"id": 174,
														"name": "key",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"type": {
													"type": "reflection",
													"declaration": {
														"id": 175,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 176,
																"name": "output",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"sources": [
																	{
																		"fileName": "workflows-sdk/src/utils/composer/type.ts",
																		"line": 87,
																		"character": 31,
																		"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L87"
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	176
																]
															}
														],
														"sources": [
															{
																"fileName": "workflows-sdk/src/utils/composer/type.ts",
																"line": 87,
																"character": 29,
																"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L87"
															}
														]
													}
												}
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										171
									]
								}
							],
							"sources": [
								{
									"fileName": "workflows-sdk/src/utils/composer/type.ts",
									"line": 86,
									"character": 39,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/type.ts#L86"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33,
			"name": "SymbolInputReference",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/symbol.ts",
					"line": 4,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/symbol.ts#L4"
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": 33,
					"name": "SymbolInputReference",
					"package": "@medusajs/workflows-sdk"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 32,
			"name": "SymbolMedusaWorkflowComposerContext",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/symbol.ts",
					"line": 1,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/symbol.ts#L1"
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": 32,
					"name": "SymbolMedusaWorkflowComposerContext",
					"package": "@medusajs/workflows-sdk"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 35,
			"name": "SymbolWorkflowHook",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/symbol.ts",
					"line": 6,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/symbol.ts#L6"
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": 35,
					"name": "SymbolWorkflowHook",
					"package": "@medusajs/workflows-sdk"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 34,
			"name": "SymbolWorkflowStep",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/symbol.ts",
					"line": 5,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/symbol.ts#L5"
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": 34,
					"name": "SymbolWorkflowStep",
					"package": "@medusajs/workflows-sdk"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 38,
			"name": "SymbolWorkflowStepBind",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/symbol.ts",
					"line": 9,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/symbol.ts#L9"
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": 38,
					"name": "SymbolWorkflowStepBind",
					"package": "@medusajs/workflows-sdk"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 37,
			"name": "SymbolWorkflowStepResponse",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/symbol.ts",
					"line": 8,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/symbol.ts#L8"
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": 37,
					"name": "SymbolWorkflowStepResponse",
					"package": "@medusajs/workflows-sdk"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 39,
			"name": "SymbolWorkflowStepTransformer",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/symbol.ts",
					"line": 10,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/symbol.ts#L10"
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": 39,
					"name": "SymbolWorkflowStepTransformer",
					"package": "@medusajs/workflows-sdk"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 36,
			"name": "SymbolWorkflowWorkflowData",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/helpers/symbol.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/helpers/symbol.ts#L7"
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": 36,
					"name": "SymbolWorkflowWorkflowData",
					"package": "@medusajs/workflows-sdk"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1,
			"name": "createStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
					"line": 233,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-step.ts#L233"
				}
			],
			"signatures": [
				{
					"id": 2,
					"name": "createStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "StepFunction",
								"target": 126,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": " that can be used as a step in a workflow constructed by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 9
							},
							{
								"kind": "text",
								"text": " function."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "A step function to be used in a workflow."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createStep,\n  StepResponse,\n  StepExecutionContext,\n  WorkflowData\n} from \"@medusajs/workflows-sdk\"\n\ninterface CreateProductInput {\n  title: string\n}\n\nexport const createProductStep = createStep(\n  \"createProductStep\",\n  async function (\n    input: CreateProductInput,\n    context\n  ) {\n    const productService = context.container.resolve(\n      \"productService\"\n    )\n    const product = await productService.create(input)\n    return new StepResponse({\n      product\n    }, {\n      product_id: product.id\n    })\n  },\n  async function (\n    input,\n    context\n  ) {\n    const productService = context.container.resolve(\n      \"productService\"\n    )\n    await productService.delete(input.product_id)\n  }\n)\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-step.ts",
							"line": 233,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-step.ts#L233"
						}
					],
					"typeParameter": [
						{
							"id": 3,
							"name": "TInvokeInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the invocation function."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 4,
							"name": "TInvokeResultOutput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected output parameter of the invocation function."
									}
								]
							}
						},
						{
							"id": 5,
							"name": "TInvokeResultCompensateInput",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected input parameter to the compensation function."
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 6,
							"name": "name",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the step."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 7,
							"name": "invokeFn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An invocation function that will be executed when the workflow is executed. The function must return an instance of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 40,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": ". The constructor of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 40,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\naccepts the output of the step as a first argument, and optionally as a second argument the data to be passed to the compensation function as a parameter."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 177,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TInvokeInput",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "TInvokeResultOutput",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": -1,
										"name": "TInvokeResultCompensateInput",
										"refersToTypeParameter": true
									}
								],
								"name": "InvokeFn",
								"package": "@medusajs/workflows-sdk"
							}
						},
						{
							"id": 8,
							"name": "compensateFn",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A compensation function that's executed if an error occurs in the workflow. It's used to roll-back actions when errors occur.\nIt accepts as a parameter the second argument passed to the constructor of the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "StepResponse",
										"target": 40,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instance returned by the invocation function. If the\ninvocation function doesn't pass the second argument to "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor, the compensation function receives the first argument\npassed to the "
									},
									{
										"kind": "code",
										"text": "`StepResponse`"
									},
									{
										"kind": "text",
										"text": " constructor instead."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 185,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TInvokeResultCompensateInput",
										"refersToTypeParameter": true
									}
								],
								"name": "CompensateFn",
								"package": "@medusajs/workflows-sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 126,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "TInvokeInput",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "TInvokeResultOutput",
								"refersToTypeParameter": true
							}
						],
						"name": "StepFunction",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 9,
			"name": "createWorkflow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
					"line": 143,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-workflow.ts#L143"
				}
			],
			"signatures": [
				{
					"id": 10,
					"name": "createWorkflow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function creates a workflow with the provided name and a constructor function.\nThe constructor function builds the workflow from steps created by the "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createStep",
								"target": 1
							},
							{
								"kind": "text",
								"text": " function.\nThe returned workflow is an exported workflow of type "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ReturnWorkflow",
								"target": 191,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": ", meaning it's not executed right away. To execute it,\ninvoke the exported workflow, then run its "
							},
							{
								"kind": "code",
								"text": "`run`"
							},
							{
								"kind": "text",
								"text": " method."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The created workflow. You can later execute the workflow by invoking it, then using its "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport { createWorkflow } from \"@medusajs/workflows-sdk\"\nimport { MedusaRequest, MedusaResponse, Product } from \"@medusajs/medusa\"\nimport {\n  createProductStep,\n  getProductStep,\n  createPricesStep\n} from \"./steps\"\n\ninterface WorkflowInput {\n title: string\n}\n\nconst myWorkflow = createWorkflow<\n    WorkflowInput,\n    Product\n  >(\"my-workflow\", (input) => {\n   // Everything here will be executed and resolved later\n   // during the execution. Including the data access.\n\n    const product = createProductStep(input)\n    const prices = createPricesStep(product)\n    return getProductStep(product.id)\n  }\n)\n\nexport async function GET(\n  req: MedusaRequest,\n  res: MedusaResponse\n) {\n  const { result: product } = await myWorkflow(req.scope)\n    .run({\n      input: {\n        title: \"Shirt\"\n      }\n    })\n\n  res.json({\n    product\n  })\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
							"line": 143,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-workflow.ts#L143"
						}
					],
					"typeParameter": [
						{
							"id": 11,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the input passed to the composer function."
									}
								]
							}
						},
						{
							"id": 12,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the output returned by the composer function."
									}
								]
							}
						},
						{
							"id": 13,
							"name": "THooks",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of hooks defined in the workflow."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"parameters": [
						{
							"id": 14,
							"name": "name",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the workflow."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15,
							"name": "composer",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The constructor function that is executed when the "
									},
									{
										"kind": "code",
										"text": "`run`"
									},
									{
										"kind": "text",
										"text": " method in "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ReturnWorkflow",
										"target": 191,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " is used.\nThe function can't be an arrow function or an asynchronus function. It also can't directly manipulate data.\nYou'll have to use the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "transform",
										"target": 64
									},
									{
										"kind": "text",
										"text": " function if you need to directly manipulate data."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 16,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
											"line": 157,
											"character": 12,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-workflow.ts#L157"
										}
									],
									"signatures": [
										{
											"id": 17,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The constructor function that is executed when the "
													},
													{
														"kind": "code",
														"text": "`run`"
													},
													{
														"kind": "text",
														"text": " method in "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "ReturnWorkflow",
														"target": 191,
														"tsLinkText": ""
													},
													{
														"kind": "text",
														"text": " is used.\nThe function can't be an arrow function or an asynchronus function. It also can't directly manipulate data.\nYou'll have to use the "
													},
													{
														"kind": "inline-tag",
														"tag": "@link",
														"text": "transform",
														"target": 64
													},
													{
														"kind": "text",
														"text": " function if you need to directly manipulate data."
													}
												]
											},
											"sources": [
												{
													"fileName": "workflows-sdk/src/utils/composer/create-workflow.ts",
													"line": 157,
													"character": 12,
													"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/create-workflow.ts#L157"
												}
											],
											"parameters": [
												{
													"id": 18,
													"name": "input",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 137,
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "TData",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": 137,
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "TResult",
																"refersToTypeParameter": true
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													},
													{
														"type": "mapped",
														"parameter": "K",
														"parameterType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															]
														},
														"templateType": {
															"type": "union",
															"types": [
																{
																	"type": "reference",
																	"target": 132,
																	"typeArguments": [
																		{
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": -1,
																				"name": "K",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": -1,
																				"name": "TResult",
																				"refersToTypeParameter": true
																			}
																		}
																	],
																	"name": "WorkflowDataProperties",
																	"package": "@medusajs/workflows-sdk"
																},
																{
																	"type": "reference",
																	"target": 137,
																	"typeArguments": [
																		{
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": -1,
																				"name": "K",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": -1,
																				"name": "TResult",
																				"refersToTypeParameter": true
																			}
																		}
																	],
																	"name": "WorkflowData",
																	"package": "@medusajs/workflows-sdk"
																}
															]
														}
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 191,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "TData",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "TResult",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": -1,
								"name": "THooks",
								"refersToTypeParameter": true
							}
						],
						"name": "ReturnWorkflow",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		},
		{
			"id": 24,
			"name": "parallelize",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/parallelize.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 25,
					"name": "parallelize",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function is used to run multiple steps in parallel. The result of each step will be returned as part of the result array."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The step results. The results are ordered in the array by the order they're passed in the function's parameter."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  parallelize\n} from \"@medusajs/workflows-sdk\"\nimport {\n  createProductStep,\n  getProductStep,\n  createPricesStep,\n  attachProductToSalesChannelStep\n} from \"./steps\"\n\ninterface WorkflowInput {\n  title: string\n}\n\nconst myWorkflow = createWorkflow<\n  WorkflowInput,\n  Product\n>(\"my-workflow\", (input) => {\n   const product = createProductStep(input)\n\n   const [prices, productSalesChannel] = parallelize(\n     createPricesStep(product),\n     attachProductToSalesChannelStep(product)\n   )\n\n   const id = product.id\n   return getProductStep(product.id)\n }\n)"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/parallelize.ts",
							"line": 44,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/parallelize.ts#L44"
						}
					],
					"typeParameter": [
						{
							"id": 26,
							"name": "TResult",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the expected result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 132,
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "unknown"
										}
									],
									"name": "WorkflowDataProperties",
									"package": "@medusajs/workflows-sdk"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 27,
							"name": "steps",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "TResult",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TResult",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 64,
			"name": "transform",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "workflows-sdk/src/utils/composer/transform.ts",
					"line": 62,
					"character": 16,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/transform.ts#L62"
				}
			],
			"signatures": [
				{
					"id": 65,
					"name": "transform",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function transforms the output of other utility functions.\n\nFor example, if you're using the value(s) of some step(s) as an input to a later step. As you can't directly manipulate data in the  workflow constructor function passed to "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "createWorkflow",
								"target": 9
							},
							{
								"kind": "text",
								"text": ",\nthe "
							},
							{
								"kind": "code",
								"text": "`transform`"
							},
							{
								"kind": "text",
								"text": " function provides access to the runtime value of the step(s) output so that you can manipulate them.\n\nAnother example is if you're using the runtime value of some step(s) as the output of a workflow.\n\nIf you're also retrieving the output of a hook and want to check if its value is set, you must use a workflow to get the runtime value of that hook."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "There's no expected value to be returned by the "
									},
									{
										"kind": "code",
										"text": "`transform`"
									},
									{
										"kind": "text",
										"text": " function."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport {\n  createWorkflow,\n  transform\n} from \"@medusajs/workflows-sdk\"\nimport { step1, step2 } from \"./steps\"\n\ntype WorkflowInput = {\n  name: string\n}\n\ntype WorkflowOutput = {\n  message: string\n}\n\nconst myWorkflow = createWorkflow<\n    WorkflowInput,\n    WorkflowOutput\n  >\n  (\"hello-world\", (input) => {\n    const str1 = step1(input)\n    const str2 = step2(input)\n\n    return transform({\n      str1,\n      str2\n    }, (input) => ({\n      message: `${input.str1}${input.str2}`\n    }))\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "workflows-sdk/src/utils/composer/transform.ts",
							"line": 62,
							"character": 16,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/workflows-sdk/src/utils/composer/transform.ts#L62"
						}
					],
					"typeParameter": [
						{
							"id": 66,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "object"
									},
									{
										"type": "reference",
										"target": 132,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "WorkflowDataProperties",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						},
						{
							"id": 67,
							"name": "RFinal",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 68,
							"name": "values",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The output(s) of other step functions."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 69,
							"name": "func",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isRest": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The transform function used to perform action on the runtime values of the provided "
									},
									{
										"kind": "code",
										"text": "`values`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "tuple",
								"elements": [
									{
										"type": "reference",
										"target": 212,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "T",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": -1,
												"name": "RFinal",
												"refersToTypeParameter": true
											}
										],
										"name": "Func1",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 137,
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "RFinal",
								"refersToTypeParameter": true
							}
						],
						"name": "WorkflowData",
						"package": "@medusajs/workflows-sdk"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Enumerations",
			"children": [
				671,
				535,
				757,
				819
			]
		},
		{
			"title": "Enumeration Members",
			"children": [
				674,
				670
			]
		},
		{
			"title": "Classes",
			"children": [
				597,
				395,
				227,
				40,
				736,
				347,
				682,
				767,
				776,
				648
			]
		},
		{
			"title": "Interfaces",
			"children": [
				340,
				504,
				538,
				657,
				165,
				578
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				185,
				139,
				566,
				485,
				220,
				212,
				556,
				177,
				660,
				320,
				383,
				356,
				552,
				191,
				126,
				121,
				593,
				745,
				331,
				675,
				492,
				137,
				132,
				316,
				479,
				517,
				169
			]
		},
		{
			"title": "Variables",
			"children": [
				33,
				32,
				35,
				34,
				38,
				37,
				39,
				36
			]
		},
		{
			"title": "Functions",
			"children": [
				1,
				9,
				24,
				64
			]
		}
	],
	"packageName": "@medusajs/workflows-sdk",
	"symbolIdMap": {
		"0": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"2": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "createStep"
		},
		"3": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeInput"
		},
		"4": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultOutput"
		},
		"5": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInvokeResultCompensateInput"
		},
		"6": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "name"
		},
		"7": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "invokeFn"
		},
		"8": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "compensateFn"
		},
		"9": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"10": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "createWorkflow"
		},
		"11": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TData"
		},
		"12": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TResult"
		},
		"13": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "THooks"
		},
		"14": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "name"
		},
		"15": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "composer"
		},
		"16": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"17": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"18": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "input"
		},
		"24": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"25": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "parallelize"
		},
		"26": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "TResult"
		},
		"27": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/parallelize.ts",
			"qualifiedName": "steps"
		},
		"32": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/symbol.ts",
			"qualifiedName": "SymbolMedusaWorkflowComposerContext"
		},
		"33": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/symbol.ts",
			"qualifiedName": "SymbolInputReference"
		},
		"34": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/symbol.ts",
			"qualifiedName": "SymbolWorkflowStep"
		},
		"35": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/symbol.ts",
			"qualifiedName": "SymbolWorkflowHook"
		},
		"36": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/symbol.ts",
			"qualifiedName": "SymbolWorkflowWorkflowData"
		},
		"37": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/symbol.ts",
			"qualifiedName": "SymbolWorkflowStepResponse"
		},
		"38": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/symbol.ts",
			"qualifiedName": "SymbolWorkflowStepBind"
		},
		"39": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/symbol.ts",
			"qualifiedName": "SymbolWorkflowStepTransformer"
		},
		"40": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"41": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.__constructor"
		},
		"42": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse"
		},
		"43": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"44": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"45": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "output"
		},
		"46": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "compensateInput"
		},
		"47": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.#__type"
		},
		"48": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.#output"
		},
		"49": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.#compensateInput"
		},
		"62": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TOutput"
		},
		"63": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/helpers/step-response.ts",
			"qualifiedName": "StepResponse.TCompensateInput"
		},
		"64": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"65": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "transform"
		},
		"66": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"67": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "RFinal"
		},
		"68": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "values"
		},
		"69": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "func"
		},
		"121": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunctionResult"
		},
		"122": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"123": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"124": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"125": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"126": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepFunction"
		},
		"127": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"128": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"129": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"130": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TInput"
		},
		"131": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"132": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowDataProperties"
		},
		"133": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"134": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"135": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"136": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"137": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowData"
		},
		"138": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "T"
		},
		"139": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "CreateWorkflowComposerContext"
		},
		"140": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"141": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooks_"
		},
		"142": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hooksCallback_"
		},
		"143": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.workflowId"
		},
		"144": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.flow"
		},
		"145": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.handlers"
		},
		"146": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.stepBinder"
		},
		"147": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"148": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"149": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"150": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"151": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.hookBinder"
		},
		"152": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"153": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"154": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "name"
		},
		"155": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"156": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"157": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.parallelizeBinder"
		},
		"158": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"159": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"160": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "fn"
		},
		"161": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"162": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"163": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "this"
		},
		"164": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "TOutput"
		},
		"165": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext"
		},
		"166": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.container"
		},
		"167": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.metadata"
		},
		"168": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "StepExecutionContext.context"
		},
		"169": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "WorkflowTransactionContext"
		},
		"170": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"171": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.invoke"
		},
		"172": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"173": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__index"
		},
		"175": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"176": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.output"
		},
		"177": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "InvokeFn"
		},
		"178": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"179": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"180": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"181": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"182": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TInput"
		},
		"183": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TOutput"
		},
		"184": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "TCompensateInput"
		},
		"185": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "CompensateFn"
		},
		"186": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"187": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "__type"
		},
		"188": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "input"
		},
		"189": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "context"
		},
		"190": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-step.ts",
			"qualifiedName": "T"
		},
		"191": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "ReturnWorkflow"
		},
		"192": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"193": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"194": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TDataOverride"
		},
		"195": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TResultOverride"
		},
		"196": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "container"
		},
		"197": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type"
		},
		"198": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"199": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.__definition"
		},
		"200": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"201": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type.run"
		},
		"202": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"203": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"204": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "args"
		},
		"205": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"206": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type.getName"
		},
		"207": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"208": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "__type"
		},
		"209": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TData"
		},
		"210": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "TResult"
		},
		"211": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/create-workflow.ts",
			"qualifiedName": "THooks"
		},
		"212": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "Func1"
		},
		"213": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"214": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"215": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "input"
		},
		"216": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"217": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "context"
		},
		"218": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"219": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "U"
		},
		"220": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "Func"
		},
		"221": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"222": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "__type"
		},
		"223": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "input"
		},
		"224": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "context"
		},
		"225": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "T"
		},
		"226": {
			"sourceFileName": "../../../packages/workflows-sdk/src/utils/composer/transform.ts",
			"qualifiedName": "U"
		},
		"227": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder"
		},
		"228": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.__constructor"
		},
		"229": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder"
		},
		"230": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "steps"
		},
		"231": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.steps"
		},
		"232": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges_"
		},
		"233": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges"
		},
		"234": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.hasChanges"
		},
		"235": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.load"
		},
		"236": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.load"
		},
		"237": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "steps"
		},
		"238": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.addAction"
		},
		"239": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.addAction"
		},
		"240": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "action"
		},
		"241": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "options"
		},
		"242": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.replaceAction"
		},
		"243": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.replaceAction"
		},
		"244": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "existingAction"
		},
		"245": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "action"
		},
		"246": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "options"
		},
		"247": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionBefore"
		},
		"248": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionBefore"
		},
		"249": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "existingAction"
		},
		"250": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "action"
		},
		"251": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "options"
		},
		"252": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionAfter"
		},
		"253": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.insertActionAfter"
		},
		"254": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "existingAction"
		},
		"255": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "action"
		},
		"256": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "options"
		},
		"257": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.appendTo"
		},
		"258": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.appendTo"
		},
		"259": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "step"
		},
		"260": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "newStep"
		},
		"261": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.appendAction"
		},
		"262": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.appendAction"
		},
		"263": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "action"
		},
		"264": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "to"
		},
		"265": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "options"
		},
		"266": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.move"
		},
		"267": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.move"
		},
		"268": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "actionToMove"
		},
		"269": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "targetAction"
		},
		"270": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "__2"
		},
		"271": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "__type"
		},
		"272": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "__type.runInParallel"
		},
		"273": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "__type.mergeNext"
		},
		"274": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.moveAction"
		},
		"275": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.moveAction"
		},
		"276": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "actionToMove"
		},
		"277": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "targetAction"
		},
		"278": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.moveAndMergeNextAction"
		},
		"279": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.moveAndMergeNextAction"
		},
		"280": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "actionToMove"
		},
		"281": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "targetAction"
		},
		"282": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.mergeActions"
		},
		"283": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.mergeActions"
		},
		"284": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "where"
		},
		"285": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "actions"
		},
		"286": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.deleteAction"
		},
		"287": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.deleteAction"
		},
		"288": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "action"
		},
		"289": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "steps"
		},
		"290": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.pruneAction"
		},
		"291": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.pruneAction"
		},
		"292": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "action"
		},
		"293": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.findStepByAction"
		},
		"294": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.findStepByAction"
		},
		"295": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "action"
		},
		"296": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "step"
		},
		"297": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.findOrThrowStepByAction"
		},
		"298": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.findOrThrowStepByAction"
		},
		"299": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "action"
		},
		"300": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "steps"
		},
		"301": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.findParentStepByAction"
		},
		"302": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.findParentStepByAction"
		},
		"303": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "action"
		},
		"304": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "step"
		},
		"305": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.findLastStep"
		},
		"306": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.findLastStep"
		},
		"307": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "steps"
		},
		"308": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.updateDepths"
		},
		"309": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.updateDepths"
		},
		"310": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "startingStep"
		},
		"311": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "parent"
		},
		"312": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "incr"
		},
		"313": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "beginFrom"
		},
		"314": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.build"
		},
		"315": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "OrchestratorBuilder.build"
		},
		"316": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "WorkflowHandler"
		},
		"317": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type"
		},
		"318": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type.invoke"
		},
		"319": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type.compensate"
		},
		"320": {
			"sourceFileName": "../../../packages/types/dist/common/medusa-container.d.ts",
			"qualifiedName": "MedusaContainer"
		},
		"321": {
			"sourceFileName": "../../../packages/types/dist/common/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"322": {
			"sourceFileName": "../../../packages/types/dist/common/medusa-container.d.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"323": {
			"sourceFileName": "../../../packages/types/dist/common/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"324": {
			"sourceFileName": "../../../packages/types/dist/common/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"325": {
			"sourceFileName": "../../../packages/types/dist/common/medusa-container.d.ts",
			"qualifiedName": "name"
		},
		"326": {
			"sourceFileName": "../../../packages/types/dist/common/medusa-container.d.ts",
			"qualifiedName": "registration"
		},
		"327": {
			"sourceFileName": "../../../packages/types/dist/common/medusa-container.d.ts",
			"qualifiedName": "T"
		},
		"328": {
			"sourceFileName": "../../../packages/types/dist/common/medusa-container.d.ts",
			"qualifiedName": "__type.createScope"
		},
		"329": {
			"sourceFileName": "../../../packages/types/dist/common/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"330": {
			"sourceFileName": "../../../packages/types/dist/common/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"331": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionMetadata"
		},
		"332": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "__type"
		},
		"333": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "__type.model_id"
		},
		"334": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "__type.reply_to_topic"
		},
		"335": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "__type.idempotency_key"
		},
		"336": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "__type.action"
		},
		"337": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "__type.action_type"
		},
		"338": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "__type.attempt"
		},
		"339": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "__type.timestamp"
		},
		"340": {
			"sourceFileName": "../../../packages/types/dist/shared-context.d.ts",
			"qualifiedName": "Context"
		},
		"341": {
			"sourceFileName": "../../../packages/types/dist/shared-context.d.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"342": {
			"sourceFileName": "../../../packages/types/dist/shared-context.d.ts",
			"qualifiedName": "__type.manager"
		},
		"343": {
			"sourceFileName": "../../../packages/types/dist/shared-context.d.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"344": {
			"sourceFileName": "../../../packages/types/dist/shared-context.d.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"345": {
			"sourceFileName": "../../../packages/types/dist/shared-context.d.ts",
			"qualifiedName": "__type.transactionId"
		},
		"346": {
			"sourceFileName": "../../../packages/types/dist/shared-context.d.ts",
			"qualifiedName": "TManager"
		},
		"347": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionContext"
		},
		"348": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionContext.__constructor"
		},
		"349": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionContext"
		},
		"350": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "payload"
		},
		"351": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "invoke"
		},
		"352": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "compensate"
		},
		"353": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionContext.payload"
		},
		"354": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionContext.invoke"
		},
		"355": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionContext.compensate"
		},
		"356": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"357": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type"
		},
		"358": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.schema"
		},
		"359": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.relationships"
		},
		"360": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.extends"
		},
		"361": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type"
		},
		"362": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.serviceName"
		},
		"363": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"364": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type"
		},
		"365": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.path"
		},
		"366": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"367": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.relationship"
		},
		"368": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.serviceName"
		},
		"369": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"370": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.isLink"
		},
		"371": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"372": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"373": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"374": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type"
		},
		"375": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.tableName"
		},
		"376": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"377": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.extraFields"
		},
		"378": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type"
		},
		"379": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.type"
		},
		"380": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"381": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.nullable"
		},
		"382": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.options"
		},
		"383": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"384": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type"
		},
		"385": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.key"
		},
		"386": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.registrationName"
		},
		"387": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"388": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.label"
		},
		"389": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.canOverride"
		},
		"390": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.isRequired"
		},
		"391": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"392": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.isLegacy"
		},
		"393": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.dependencies"
		},
		"394": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"395": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow"
		},
		"396": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.__constructor"
		},
		"397": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow"
		},
		"398": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "workflowId"
		},
		"399": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "modulesLoaded"
		},
		"400": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type"
		},
		"401": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"402": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.__definition"
		},
		"403": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.container"
		},
		"404": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.workflowId"
		},
		"405": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.flow"
		},
		"406": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.workflow"
		},
		"407": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.handlers"
		},
		"408": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.commit"
		},
		"409": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.commit"
		},
		"410": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.getFlow"
		},
		"411": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.getFlow"
		},
		"412": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.run"
		},
		"413": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.run"
		},
		"414": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "uniqueTransactionId"
		},
		"415": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "input"
		},
		"416": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "context"
		},
		"417": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.registerStepSuccess"
		},
		"418": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.registerStepSuccess"
		},
		"419": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "idempotencyKey"
		},
		"420": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "response"
		},
		"421": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "context"
		},
		"422": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.registerStepFailure"
		},
		"423": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.registerStepFailure"
		},
		"424": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "idempotencyKey"
		},
		"425": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "error"
		},
		"426": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "context"
		},
		"427": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.addAction"
		},
		"428": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.addAction"
		},
		"429": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "action"
		},
		"430": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "handler"
		},
		"431": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "options"
		},
		"432": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.replaceAction"
		},
		"433": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.replaceAction"
		},
		"434": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "existingAction"
		},
		"435": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "action"
		},
		"436": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "handler"
		},
		"437": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "options"
		},
		"438": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.insertActionBefore"
		},
		"439": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.insertActionBefore"
		},
		"440": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "existingAction"
		},
		"441": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "action"
		},
		"442": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "handler"
		},
		"443": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "options"
		},
		"444": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.insertActionAfter"
		},
		"445": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.insertActionAfter"
		},
		"446": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "existingAction"
		},
		"447": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "action"
		},
		"448": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "handler"
		},
		"449": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "options"
		},
		"450": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.appendAction"
		},
		"451": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.appendAction"
		},
		"452": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "action"
		},
		"453": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "to"
		},
		"454": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "handler"
		},
		"455": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "options"
		},
		"456": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.moveAction"
		},
		"457": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.moveAction"
		},
		"458": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "actionToMove"
		},
		"459": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "targetAction"
		},
		"460": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.moveAndMergeNextAction"
		},
		"461": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.moveAndMergeNextAction"
		},
		"462": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "actionToMove"
		},
		"463": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "targetAction"
		},
		"464": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.mergeActions"
		},
		"465": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.mergeActions"
		},
		"466": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "where"
		},
		"467": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "actions"
		},
		"468": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.deleteAction"
		},
		"469": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.deleteAction"
		},
		"470": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "action"
		},
		"471": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "parentSteps"
		},
		"472": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.pruneAction"
		},
		"473": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.pruneAction"
		},
		"474": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "action"
		},
		"475": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.assertHandler"
		},
		"476": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "LocalWorkflow.assertHandler"
		},
		"477": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "handler"
		},
		"478": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "action"
		},
		"479": {
			"sourceFileName": "../../../packages/workflows-sdk/src/helper/workflow-export.ts",
			"qualifiedName": "WorkflowResult"
		},
		"480": {
			"sourceFileName": "../../../packages/workflows-sdk/src/helper/workflow-export.ts",
			"qualifiedName": "__type"
		},
		"481": {
			"sourceFileName": "../../../packages/workflows-sdk/src/helper/workflow-export.ts",
			"qualifiedName": "__type.errors"
		},
		"482": {
			"sourceFileName": "../../../packages/workflows-sdk/src/helper/workflow-export.ts",
			"qualifiedName": "__type.transaction"
		},
		"483": {
			"sourceFileName": "../../../packages/workflows-sdk/src/helper/workflow-export.ts",
			"qualifiedName": "__type.result"
		},
		"484": {
			"sourceFileName": "../../../packages/workflows-sdk/src/helper/workflow-export.ts",
			"qualifiedName": "TResult"
		},
		"485": {
			"sourceFileName": "../../../packages/workflows-sdk/src/helper/workflow-export.ts",
			"qualifiedName": "FlowRunOptions"
		},
		"486": {
			"sourceFileName": "../../../packages/workflows-sdk/src/helper/workflow-export.ts",
			"qualifiedName": "__type"
		},
		"487": {
			"sourceFileName": "../../../packages/workflows-sdk/src/helper/workflow-export.ts",
			"qualifiedName": "__type.input"
		},
		"488": {
			"sourceFileName": "../../../packages/workflows-sdk/src/helper/workflow-export.ts",
			"qualifiedName": "__type.context"
		},
		"489": {
			"sourceFileName": "../../../packages/workflows-sdk/src/helper/workflow-export.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"490": {
			"sourceFileName": "../../../packages/workflows-sdk/src/helper/workflow-export.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"491": {
			"sourceFileName": "../../../packages/workflows-sdk/src/helper/workflow-export.ts",
			"qualifiedName": "TData"
		},
		"492": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionStepsDefinition"
		},
		"493": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type"
		},
		"494": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.action"
		},
		"495": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.continueOnPermanentFailure"
		},
		"496": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.noCompensation"
		},
		"497": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.maxRetries"
		},
		"498": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.retryInterval"
		},
		"499": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.timeout"
		},
		"500": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.async"
		},
		"501": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.noWait"
		},
		"502": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.saveResponse"
		},
		"503": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.next"
		},
		"504": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "InternalStep"
		},
		"505": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "InternalStep.next"
		},
		"506": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "InternalStep.depth"
		},
		"507": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/orchestrator-builder.d.ts",
			"qualifiedName": "InternalStep.parent"
		},
		"508": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.action"
		},
		"509": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.continueOnPermanentFailure"
		},
		"510": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.noCompensation"
		},
		"511": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.maxRetries"
		},
		"512": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.retryInterval"
		},
		"513": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.timeout"
		},
		"514": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.async"
		},
		"515": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.noWait"
		},
		"516": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "__type.saveResponse"
		},
		"517": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "WorkflowStepHandler"
		},
		"518": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type"
		},
		"519": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type"
		},
		"520": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "args"
		},
		"521": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type"
		},
		"522": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type.container"
		},
		"523": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type.payload"
		},
		"524": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type.invoke"
		},
		"525": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type"
		},
		"526": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type.__index"
		},
		"528": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type.compensate"
		},
		"529": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type"
		},
		"530": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type.__index"
		},
		"532": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type.metadata"
		},
		"533": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type.transaction"
		},
		"534": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type.context"
		},
		"535": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionHandlerType"
		},
		"536": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionHandlerType.INVOKE"
		},
		"537": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionHandlerType.COMPENSATE"
		},
		"538": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"539": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"540": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"541": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"542": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type"
		},
		"543": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type.path"
		},
		"544": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"545": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"546": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"547": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"548": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type"
		},
		"549": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type.serviceName"
		},
		"550": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type.relationship"
		},
		"551": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"552": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"553": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type"
		},
		"554": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"555": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"556": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"557": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type"
		},
		"558": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.scope"
		},
		"559": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.resources"
		},
		"560": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.dependencies"
		},
		"561": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.definition"
		},
		"562": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.resolve"
		},
		"563": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.options"
		},
		"564": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.alias"
		},
		"565": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.main"
		},
		"566": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"567": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type"
		},
		"568": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.scope"
		},
		"569": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.definition"
		},
		"570": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.server"
		},
		"571": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type"
		},
		"572": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.type"
		},
		"573": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.url"
		},
		"574": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"575": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.options"
		},
		"576": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.alias"
		},
		"577": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "__type.main"
		},
		"578": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "WorkflowDefinition"
		},
		"579": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "WorkflowDefinition.id"
		},
		"580": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "WorkflowDefinition.handler"
		},
		"581": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type"
		},
		"582": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type"
		},
		"583": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "container"
		},
		"584": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "context"
		},
		"585": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "WorkflowDefinition.orchestrator"
		},
		"586": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "WorkflowDefinition.flow_"
		},
		"587": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "WorkflowDefinition.handlers_"
		},
		"588": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type"
		},
		"589": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type.invoke"
		},
		"590": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "__type.compensate"
		},
		"591": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "WorkflowDefinition.requiredModules"
		},
		"592": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/workflow-manager.d.ts",
			"qualifiedName": "WorkflowDefinition.optionalModules"
		},
		"593": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "StepHandler"
		},
		"594": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "__type"
		},
		"595": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "__type.invoke"
		},
		"596": {
			"sourceFileName": "../../../packages/orchestration/dist/workflow/local-workflow.d.ts",
			"qualifiedName": "__type.compensate"
		},
		"597": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction"
		},
		"598": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.keyValueStore"
		},
		"599": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.keyPrefix"
		},
		"600": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.loadTransaction"
		},
		"601": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.loadTransaction"
		},
		"602": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "transactionId"
		},
		"603": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.__constructor"
		},
		"604": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction"
		},
		"605": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "flow"
		},
		"606": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "handler"
		},
		"607": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "payload"
		},
		"608": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "errors"
		},
		"609": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "context"
		},
		"610": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.flow"
		},
		"611": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.handler"
		},
		"612": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.payload"
		},
		"613": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.modelId"
		},
		"614": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.transactionId"
		},
		"615": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.errors"
		},
		"616": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.context"
		},
		"617": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.getFlow"
		},
		"618": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.getFlow"
		},
		"619": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.getContext"
		},
		"620": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.getContext"
		},
		"621": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.getErrors"
		},
		"622": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.getErrors"
		},
		"623": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "handlerType"
		},
		"624": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.addError"
		},
		"625": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.addError"
		},
		"626": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "action"
		},
		"627": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "handlerType"
		},
		"628": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "error"
		},
		"629": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.addResponse"
		},
		"630": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.addResponse"
		},
		"631": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "action"
		},
		"632": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "handlerType"
		},
		"633": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "response"
		},
		"634": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.hasFinished"
		},
		"635": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.hasFinished"
		},
		"636": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.getState"
		},
		"637": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.getState"
		},
		"638": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.isPartiallyCompleted"
		},
		"639": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.isPartiallyCompleted"
		},
		"640": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.canInvoke"
		},
		"641": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.canInvoke"
		},
		"642": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.canRevert"
		},
		"643": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.canRevert"
		},
		"644": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.saveCheckpoint"
		},
		"645": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.saveCheckpoint"
		},
		"646": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.deleteCheckpoint"
		},
		"647": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "DistributedTransaction.deleteCheckpoint"
		},
		"648": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionStepError"
		},
		"649": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionStepError.__constructor"
		},
		"650": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionStepError"
		},
		"651": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "action"
		},
		"652": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "handlerType"
		},
		"653": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "error"
		},
		"654": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionStepError.action"
		},
		"655": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionStepError.handlerType"
		},
		"656": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionStepError.error"
		},
		"657": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"658": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"659": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"660": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"661": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type"
		},
		"662": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type.alias"
		},
		"663": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"664": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"665": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type.serviceName"
		},
		"666": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"667": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type.inverse"
		},
		"668": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type.isList"
		},
		"669": {
			"sourceFileName": "../../../packages/types/dist/joiner/index.d.ts",
			"qualifiedName": "__type.args"
		},
		"670": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "MODULE_SCOPE.INTERNAL"
		},
		"671": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE"
		},
		"672": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.SHARED"
		},
		"673": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.ISOLATED"
		},
		"674": {
			"sourceFileName": "../../../packages/types/dist/modules-sdk/index.d.ts",
			"qualifiedName": "MODULE_SCOPE.EXTERNAL"
		},
		"675": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStepHandler"
		},
		"676": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "__type"
		},
		"677": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "__type"
		},
		"678": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "actionId"
		},
		"679": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "handlerType"
		},
		"680": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "payload"
		},
		"681": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "transaction"
		},
		"682": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator"
		},
		"683": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.ROOT_STEP"
		},
		"684": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.DEFAULT_RETRIES"
		},
		"685": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.SEPARATOR"
		},
		"686": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.getKeyName"
		},
		"687": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.getKeyName"
		},
		"688": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "params"
		},
		"689": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.setStepSuccess"
		},
		"690": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.setStepFailure"
		},
		"691": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.loadTransactionById"
		},
		"692": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.buildSteps"
		},
		"693": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.getStepByAction"
		},
		"694": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.getTransactionAndStepFromIdempotencyKey"
		},
		"695": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.__constructor"
		},
		"696": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator"
		},
		"697": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "id"
		},
		"698": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "definition"
		},
		"699": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.id"
		},
		"700": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.definition"
		},
		"701": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.invokeSteps"
		},
		"702": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.compensateSteps"
		},
		"703": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.getPreviousStep"
		},
		"704": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.getInvokeSteps"
		},
		"705": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.getCompensationSteps"
		},
		"706": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.canMoveForward"
		},
		"707": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.canMoveBackward"
		},
		"708": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.canContinue"
		},
		"709": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.checkAllSteps"
		},
		"710": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.flagStepsToRevert"
		},
		"711": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.executeNext"
		},
		"712": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.resume"
		},
		"713": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.resume"
		},
		"714": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "transaction"
		},
		"715": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.cancelTransaction"
		},
		"716": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.cancelTransaction"
		},
		"717": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "transaction"
		},
		"718": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.createTransactionFlow"
		},
		"719": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.beginTransaction"
		},
		"720": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.beginTransaction"
		},
		"721": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "transactionId"
		},
		"722": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "handler"
		},
		"723": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "payload"
		},
		"724": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepSuccess"
		},
		"725": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepSuccess"
		},
		"726": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "responseIdempotencyKey"
		},
		"727": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "handler"
		},
		"728": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "transaction"
		},
		"729": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "response"
		},
		"730": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepFailure"
		},
		"731": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionOrchestrator.registerStepFailure"
		},
		"732": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "responseIdempotencyKey"
		},
		"733": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "error"
		},
		"734": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "handler"
		},
		"735": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "transaction"
		},
		"736": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionCheckpoint"
		},
		"737": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionCheckpoint.__constructor"
		},
		"738": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionCheckpoint"
		},
		"739": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "flow"
		},
		"740": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "context"
		},
		"741": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "errors"
		},
		"742": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionCheckpoint.flow"
		},
		"743": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionCheckpoint.context"
		},
		"744": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionCheckpoint.errors"
		},
		"745": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "TransactionFlow"
		},
		"746": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "__type"
		},
		"747": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "__type.modelId"
		},
		"748": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "__type.definition"
		},
		"749": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "__type.transactionId"
		},
		"750": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "__type.hasFailedSteps"
		},
		"751": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "__type.hasSkippedSteps"
		},
		"752": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "__type.state"
		},
		"753": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "__type.steps"
		},
		"754": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "__type"
		},
		"755": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-orchestrator.d.ts",
			"qualifiedName": "__type.__index"
		},
		"757": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionState"
		},
		"758": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionState.NOT_STARTED"
		},
		"759": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionState.INVOKING"
		},
		"760": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionState.WAITING_TO_COMPENSATE"
		},
		"761": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionState.COMPENSATING"
		},
		"762": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionState.DONE"
		},
		"763": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionState.REVERTED"
		},
		"764": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionState.FAILED"
		},
		"765": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionState.DORMANT"
		},
		"766": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionState.SKIPPED"
		},
		"767": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionPayload"
		},
		"768": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionPayload.__constructor"
		},
		"769": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionPayload"
		},
		"770": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "metadata"
		},
		"771": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "data"
		},
		"772": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "context"
		},
		"773": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionPayload.metadata"
		},
		"774": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionPayload.data"
		},
		"775": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/distributed-transaction.d.ts",
			"qualifiedName": "TransactionPayload.context"
		},
		"776": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep"
		},
		"779": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.stepFailed"
		},
		"780": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.id"
		},
		"781": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.depth"
		},
		"782": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.definition"
		},
		"783": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.invoke"
		},
		"784": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "__type"
		},
		"785": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "__type.state"
		},
		"786": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "__type.status"
		},
		"787": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.compensate"
		},
		"788": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "__type"
		},
		"789": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "__type.state"
		},
		"790": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "__type.status"
		},
		"791": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.attempts"
		},
		"792": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.failures"
		},
		"793": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.lastAttempt"
		},
		"794": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.next"
		},
		"795": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.saveResponse"
		},
		"796": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.getStates"
		},
		"797": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.getStates"
		},
		"798": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "__type"
		},
		"799": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "__type.state"
		},
		"800": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "__type.status"
		},
		"801": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.beginCompensation"
		},
		"802": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.beginCompensation"
		},
		"803": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.isCompensating"
		},
		"804": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.isCompensating"
		},
		"805": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.changeState"
		},
		"806": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.changeState"
		},
		"807": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "toState"
		},
		"808": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.changeStatus"
		},
		"809": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.changeStatus"
		},
		"810": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "toStatus"
		},
		"811": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.canRetry"
		},
		"812": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.canRetry"
		},
		"813": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.canInvoke"
		},
		"814": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.canInvoke"
		},
		"815": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "flowState"
		},
		"816": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.canCompensate"
		},
		"817": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "TransactionStep.canCompensate"
		},
		"818": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/transaction-step.d.ts",
			"qualifiedName": "flowState"
		},
		"819": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionStepStatus"
		},
		"820": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionStepStatus.IDLE"
		},
		"821": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionStepStatus.OK"
		},
		"822": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionStepStatus.WAITING"
		},
		"823": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionStepStatus.TEMPORARY_FAILURE"
		},
		"824": {
			"sourceFileName": "../../../packages/orchestration/dist/transaction/types.d.ts",
			"qualifiedName": "TransactionStepStatus.PERMANENT_FAILURE"
		}
	}
}