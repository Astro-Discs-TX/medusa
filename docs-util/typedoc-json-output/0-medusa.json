{
	"id": 0,
	"name": "medusa",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 4819,
			"name": "MedusaError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Standardized error to be used across Medusa project."
					}
				]
			},
			"children": [
				{
					"id": 4842,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4843,
					"name": "message",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.message"
					}
				},
				{
					"id": 4844,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4845,
					"name": "date",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 4820,
					"name": "Types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4821,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4822,
									"name": "DB_ERROR",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Errors stemming from the database"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4823,
									"name": "DUPLICATE_ERROR",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4824,
									"name": "INVALID_ARGUMENT",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4825,
									"name": "INVALID_DATA",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4826,
									"name": "UNAUTHORIZED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4827,
									"name": "NOT_FOUND",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4828,
									"name": "NOT_ALLOWED",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4829,
									"name": "UNEXPECTED_STATE",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4830,
									"name": "CONFLICT",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4831,
									"name": "PAYMENT_AUTHORIZATION_ERROR",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4822,
										4823,
										4824,
										4825,
										4826,
										4827,
										4828,
										4829,
										4830,
										4831
									]
								}
							]
						}
					}
				},
				{
					"id": 4832,
					"name": "Codes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4833,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4834,
									"name": "INSUFFICIENT_INVENTORY",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4835,
									"name": "CART_INCOMPATIBLE_STATE",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4834,
										4835
									]
								}
							]
						}
					}
				},
				{
					"id": 4836,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4837,
							"name": "new MedusaError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a standardized error to be used across Medusa project."
									}
								]
							},
							"parameters": [
								{
									"id": 4838,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "type of error"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4839,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "message to go along with error"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4840,
									"name": "code",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "code of error"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4841,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "params"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 4819,
								"name": "MedusaError",
								"package": "medusa-core-utils"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4836
					]
				},
				{
					"title": "Properties",
					"children": [
						4842,
						4843,
						4844,
						4845,
						4820,
						4832
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Error"
					},
					"name": "Error",
					"package": "typescript"
				}
			]
		},
		{
			"id": 4895,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/awilix/lib/container.d.ts",
							"qualifiedName": "AwilixContainer"
						},
						"name": "AwilixContainer",
						"package": "awilix"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 4896,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4897,
									"name": "registerAdd",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4898,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 4899,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameter": [
														{
															"id": 4902,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 4900,
															"name": "name",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 4901,
															"name": "registration",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 4902,
																"name": "T",
																"package": "medusa-core-utils",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 4895,
														"name": "MedusaContainer",
														"package": "medusa-core-utils"
													}
												}
											]
										}
									}
								},
								{
									"id": 4903,
									"name": "createScope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4904,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 4905,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 4895,
														"name": "MedusaContainer",
														"package": "medusa-core-utils"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4897,
										4903
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 4906,
			"name": "\"medusa-interfaces\"",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"implementedBy": [
				{
					"type": "reference",
					"target": 3461,
					"name": "AbstractPaymentService"
				}
			]
		},
		{
			"id": 2624,
			"name": "authenticateCustomer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2625,
					"name": "authenticateCustomer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.RequestHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
									"qualifiedName": "ParamsDictionary"
								},
								"name": "ParamsDictionary",
								"package": "@types/express-serve-static-core"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
									"qualifiedName": "QueryString.ParsedQs"
								},
								"name": "ParsedQs",
								"package": "@types/qs",
								"qualifiedName": "QueryString.ParsedQs"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "RequestHandler",
						"package": "@types/express",
						"qualifiedName": "e.RequestHandler"
					}
				}
			]
		},
		{
			"id": 2622,
			"name": "authenticate",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2623,
					"name": "authenticate",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.RequestHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
									"qualifiedName": "ParamsDictionary"
								},
								"name": "ParamsDictionary",
								"package": "@types/express-serve-static-core"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
									"qualifiedName": "QueryString.ParsedQs"
								},
								"name": "ParsedQs",
								"package": "@types/qs",
								"qualifiedName": "QueryString.ParsedQs"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "RequestHandler",
						"package": "@types/express",
						"qualifiedName": "e.RequestHandler"
					}
				}
			]
		},
		{
			"id": 4846,
			"name": "handler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4847,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 4848,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 4849,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
											"qualifiedName": "e.Request"
										},
										"name": "Request",
										"package": "@types/express",
										"qualifiedName": "e.Request"
									}
								},
								{
									"id": 4850,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
											"qualifiedName": "e.Response"
										},
										"name": "Response",
										"package": "@types/express",
										"qualifiedName": "e.Response"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			}
		},
		{
			"id": 2634,
			"name": "wrapHandler",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2635,
					"name": "wrapHandler",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use "
									},
									{
										"kind": "code",
										"text": "`import { wrapHandler } from \"@medusajs/utils\"`"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 2636,
							"name": "fn",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4846,
								"name": "handler",
								"package": "@medusajs/medusa"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.RequestHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
									"qualifiedName": "ParamsDictionary"
								},
								"name": "ParamsDictionary",
								"package": "@types/express-serve-static-core"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
									"qualifiedName": "QueryString.ParsedQs"
								},
								"name": "ParsedQs",
								"package": "@types/qs",
								"qualifiedName": "QueryString.ParsedQs"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "RequestHandler",
						"package": "@types/express",
						"qualifiedName": "e.RequestHandler"
					}
				}
			]
		},
		{
			"id": 2637,
			"name": "canAccessBatchJob",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2638,
					"name": "canAccessBatchJob",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 2639,
							"name": "req",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2640,
							"name": "res",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2641,
							"name": "next",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 2642,
			"name": "getRequestedBatchJob",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2643,
					"name": "getRequestedBatchJob",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 2644,
							"name": "req",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2645,
							"name": "res",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2646,
							"name": "next",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 2647,
			"name": "doesConditionBelongToDiscount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2648,
					"name": "doesConditionBelongToDiscount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 2649,
							"name": "req",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2650,
							"name": "res",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 2651,
							"name": "next",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 2626,
			"name": "errorHandler",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2627,
					"name": "errorHandler",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2628,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 2629,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2630,
											"name": "err",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 4819,
												"name": "MedusaError",
												"package": "medusa-core-utils"
											}
										},
										{
											"id": 2631,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
															"qualifiedName": "ParamsDictionary"
														},
														"name": "ParamsDictionary",
														"package": "@types/express-serve-static-core"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
															"qualifiedName": "QueryString.ParsedQs"
														},
														"name": "ParsedQs",
														"package": "@types/qs",
														"qualifiedName": "QueryString.ParsedQs"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 2632,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 2633,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2652,
			"name": "normalizeQuery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2653,
					"name": "normalizeQuery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Normalize an input query, especially from array like query params to an array type\ne.g: /admin/orders/?fields[]=id,status,cart_id becomes { fields: [\"id\", \"status\", \"cart_id\"] }"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2654,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 2655,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2656,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
															"qualifiedName": "ParamsDictionary"
														},
														"name": "ParamsDictionary",
														"package": "@types/express-serve-static-core"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
															"qualifiedName": "QueryString.ParsedQs"
														},
														"name": "ParsedQs",
														"package": "@types/qs",
														"qualifiedName": "QueryString.ParsedQs"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 2657,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 2658,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2659,
			"name": "requireCustomerAuthentication",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2660,
					"name": "requireCustomerAuthentication",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.RequestHandler"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
									"qualifiedName": "ParamsDictionary"
								},
								"name": "ParamsDictionary",
								"package": "@types/express-serve-static-core"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
									"qualifiedName": "QueryString.ParsedQs"
								},
								"name": "ParsedQs",
								"package": "@types/qs",
								"qualifiedName": "QueryString.ParsedQs"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						],
						"name": "RequestHandler",
						"package": "@types/express",
						"qualifiedName": "e.RequestHandler"
					}
				}
			]
		},
		{
			"id": 2661,
			"name": "transformBody",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2662,
					"name": "transformBody",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameter": [
						{
							"id": 2663,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 2664,
							"name": "plainToClass",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3983,
								"typeArguments": [
									{
										"type": "reference",
										"target": 2663,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "ClassConstructor",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 2665,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/class-validator/types/validation/ValidatorOptions.d.ts",
									"qualifiedName": "ValidatorOptions"
								},
								"name": "ValidatorOptions",
								"package": "class-validator"
							},
							"defaultValue": "..."
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2666,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 2667,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2668,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 2669,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 2670,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2671,
			"name": "transformIncludesOptions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2672,
					"name": "transformIncludesOptions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve the includes options from the fields query param.\nIf the include option is present then assigned it to includes on req"
							}
						]
					},
					"parameters": [
						{
							"id": 2673,
							"name": "allowedIncludes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of fields that can be passed and assign to req.includes"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "[]"
						},
						{
							"id": 2674,
							"name": "expectedIncludes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of fields that the consumer can pass to the end point using this middleware. It is a subset of "
									},
									{
										"kind": "code",
										"text": "`allowedIncludes`"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "[]"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2675,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 2676,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2677,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
															"qualifiedName": "ParamsDictionary"
														},
														"name": "ParamsDictionary",
														"package": "@types/express-serve-static-core"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../node_modules/@types/qs/index.d.ts",
															"qualifiedName": "QueryString.ParsedQs"
														},
														"name": "ParsedQs",
														"package": "@types/qs",
														"qualifiedName": "QueryString.ParsedQs"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 2678,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 2679,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2680,
			"name": "transformQuery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2681,
					"name": "transformQuery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Middleware that transform the query input for the admin end points"
							}
						]
					},
					"typeParameter": [
						{
							"id": 2682,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3900,
								"name": "RequestQueryFields",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 2683,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
									"qualifiedName": "BaseEntity"
								},
								"name": "BaseEntity",
								"package": "@medusajs/medusa"
							}
						}
					],
					"parameters": [
						{
							"id": 2684,
							"name": "plainToClass",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3983,
								"typeArguments": [
									{
										"type": "reference",
										"target": 2682,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "ClassConstructor",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 2685,
							"name": "queryConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3891,
										"typeArguments": [
											{
												"type": "reference",
												"target": 2683,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "QueryConfig",
										"package": "@medusajs/medusa"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "allowedFields"
											},
											{
												"type": "literal",
												"value": "allowedRelations"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						},
						{
							"id": 2686,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/class-validator/types/validation/ValidatorOptions.d.ts",
									"qualifiedName": "ValidatorOptions"
								},
								"name": "ValidatorOptions",
								"package": "class-validator"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2687,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 2688,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2689,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 2690,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 2691,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 2692,
			"name": "transformStoreQuery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2693,
					"name": "transformStoreQuery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Middleware that transform the query input for the store endpoints"
							}
						]
					},
					"typeParameter": [
						{
							"id": 2694,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3900,
								"name": "RequestQueryFields",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 2695,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
									"qualifiedName": "BaseEntity"
								},
								"name": "BaseEntity",
								"package": "@medusajs/medusa"
							}
						}
					],
					"parameters": [
						{
							"id": 2696,
							"name": "plainToClass",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3983,
								"typeArguments": [
									{
										"type": "reference",
										"target": 2694,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "ClassConstructor",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 2697,
							"name": "queryConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 3891,
								"typeArguments": [
									{
										"type": "reference",
										"target": 2695,
										"name": "TEntity",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "QueryConfig",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 2698,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/class-validator/types/validation/ValidatorOptions.d.ts",
									"qualifiedName": "ValidatorOptions"
								},
								"name": "ValidatorOptions",
								"package": "class-validator"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 2699,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 2700,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 2701,
											"name": "req",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Request"
												},
												"name": "Request",
												"package": "@types/express",
												"qualifiedName": "e.Request"
											}
										},
										{
											"id": 2702,
											"name": "res",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.Response"
												},
												"name": "Response",
												"package": "@types/express",
												"qualifiedName": "e.Response"
											}
										},
										{
											"id": 2703,
											"name": "next",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
													"qualifiedName": "e.NextFunction"
												},
												"name": "NextFunction",
												"package": "@types/express",
												"qualifiedName": "e.NextFunction"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 5,
			"name": "AdminPostAnalyticsConfigReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 6,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 7,
							"name": "new AdminPostAnalyticsConfigReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 5,
								"name": "AdminPostAnalyticsConfigReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 8,
					"name": "opt_out",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 9,
					"name": "anonymize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						6
					]
				},
				{
					"title": "Properties",
					"children": [
						8,
						9
					]
				}
			]
		},
		{
			"id": 1,
			"name": "AdminAnalyticsConfigRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3,
							"name": "analytics_config",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/analytics-config.ts",
									"qualifiedName": "AnalyticsConfig"
								},
								"name": "AnalyticsConfig",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3
							]
						}
					]
				}
			}
		},
		{
			"id": 4,
			"name": "AdminAnalyticsConfigDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 10,
			"name": "AdminPostAnalyticsConfigAnalyticsConfigReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 11,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 12,
							"name": "new AdminPostAnalyticsConfigAnalyticsConfigReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 10,
								"name": "AdminPostAnalyticsConfigAnalyticsConfigReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 13,
					"name": "opt_out",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 14,
					"name": "anonymize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						11
					]
				},
				{
					"title": "Properties",
					"children": [
						13,
						14
					]
				}
			]
		},
		{
			"id": 21,
			"name": "AdminPostAuthReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The admin's credentials used to log in."
					}
				]
			},
			"children": [
				{
					"id": 22,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 23,
							"name": "new AdminPostAuthReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The admin's credentials used to log in."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 21,
								"name": "AdminPostAuthReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 24,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 25,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						22
					]
				},
				{
					"title": "Properties",
					"children": [
						24,
						25
					]
				}
			]
		},
		{
			"id": 15,
			"name": "AdminAuthRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The user's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 16,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 17,
							"name": "user",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "User details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/user.ts",
											"qualifiedName": "User"
										},
										"name": "User",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "password_hash"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								17
							]
						}
					]
				}
			}
		},
		{
			"id": 18,
			"name": "AdminBearerAuthRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The access token of the user, if they're authenticated successfully."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 19,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 20,
							"name": "access_token",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Access token that can be used to send authenticated requests."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								20
							]
						}
					]
				}
			}
		},
		{
			"id": 33,
			"name": "AdminPostBatchesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the batch job to create."
					}
				]
			},
			"children": [
				{
					"id": 34,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 35,
							"name": "new AdminPostBatchesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the batch job to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 33,
								"name": "AdminPostBatchesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 36,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of batch job to start, which is defined by the `batchType` property of the associated batch job strategy."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 37,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Additional infomration regarding the batch to be used for processing."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 38,
					"name": "dry_run",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set a batch job in dry_run mode, which would delay executing the batch job until it's confirmed."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						34
					]
				},
				{
					"title": "Properties",
					"children": [
						36,
						37,
						38
					]
				}
			]
		},
		{
			"id": 26,
			"name": "AdminBatchJobRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The batch job's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 27,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 28,
							"name": "batch_job",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Batch job details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
									"qualifiedName": "BatchJob"
								},
								"name": "BatchJob",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								28
							]
						}
					]
				}
			}
		},
		{
			"id": 29,
			"name": "AdminBatchJobListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 30,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31,
									"name": "batch_jobs",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of batch job details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
												"qualifiedName": "BatchJob"
											},
											"name": "BatchJob",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 32,
			"name": "defaultAdminBatchFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 39,
			"name": "AdminGetBatchPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Request parameters used to configure and paginate retrieved batch jobs."
					}
				]
			},
			"children": [
				{
					"id": 40,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 41,
							"name": "new AdminGetBatchPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39,
								"name": "AdminGetBatchPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 42,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 43,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 44,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 45,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 46,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						40
					]
				},
				{
					"title": "Properties",
					"children": [
						42,
						43,
						44,
						45,
						46
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 47,
					"name": "AdminGetBatchParams"
				}
			]
		},
		{
			"id": 47,
			"name": "AdminGetBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure pagination of the retrieved batch jobs."
					}
				]
			},
			"children": [
				{
					"id": 48,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 49,
							"name": "new AdminGetBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 47,
								"name": "AdminGetBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 41,
								"name": "AdminGetBatchPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 40,
						"name": "AdminGetBatchPaginationParams.constructor"
					}
				},
				{
					"id": 59,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10",
					"inheritedFrom": {
						"type": "reference",
						"target": 42,
						"name": "AdminGetBatchPaginationParams.limit"
					}
				},
				{
					"id": 60,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 43,
						"name": "AdminGetBatchPaginationParams.offset"
					}
				},
				{
					"id": 61,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 44,
						"name": "AdminGetBatchPaginationParams.expand"
					}
				},
				{
					"id": 62,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 45,
						"name": "AdminGetBatchPaginationParams.fields"
					}
				},
				{
					"id": 63,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 46,
						"name": "AdminGetBatchPaginationParams.order"
					}
				},
				{
					"id": 50,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter batch jobs by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 51,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Types to filter batch jobs by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 52,
					"name": "confirmed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`confirmed_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 3917,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 53,
					"name": "pre_processed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`pre_processed_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 3917,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 54,
					"name": "completed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`completed_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 3917,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 55,
					"name": "failed_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`failed_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 3917,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 56,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`canceled_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 3917,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 57,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 58,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the batch jobs' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						48
					]
				},
				{
					"title": "Properties",
					"children": [
						59,
						60,
						61,
						62,
						63,
						50,
						51,
						52,
						53,
						54,
						55,
						56,
						57,
						58
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 39,
					"name": "AdminGetBatchPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 78,
			"name": "AdminPostProductsToCollectionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to add to the collection."
					}
				]
			},
			"children": [
				{
					"id": 79,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 80,
							"name": "new AdminPostProductsToCollectionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to add to the collection."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 78,
								"name": "AdminPostProductsToCollectionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 81,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product IDs to add to the Product Collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						79
					]
				},
				{
					"title": "Properties",
					"children": [
						81
					]
				}
			]
		},
		{
			"id": 82,
			"name": "AdminPostCollectionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product collection's details."
					}
				]
			},
			"children": [
				{
					"id": 83,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 84,
							"name": "new AdminPostCollectionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product collection's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 82,
								"name": "AdminPostCollectionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 85,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 86,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional handle to be used in slugs. If none is provided, the kebab-case version of the title will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 87,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						83
					]
				},
				{
					"title": "Properties",
					"children": [
						85,
						86,
						87
					]
				}
			]
		},
		{
			"id": 64,
			"name": "defaultAdminCollectionsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 65,
			"name": "defaultAdminCollectionsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 66,
			"name": "AdminCollectionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 67,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 68,
									"name": "collections",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array of collection details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
												"qualifiedName": "ProductCollection"
											},
											"name": "ProductCollection",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										68
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 69,
			"name": "AdminCollectionsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 70,
			"name": "AdminDeleteProductsFromCollectionRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Deletion operation details"
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 71,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 72,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the collection"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 73,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of object the removal was executed on"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "product-collection"
						},
						{
							"id": 74,
							"name": "removed_products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs of the products removed from the collection"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								72,
								73,
								74
							]
						}
					]
				}
			}
		},
		{
			"id": 75,
			"name": "AdminCollectionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The collection's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 76,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 77,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product Collection details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
									"qualifiedName": "ProductCollection"
								},
								"name": "ProductCollection",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								77
							]
						}
					]
				}
			}
		},
		{
			"id": 88,
			"name": "AdminGetCollectionsPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to configure the pagination of the retrieved product collections."
					}
				]
			},
			"children": [
				{
					"id": 89,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 90,
							"name": "new AdminGetCollectionsPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 88,
								"name": "AdminGetCollectionsPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 91,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 92,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						89
					]
				},
				{
					"title": "Properties",
					"children": [
						91,
						92
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 93,
					"name": "AdminGetCollectionsParams"
				}
			]
		},
		{
			"id": 93,
			"name": "AdminGetCollectionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product collections."
					}
				]
			},
			"children": [
				{
					"id": 94,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 95,
							"name": "new AdminGetCollectionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 93,
								"name": "AdminGetCollectionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 90,
								"name": "AdminGetCollectionsPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 89,
						"name": "AdminGetCollectionsPaginationParams.constructor"
					}
				},
				{
					"id": 103,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10",
					"inheritedFrom": {
						"type": "reference",
						"target": 91,
						"name": "AdminGetCollectionsPaginationParams.limit"
					}
				},
				{
					"id": 104,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 92,
						"name": "AdminGetCollectionsPaginationParams.offset"
					}
				},
				{
					"id": 96,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter product collections by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 97,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter product collections by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 98,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 99,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 100,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 101,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Term to search product collections by their title and handle."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 102,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product collections by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						94
					]
				},
				{
					"title": "Properties",
					"children": [
						103,
						104,
						96,
						97,
						98,
						99,
						100,
						101,
						102
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 88,
					"name": "AdminGetCollectionsPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 105,
			"name": "AdminDeleteProductsFromCollectionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to remove from the collection."
					}
				]
			},
			"children": [
				{
					"id": 106,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 107,
							"name": "new AdminDeleteProductsFromCollectionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to remove from the collection."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 105,
								"name": "AdminDeleteProductsFromCollectionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 108,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product IDs to remove from the Product Collection."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						106
					]
				},
				{
					"title": "Properties",
					"children": [
						108
					]
				}
			]
		},
		{
			"id": 109,
			"name": "AdminPostCollectionsCollectionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product collection's details to update."
					}
				]
			},
			"children": [
				{
					"id": 110,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 111,
							"name": "new AdminPostCollectionsCollectionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product collection's details to update."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 109,
								"name": "AdminPostCollectionsCollectionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 112,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 113,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional handle to be used in slugs. If none is provided, the kebab-case version of the title will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 114,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						110
					]
				},
				{
					"title": "Properties",
					"children": [
						112,
						113,
						114
					]
				}
			]
		},
		{
			"id": 115,
			"name": "AdminCurrenciesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of currencies with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 116,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 117,
									"name": "currencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of currency details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/currency.ts",
												"qualifiedName": "Currency"
											},
											"name": "Currency",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										117
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 118,
			"name": "AdminCurrenciesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A currency's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 119,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 120,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Currency details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/currency.ts",
									"qualifiedName": "Currency"
								},
								"name": "Currency",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								120
							]
						}
					]
				}
			}
		},
		{
			"id": 121,
			"name": "AdminGetCurrenciesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved currencies."
					}
				]
			},
			"children": [
				{
					"id": 122,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 123,
							"name": "new AdminGetCurrenciesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 121,
								"name": "AdminGetCurrenciesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3976,
								"name": "FindPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3975,
						"name": "FindPaginationParams.constructor"
					}
				},
				{
					"id": 124,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Code to filter currencies by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 125,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter currencies by whether they include tax."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "text",
										"text": "tax_inclusive_pricing"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 126,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": ".\nBy default, the returned currencies will be sorted by their "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 127,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 3977,
						"name": "FindPaginationParams.offset"
					}
				},
				{
					"id": 128,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": 3978,
						"name": "FindPaginationParams.limit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						122
					]
				},
				{
					"title": "Properties",
					"children": [
						124,
						125,
						126,
						127,
						128
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3974,
					"name": "FindPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 129,
			"name": "AdminPostCurrenciesCurrencyReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update in the currency"
					}
				]
			},
			"children": [
				{
					"id": 130,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 131,
							"name": "new AdminPostCurrenciesCurrencyReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update in the currency"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 129,
								"name": "AdminPostCurrenciesCurrencyReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 132,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of currency."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						130
					]
				},
				{
					"title": "Properties",
					"children": [
						132
					]
				}
			]
		},
		{
			"id": 141,
			"name": "AdminPostCustomerGroupsGroupCustomersBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customers to add to the customer group."
					}
				]
			},
			"children": [
				{
					"id": 142,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 143,
							"name": "new AdminPostCustomerGroupsGroupCustomersBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customers to add to the customer group."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 141,
								"name": "AdminPostCustomerGroupsGroupCustomersBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 144,
					"name": "customer_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ids of the customers to add"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4334,
							"name": "CustomerGroupsBatchCustomer",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						142
					]
				},
				{
					"title": "Properties",
					"children": [
						144
					]
				}
			]
		},
		{
			"id": 145,
			"name": "AdminPostCustomerGroupsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the customer group to create."
					}
				]
			},
			"children": [
				{
					"id": 146,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 147,
							"name": "new AdminPostCustomerGroupsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the customer group to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 145,
								"name": "AdminPostCustomerGroupsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 148,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name of the customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 149,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata of the customer group."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						146
					]
				},
				{
					"title": "Properties",
					"children": [
						148,
						149
					]
				}
			]
		},
		{
			"id": 150,
			"name": "AdminDeleteCustomerGroupsGroupCustomerBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customers to remove from the customer group."
					}
				]
			},
			"children": [
				{
					"id": 151,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 152,
							"name": "new AdminDeleteCustomerGroupsGroupCustomerBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customers to remove from the customer group."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 150,
								"name": "AdminDeleteCustomerGroupsGroupCustomerBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 153,
					"name": "customer_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ids of the customers to remove"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4334,
							"name": "CustomerGroupsBatchCustomer",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						151
					]
				},
				{
					"title": "Properties",
					"children": [
						153
					]
				}
			]
		},
		{
			"id": 154,
			"name": "AdminGetCustomerGroupsGroupParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 155,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 156,
							"name": "new AdminGetCustomerGroupsGroupParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 154,
								"name": "AdminGetCustomerGroupsGroupParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 157,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 158,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						155
					]
				},
				{
					"title": "Properties",
					"children": [
						157,
						158
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 133,
			"name": "AdminCustomerGroupsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer group's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 134,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 135,
							"name": "customer_group",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer group details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/customer-group.ts",
									"qualifiedName": "CustomerGroup"
								},
								"name": "CustomerGroup",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								135
							]
						}
					]
				}
			}
		},
		{
			"id": 136,
			"name": "AdminCustomerGroupsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 137,
			"name": "AdminCustomerGroupsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 138,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 139,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of customer group details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/customer-group.ts",
												"qualifiedName": "CustomerGroup"
											},
											"name": "CustomerGroup",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										139
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 140,
			"name": "defaultAdminCustomerGroupsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 159,
			"name": "AdminGetCustomerGroupsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved customer groups."
					}
				]
			},
			"children": [
				{
					"id": 160,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 161,
							"name": "new AdminGetCustomerGroupsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 159,
								"name": "AdminGetCustomerGroupsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4340,
								"name": "FilterableCustomerGroupProps.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4339,
						"name": "FilterableCustomerGroupProps.constructor"
					}
				},
				{
					"id": 162,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 163,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 164,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 165,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 166,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter customer groups by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3924,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4341,
						"name": "FilterableCustomerGroupProps.id"
					}
				},
				{
					"id": 167,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search customer groups by their name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4342,
						"name": "FilterableCustomerGroupProps.q"
					}
				},
				{
					"id": 168,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Names to filter customer groups by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4343,
						"name": "FilterableCustomerGroupProps.name"
					}
				},
				{
					"id": 169,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer groups' "
							},
							{
								"kind": "code",
								"text": "`update_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4344,
						"name": "FilterableCustomerGroupProps.updated_at"
					}
				},
				{
					"id": 170,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer groups' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4345,
						"name": "FilterableCustomerGroupProps.created_at"
					}
				},
				{
					"id": 171,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customer groups by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4346,
						"name": "FilterableCustomerGroupProps.discount_condition_id"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						160
					]
				},
				{
					"title": "Properties",
					"children": [
						162,
						163,
						164,
						165,
						166,
						167,
						168,
						169,
						170,
						171
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4338,
					"name": "FilterableCustomerGroupProps",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 172,
			"name": "AdminPostCustomerGroupsGroupReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update in the customer group."
					}
				]
			},
			"children": [
				{
					"id": 173,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 174,
							"name": "new AdminPostCustomerGroupsGroupReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update in the customer group."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 172,
								"name": "AdminPostCustomerGroupsGroupReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 175,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name of the customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 176,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata of the customer group."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						173
					]
				},
				{
					"title": "Properties",
					"children": [
						175,
						176
					]
				}
			]
		},
		{
			"id": 184,
			"name": "AdminPostCustomersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the customer to create."
					}
				]
			},
			"children": [
				{
					"id": 185,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 186,
							"name": "new AdminPostCustomersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the customer to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 184,
								"name": "AdminPostCustomersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 187,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 188,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 189,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 190,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 191,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 192,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						185
					]
				},
				{
					"title": "Properties",
					"children": [
						187,
						188,
						189,
						190,
						191,
						192
					]
				}
			]
		},
		{
			"id": 177,
			"name": "AdminCustomersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 178,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 179,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
									"qualifiedName": "Customer"
								},
								"name": "Customer",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								179
							]
						}
					]
				}
			}
		},
		{
			"id": 180,
			"name": "AdminCustomersListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of customers with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 181,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 182,
									"name": "customers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of customer details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
												"qualifiedName": "Customer"
											},
											"name": "Customer",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										182
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 183,
			"name": "defaultAdminCustomersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 193,
			"name": "AdminGetCustomersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved customers."
					}
				]
			},
			"children": [
				{
					"id": 194,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 195,
							"name": "new AdminGetCustomersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 193,
								"name": "AdminGetCustomersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4349,
								"name": "AdminListCustomerSelector.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4348,
						"name": "AdminListCustomerSelector.constructor"
					}
				},
				{
					"id": 196,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 197,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 198,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 199,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term used to search customers' email, first name, last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4350,
						"name": "AdminListCustomerSelector.q"
					}
				},
				{
					"id": 200,
					"name": "has_account",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customers by whether they have an account."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4351,
						"name": "AdminListCustomerSelector.has_account"
					}
				},
				{
					"id": 201,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customers by the customer's customer groups."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4352,
						"name": "AdminListCustomerSelector.groups"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						194
					]
				},
				{
					"title": "Properties",
					"children": [
						196,
						197,
						198,
						199,
						200,
						201
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4347,
					"name": "AdminListCustomerSelector",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 4353,
			"name": "Group",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4354,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4355,
							"name": "new Group",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4353,
								"name": "Group",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4356,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4354
					]
				},
				{
					"title": "Properties",
					"children": [
						4356
					]
				}
			]
		},
		{
			"id": 202,
			"name": "AdminPostCustomersCustomerReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the customer to update."
					}
				]
			},
			"children": [
				{
					"id": 203,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 204,
							"name": "new AdminPostCustomersCustomerReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the customer to update."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 202,
								"name": "AdminPostCustomersCustomerReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 205,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's email. You can't update the email of a registered customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 206,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 207,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 208,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 209,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 210,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 211,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of customer groups to which the customer belongs."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4353,
							"name": "Group",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						203
					]
				},
				{
					"title": "Properties",
					"children": [
						205,
						206,
						207,
						208,
						209,
						210,
						211
					]
				}
			]
		},
		{
			"id": 364,
			"name": "AdminPostDiscountsDiscountConditionsConditionBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the resources to add."
					}
				]
			},
			"children": [
				{
					"id": 365,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 366,
							"name": "new AdminPostDiscountsDiscountConditionsConditionBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the resources to add."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 364,
								"name": "AdminPostDiscountsDiscountConditionsConditionBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 367,
					"name": "resources",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The resources to be added to the discount condition"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 368,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 369,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The ID of the item"
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											369
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						365
					]
				},
				{
					"title": "Properties",
					"children": [
						367
					]
				}
			]
		},
		{
			"id": 370,
			"name": "AdminPostDiscountsDiscountConditionsConditionBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 371,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 372,
							"name": "new AdminPostDiscountsDiscountConditionsConditionBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 370,
								"name": "AdminPostDiscountsDiscountConditionsConditionBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 373,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 374,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						371
					]
				},
				{
					"title": "Properties",
					"children": [
						373,
						374
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 229,
			"name": "AdminPostDiscountsDiscountConditions",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 230,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 231,
							"name": "new AdminPostDiscountsDiscountConditions",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 229,
								"name": "AdminPostDiscountsDiscountConditions",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4359,
								"name": "AdminUpsertConditionsReq.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4358,
						"name": "AdminUpsertConditionsReq.constructor"
					}
				},
				{
					"id": 232,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Operator of the condition. `in` indicates that discountable resources are within the specified resources. `not_in` indicates that discountable resources are everything but the specified resources."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
							"qualifiedName": "DiscountConditionOperator"
						},
						"name": "DiscountConditionOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 233,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4360,
						"name": "AdminUpsertConditionsReq.products"
					}
				},
				{
					"id": 234,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4361,
						"name": "AdminUpsertConditionsReq.product_collections"
					}
				},
				{
					"id": 235,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4362,
						"name": "AdminUpsertConditionsReq.product_types"
					}
				},
				{
					"id": 236,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4363,
						"name": "AdminUpsertConditionsReq.product_tags"
					}
				},
				{
					"id": 237,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4364,
						"name": "AdminUpsertConditionsReq.customer_groups"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						230
					]
				},
				{
					"title": "Properties",
					"children": [
						232,
						233,
						234,
						235,
						236,
						237
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4357,
					"name": "AdminUpsertConditionsReq",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 238,
			"name": "AdminPostDiscountsDiscountConditionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 239,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 240,
							"name": "new AdminPostDiscountsDiscountConditionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 238,
								"name": "AdminPostDiscountsDiscountConditionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 241,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 242,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						239
					]
				},
				{
					"title": "Properties",
					"children": [
						241,
						242
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 243,
			"name": "AdminPostDiscountsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the discount to create."
					}
				]
			},
			"children": [
				{
					"id": 244,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 245,
							"name": "new AdminPostDiscountsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the discount to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 243,
								"name": "AdminPostDiscountsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 246,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique code that will be used to redeem the discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 247,
					"name": "rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule that defines how discounts are calculated"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 256,
						"name": "AdminPostDiscountsDiscountRule",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 248,
					"name": "is_dynamic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the discount should have multiple instances of itself, each with a different code. This can be useful for automatically generated discount codes that all have to follow a common set of rules."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 249,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the discount code is disabled on creation. If set to `true`, it will not be available for customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 250,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the discount should be available."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 251,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the discount should no longer be available."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 252,
					"name": "valid_duration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The duration the discount runs between"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 253,
					"name": "usage_limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maximum number of times the discount can be used"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 254,
					"name": "regions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of region IDs representing the Regions in which the Discount can be used."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 255,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						244
					]
				},
				{
					"title": "Properties",
					"children": [
						246,
						247,
						248,
						249,
						250,
						251,
						252,
						253,
						254,
						255
					]
				}
			]
		},
		{
			"id": 256,
			"name": "AdminPostDiscountsDiscountRule",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of the discount rule to create."
					}
				]
			},
			"children": [
				{
					"id": 257,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 258,
							"name": "new AdminPostDiscountsDiscountRule",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 256,
								"name": "AdminPostDiscountsDiscountRule",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 259,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 260,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "DiscountRuleType"
						},
						"name": "DiscountRuleType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 261,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 262,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's allocation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "AllocationType"
						},
						"name": "AllocationType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 263,
					"name": "conditions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's conditions."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 264,
							"name": "AdminCreateCondition",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						257
					]
				},
				{
					"title": "Properties",
					"children": [
						259,
						260,
						261,
						262,
						263
					]
				}
			]
		},
		{
			"id": 264,
			"name": "AdminCreateCondition",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of the discount condition to create."
					}
				]
			},
			"children": [
				{
					"id": 265,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 266,
							"name": "new AdminCreateCondition",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 264,
								"name": "AdminCreateCondition",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4359,
								"name": "AdminUpsertConditionsReq.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4358,
						"name": "AdminUpsertConditionsReq.constructor"
					}
				},
				{
					"id": 267,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The operator of the discount condition."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
							"qualifiedName": "DiscountConditionOperator"
						},
						"name": "DiscountConditionOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 268,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4360,
						"name": "AdminUpsertConditionsReq.products"
					}
				},
				{
					"id": 269,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4361,
						"name": "AdminUpsertConditionsReq.product_collections"
					}
				},
				{
					"id": 270,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4362,
						"name": "AdminUpsertConditionsReq.product_types"
					}
				},
				{
					"id": 271,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4363,
						"name": "AdminUpsertConditionsReq.product_tags"
					}
				},
				{
					"id": 272,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4364,
						"name": "AdminUpsertConditionsReq.customer_groups"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						265
					]
				},
				{
					"title": "Properties",
					"children": [
						267,
						268,
						269,
						270,
						271,
						272
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4357,
					"name": "AdminUpsertConditionsReq",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 273,
			"name": "AdminPostDiscountsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 274,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 275,
							"name": "new AdminPostDiscountsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 273,
								"name": "AdminPostDiscountsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 276,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 277,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						274
					]
				},
				{
					"title": "Properties",
					"children": [
						276,
						277
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 278,
			"name": "AdminPostDiscountsDiscountDynamicCodesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the dynamic discount to create."
					}
				]
			},
			"children": [
				{
					"id": 279,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 280,
							"name": "new AdminPostDiscountsDiscountDynamicCodesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the dynamic discount to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 278,
								"name": "AdminPostDiscountsDiscountDynamicCodesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 281,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique code that will be used to redeem the Discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 282,
					"name": "usage_limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maximum number of times the discount code can be used"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "1"
				},
				{
					"id": 283,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						279
					]
				},
				{
					"title": "Properties",
					"children": [
						281,
						282,
						283
					]
				}
			]
		},
		{
			"id": 284,
			"name": "AdminDeleteDiscountsDiscountConditionsConditionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 285,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 286,
							"name": "new AdminDeleteDiscountsDiscountConditionsConditionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 284,
								"name": "AdminDeleteDiscountsDiscountConditionsConditionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 287,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 288,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						285
					]
				},
				{
					"title": "Properties",
					"children": [
						287,
						288
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 375,
			"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 376,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 377,
							"name": "new AdminDeleteDiscountsDiscountConditionsConditionBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 375,
								"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 378,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 379,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						376
					]
				},
				{
					"title": "Properties",
					"children": [
						378,
						379
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 380,
			"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The resources to remove."
					}
				]
			},
			"children": [
				{
					"id": 381,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 382,
							"name": "new AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The resources to remove."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 380,
								"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 383,
					"name": "resources",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The resources to be removed from the discount condition"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 384,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 385,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The id of the item"
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											385
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						381
					]
				},
				{
					"title": "Properties",
					"children": [
						383
					]
				}
			]
		},
		{
			"id": 289,
			"name": "AdminGetDiscountsDiscountConditionsConditionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 290,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 291,
							"name": "new AdminGetDiscountsDiscountConditionsConditionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 289,
								"name": "AdminGetDiscountsDiscountConditionsConditionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 292,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 293,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						290
					]
				},
				{
					"title": "Properties",
					"children": [
						292,
						293
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 299,
			"name": "AdminGetDiscountsDiscountCodeParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 300,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 301,
							"name": "new AdminGetDiscountsDiscountCodeParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 299,
								"name": "AdminGetDiscountsDiscountCodeParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 302,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 303,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						300
					]
				},
				{
					"title": "Properties",
					"children": [
						302,
						303
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 294,
			"name": "AdminGetDiscountParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 295,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 296,
							"name": "new AdminGetDiscountParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 294,
								"name": "AdminGetDiscountParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 297,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 298,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						295
					]
				},
				{
					"title": "Properties",
					"children": [
						297,
						298
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 212,
			"name": "defaultAdminDiscountsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
							"qualifiedName": "Discount"
						},
						"name": "Discount",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 213,
			"name": "defaultAdminDiscountsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 214,
			"name": "defaultAdminDiscountConditionFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
							"qualifiedName": "DiscountCondition"
						},
						"name": "DiscountCondition",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 215,
			"name": "defaultAdminDiscountConditionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 216,
			"name": "AdminDiscountsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The discount's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 217,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 218,
							"name": "discount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Discount details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
									"qualifiedName": "Discount"
								},
								"name": "Discount",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								218
							]
						}
					]
				}
			}
		},
		{
			"id": 219,
			"name": "AdminDiscountConditionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 220,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 221,
							"name": "discount_condition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Discount condition details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
									"qualifiedName": "DiscountCondition"
								},
								"name": "DiscountCondition",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								221
							]
						}
					]
				}
			}
		},
		{
			"id": 222,
			"name": "AdminDiscountsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 223,
			"name": "AdminDiscountConditionsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3910,
						"name": "DeleteResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 224,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 225,
									"name": "discount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Discount to which the condition used to belong to."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
											"qualifiedName": "Discount"
										},
										"name": "Discount",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										225
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 226,
			"name": "AdminDiscountsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of discounts with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 227,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 228,
									"name": "discounts",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of discounts."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/discount.ts",
												"qualifiedName": "Discount"
											},
											"name": "Discount",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										228
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 304,
			"name": "AdminGetDiscountsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved discounts."
					}
				]
			},
			"children": [
				{
					"id": 308,
					"name": "rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter discounts by their associated rule."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4365,
						"name": "AdminGetDiscountsDiscountRuleParams",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 309,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search discounts' code fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 310,
					"name": "is_dynamic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter discounts by whether they're dynamic."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 311,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter discounts by whether they're disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 312,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 313,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 314,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 315,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 305,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 306,
							"name": "new AdminGetDiscountsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 307,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 304,
								"name": "AdminGetDiscountsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						305
					]
				},
				{
					"title": "Properties",
					"children": [
						308,
						309,
						310,
						311,
						312,
						313,
						314,
						315
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 3969,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 316,
			"name": "AdminPostDiscountsDiscountConditionsCondition",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 317,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 318,
							"name": "new AdminPostDiscountsDiscountConditionsCondition",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 316,
								"name": "AdminPostDiscountsDiscountConditionsCondition",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4359,
								"name": "AdminUpsertConditionsReq.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4358,
						"name": "AdminUpsertConditionsReq.constructor"
					}
				},
				{
					"id": 319,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4360,
						"name": "AdminUpsertConditionsReq.products"
					}
				},
				{
					"id": 320,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4361,
						"name": "AdminUpsertConditionsReq.product_collections"
					}
				},
				{
					"id": 321,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4362,
						"name": "AdminUpsertConditionsReq.product_types"
					}
				},
				{
					"id": 322,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4363,
						"name": "AdminUpsertConditionsReq.product_tags"
					}
				},
				{
					"id": 323,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4364,
						"name": "AdminUpsertConditionsReq.customer_groups"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						317
					]
				},
				{
					"title": "Properties",
					"children": [
						319,
						320,
						321,
						322,
						323
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4357,
					"name": "AdminUpsertConditionsReq",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 324,
			"name": "AdminPostDiscountsDiscountConditionsConditionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 325,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 326,
							"name": "new AdminPostDiscountsDiscountConditionsConditionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 324,
								"name": "AdminPostDiscountsDiscountConditionsConditionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 327,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 328,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						325
					]
				},
				{
					"title": "Properties",
					"children": [
						327,
						328
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 329,
			"name": "AdminPostDiscountsDiscountReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the discount to update."
					}
				]
			},
			"children": [
				{
					"id": 330,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 331,
							"name": "new AdminPostDiscountsDiscountReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the discount to update."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 329,
								"name": "AdminPostDiscountsDiscountReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 332,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique code that will be used to redeem the discount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 333,
					"name": "rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule that defines how discounts are calculated"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 341,
						"name": "AdminUpdateDiscountRule",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 334,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the discount code is disabled on creation. If set to `true`, it will not be available for customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 335,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the discount should be available."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 336,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the discount should no longer be available."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 337,
					"name": "valid_duration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The duration the discount runs between"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 338,
					"name": "usage_limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maximum number of times the discount can be used"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 339,
					"name": "regions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of region IDs representing the Regions in which the Discount can be used."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 340,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing metadata of the discount"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						330
					]
				},
				{
					"title": "Properties",
					"children": [
						332,
						333,
						334,
						335,
						336,
						337,
						338,
						339,
						340
					]
				}
			]
		},
		{
			"id": 341,
			"name": "AdminUpdateDiscountRule",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes of the discount rule to update."
					}
				]
			},
			"children": [
				{
					"id": 342,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 343,
							"name": "new AdminUpdateDiscountRule",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 341,
								"name": "AdminUpdateDiscountRule",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 344,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 345,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 346,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 347,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's allocation."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "AllocationType"
						},
						"name": "AllocationType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 348,
					"name": "conditions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount rule's discount conditions."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 349,
							"name": "AdminUpsertCondition",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						342
					]
				},
				{
					"title": "Properties",
					"children": [
						344,
						345,
						346,
						347,
						348
					]
				}
			]
		},
		{
			"id": 349,
			"name": "AdminUpsertCondition",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to create or update in the discount condition."
					}
				]
			},
			"children": [
				{
					"id": 350,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 351,
							"name": "new AdminUpsertCondition",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 349,
								"name": "AdminUpsertCondition",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4359,
								"name": "AdminUpsertConditionsReq.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4358,
						"name": "AdminUpsertConditionsReq.constructor"
					}
				},
				{
					"id": 352,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 353,
					"name": "operator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discount condition's operator."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-condition.ts",
							"qualifiedName": "DiscountConditionOperator"
						},
						"name": "DiscountConditionOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 354,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4360,
						"name": "AdminUpsertConditionsReq.products"
					}
				},
				{
					"id": 355,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4361,
						"name": "AdminUpsertConditionsReq.product_collections"
					}
				},
				{
					"id": 356,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4362,
						"name": "AdminUpsertConditionsReq.product_types"
					}
				},
				{
					"id": 357,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4363,
						"name": "AdminUpsertConditionsReq.product_tags"
					}
				},
				{
					"id": 358,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4364,
						"name": "AdminUpsertConditionsReq.customer_groups"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						350
					]
				},
				{
					"title": "Properties",
					"children": [
						352,
						353,
						354,
						355,
						356,
						357,
						358
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4357,
					"name": "AdminUpsertConditionsReq",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 359,
			"name": "AdminPostDiscountsDiscountParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 360,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 361,
							"name": "new AdminPostDiscountsDiscountParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 359,
								"name": "AdminPostDiscountsDiscountParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 362,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 363,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						360
					]
				},
				{
					"title": "Properties",
					"children": [
						362,
						363
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 400,
			"name": "AdminPostDraftOrdersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the draft order to create."
					}
				]
			},
			"children": [
				{
					"id": 401,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 402,
							"name": "new AdminPostDraftOrdersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the draft order to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 400,
								"name": "AdminPostDraftOrdersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 403,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the draft order. The draft order's default status is `open`. It's changed to `completed` when its payment is marked as paid."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 404,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email of the customer of the draft order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 405,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for billing purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 3941,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 406,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for shipping purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 3941,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 407,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The draft order's line items."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4370,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 408,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the region for the draft order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 409,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discounts to add to the draft order"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4378,
							"name": "Discount",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 410,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer this draft order is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 411,
					"name": "no_notification_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional flag passed to the resulting order that indicates whether the customer should receive notifications about order updates."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 412,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping methods for the draft order"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4382,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 413,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional key-value map with additional details about the Draft Order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						401
					]
				},
				{
					"title": "Properties",
					"children": [
						403,
						404,
						405,
						406,
						407,
						408,
						409,
						410,
						411,
						412,
						413
					]
				}
			]
		},
		{
			"id": 4382,
			"name": "ShippingMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
					}
				]
			},
			"children": [
				{
					"id": 4383,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4384,
							"name": "new ShippingMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4382,
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4385,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option in use"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4386,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional additional data needed for the shipping method"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				},
				{
					"id": 4387,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of the shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4383
					]
				},
				{
					"title": "Properties",
					"children": [
						4385,
						4386,
						4387
					]
				}
			]
		},
		{
			"id": 4378,
			"name": "Discount",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A discount can be applied to a cart for promotional purposes."
					}
				]
			},
			"children": [
				{
					"id": 4379,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4380,
							"name": "new Discount",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A discount can be applied to a cart for promotional purposes."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4378,
								"name": "Discount",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4381,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the discount to apply"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4379
					]
				},
				{
					"title": "Properties",
					"children": [
						4381
					]
				}
			]
		},
		{
			"id": 4370,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4371,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4372,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4370,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4373,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the line item if `variant_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4374,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom price of the line item. If a `variant_id` is supplied, the price provided here will override the variant's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4375,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant associated with the line item. If the line item is custom, the `variant_id` should be omitted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4376,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4377,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional key-value map with additional details about the line item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4371
					]
				},
				{
					"title": "Properties",
					"children": [
						4373,
						4374,
						4375,
						4376,
						4377
					]
				}
			]
		},
		{
			"id": 414,
			"name": "AdminPostDraftOrdersDraftOrderLineItemsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the line item to create."
					}
				]
			},
			"children": [
				{
					"id": 415,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 416,
							"name": "new AdminPostDraftOrdersDraftOrderLineItemsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the line item to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 414,
								"name": "AdminPostDraftOrdersDraftOrderLineItemsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 417,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the line item if `variant_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"Custom item\""
				},
				{
					"id": 418,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom price of the line item. If a `variant_id` is supplied, the price provided here will override the variant's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 419,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant associated with the line item. If the line item is custom, the `variant_id` should be omitted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 420,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 421,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional key-value map with additional details about the Line Item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						415
					]
				},
				{
					"title": "Properties",
					"children": [
						417,
						418,
						419,
						420,
						421
					]
				}
			]
		},
		{
			"id": 386,
			"name": "defaultAdminDraftOrdersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 387,
			"name": "defaultAdminDraftOrdersCartRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 388,
			"name": "defaultAdminDraftOrdersCartFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
							"qualifiedName": "Cart"
						},
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 389,
			"name": "defaultAdminDraftOrdersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
							"qualifiedName": "DraftOrder"
						},
						"name": "DraftOrder",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 390,
			"name": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 391,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 392,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								392
							]
						}
					]
				}
			}
		},
		{
			"id": 393,
			"name": "AdminDraftOrdersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of draft orders."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 394,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 395,
							"name": "draft_order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Draft order's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
									"qualifiedName": "DraftOrder"
								},
								"name": "DraftOrder",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								395
							]
						}
					]
				}
			}
		},
		{
			"id": 396,
			"name": "AdminDraftOrdersDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 397,
			"name": "AdminDraftOrdersListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of draft orders with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 398,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 399,
									"name": "draft_orders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of draft order's details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/draft-order.ts",
												"qualifiedName": "DraftOrder"
											},
											"name": "DraftOrder",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										399
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 422,
			"name": "AdminGetDraftOrdersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved draft orders."
					}
				]
			},
			"children": [
				{
					"id": 423,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 424,
							"name": "new AdminGetDraftOrdersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 422,
								"name": "AdminGetDraftOrdersParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 425,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search draft orders by their display IDs and emails."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 426,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 427,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						423
					]
				},
				{
					"title": "Properties",
					"children": [
						425,
						426,
						427
					]
				}
			]
		},
		{
			"id": 428,
			"name": "reserveQuantityForDraftOrder",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 429,
					"name": "reserveQuantityForDraftOrder",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 430,
							"name": "order",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An order is a purchase made by a customer. It holds details about payment and fulfillment of the order. An order may also be created from a draft order, which is created by an admin user."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 431,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 432,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 433,
											"name": "productVariantInventoryService",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/src/services/product-variant-inventory.ts",
													"qualifiedName": "ProductVariantInventoryService"
												},
												"name": "ProductVariantInventoryService",
												"package": "@medusajs/medusa"
											}
										},
										{
											"id": 434,
											"name": "locationId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												433,
												434
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 435,
			"name": "AdminPostDraftOrdersDraftOrderReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the draft order to update."
					}
				]
			},
			"children": [
				{
					"id": 436,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 437,
							"name": "new AdminPostDraftOrdersDraftOrderReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the draft order to update."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 435,
								"name": "AdminPostDraftOrdersDraftOrderReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 438,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region to create the Draft Order in."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 439,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code for the Country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 440,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An email to be used in the Draft Order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 441,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for billing purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 3941,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 442,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for shipping purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 3941,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 443,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Discount codes to add to the Draft Order."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4388,
							"name": "Discount",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 444,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer this draft order is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 445,
					"name": "no_notification_order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional flag passed to the resulting order that indicates whether the customer should receive notifications about order updates."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						436
					]
				},
				{
					"title": "Properties",
					"children": [
						438,
						439,
						440,
						441,
						442,
						443,
						444,
						445
					]
				}
			]
		},
		{
			"id": 4388,
			"name": "Discount",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A discount can be applied to a cart for promotional purposes."
					}
				]
			},
			"children": [
				{
					"id": 4389,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4390,
							"name": "new Discount",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A discount can be applied to a cart for promotional purposes."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4388,
								"name": "Discount",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4391,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code that a Discount is identifed by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4389
					]
				},
				{
					"title": "Properties",
					"children": [
						4391
					]
				}
			]
		},
		{
			"id": 446,
			"name": "AdminPostDraftOrdersDraftOrderLineItemsItemReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the line item."
					}
				]
			},
			"children": [
				{
					"id": 447,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 448,
							"name": "new AdminPostDraftOrdersDraftOrderLineItemsItemReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 446,
								"name": "AdminPostDraftOrdersDraftOrderLineItemsItemReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 449,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the line item if `variant_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 450,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom price of the line item. If a `variant_id` is supplied, the price provided here will override the variant's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 451,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 452,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The optional key-value map with additional details about the Line Item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						447
					]
				},
				{
					"title": "Properties",
					"children": [
						449,
						450,
						451,
						452
					]
				}
			]
		},
		{
			"id": 462,
			"name": "AdminPostGiftCardsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the gift card to create."
					}
				]
			},
			"children": [
				{
					"id": 463,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 464,
							"name": "new AdminPostGiftCardsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the gift card to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 462,
								"name": "AdminPostGiftCardsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 465,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value (excluding VAT) that the Gift Card should represent."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 466,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the Gift Card should no longer be available."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 467,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Gift Card is disabled on creation. If set to `true`, the gift card will not be available for customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 468,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region in which the Gift Card can be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 469,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						463
					]
				},
				{
					"title": "Properties",
					"children": [
						465,
						466,
						467,
						468,
						469
					]
				}
			]
		},
		{
			"id": 453,
			"name": "defaultAdminGiftCardFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
							"qualifiedName": "GiftCard"
						},
						"name": "GiftCard",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 454,
			"name": "defaultAdminGiftCardRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 455,
			"name": "AdminGiftCardsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The gift card's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 456,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 457,
							"name": "gift_card",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A gift card's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
									"qualifiedName": "GiftCard"
								},
								"name": "GiftCard",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								457
							]
						}
					]
				}
			}
		},
		{
			"id": 458,
			"name": "AdminGiftCardsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 459,
			"name": "AdminGiftCardsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of gift cards with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 460,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 461,
									"name": "gift_cards",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of gift cards."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
												"qualifiedName": "GiftCard"
											},
											"name": "GiftCard",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										461
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 470,
			"name": "AdminGetGiftCardsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved gift cards."
					}
				]
			},
			"children": [
				{
					"id": 471,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 472,
							"name": "new AdminGetGiftCardsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 470,
								"name": "AdminGetGiftCardsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 473,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 474,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 475,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search gift cards by their code and display ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						471
					]
				},
				{
					"title": "Properties",
					"children": [
						473,
						474,
						475
					]
				}
			]
		},
		{
			"id": 476,
			"name": "AdminPostGiftCardsGiftCardReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the gift card."
					}
				]
			},
			"children": [
				{
					"id": 477,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 478,
							"name": "new AdminPostGiftCardsGiftCardReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the gift card."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 476,
								"name": "AdminPostGiftCardsGiftCardReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 479,
					"name": "balance",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value (excluding VAT) that the Gift Card should represent."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 480,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Gift Card is disabled on creation. If set to `true`, the gift card will not be available for customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 481,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time at which the Gift Card should no longer be available."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 482,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region in which the Gift Card can be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 483,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						477
					]
				},
				{
					"title": "Properties",
					"children": [
						479,
						480,
						481,
						482,
						483
					]
				}
			]
		},
		{
			"id": 509,
			"name": "AdminPostInventoryItemsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the inventory item to create."
					}
				]
			},
			"children": [
				{
					"id": 510,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 511,
							"name": "new AdminPostInventoryItemsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the inventory item to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 509,
								"name": "AdminPostInventoryItemsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 512,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the variant to create the inventory item for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 513,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the associated Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 514,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 515,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 516,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 517,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 518,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 519,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country in which the Inventory Item was produced. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 520,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturers Identification code that identifies the manufacturer of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 521,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material and composition that the Inventory Item is made of, May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 522,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 523,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 524,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's thumbnail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 525,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						510
					]
				},
				{
					"title": "Properties",
					"children": [
						512,
						513,
						514,
						515,
						516,
						517,
						518,
						519,
						520,
						521,
						522,
						523,
						524,
						525
					]
				}
			]
		},
		{
			"id": 526,
			"name": "AdminPostInventoryItemsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 527,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 528,
							"name": "new AdminPostInventoryItemsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 526,
								"name": "AdminPostInventoryItemsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 529,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 530,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						527
					]
				},
				{
					"title": "Properties",
					"children": [
						529,
						530
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 531,
			"name": "AdminPostInventoryItemsItemLocationLevelsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the location level to create."
					}
				]
			},
			"children": [
				{
					"id": 532,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 533,
							"name": "new AdminPostInventoryItemsItemLocationLevelsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the location level to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 531,
								"name": "AdminPostInventoryItemsItemLocationLevelsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 534,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the ID of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 535,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the stock quantity of the inventory item at this location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 536,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the incoming stock quantity of the inventory item at this location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						532
					]
				},
				{
					"title": "Properties",
					"children": [
						534,
						535,
						536
					]
				}
			]
		},
		{
			"id": 537,
			"name": "AdminPostInventoryItemsItemLocationLevelsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 538,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 539,
							"name": "new AdminPostInventoryItemsItemLocationLevelsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 537,
								"name": "AdminPostInventoryItemsItemLocationLevelsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 540,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 541,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						538
					]
				},
				{
					"title": "Properties",
					"children": [
						540,
						541
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 542,
			"name": "AdminGetInventoryItemsItemParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 543,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 544,
							"name": "new AdminGetInventoryItemsItemParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 542,
								"name": "AdminGetInventoryItemsItemParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 545,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 546,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						543
					]
				},
				{
					"title": "Properties",
					"children": [
						545,
						546
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 484,
			"name": "defaultAdminInventoryItemFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 4392,
						"name": "InventoryItemDTO",
						"package": "@medusajs/types"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 485,
			"name": "defaultAdminLocationLevelFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 4412,
						"name": "InventoryLevelDTO",
						"package": "@medusajs/types"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 486,
			"name": "defaultAdminInventoryItemRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 487,
			"name": "AdminInventoryItemsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The inventory item's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 488,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 489,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Inventory Item details"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4392,
								"name": "InventoryItemDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								489
							]
						}
					]
				}
			}
		},
		{
			"id": 490,
			"name": "AdminInventoryItemsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 491,
			"name": "AdminInventoryItemsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 492,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 493,
									"name": "inventory_items",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array of Inventory Item details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4392,
											"name": "InventoryItemDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										493
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 494,
			"name": "DecoratedInventoryItemDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 4392,
						"name": "InventoryItemDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 495,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 496,
									"name": "location_levels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of location level details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4412,
											"name": "InventoryLevelDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 497,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product variant details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
												"qualifiedName": "ProductVariant"
											},
											"name": "ProductVariant",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 498,
									"name": "stocked_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The total quantity of the item in stock across levels"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 499,
									"name": "reserved_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The total quantity of the item available across levels"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										496,
										497,
										498,
										499
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 500,
			"name": "AdminInventoryItemsListWithVariantsAndLocationLevelsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 501,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 502,
									"name": "inventory_items",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array of Inventory Item details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 494,
											"name": "DecoratedInventoryItemDTO",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										502
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 503,
			"name": "AdminInventoryItemsLocationLevelsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of inventory items and their associated location levels."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 504,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 505,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An inventory item's ID and associated location levels."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 506,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 507,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The id of the location"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 508,
											"name": "location_levels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "List of stock levels at a given location"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4412,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												507,
												508
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								505
							]
						}
					]
				}
			}
		},
		{
			"id": 547,
			"name": "AdminGetInventoryItemsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved inventory items."
					}
				]
			},
			"children": [
				{
					"id": 551,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 552,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search inventory items' sku, title, and description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 553,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Location IDs to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 554,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "SKUs to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 555,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Origin countries to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 556,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "MID codes to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 557,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Materials to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 558,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "String filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`hs_code`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3924,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 559,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`weight`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 3934,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 560,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`length`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 3934,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 561,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`height`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 3934,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 562,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply to inventory items' "
							},
							{
								"kind": "code",
								"text": "`width`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 3934,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 563,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory items by whether they require shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 564,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 565,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 566,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 567,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 548,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 549,
							"name": "new AdminGetInventoryItemsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 550,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 547,
								"name": "AdminGetInventoryItemsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						548
					]
				},
				{
					"title": "Properties",
					"children": [
						551,
						552,
						553,
						554,
						555,
						556,
						557,
						558,
						559,
						560,
						561,
						562,
						563,
						564,
						565,
						566,
						567
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 3969,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 568,
			"name": "AdminGetInventoryItemsItemLocationLevelsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 569,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 570,
							"name": "new AdminGetInventoryItemsItemLocationLevelsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 568,
								"name": "AdminGetInventoryItemsItemLocationLevelsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 571,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Location IDs to filter location levels."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 572,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 573,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						569
					]
				},
				{
					"title": "Properties",
					"children": [
						571,
						572,
						573
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 574,
			"name": "AdminPostInventoryItemsInventoryItemReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in an inventory item."
					}
				]
			},
			"children": [
				{
					"id": 575,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 576,
							"name": "new AdminPostInventoryItemsInventoryItemReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The attributes to update in an inventory item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 574,
								"name": "AdminPostInventoryItemsInventoryItemReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 577,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 578,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country in which the Inventory Item was produced. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 579,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 580,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturers Identification code that identifies the manufacturer of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 581,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material and composition that the Inventory Item is made of, May be used by Fulfillment Providers to pass customs information to shipping carriers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 582,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 583,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 584,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 585,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Inventory Item. May be used in shipping rate calculations."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 586,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 587,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 588,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item's thumbnail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 589,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the item requires shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						575
					]
				},
				{
					"title": "Properties",
					"children": [
						577,
						578,
						579,
						580,
						581,
						582,
						583,
						584,
						585,
						586,
						587,
						588,
						589
					]
				}
			]
		},
		{
			"id": 590,
			"name": "AdminPostInventoryItemsInventoryItemParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 591,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 592,
							"name": "new AdminPostInventoryItemsInventoryItemParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 590,
								"name": "AdminPostInventoryItemsInventoryItemParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 593,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 594,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						591
					]
				},
				{
					"title": "Properties",
					"children": [
						593,
						594
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 595,
			"name": "AdminPostInventoryItemsItemLocationLevelsLevelReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 596,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 597,
							"name": "new AdminPostInventoryItemsItemLocationLevelsLevelReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 595,
								"name": "AdminPostInventoryItemsItemLocationLevelsLevelReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 598,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the incoming stock quantity of an inventory item at the given location ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 599,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the total stock quantity of an inventory item at the given location ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						596
					]
				},
				{
					"title": "Properties",
					"children": [
						598,
						599
					]
				}
			]
		},
		{
			"id": 600,
			"name": "AdminPostInventoryItemsItemLocationLevelsLevelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 601,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 602,
							"name": "new AdminPostInventoryItemsItemLocationLevelsLevelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 600,
								"name": "AdminPostInventoryItemsItemLocationLevelsLevelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 603,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 604,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						601
					]
				},
				{
					"title": "Properties",
					"children": [
						603,
						604
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 612,
			"name": "AdminPostInvitesInviteAcceptUserReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of the use accepting the invite."
					}
				]
			},
			"children": [
				{
					"id": 613,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 614,
							"name": "new AdminPostInvitesInviteAcceptUserReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 612,
								"name": "AdminPostInvitesInviteAcceptUserReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 615,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The invite's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 616,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The invite's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 617,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The invite's password"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						613
					]
				},
				{
					"title": "Properties",
					"children": [
						615,
						616,
						617
					]
				}
			]
		},
		{
			"id": 618,
			"name": "AdminPostInvitesInviteAcceptReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the invite to be accepted."
					}
				]
			},
			"children": [
				{
					"id": 619,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 620,
							"name": "new AdminPostInvitesInviteAcceptReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the invite to be accepted."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 618,
								"name": "AdminPostInvitesInviteAcceptReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 621,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The token of the invite to accept. This is a unique token generated when the invite was created or resent."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 622,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the user to create."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 612,
						"name": "AdminPostInvitesInviteAcceptUserReq",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						619
					]
				},
				{
					"title": "Properties",
					"children": [
						621,
						622
					]
				}
			]
		},
		{
			"id": 623,
			"name": "AdminPostInvitesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 624,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 625,
							"name": "new AdminPostInvitesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 623,
								"name": "AdminPostInvitesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 626,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email associated with the invite. Once the invite is accepted, the email will be associated with the created user."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 627,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The role of the user to be created. This does not actually change the privileges of the user that is eventually created."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/user.ts",
							"qualifiedName": "UserRoles"
						},
						"name": "UserRoles",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						624
					]
				},
				{
					"title": "Properties",
					"children": [
						626,
						627
					]
				}
			]
		},
		{
			"id": 605,
			"name": "unauthenticatedInviteRoutes",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 606,
					"name": "unauthenticatedInviteRoutes",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 607,
							"name": "app",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 608,
			"name": "AdminInviteDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 609,
			"name": "AdminListInvitesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of invites."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 610,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 611,
							"name": "invites",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of invites"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/invite.ts",
										"qualifiedName": "Invite"
									},
									"name": "Invite",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								611
							]
						}
					]
				}
			}
		},
		{
			"id": 635,
			"name": "AdminPostNotesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the note to be created."
					}
				]
			},
			"children": [
				{
					"id": 636,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 637,
							"name": "new AdminPostNotesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the note to be created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 635,
								"name": "AdminPostNotesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 638,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the resource which the Note relates to. For example, an order ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 639,
					"name": "resource_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of resource which the Note relates to. For example, `order`."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 640,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The content of the Note to create."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						636
					]
				},
				{
					"title": "Properties",
					"children": [
						638,
						639,
						640
					]
				}
			]
		},
		{
			"id": 628,
			"name": "AdminNotesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The note's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 629,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 630,
							"name": "note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Note details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/note.ts",
									"qualifiedName": "Note"
								},
								"name": "Note",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								630
							]
						}
					]
				}
			}
		},
		{
			"id": 631,
			"name": "AdminNotesDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 632,
			"name": "AdminNotesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of notes with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 633,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 634,
									"name": "notes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of notes"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/note.ts",
												"qualifiedName": "Note"
											},
											"name": "Note",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										634
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 641,
			"name": "AdminGetNotesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved notes."
					}
				]
			},
			"children": [
				{
					"id": 642,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 643,
							"name": "new AdminGetNotesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 641,
								"name": "AdminGetNotesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 644,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resource ID to filter notes by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 645,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 646,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						642
					]
				},
				{
					"title": "Properties",
					"children": [
						644,
						645,
						646
					]
				}
			]
		},
		{
			"id": 647,
			"name": "AdminPostNotesNoteReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the note."
					}
				]
			},
			"children": [
				{
					"id": 648,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 649,
							"name": "new AdminPostNotesNoteReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the note."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 647,
								"name": "AdminPostNotesNoteReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 650,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Note."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						648
					]
				},
				{
					"title": "Properties",
					"children": [
						650
					]
				}
			]
		},
		{
			"id": 651,
			"name": "defaultAdminNotificationsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 652,
			"name": "defaultAdminNotificationsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 653,
			"name": "AdminNotificationsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 4424,
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 654,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 655,
									"name": "notifications",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "an array of notifications"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
												"qualifiedName": "Notification"
											},
											"name": "Notification",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										655
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 656,
			"name": "AdminNotificationsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The notification's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 657,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 658,
							"name": "notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Notification details"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/notification.ts",
									"qualifiedName": "Notification"
								},
								"name": "Notification",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								658
							]
						}
					]
				}
			}
		},
		{
			"id": 659,
			"name": "AdminGetNotificationsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved notifications."
					}
				]
			},
			"children": [
				{
					"id": 660,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 661,
							"name": "new AdminGetNotificationsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 659,
								"name": "AdminGetNotificationsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 662,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 663,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 664,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 665,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 666,
					"name": "event_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Event name to filter notifications by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 667,
					"name": "resource_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resource type to filter notifications by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 668,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resource ID to filter notifications by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 669,
					"name": "to",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter notifications by their "
							},
							{
								"kind": "code",
								"text": "`to`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 670,
					"name": "include_resends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include resends in the results."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						660
					]
				},
				{
					"title": "Properties",
					"children": [
						662,
						663,
						664,
						665,
						666,
						667,
						668,
						669,
						670
					]
				}
			]
		},
		{
			"id": 671,
			"name": "AdminPostNotificationsNotificationResendReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The resend details."
					}
				]
			},
			"children": [
				{
					"id": 672,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 673,
							"name": "new AdminPostNotificationsNotificationResendReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The resend details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 671,
								"name": "AdminPostNotificationsNotificationResendReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 674,
					"name": "to",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A new address or user identifier that the Notification should be sent to. If not provided, the previous `to` field of the notification will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						672
					]
				},
				{
					"title": "Properties",
					"children": [
						674
					]
				}
			]
		},
		{
			"id": 687,
			"name": "AdminPostOrderEditsEditLineItemsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the line item change to create."
					}
				]
			},
			"children": [
				{
					"id": 688,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 689,
							"name": "new AdminPostOrderEditsEditLineItemsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the line item change to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 687,
								"name": "AdminPostOrderEditsEditLineItemsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 690,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant associated with the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 691,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 692,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						688
					]
				},
				{
					"title": "Properties",
					"children": [
						690,
						691,
						692
					]
				}
			]
		},
		{
			"id": 693,
			"name": "AdminPostOrderEditsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the order edit to create."
					}
				]
			},
			"children": [
				{
					"id": 694,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 695,
							"name": "new AdminPostOrderEditsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the order edit to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 693,
								"name": "AdminPostOrderEditsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 696,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order to create the edit for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 697,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note to associate with the order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 698,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						694
					]
				},
				{
					"title": "Properties",
					"children": [
						696,
						697,
						698
					]
				}
			]
		},
		{
			"id": 699,
			"name": "GetOrderEditsOrderEditParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 700,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 701,
							"name": "new GetOrderEditsOrderEditParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 699,
								"name": "GetOrderEditsOrderEditParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 702,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 703,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						700
					]
				},
				{
					"title": "Properties",
					"children": [
						702,
						703
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 675,
			"name": "AdminOrderEditsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order edit details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 676,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 677,
							"name": "order_edit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order edit details"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
									"qualifiedName": "OrderEdit"
								},
								"name": "OrderEdit",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								677
							]
						}
					]
				}
			}
		},
		{
			"id": 678,
			"name": "AdminOrderEditsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of order edits with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 679,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 680,
									"name": "order_edits",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of order edit details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
												"qualifiedName": "OrderEdit"
											},
											"name": "OrderEdit",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										680
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 681,
			"name": "AdminOrderEditDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 682,
			"name": "AdminOrderEditItemChangeDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting order edit item changes."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 683,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 684,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Order Edit Item Change."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 685,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "item_change"
							},
							"defaultValue": "item_change"
						},
						{
							"id": 686,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the Order Edit Item Change was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								684,
								685,
								686
							]
						}
					]
				}
			}
		},
		{
			"id": 704,
			"name": "GetOrderEditsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved order edits."
					}
				]
			},
			"children": [
				{
					"id": 708,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search order edits by their internal note."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 709,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the order edits by their associated order's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 710,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 711,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 712,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 713,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 705,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 706,
							"name": "new GetOrderEditsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 707,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 704,
								"name": "GetOrderEditsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						705
					]
				},
				{
					"title": "Properties",
					"children": [
						708,
						709,
						710,
						711,
						712,
						713
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 3969,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 714,
			"name": "AdminPostOrderEditsRequestConfirmationReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 715,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 716,
							"name": "new AdminPostOrderEditsRequestConfirmationReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 714,
								"name": "AdminPostOrderEditsRequestConfirmationReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 717,
					"name": "payment_collection_description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						715
					]
				},
				{
					"title": "Properties",
					"children": [
						717
					]
				}
			]
		},
		{
			"id": 722,
			"name": "AdminPostOrderEditsEditLineItemsLineItemReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to create or update of the line item change."
					}
				]
			},
			"children": [
				{
					"id": 723,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 724,
							"name": "new AdminPostOrderEditsEditLineItemsLineItemReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to create or update of the line item change."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 722,
								"name": "AdminPostOrderEditsEditLineItemsLineItemReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 725,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to update"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						723
					]
				},
				{
					"title": "Properties",
					"children": [
						725
					]
				}
			]
		},
		{
			"id": 718,
			"name": "AdminPostOrderEditsOrderEditReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the order edit."
					}
				]
			},
			"children": [
				{
					"id": 719,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 720,
							"name": "new AdminPostOrderEditsOrderEditReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the order edit."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 718,
								"name": "AdminPostOrderEditsOrderEditReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 721,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note to create or update in the order edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						719
					]
				},
				{
					"title": "Properties",
					"children": [
						721
					]
				}
			]
		},
		{
			"id": 737,
			"name": "AdminPostOrdersOrderShippingMethodsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping method's details."
					}
				]
			},
			"children": [
				{
					"id": 738,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 739,
							"name": "new AdminPostOrdersOrderShippingMethodsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping method's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 737,
								"name": "AdminPostOrdersOrderShippingMethodsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 740,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price (excluding VAT) that should be charged for the Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 741,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create the Shipping Method from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 742,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data required for the Shipping Option to create a Shipping Method. This depends on the Fulfillment Provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						738
					]
				},
				{
					"title": "Properties",
					"children": [
						740,
						741,
						742
					]
				}
			]
		},
		{
			"id": 743,
			"name": "AdminPostOrdersOrderShippingMethodsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 744,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 745,
							"name": "new AdminPostOrdersOrderShippingMethodsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 743,
								"name": "AdminPostOrdersOrderShippingMethodsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 746,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 747,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						744
					]
				},
				{
					"title": "Properties",
					"children": [
						746,
						747
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 748,
			"name": "AdminPostOrdersOrderArchiveParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 749,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 750,
							"name": "new AdminPostOrdersOrderArchiveParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 748,
								"name": "AdminPostOrdersOrderArchiveParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 751,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 752,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						749
					]
				},
				{
					"title": "Properties",
					"children": [
						751,
						752
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 753,
			"name": "AdminPostOrdersClaimCancel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 754,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 755,
							"name": "new AdminPostOrdersClaimCancel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 753,
								"name": "AdminPostOrdersClaimCancel",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 756,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 757,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						754
					]
				},
				{
					"title": "Properties",
					"children": [
						756,
						757
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 769,
			"name": "AdminPostOrdersClaimFulfillmentsCancelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 770,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 771,
							"name": "new AdminPostOrdersClaimFulfillmentsCancelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 769,
								"name": "AdminPostOrdersClaimFulfillmentsCancelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 772,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 773,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						770
					]
				},
				{
					"title": "Properties",
					"children": [
						772,
						773
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 774,
			"name": "AdminPostOrdersOrderSwapFulfillementsCancelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 775,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 776,
							"name": "new AdminPostOrdersOrderSwapFulfillementsCancelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 774,
								"name": "AdminPostOrdersOrderSwapFulfillementsCancelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 777,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 778,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						775
					]
				},
				{
					"title": "Properties",
					"children": [
						777,
						778
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 758,
			"name": "adjustInventoryForCancelledFulfillment",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 759,
					"name": "adjustInventoryForCancelledFulfillment",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 760,
							"name": "fulfillment",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Fulfillment is created once an admin can prepare the purchased goods. Fulfillments will eventually be shipped and hold information about how to track shipments. Fulfillments are created through a fulfillment provider, which typically integrates a third-party shipping service. Fulfillments can be associated with orders, claims, swaps, and returns."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
									"qualifiedName": "Fulfillment"
								},
								"name": "Fulfillment",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 761,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 762,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 763,
											"name": "productVariantInventoryService",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/src/services/product-variant-inventory.ts",
													"qualifiedName": "ProductVariantInventoryService"
												},
												"name": "ProductVariantInventoryService",
												"package": "@medusajs/medusa"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												763
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 764,
			"name": "AdminPostOrdersOrderFulfillementsCancelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 765,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 766,
							"name": "new AdminPostOrdersOrderFulfillementsCancelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 764,
								"name": "AdminPostOrdersOrderFulfillementsCancelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 767,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 768,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						765
					]
				},
				{
					"title": "Properties",
					"children": [
						767,
						768
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 779,
			"name": "AdminPostOrdersOrderCancel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 780,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 781,
							"name": "new AdminPostOrdersOrderCancel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 779,
								"name": "AdminPostOrdersOrderCancel",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 782,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 783,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						780
					]
				},
				{
					"title": "Properties",
					"children": [
						782,
						783
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 784,
			"name": "AdminPostOrdersSwapCancelParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 785,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 786,
							"name": "new AdminPostOrdersSwapCancelParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 784,
								"name": "AdminPostOrdersSwapCancelParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 787,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 788,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						785
					]
				},
				{
					"title": "Properties",
					"children": [
						787,
						788
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 789,
			"name": "AdminPostOrdersOrderCaptureParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 790,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 791,
							"name": "new AdminPostOrdersOrderCaptureParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 789,
								"name": "AdminPostOrdersOrderCaptureParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 792,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 793,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						790
					]
				},
				{
					"title": "Properties",
					"children": [
						792,
						793
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 794,
			"name": "AdminPostOrdersOrderCompleteParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 795,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 796,
							"name": "new AdminPostOrdersOrderCompleteParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 794,
								"name": "AdminPostOrdersOrderCompleteParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 797,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 798,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						795
					]
				},
				{
					"title": "Properties",
					"children": [
						797,
						798
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 817,
			"name": "AdminPostOrdersOrderClaimsClaimShipmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 818,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 819,
							"name": "new AdminPostOrdersOrderClaimsClaimShipmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 817,
								"name": "AdminPostOrdersOrderClaimsClaimShipmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 820,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 821,
					"name": "tracking_numbers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of tracking numbers for the shipment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						818
					]
				},
				{
					"title": "Properties",
					"children": [
						820,
						821
					]
				}
			]
		},
		{
			"id": 822,
			"name": "AdminPostOrdersOrderClaimsClaimShipmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 823,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 824,
							"name": "new AdminPostOrdersOrderClaimsClaimShipmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 822,
								"name": "AdminPostOrdersOrderClaimsClaimShipmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 825,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 826,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						823
					]
				},
				{
					"title": "Properties",
					"children": [
						825,
						826
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 799,
			"name": "AdminPostOrdersOrderClaimsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the claim to be created."
					}
				]
			},
			"children": [
				{
					"id": 800,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 801,
							"name": "new AdminPostOrdersOrderClaimsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the claim to be created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 799,
								"name": "AdminPostOrdersOrderClaimsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 802,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Claim. This will determine how the Claim is treated: `replace` Claims will result in a Fulfillment with new items being created, while a `refund` Claim will refund the amount paid for the claimed items."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "replace"
							},
							{
								"type": "literal",
								"value": "refund"
							}
						]
					}
				},
				{
					"id": 803,
					"name": "claim_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Claim Items that the Claim will consist of."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4429,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 804,
					"name": "return_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Optional details for the Return Shipping Method, if the items are to be sent back. Providing this field will result in a return being created and associated with the claim."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4438,
						"name": "ReturnShipping",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 805,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new items to send to the Customer. This is only used if the claim's type is `replace`."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4443,
							"name": "AdditionalItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 806,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Shipping Methods to send the additional Line Items with. This is only used if the claim's type is `replace`."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4448,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 807,
					"name": "refund_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund the customer. This is used when the claim's type is `refund`."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 808,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional shipping address to send the claimed items to. If not provided, the parent order's shipping address will be used."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3941,
						"name": "AddressPayload",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 809,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to true no notification will be send related to this Claim."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 810,
					"name": "return_location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location used for the associated return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 811,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						800
					]
				},
				{
					"title": "Properties",
					"children": [
						802,
						803,
						804,
						805,
						806,
						807,
						808,
						809,
						810,
						811
					]
				}
			]
		},
		{
			"id": 4438,
			"name": "ReturnShipping",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's shipping method details."
					}
				]
			},
			"children": [
				{
					"id": 4439,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4440,
							"name": "new ReturnShipping",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4438,
								"name": "ReturnShipping",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4441,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option used for the return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4442,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4439
					]
				},
				{
					"title": "Properties",
					"children": [
						4441,
						4442
					]
				}
			]
		},
		{
			"id": 4448,
			"name": "ShippingMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
					}
				]
			},
			"children": [
				{
					"id": 4449,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4450,
							"name": "new ShippingMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4448,
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4451,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4452,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create a Shipping Method from"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4453,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price to charge for the Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4454,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4449
					]
				},
				{
					"title": "Properties",
					"children": [
						4451,
						4452,
						4453,
						4454
					]
				}
			]
		},
		{
			"id": 4429,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4430,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4431,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4429,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4432,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item that will be claimed."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4433,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items that will be returned"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4434,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Short text describing the Claim Item in further detail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4435,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for the Claim"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/claim-item.ts",
							"qualifiedName": "ClaimReason"
						},
						"name": "ClaimReason",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 4436,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of tags to add to the Claim Item"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4437,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of image URL's that will be associated with the Claim"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4430
					]
				},
				{
					"title": "Properties",
					"children": [
						4432,
						4433,
						4434,
						4435,
						4436,
						4437
					]
				}
			]
		},
		{
			"id": 4443,
			"name": "AdditionalItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4444,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4445,
							"name": "new AdditionalItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4443,
								"name": "AdditionalItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4446,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4447,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4444
					]
				},
				{
					"title": "Properties",
					"children": [
						4446,
						4447
					]
				}
			]
		},
		{
			"id": 812,
			"name": "AdminPostOrdersOrderClaimsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 813,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 814,
							"name": "new AdminPostOrdersOrderClaimsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 812,
								"name": "AdminPostOrdersOrderClaimsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 815,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 816,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						813
					]
				},
				{
					"title": "Properties",
					"children": [
						815,
						816
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 827,
			"name": "updateInventoryAndReservations",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 828,
					"name": "updateInventoryAndReservations",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 829,
							"name": "fulfillments",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
										"qualifiedName": "Fulfillment"
									},
									"name": "Fulfillment",
									"package": "@medusajs/medusa"
								}
							}
						},
						{
							"id": 830,
							"name": "context",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 831,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 832,
											"name": "inventoryService",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/src/services/product-variant-inventory.ts",
													"qualifiedName": "ProductVariantInventoryService"
												},
												"name": "ProductVariantInventoryService",
												"package": "@medusajs/medusa"
											}
										},
										{
											"id": 833,
											"name": "locationId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												832,
												833
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 834,
			"name": "AdminPostOrdersOrderFulfillmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the fulfillment to be created."
					}
				]
			},
			"children": [
				{
					"id": 835,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 836,
							"name": "new AdminPostOrdersOrderFulfillmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the fulfillment to be created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 834,
								"name": "AdminPostOrdersOrderFulfillmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 837,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Line Items to include in the Fulfillment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4455,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 838,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location where the items will be fulfilled from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 839,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 840,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						835
					]
				},
				{
					"title": "Properties",
					"children": [
						837,
						838,
						839,
						840
					]
				}
			]
		},
		{
			"id": 4455,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4456,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4457,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4455,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4458,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item to fulfill."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4459,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item to fulfill."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4456
					]
				},
				{
					"title": "Properties",
					"children": [
						4458,
						4459
					]
				}
			]
		},
		{
			"id": 841,
			"name": "AdminPostOrdersOrderFulfillmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 842,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 843,
							"name": "new AdminPostOrdersOrderFulfillmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 841,
								"name": "AdminPostOrdersOrderFulfillmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 844,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 845,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						842
					]
				},
				{
					"title": "Properties",
					"children": [
						844,
						845
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 846,
			"name": "AdminPostOrdersOrderShipmentReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipment to create."
					}
				]
			},
			"children": [
				{
					"id": 847,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 848,
							"name": "new AdminPostOrdersOrderShipmentReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipment to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 846,
								"name": "AdminPostOrdersOrderShipmentReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 849,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 850,
					"name": "tracking_numbers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking numbers for the shipment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 851,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to true no notification will be send related to this Shipment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						847
					]
				},
				{
					"title": "Properties",
					"children": [
						849,
						850,
						851
					]
				}
			]
		},
		{
			"id": 852,
			"name": "AdminPostOrdersOrderShipmentParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 853,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 854,
							"name": "new AdminPostOrdersOrderShipmentParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 852,
								"name": "AdminPostOrdersOrderShipmentParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 855,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 856,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						853
					]
				},
				{
					"title": "Properties",
					"children": [
						855,
						856
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 873,
			"name": "AdminPostOrdersOrderSwapsSwapShipmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 874,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 875,
							"name": "new AdminPostOrdersOrderSwapsSwapShipmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 873,
								"name": "AdminPostOrdersOrderSwapsSwapShipmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 876,
					"name": "fulfillment_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 877,
					"name": "tracking_numbers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tracking numbers for the shipment."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 878,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to true no notification will be sent related to this Claim."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						874
					]
				},
				{
					"title": "Properties",
					"children": [
						876,
						877,
						878
					]
				}
			]
		},
		{
			"id": 879,
			"name": "AdminPostOrdersOrderSwapsSwapShipmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 880,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 881,
							"name": "new AdminPostOrdersOrderSwapsSwapShipmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 879,
								"name": "AdminPostOrdersOrderSwapsSwapShipmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 882,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 883,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						880
					]
				},
				{
					"title": "Properties",
					"children": [
						882,
						883
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 857,
			"name": "AdminPostOrdersOrderSwapsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the swap to create."
					}
				]
			},
			"children": [
				{
					"id": 858,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 859,
							"name": "new AdminPostOrdersOrderSwapsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the swap to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 857,
								"name": "AdminPostOrdersOrderSwapsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 860,
					"name": "return_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Line Items to associate with the swap's return."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4460,
							"name": "ReturnItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 861,
					"name": "return_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method associated with the swap's return."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4467,
						"name": "ReturnShipping",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 862,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sales channel associated with the swap."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 863,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The new items to send to the Customer."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4472,
							"name": "AdditionalItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 864,
					"name": "custom_shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of custom shipping options to potentially create a Shipping Method from to send the additional items."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4477,
							"name": "CustomShippingOption",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 865,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this Swap."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 866,
					"name": "return_location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location used for the associated return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 867,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, swaps can be completed with items out of stock"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						858
					]
				},
				{
					"title": "Properties",
					"children": [
						860,
						861,
						862,
						863,
						864,
						865,
						866,
						867
					]
				}
			]
		},
		{
			"id": 4460,
			"name": "ReturnItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A return item represents a line item in an order that is to be returned. It includes details related to the return and the reason behind it."
					}
				]
			},
			"children": [
				{
					"id": 4461,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4462,
							"name": "new ReturnItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A return item represents a line item in an order that is to be returned. It includes details related to the return and the reason behind it."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4460,
								"name": "ReturnItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4463,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item that will be returned."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4464,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items that will be returned"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4465,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Return Reason to use."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4466,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note with information about the Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4461
					]
				},
				{
					"title": "Properties",
					"children": [
						4463,
						4464,
						4465,
						4466
					]
				}
			]
		},
		{
			"id": 4467,
			"name": "ReturnShipping",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's shipping method details."
					}
				]
			},
			"children": [
				{
					"id": 4468,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4469,
							"name": "new ReturnShipping",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4467,
								"name": "ReturnShipping",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4470,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option used for the return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4471,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4468
					]
				},
				{
					"title": "Properties",
					"children": [
						4470,
						4471
					]
				}
			]
		},
		{
			"id": 4477,
			"name": "CustomShippingOption",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Custom Shipping Options are overridden Shipping Options. Admins can attach a Custom Shipping Option to a cart in order to set a custom price for a particular Shipping Option."
					}
				]
			},
			"children": [
				{
					"id": 4478,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4479,
							"name": "new CustomShippingOption",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Custom Shipping Options are overridden Shipping Options. Admins can attach a Custom Shipping Option to a cart in order to set a custom price for a particular Shipping Option."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4477,
								"name": "CustomShippingOption",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4480,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4481,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom price of the Shipping Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4478
					]
				},
				{
					"title": "Properties",
					"children": [
						4480,
						4481
					]
				}
			]
		},
		{
			"id": 4472,
			"name": "AdditionalItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4473,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4474,
							"name": "new AdditionalItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4472,
								"name": "AdditionalItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4475,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4476,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4473
					]
				},
				{
					"title": "Properties",
					"children": [
						4475,
						4476
					]
				}
			]
		},
		{
			"id": 868,
			"name": "AdminPostOrdersOrderSwapsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 869,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 870,
							"name": "new AdminPostOrdersOrderSwapsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 868,
								"name": "AdminPostOrdersOrderSwapsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 871,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 872,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						869
					]
				},
				{
					"title": "Properties",
					"children": [
						871,
						872
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 884,
			"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 885,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 886,
							"name": "new AdminPostOrdersOrderClaimsClaimFulfillmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 884,
								"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 887,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 888,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this Claim."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 889,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment's location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						885
					]
				},
				{
					"title": "Properties",
					"children": [
						887,
						888,
						889
					]
				}
			]
		},
		{
			"id": 890,
			"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 891,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 892,
							"name": "new AdminPostOrdersOrderClaimsClaimFulfillmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 890,
								"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 893,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 894,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						891
					]
				},
				{
					"title": "Properties",
					"children": [
						893,
						894
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 895,
			"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 896,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 897,
							"name": "new AdminPostOrdersOrderSwapsSwapFulfillmentsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 895,
								"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 898,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 899,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this swap."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 900,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the fulfillment's location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						896
					]
				},
				{
					"title": "Properties",
					"children": [
						898,
						899,
						900
					]
				}
			]
		},
		{
			"id": 901,
			"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 902,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 903,
							"name": "new AdminPostOrdersOrderSwapsSwapFulfillmentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 901,
								"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 904,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 905,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						902
					]
				},
				{
					"title": "Properties",
					"children": [
						904,
						905
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 906,
			"name": "AdminGetOrdersOrderParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 907,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 908,
							"name": "new AdminGetOrdersOrderParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 906,
								"name": "AdminGetOrdersOrderParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 909,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 910,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						907
					]
				},
				{
					"title": "Properties",
					"children": [
						909,
						910
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 726,
			"name": "AdminOrdersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 727,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 728,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								728
							]
						}
					]
				}
			}
		},
		{
			"id": 729,
			"name": "AdminOrdersListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of orders with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 730,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 731,
									"name": "orders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of order details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/order.ts",
												"qualifiedName": "Order"
											},
											"name": "Order",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										731
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 732,
			"name": "filterableAdminOrdersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 733,
			"name": "AvailableOrderIncludes",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 734,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 735,
							"name": "RETURNABLE_ITEMS",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"returnable_items\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								735
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 736,
			"name": "allowedOrderIncludes",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 911,
			"name": "AdminGetOrdersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved orders."
					}
				]
			},
			"children": [
				{
					"id": 912,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 913,
							"name": "new AdminGetOrdersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 911,
								"name": "AdminGetOrdersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4484,
								"name": "AdminListOrdersSelector.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4483,
						"name": "AdminListOrdersSelector.constructor"
					}
				},
				{
					"id": 914,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 915,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 916,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 917,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 918,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search orders' shipping address, first name, email, and display ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4485,
						"name": "AdminListOrdersSelector.q"
					}
				},
				{
					"id": 919,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4486,
						"name": "AdminListOrdersSelector.id"
					}
				},
				{
					"id": 920,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4487,
						"name": "AdminListOrdersSelector.status"
					}
				},
				{
					"id": 921,
					"name": "fulfillment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fulfillment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4488,
						"name": "AdminListOrdersSelector.fulfillment_status"
					}
				},
				{
					"id": 922,
					"name": "payment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4489,
						"name": "AdminListOrdersSelector.payment_status"
					}
				},
				{
					"id": 923,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Display ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4490,
						"name": "AdminListOrdersSelector.display_id"
					}
				},
				{
					"id": 924,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cart ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4491,
						"name": "AdminListOrdersSelector.cart_id"
					}
				},
				{
					"id": 925,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Customer ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4492,
						"name": "AdminListOrdersSelector.customer_id"
					}
				},
				{
					"id": 926,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Email to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4493,
						"name": "AdminListOrdersSelector.email"
					}
				},
				{
					"id": 927,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Regions to filter orders by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4494,
						"name": "AdminListOrdersSelector.region_id"
					}
				},
				{
					"id": 928,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency code to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4495,
						"name": "AdminListOrdersSelector.currency_code"
					}
				},
				{
					"id": 929,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax rate to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4496,
						"name": "AdminListOrdersSelector.tax_rate"
					}
				},
				{
					"id": 930,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sales channel IDs to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4497,
						"name": "AdminListOrdersSelector.sales_channel_id"
					}
				},
				{
					"id": 931,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`canceled_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4498,
						"name": "AdminListOrdersSelector.canceled_at"
					}
				},
				{
					"id": 932,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4499,
						"name": "AdminListOrdersSelector.created_at"
					}
				},
				{
					"id": 933,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4500,
						"name": "AdminListOrdersSelector.updated_at"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						912
					]
				},
				{
					"title": "Properties",
					"children": [
						914,
						915,
						916,
						917,
						918,
						919,
						920,
						921,
						922,
						923,
						924,
						925,
						926,
						927,
						928,
						929,
						930,
						931,
						932,
						933
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4482,
					"name": "AdminListOrdersSelector",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 934,
			"name": "AdminPostOrdersOrderSwapsSwapProcessPaymentParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 935,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 936,
							"name": "new AdminPostOrdersOrderSwapsSwapProcessPaymentParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 934,
								"name": "AdminPostOrdersOrderSwapsSwapProcessPaymentParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 937,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 938,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						935
					]
				},
				{
					"title": "Properties",
					"children": [
						937,
						938
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 939,
			"name": "AdminPostOrdersOrderRefundsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the order refund."
					}
				]
			},
			"children": [
				{
					"id": 940,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 941,
							"name": "new AdminPostOrdersOrderRefundsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the order refund."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 939,
								"name": "AdminPostOrdersOrderRefundsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 942,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund. It should be less than or equal the `refundable_amount` of the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 943,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for the Refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 944,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A note with additional details about the Refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 945,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this Refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						940
					]
				},
				{
					"title": "Properties",
					"children": [
						942,
						943,
						944,
						945
					]
				}
			]
		},
		{
			"id": 946,
			"name": "AdminPostOrdersOrderRefundsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 947,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 948,
							"name": "new AdminPostOrdersOrderRefundsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 946,
								"name": "AdminPostOrdersOrderRefundsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 949,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 950,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						947
					]
				},
				{
					"title": "Properties",
					"children": [
						949,
						950
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 951,
			"name": "AdminPostOrdersOrderReturnsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the requested return."
					}
				]
			},
			"children": [
				{
					"id": 952,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 953,
							"name": "new AdminPostOrdersOrderReturnsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the requested return."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 951,
								"name": "AdminPostOrdersOrderReturnsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 954,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line items that will be returned."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4501,
							"name": "OrdersReturnItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 955,
					"name": "return_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Shipping Method to be used to handle the return shipment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4508,
						"name": "ReturnShipping",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 956,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note with information about the Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 957,
					"name": "receive_now",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if the Return should be registerd as received immediately."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 958,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 959,
					"name": "refund",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 960,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location used for the return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						952
					]
				},
				{
					"title": "Properties",
					"children": [
						954,
						955,
						956,
						957,
						958,
						959,
						960
					]
				}
			]
		},
		{
			"id": 4508,
			"name": "ReturnShipping",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's shipping method details."
					}
				]
			},
			"children": [
				{
					"id": 4509,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4510,
							"name": "new ReturnShipping",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4508,
								"name": "ReturnShipping",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4511,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option used for the return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4512,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method's price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4509
					]
				},
				{
					"title": "Properties",
					"children": [
						4511,
						4512
					]
				}
			]
		},
		{
			"id": 961,
			"name": "AdminPostOrdersOrderReturnsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 962,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 963,
							"name": "new AdminPostOrdersOrderReturnsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 961,
								"name": "AdminPostOrdersOrderReturnsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 964,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 965,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						962
					]
				},
				{
					"title": "Properties",
					"children": [
						964,
						965
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 966,
			"name": "AdminPostOrdersOrderClaimsClaimReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 967,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 968,
							"name": "new AdminPostOrdersOrderClaimsClaimReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 966,
								"name": "AdminPostOrdersOrderClaimsClaimReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 969,
					"name": "claim_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Claim Items that the Claim will consist of."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4513,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 970,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Shipping Methods to send the additional Line Items with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4522,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 971,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to true no notification will be send related to this Swap."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 972,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						967
					]
				},
				{
					"title": "Properties",
					"children": [
						969,
						970,
						971,
						972
					]
				}
			]
		},
		{
			"id": 4522,
			"name": "ShippingMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
					}
				]
			},
			"children": [
				{
					"id": 4523,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4524,
							"name": "new ShippingMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4522,
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4525,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4526,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create a Shipping Method from"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4527,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price to charge for the Shipping Method"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4528,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4523
					]
				},
				{
					"title": "Properties",
					"children": [
						4525,
						4526,
						4527,
						4528
					]
				}
			]
		},
		{
			"id": 4513,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4514,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4515,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4513,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4516,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Claim Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4517,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Short text describing the Claim Item in further detail."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4518,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for the Claim"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4519,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of image URL's that will be associated with the Claim"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5008,
							"name": "Image",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 4520,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list o tags to add to the Claim Item"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5013,
							"name": "Tag",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 4521,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4514
					]
				},
				{
					"title": "Properties",
					"children": [
						4516,
						4517,
						4518,
						4519,
						4520,
						4521
					]
				}
			]
		},
		{
			"id": 5008,
			"name": "Image",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An Image is used to store details about uploaded images. Images are uploaded by the File Service, and the URL is provided by the File Service."
					}
				]
			},
			"children": [
				{
					"id": 5009,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 5010,
							"name": "new Image",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An Image is used to store details about uploaded images. Images are uploaded by the File Service, and the URL is provided by the File Service."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 5008,
								"name": "Image",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 5011,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Image ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5012,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Image URL"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						5009
					]
				},
				{
					"title": "Properties",
					"children": [
						5011,
						5012
					]
				}
			]
		},
		{
			"id": 5013,
			"name": "Tag",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 5014,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 5015,
							"name": "new Tag",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 5013,
								"name": "Tag",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 5016,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tag ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5017,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tag value"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						5014
					]
				},
				{
					"title": "Properties",
					"children": [
						5016,
						5017
					]
				}
			]
		},
		{
			"id": 973,
			"name": "AdminPostOrdersOrderClaimsClaimParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 974,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 975,
							"name": "new AdminPostOrdersOrderClaimsClaimParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 973,
								"name": "AdminPostOrdersOrderClaimsClaimParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 976,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 977,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						974
					]
				},
				{
					"title": "Properties",
					"children": [
						976,
						977
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 978,
			"name": "AdminPostOrdersOrderReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the order."
					}
				]
			},
			"children": [
				{
					"id": 979,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 980,
							"name": "new AdminPostOrdersOrderReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the order."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 978,
								"name": "AdminPostOrdersOrderReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 981,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The email associated with the order"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 982,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's billing address"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3941,
						"name": "AddressPayload",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 983,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order's shipping address"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3941,
						"name": "AddressPayload",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 984,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line items of the order"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					}
				},
				{
					"id": 985,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the region that the order is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 986,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discounts applied to the order"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					}
				},
				{
					"id": 987,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer associated with the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 988,
					"name": "payment_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment method chosen for the order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4529,
						"name": "PaymentMethod",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 989,
					"name": "shipping_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Shipping Method used for shipping the order."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4534,
							"name": "ShippingMethod",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 990,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, no notification will be sent to the customer related to this order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						979
					]
				},
				{
					"title": "Properties",
					"children": [
						981,
						982,
						983,
						984,
						985,
						986,
						987,
						988,
						989,
						990
					]
				}
			]
		},
		{
			"id": 4529,
			"name": "PaymentMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the order's payment method."
					}
				]
			},
			"children": [
				{
					"id": 4530,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4531,
							"name": "new PaymentMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4529,
								"name": "PaymentMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4532,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the payment provider used in the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4533,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data to attach to the payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4530
					]
				},
				{
					"title": "Properties",
					"children": [
						4532,
						4533
					]
				}
			]
		},
		{
			"id": 4534,
			"name": "ShippingMethod",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in the order's shipping method."
					}
				]
			},
			"children": [
				{
					"id": 4535,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4536,
							"name": "new ShippingMethod",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A Shipping Method represents a way in which an Order or Return can be shipped. Shipping Methods are created from a Shipping Option, but may contain additional details that can be necessary for the Fulfillment Provider to handle the shipment. If the shipping method is created for a return, it may be associated with a claim or a swap that the return is part of."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4534,
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4537,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping provider used in the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4538,
					"name": "profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping profile used in the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4539,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price of the shipping method."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4540,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data to attach to the shipping method."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 4541,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The line items associated with this shipping methods."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Record"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "unknown"
								}
							],
							"name": "Record",
							"package": "typescript"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4535
					]
				},
				{
					"title": "Properties",
					"children": [
						4537,
						4538,
						4539,
						4540,
						4541
					]
				}
			]
		},
		{
			"id": 991,
			"name": "AdminPostOrdersOrderParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to configure the retrieved order."
					}
				]
			},
			"children": [
				{
					"id": 992,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 993,
							"name": "new AdminPostOrdersOrderParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 991,
								"name": "AdminPostOrdersOrderParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 994,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 995,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						992
					]
				},
				{
					"title": "Properties",
					"children": [
						994,
						995
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1006,
			"name": "AdminGetPaymentCollectionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1007,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1008,
							"name": "new AdminGetPaymentCollectionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1006,
								"name": "AdminGetPaymentCollectionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 1009,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 1010,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1007
					]
				},
				{
					"title": "Properties",
					"children": [
						1009,
						1010
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 996,
			"name": "defaultPaymentCollectionFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 997,
			"name": "defaulPaymentCollectionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 998,
			"name": "AdminPaymentCollectionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 999,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1000,
							"name": "payment_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Payment Collection details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
									"qualifiedName": "PaymentCollection"
								},
								"name": "PaymentCollection",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1000
							]
						}
					]
				}
			}
		},
		{
			"id": 1001,
			"name": "AdminPaymentCollectionDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a payment collection."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1002,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1003,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Payment Collection."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1004,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "payment_collection"
							},
							"defaultValue": "payment_collection"
						},
						{
							"id": 1005,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the Payment Collection was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1003,
								1004,
								1005
							]
						}
					]
				}
			}
		},
		{
			"id": 1011,
			"name": "AdminUpdatePaymentCollectionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the payment collection."
					}
				]
			},
			"children": [
				{
					"id": 1012,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1013,
							"name": "new AdminUpdatePaymentCollectionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the payment collection."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1011,
								"name": "AdminUpdatePaymentCollectionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1014,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A description to create or update the payment collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1015,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1012
					]
				},
				{
					"title": "Properties",
					"children": [
						1014,
						1015
					]
				}
			]
		},
		{
			"id": 1023,
			"name": "GetPaymentsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1024,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1025,
							"name": "new GetPaymentsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1023,
								"name": "GetPaymentsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 1026,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 1027,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1024
					]
				},
				{
					"title": "Properties",
					"children": [
						1026,
						1027
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1016,
			"name": "defaultPaymentFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1017,
			"name": "AdminPaymentRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1018,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1019,
							"name": "payment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Payment details"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
									"qualifiedName": "Payment"
								},
								"name": "Payment",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1019
							]
						}
					]
				}
			}
		},
		{
			"id": 1020,
			"name": "AdminRefundRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The refund's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1021,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1022,
							"name": "refund",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Refund details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
									"qualifiedName": "Refund"
								},
								"name": "Refund",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1022
							]
						}
					]
				}
			}
		},
		{
			"id": 1028,
			"name": "AdminPostPaymentRefundsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the refund to create."
					}
				]
			},
			"children": [
				{
					"id": 1029,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1030,
							"name": "new AdminPostPaymentRefundsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the refund to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1028,
								"name": "AdminPostPaymentRefundsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1031,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1032,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for the Refund."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/refund.ts",
							"qualifiedName": "RefundReason"
						},
						"name": "RefundReason",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1033,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A note with additional details about the Refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1029
					]
				},
				{
					"title": "Properties",
					"children": [
						1031,
						1032,
						1033
					]
				}
			]
		},
		{
			"id": 1082,
			"name": "AdminPostPriceListPricesPricesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the prices to add."
					}
				]
			},
			"children": [
				{
					"id": 1083,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1084,
							"name": "new AdminPostPriceListPricesPricesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the prices to add."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1082,
								"name": "AdminPostPriceListPricesPricesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1085,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices to update or add."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4086,
							"name": "AdminPriceListPricesUpdateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1086,
					"name": "override",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the prices will replace all existing prices associated with the Price List."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1083
					]
				},
				{
					"title": "Properties",
					"children": [
						1085,
						1086
					]
				}
			]
		},
		{
			"id": 4548,
			"name": "CustomerGroup",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A customer group that can be used to organize customers into groups of similar traits."
					}
				]
			},
			"children": [
				{
					"id": 4549,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4550,
							"name": "new CustomerGroup",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A customer group that can be used to organize customers into groups of similar traits."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4548,
								"name": "CustomerGroup",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4551,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4549
					]
				},
				{
					"title": "Properties",
					"children": [
						4551
					]
				}
			]
		},
		{
			"id": 1087,
			"name": "AdminPostPriceListsPriceListReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the price list to create."
					}
				]
			},
			"children": [
				{
					"id": 1088,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1089,
							"name": "new AdminPostPriceListsPriceListReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the price list to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1087,
								"name": "AdminPostPriceListsPriceListReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1090,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Price List."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1091,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Price List."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1092,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List starts being valid."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 1093,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List ends being valid."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 1094,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the Price List. If the status is set to `draft`, the prices created in the price list will not be available of the customer."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4542,
						"name": "PriceListStatus",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 1095,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Price List."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4545,
						"name": "PriceListType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 1096,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices of the Price List."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4096,
							"name": "AdminPriceListPricesCreateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1097,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of customer groups that the Price List applies to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4548,
							"name": "CustomerGroup",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1098,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of price list"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1088
					]
				},
				{
					"title": "Properties",
					"children": [
						1090,
						1091,
						1092,
						1093,
						1094,
						1095,
						1096,
						1097,
						1098
					]
				}
			]
		},
		{
			"id": 1099,
			"name": "AdminDeletePriceListPricesPricesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the prices to delete."
					}
				]
			},
			"children": [
				{
					"id": 1100,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1101,
							"name": "new AdminDeletePriceListPricesPricesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the prices to delete."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1099,
								"name": "AdminDeletePriceListPricesPricesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1102,
					"name": "price_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the prices to delete."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1100
					]
				},
				{
					"title": "Properties",
					"children": [
						1102
					]
				}
			]
		},
		{
			"id": 1103,
			"name": "AdminDeletePriceListsPriceListProductsPricesBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products' prices to delete."
					}
				]
			},
			"children": [
				{
					"id": 1104,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1105,
							"name": "new AdminDeletePriceListsPriceListProductsPricesBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products' prices to delete."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1103,
								"name": "AdminDeletePriceListsPriceListProductsPricesBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1106,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to delete their associated prices."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1104
					]
				},
				{
					"title": "Properties",
					"children": [
						1106
					]
				}
			]
		},
		{
			"id": 1034,
			"name": "defaultAdminPriceListRemoteQueryObject",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1035,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1036,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 1037,
							"name": "price_list_rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1038,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1039,
											"name": "price_list_rule_values",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1040,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1041,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1041
															]
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 1042,
											"name": "rule_type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1043,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1044,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1044
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1039,
												1042
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 1045,
							"name": "price_set_money_amounts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1046,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1047,
											"name": "money_amount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1048,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1049,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1049
															]
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 1050,
											"name": "price_rules",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1051,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1052,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														},
														{
															"id": 1053,
															"name": "rule_type",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1054,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 1055,
																			"name": "fields",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			},
																			"defaultValue": "..."
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				1055
																			]
																		}
																	]
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1052,
																1053
															]
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 1056,
											"name": "price_set",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1057,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1058,
															"name": "variant_link",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 1059,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 1060,
																			"name": "variant",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 1061,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 1062,
																							"name": "fields",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {},
																							"type": {
																								"type": "array",
																								"elementType": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							},
																							"defaultValue": "defaultAdminProductRemoteQueryObject.variants.fields"
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								1062
																							]
																						}
																					]
																				}
																			},
																			"defaultValue": "..."
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				1060
																			]
																		}
																	]
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1058
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1047,
												1050,
												1056
											]
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1036,
								1037,
								1045
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1063,
			"name": "defaultAdminPriceListFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1064,
			"name": "defaultAdminPriceListRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1065,
			"name": "AdminPriceListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price list's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1066,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1067,
							"name": "price_list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Price List details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
									"qualifiedName": "PriceList"
								},
								"name": "PriceList",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1067
							]
						}
					]
				}
			}
		},
		{
			"id": 1068,
			"name": "AdminPriceListDeleteBatchRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a price list."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1069,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1070,
							"name": "ids",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs of the deleted prices."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 1071,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the items were deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						},
						{
							"id": 1072,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted. A price is also named `money-amount`."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "money-amount"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1070,
								1071,
								1072
							]
						}
					]
				}
			}
		},
		{
			"id": 1073,
			"name": "AdminPriceListDeleteProductPricesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 1068,
				"name": "AdminPriceListDeleteBatchRes",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 1074,
			"name": "AdminPriceListDeleteVariantPricesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 1068,
				"name": "AdminPriceListDeleteBatchRes",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 1075,
			"name": "AdminPriceListDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 1076,
			"name": "AdminPriceListsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of price lists with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1077,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1078,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of price lists details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
												"qualifiedName": "PriceList"
											},
											"name": "PriceList",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1078
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1079,
			"name": "AdminPriceListsProductsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of products with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1080,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1081,
									"name": "products",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of products details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product.ts",
												"qualifiedName": "Product"
											},
											"name": "Product",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1081
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1107,
			"name": "AdminGetPriceListsPriceListProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved products associated with a price list."
					}
				]
			},
			"children": [
				{
					"id": 1111,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1112,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search products' title, description, product variant's title and sku, and product collection's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1113,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter products by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/product.ts",
								"qualifiedName": "ProductStatus"
							},
							"name": "ProductStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1114,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated collection ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1115,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tags to filter products by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1116,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1117,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1118,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1119,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by whether they're gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1120,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1121,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1122,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1123,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1124,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1125,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).expand"
					}
				},
				{
					"id": 1126,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).fields"
					}
				},
				{
					"id": 1127,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).offset"
					}
				},
				{
					"id": 1128,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of products returned in the list. Default is "
							},
							{
								"kind": "code",
								"text": "`50`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).limit"
					}
				},
				{
					"id": 1108,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1109,
							"name": "new AdminGetPriceListsPriceListProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 1110,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1107,
								"name": "AdminGetPriceListsPriceListProductsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin(\n  { limit: 50 }\n).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1108
					]
				},
				{
					"title": "Properties",
					"children": [
						1111,
						1112,
						1113,
						1114,
						1115,
						1116,
						1117,
						1118,
						1119,
						1120,
						1121,
						1122,
						1123,
						1124,
						1125,
						1126,
						1127,
						1128
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 3969,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 1129,
			"name": "AdminGetPriceListPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved price lists."
					}
				]
			},
			"children": [
				{
					"id": 1130,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1131,
							"name": "new AdminGetPriceListPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1129,
								"name": "AdminGetPriceListPaginationParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4075,
								"name": "FilterablePriceListProps.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4074,
						"name": "FilterablePriceListProps.constructor"
					}
				},
				{
					"id": 1132,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1133,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 1134,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1135,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1136,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4076,
						"name": "FilterablePriceListProps.id"
					}
				},
				{
					"id": 1137,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search price lists' description, name, and customer group's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4077,
						"name": "FilterablePriceListProps.q"
					}
				},
				{
					"id": 1138,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4070,
							"name": "PriceListStatus",
							"package": "@medusajs/medusa"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4078,
						"name": "FilterablePriceListProps.status"
					}
				},
				{
					"id": 1139,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4079,
						"name": "FilterablePriceListProps.name"
					}
				},
				{
					"id": 1140,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price lists by their associated customer groups."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4080,
						"name": "FilterablePriceListProps.customer_groups"
					}
				},
				{
					"id": 1141,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4081,
						"name": "FilterablePriceListProps.description"
					}
				},
				{
					"id": 1142,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Types to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4067,
							"name": "PriceListType",
							"package": "@medusajs/medusa"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4082,
						"name": "FilterablePriceListProps.type"
					}
				},
				{
					"id": 1143,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4083,
						"name": "FilterablePriceListProps.created_at"
					}
				},
				{
					"id": 1144,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4084,
						"name": "FilterablePriceListProps.updated_at"
					}
				},
				{
					"id": 1145,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4085,
						"name": "FilterablePriceListProps.deleted_at"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1130
					]
				},
				{
					"title": "Properties",
					"children": [
						1132,
						1133,
						1134,
						1135,
						1136,
						1137,
						1138,
						1139,
						1140,
						1141,
						1142,
						1143,
						1144,
						1145
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4073,
					"name": "FilterablePriceListProps",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 4552,
			"name": "CustomerGroup",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A customer group that can be used to organize customers into groups of similar traits."
					}
				]
			},
			"children": [
				{
					"id": 4553,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4554,
							"name": "new CustomerGroup",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A customer group that can be used to organize customers into groups of similar traits."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4552,
								"name": "CustomerGroup",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4555,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a customer group"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4553
					]
				},
				{
					"title": "Properties",
					"children": [
						4555
					]
				}
			]
		},
		{
			"id": 1146,
			"name": "AdminPostPriceListsPriceListPriceListReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the payment collection."
					}
				]
			},
			"children": [
				{
					"id": 1147,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1148,
							"name": "new AdminPostPriceListsPriceListPriceListReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the payment collection."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1146,
								"name": "AdminPostPriceListsPriceListPriceListReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1149,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Price List"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1150,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Price List."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1151,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List starts being valid."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 1152,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date with timezone that the Price List ends being valid."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 1153,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the Price List. If the status is set to `draft`, the prices created in the price list will not be available of the customer."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4542,
						"name": "PriceListStatus",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 1154,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Price List."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4545,
						"name": "PriceListType",
						"package": "@medusajs/utils"
					}
				},
				{
					"id": 1155,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The prices of the Price List."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4086,
							"name": "AdminPriceListPricesUpdateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1156,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of customer groups that the Price List applies to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4552,
							"name": "CustomerGroup",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1157,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of price list"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1147
					]
				},
				{
					"title": "Properties",
					"children": [
						1149,
						1150,
						1151,
						1152,
						1153,
						1154,
						1155,
						1156,
						1157
					]
				}
			]
		},
		{
			"id": 1218,
			"name": "AdminPostProductCategoriesCategoryProductsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to add to the product category."
					}
				]
			},
			"children": [
				{
					"id": 1219,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1220,
							"name": "new AdminPostProductCategoriesCategoryProductsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to add to the product category."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1218,
								"name": "AdminPostProductCategoriesCategoryProductsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1221,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to add to the product category"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4564,
							"name": "ProductBatchProductCategory",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1219
					]
				},
				{
					"title": "Properties",
					"children": [
						1221
					]
				}
			]
		},
		{
			"id": 1222,
			"name": "AdminPostProductCategoriesCategoryProductsBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1223,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1224,
							"name": "new AdminPostProductCategoriesCategoryProductsBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1222,
								"name": "AdminPostProductCategoriesCategoryProductsBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 1225,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 1226,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1223
					]
				},
				{
					"title": "Properties",
					"children": [
						1225,
						1226
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1187,
			"name": "AdminPostProductCategoriesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product category to create."
					}
				]
			},
			"children": [
				{
					"id": 1188,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1189,
							"name": "new AdminPostProductCategoriesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the product category to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1187,
								"name": "AdminPostProductCategoriesReq",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4558,
								"name": "AdminProductCategoriesReqBase.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4557,
						"name": "AdminProductCategoriesReqBase.constructor"
					}
				},
				{
					"id": 1190,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1191,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1192,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4559,
						"name": "AdminProductCategoriesReqBase.description"
					}
				},
				{
					"id": 1193,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category. If none is provided, the kebab-case version of the name will be used. This field can be used as a slug in URLs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4560,
						"name": "AdminProductCategoriesReqBase.handle"
					}
				},
				{
					"id": 1194,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the product category will only be available to admins."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4561,
						"name": "AdminProductCategoriesReqBase.is_internal"
					}
				},
				{
					"id": 1195,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `false`, the product category will not be available in the storefront."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4562,
						"name": "AdminProductCategoriesReqBase.is_active"
					}
				},
				{
					"id": 1196,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4563,
						"name": "AdminProductCategoriesReqBase.parent_category_id"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1188
					]
				},
				{
					"title": "Properties",
					"children": [
						1190,
						1191,
						1192,
						1193,
						1194,
						1195,
						1196
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4556,
					"name": "AdminProductCategoriesReqBase",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1197,
			"name": "AdminPostProductCategoriesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1198,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1199,
							"name": "new AdminPostProductCategoriesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1197,
								"name": "AdminPostProductCategoriesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 1200,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 1201,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1198
					]
				},
				{
					"title": "Properties",
					"children": [
						1200,
						1201
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1227,
			"name": "AdminDeleteProductCategoriesCategoryProductsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to delete from the product category."
					}
				]
			},
			"children": [
				{
					"id": 1228,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1229,
							"name": "new AdminDeleteProductCategoriesCategoryProductsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to delete from the product category."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1227,
								"name": "AdminDeleteProductCategoriesCategoryProductsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1230,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to delete from the product category."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4564,
							"name": "ProductBatchProductCategory",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1228
					]
				},
				{
					"title": "Properties",
					"children": [
						1230
					]
				}
			]
		},
		{
			"id": 1231,
			"name": "AdminDeleteProductCategoriesCategoryProductsBatchParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1232,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1233,
							"name": "new AdminDeleteProductCategoriesCategoryProductsBatchParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1231,
								"name": "AdminDeleteProductCategoriesCategoryProductsBatchParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 1234,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 1235,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1232
					]
				},
				{
					"title": "Properties",
					"children": [
						1234,
						1235
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1168,
			"name": "AdminGetProductCategoryParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1169,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1170,
							"name": "new AdminGetProductCategoryParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1168,
								"name": "AdminGetProductCategoryParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 1171,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 1172,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1169
					]
				},
				{
					"title": "Properties",
					"children": [
						1171,
						1172
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1158,
			"name": "defaultAdminProductCategoryRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1159,
			"name": "allowedAdminProductCategoryRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1160,
			"name": "defaultProductCategoryFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1161,
			"name": "AdminProductCategoriesCategoryRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product category's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1162,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1163,
							"name": "product_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product category details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
									"qualifiedName": "ProductCategory"
								},
								"name": "ProductCategory",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1163
							]
						}
					]
				}
			}
		},
		{
			"id": 1164,
			"name": "AdminProductCategoriesCategoryDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 1165,
			"name": "AdminProductCategoriesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product categories with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1166,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1167,
									"name": "product_categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product category details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
												"qualifiedName": "ProductCategory"
											},
											"name": "ProductCategory",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1167
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1173,
			"name": "AdminGetProductCategoriesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product categories."
					}
				]
			},
			"children": [
				{
					"id": 1177,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product categories' names and handles."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1178,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter product categories by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1179,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include child product categories in the response."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1180,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're internal."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1181,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by whether they're active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1182,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by their associated parent ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1183,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 1184,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 1185,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 1186,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of product categories returned in the list. The default is "
							},
							{
								"kind": "code",
								"text": "`100`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 1174,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1175,
							"name": "new AdminGetProductCategoriesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 1176,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1173,
								"name": "AdminGetProductCategoriesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1174
					]
				},
				{
					"title": "Properties",
					"children": [
						1177,
						1178,
						1179,
						1180,
						1181,
						1182,
						1183,
						1184,
						1185,
						1186
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 3969,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 1202,
			"name": "AdminPostProductCategoriesCategoryReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the product category."
					}
				]
			},
			"children": [
				{
					"id": 1203,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1204,
							"name": "new AdminPostProductCategoriesCategoryReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the product category."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1202,
								"name": "AdminPostProductCategoriesCategoryReq",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4558,
								"name": "AdminProductCategoriesReqBase.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4557,
						"name": "AdminProductCategoriesReqBase.constructor"
					}
				},
				{
					"id": 1205,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name to identify the Product Category by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1206,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A handle to be used in slugs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 4560,
						"name": "AdminProductCategoriesReqBase.handle"
					}
				},
				{
					"id": 1207,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rank of the category in the tree node (starting from 0)"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1208,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs to hold additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1209,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional text field to describe the Product Category by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4559,
						"name": "AdminProductCategoriesReqBase.description"
					}
				},
				{
					"id": 1210,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to make product category an internal category for admins"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4561,
						"name": "AdminProductCategoriesReqBase.is_internal"
					}
				},
				{
					"id": 1211,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to make product category visible/hidden in the store front"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4562,
						"name": "AdminProductCategoriesReqBase.is_active"
					}
				},
				{
					"id": 1212,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent product category"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4563,
						"name": "AdminProductCategoriesReqBase.parent_category_id"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1203
					]
				},
				{
					"title": "Properties",
					"children": [
						1205,
						1206,
						1207,
						1208,
						1209,
						1210,
						1211,
						1212
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4556,
					"name": "AdminProductCategoriesReqBase",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1213,
			"name": "AdminPostProductCategoriesCategoryParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1214,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1215,
							"name": "new AdminPostProductCategoriesCategoryParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1213,
								"name": "AdminPostProductCategoriesCategoryParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 1216,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 1217,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1214
					]
				},
				{
					"title": "Properties",
					"children": [
						1216,
						1217
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1236,
			"name": "defaultAdminProductTagsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1237,
			"name": "defaultAdminProductTagsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 1238,
			"name": "AdminProductTagsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product tags with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1239,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1240,
									"name": "product_tags",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product tag details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
												"qualifiedName": "ProductTag"
											},
											"name": "ProductTag",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1240
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1241,
			"name": "AdminGetProductTagsPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 1242,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1243,
							"name": "new AdminGetProductTagsPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1241,
								"name": "AdminGetProductTagsPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1244,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 1245,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1242
					]
				},
				{
					"title": "Properties",
					"children": [
						1244,
						1245
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1246,
					"name": "AdminGetProductTagsParams"
				}
			]
		},
		{
			"id": 1246,
			"name": "AdminGetProductTagsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product tags."
					}
				]
			},
			"children": [
				{
					"id": 1247,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1248,
							"name": "new AdminGetProductTagsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1246,
								"name": "AdminGetProductTagsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 1243,
								"name": "AdminGetProductTagsPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 1242,
						"name": "AdminGetProductTagsPaginationParams.constructor"
					}
				},
				{
					"id": 1256,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10",
					"inheritedFrom": {
						"type": "reference",
						"target": 1244,
						"name": "AdminGetProductTagsPaginationParams.limit"
					}
				},
				{
					"id": 1257,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 1245,
						"name": "AdminGetProductTagsPaginationParams.offset"
					}
				},
				{
					"id": 1249,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3924,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 1250,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product tags' value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1251,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to search product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3924,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 1252,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product tags' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1253,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product tags' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1254,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1255,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product tags by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1247
					]
				},
				{
					"title": "Properties",
					"children": [
						1256,
						1257,
						1249,
						1250,
						1251,
						1252,
						1253,
						1254,
						1255
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 1241,
					"name": "AdminGetProductTagsPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1258,
			"name": "defaultAdminProductTypeFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1259,
			"name": "defaultAdminProductTypeRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 1260,
			"name": "AdminProductTypesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product types with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1261,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1262,
									"name": "product_types",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product types details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
												"qualifiedName": "ProductType"
											},
											"name": "ProductType",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1262
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1263,
			"name": "AdminGetProductTypesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product types."
					}
				]
			},
			"children": [
				{
					"id": 1264,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1265,
							"name": "new AdminGetProductTypesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1263,
								"name": "AdminGetProductTypesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3976,
								"name": "FindPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3975,
						"name": "FindPaginationParams.constructor"
					}
				},
				{
					"id": 1266,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3924,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 1267,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search product types' value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1268,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3924,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 1269,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product types' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1270,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product types' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1271,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1272,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product types by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1273,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 3977,
						"name": "FindPaginationParams.offset"
					}
				},
				{
					"id": 1274,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": 3978,
						"name": "FindPaginationParams.limit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1264
					]
				},
				{
					"title": "Properties",
					"children": [
						1266,
						1267,
						1268,
						1269,
						1270,
						1271,
						1272,
						1273,
						1274
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3974,
					"name": "FindPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1348,
			"name": "AdminPostProductsProductOptionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product option to create."
					}
				]
			},
			"children": [
				{
					"id": 1349,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1350,
							"name": "new AdminPostProductsProductOptionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the product option to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1348,
								"name": "AdminPostProductsProductOptionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1351,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1349
					]
				},
				{
					"title": "Properties",
					"children": [
						1351
					]
				}
			]
		},
		{
			"id": 5018,
			"name": "ProductVariantOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 5019,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 5020,
							"name": "new ProductVariantOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 5018,
								"name": "ProductVariantOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 5021,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value to give for the Product Option at the same index in the Product's `options` field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						5019
					]
				},
				{
					"title": "Properties",
					"children": [
						5021
					]
				}
			]
		},
		{
			"id": 4589,
			"name": "ProductOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4590,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4591,
							"name": "new ProductOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4589,
								"name": "ProductOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4592,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4590
					]
				},
				{
					"title": "Properties",
					"children": [
						4592
					]
				}
			]
		},
		{
			"id": 4593,
			"name": "ProductVariantReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4594,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4595,
							"name": "new ProductVariantReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4593,
								"name": "ProductVariantReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4596,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4597,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4598,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN number of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4599,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC number of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4600,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic GTIN field of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4601,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4602,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of stock kept of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 4603,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Product Variant can be purchased when out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4604,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether Medusa should keep track of the inventory of this Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4605,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The wieght of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4606,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4607,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4608,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4609,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4610,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4611,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4612,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 4613,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variant prices. A product variant can have different prices for each region or currency code."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4615,
							"name": "ProductVariantPricesCreateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 4614,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Option values that the variant corresponds to. The option values should be added into the array in the same index as in the `options` field of the product."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5018,
							"name": "ProductVariantOptionReq",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4594
					]
				},
				{
					"title": "Properties",
					"children": [
						4596,
						4597,
						4598,
						4599,
						4600,
						4601,
						4602,
						4603,
						4604,
						4605,
						4606,
						4607,
						4608,
						4609,
						4610,
						4611,
						4612,
						4613,
						4614
					]
				}
			]
		},
		{
			"id": 1352,
			"name": "AdminPostProductsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product to create."
					}
				]
			},
			"children": [
				{
					"id": 1353,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1354,
							"name": "new AdminPostProductsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the product to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1352,
								"name": "AdminPostProductsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1355,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1356,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1357,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1358,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if the Product represents a Gift Card. Purchasing Products with this flag set to `true` will result in a Gift Card being created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1359,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if discounts can be applied to the Line Items generated from this Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 1360,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of images of the Product. Each value in the array is a URL to the image. You can use the upload API Routes to upload the image and obtain a URL."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1361,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail to use for the Product. The value is a URL to the thumbnail. You can use the upload API Routes to upload the thumbnail and obtain a URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1362,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique handle to identify the Product by. If not provided, the kebab-case version of the product title will be used. This can be used as a slug in URLs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1363,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product. The product is shown to the customer only if its status is `published`."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product.ts",
							"qualifiedName": "ProductStatus"
						},
						"name": "ProductStatus",
						"package": "@medusajs/medusa"
					},
					"defaultValue": "ProductStatus.DRAFT"
				},
				{
					"id": 1364,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Product Type to associate the Product with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4571,
						"name": "ProductTypeReq",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1365,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Collection the Product belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1366,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product Tags to associate the Product with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4576,
							"name": "ProductTagReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1367,
					"name": "sales_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sales channels to associate the Product with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4581,
							"name": "ProductSalesChannelReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1368,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product categories to add the Product to."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4585,
							"name": "ProductProductCategoryReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1369,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Options that the Product should have. A new product option will be created for every item in the array."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4589,
							"name": "ProductOptionReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1370,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Variants to create with the Product. Each product variant must have a unique combination of Product Option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4593,
							"name": "ProductVariantReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1371,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1372,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1373,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1374,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1375,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1376,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1377,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1378,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1379,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1353
					]
				},
				{
					"title": "Properties",
					"children": [
						1355,
						1356,
						1357,
						1358,
						1359,
						1360,
						1361,
						1362,
						1363,
						1364,
						1365,
						1366,
						1367,
						1368,
						1369,
						1370,
						1371,
						1372,
						1373,
						1374,
						1375,
						1376,
						1377,
						1378,
						1379
					]
				}
			]
		},
		{
			"id": 4623,
			"name": "ProductVariantOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4624,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4625,
							"name": "new ProductVariantOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4623,
								"name": "ProductVariantOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4626,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A value to give to the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4627,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4624
					]
				},
				{
					"title": "Properties",
					"children": [
						4626,
						4627
					]
				}
			]
		},
		{
			"id": 1380,
			"name": "AdminPostProductsProductVariantsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product variant to create."
					}
				]
			},
			"children": [
				{
					"id": 1381,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1382,
							"name": "new AdminPostProductsProductVariantsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the product variant to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1380,
								"name": "AdminPostProductsProductVariantsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1383,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1384,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1385,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN number of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1386,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC number of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1387,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic GTIN field of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1388,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1389,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of stock kept of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1390,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be purchased when out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1391,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether Medusa should keep track of the inventory of this product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 1392,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The wieght of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1393,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1394,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1395,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1396,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1397,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1398,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1399,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1400,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variant prices. A product variant can have different prices for each region or currency code."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4615,
							"name": "ProductVariantPricesCreateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1401,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Option values that the variant corresponds to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4623,
							"name": "ProductVariantOptionReq",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1381
					]
				},
				{
					"title": "Properties",
					"children": [
						1383,
						1384,
						1385,
						1386,
						1387,
						1388,
						1389,
						1390,
						1391,
						1392,
						1393,
						1394,
						1395,
						1396,
						1397,
						1398,
						1399,
						1400,
						1401
					]
				}
			]
		},
		{
			"id": 1402,
			"name": "AdminGetProductParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1403,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1404,
							"name": "new AdminGetProductParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1402,
								"name": "AdminGetProductParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 1405,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 1406,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1403
					]
				},
				{
					"title": "Properties",
					"children": [
						1405,
						1406
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1275,
			"name": "defaultAdminProductRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1276,
			"name": "defaultAdminProductFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product.ts",
							"qualifiedName": "Product"
						},
						"name": "Product",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1277,
			"name": "defaultAdminGetProductsVariantsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1278,
			"name": "defaultAdminProductRemoteQueryObject",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This is temporary."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1279,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1280,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/product.ts",
											"qualifiedName": "Product"
										},
										"name": "Product",
										"package": "@medusajs/medusa"
									}
								}
							},
							"defaultValue": "defaultAdminProductFields"
						},
						{
							"id": 1281,
							"name": "images",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1282,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1283,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1283
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 1284,
							"name": "tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1285,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1286,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1286
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 1287,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1288,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1289,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1289
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 1290,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1291,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1292,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1292
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 1293,
							"name": "categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1294,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1295,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1295
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 1296,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1297,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1298,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 1299,
											"name": "values",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1300,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1301,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1301
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1298,
												1299
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 1302,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1303,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1304,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 1305,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 1306,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 1307,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																1307
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1304,
												1305
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 1308,
							"name": "profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1309,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1310,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1310
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 1311,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1312,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 1313,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												1313
											]
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1280,
								1281,
								1284,
								1287,
								1290,
								1293,
								1296,
								1302,
								1308,
								1311
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1314,
			"name": "AdminProductsDeleteOptionRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a product's option."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1315,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1316,
							"name": "option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Product Option"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1317,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "option"
							},
							"defaultValue": "option"
						},
						{
							"id": 1318,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the items were deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						},
						{
							"id": 1319,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product.ts",
									"qualifiedName": "Product"
								},
								"name": "Product",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1316,
								1317,
								1318,
								1319
							]
						}
					]
				}
			}
		},
		{
			"id": 1320,
			"name": "AdminProductsDeleteVariantRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a product's variant."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1321,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1322,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Product Variant."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1323,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product-variant"
							},
							"defaultValue": "product-variant"
						},
						{
							"id": 1324,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the items were deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						},
						{
							"id": 1325,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product.ts",
									"qualifiedName": "Product"
								},
								"name": "Product",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1322,
								1323,
								1324,
								1325
							]
						}
					]
				}
			}
		},
		{
			"id": 1326,
			"name": "AdminProductsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of deleting a product."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1327,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1328,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the deleted Product."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1329,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the object that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product"
							},
							"defaultValue": "product"
						},
						{
							"id": 1330,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether or not the items were deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1328,
								1329,
								1330
							]
						}
					]
				}
			}
		},
		{
			"id": 1331,
			"name": "AdminProductsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of products with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1332,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1333,
									"name": "products",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of products details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": 4568,
													"name": "PricedProduct",
													"package": "@medusajs/medusa"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/models/product.ts",
														"qualifiedName": "Product"
													},
													"name": "Product",
													"package": "@medusajs/medusa"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1333
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1334,
			"name": "AdminProductsListVariantsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1335,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1336,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product variants details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
												"qualifiedName": "ProductVariant"
											},
											"name": "ProductVariant",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1336
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1337,
			"name": "AdminProductsListTypesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1338,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1339,
							"name": "types",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of product types details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
										"qualifiedName": "ProductType"
									},
									"name": "ProductType",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1339
							]
						}
					]
				}
			}
		},
		{
			"id": 1340,
			"name": "AdminProductsListTagsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The usage details of product tags."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1341,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1342,
							"name": "tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of product tags details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intersection",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Pick"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
														"qualifiedName": "ProductTag"
													},
													"name": "ProductTag",
													"package": "@medusajs/medusa"
												},
												{
													"type": "union",
													"types": [
														{
															"type": "literal",
															"value": "id"
														},
														{
															"type": "literal",
															"value": "value"
														}
													]
												}
											],
											"name": "Pick",
											"package": "typescript"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 1343,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 1344,
														"name": "usage_count",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The number of products that use this tag."
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															1344
														]
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1342
							]
						}
					]
				}
			}
		},
		{
			"id": 1345,
			"name": "AdminProductsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1346,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1347,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product.ts",
									"qualifiedName": "Product"
								},
								"name": "Product",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1347
							]
						}
					]
				}
			}
		},
		{
			"id": 1407,
			"name": "AdminGetProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved products."
					}
				]
			},
			"children": [
				{
					"id": 1408,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1409,
							"name": "new AdminGetProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1407,
								"name": "AdminGetProductsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4630,
								"name": "FilterableProductProps.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4629,
						"name": "FilterableProductProps.constructor"
					}
				},
				{
					"id": 1410,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1411,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 1412,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1413,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1414,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1415,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4631,
						"name": "FilterableProductProps.id"
					}
				},
				{
					"id": 1416,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search products' title, description, variants' title and sku, and collections' title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4632,
						"name": "FilterableProductProps.q"
					}
				},
				{
					"id": 1417,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter products by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/product.ts",
								"qualifiedName": "ProductStatus"
							},
							"name": "ProductStatus",
							"package": "@medusajs/medusa"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4633,
						"name": "FilterableProductProps.status"
					}
				},
				{
					"id": 1418,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated price lists' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4634,
						"name": "FilterableProductProps.price_list_id"
					}
				},
				{
					"id": 1419,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product collection's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4635,
						"name": "FilterableProductProps.collection_id"
					}
				},
				{
					"id": 1420,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated tags' value."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4636,
						"name": "FilterableProductProps.tags"
					}
				},
				{
					"id": 1421,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4637,
						"name": "FilterableProductProps.title"
					}
				},
				{
					"id": 1422,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4638,
						"name": "FilterableProductProps.description"
					}
				},
				{
					"id": 1423,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4639,
						"name": "FilterableProductProps.handle"
					}
				},
				{
					"id": 1424,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by whether they're gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4640,
						"name": "FilterableProductProps.is_giftcard"
					}
				},
				{
					"id": 1425,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product type's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4641,
						"name": "FilterableProductProps.type_id"
					}
				},
				{
					"id": 1426,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated sales channels' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4642,
						"name": "FilterableProductProps.sales_channel_id"
					}
				},
				{
					"id": 1427,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4643,
						"name": "FilterableProductProps.discount_condition_id"
					}
				},
				{
					"id": 1428,
					"name": "category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product category's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4644,
						"name": "FilterableProductProps.category_id"
					}
				},
				{
					"id": 1429,
					"name": "include_category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include product category children in the response."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "text",
										"text": "product_categories"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4645,
						"name": "FilterableProductProps.include_category_children"
					}
				},
				{
					"id": 1430,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4646,
						"name": "FilterableProductProps.created_at"
					}
				},
				{
					"id": 1431,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4647,
						"name": "FilterableProductProps.updated_at"
					}
				},
				{
					"id": 1432,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4648,
						"name": "FilterableProductProps.deleted_at"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1408
					]
				},
				{
					"title": "Properties",
					"children": [
						1410,
						1411,
						1412,
						1413,
						1414,
						1415,
						1416,
						1417,
						1418,
						1419,
						1420,
						1421,
						1422,
						1423,
						1424,
						1425,
						1426,
						1427,
						1428,
						1429,
						1430,
						1431,
						1432
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4628,
					"name": "FilterableProductProps",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1433,
			"name": "AdminGetProductsVariantsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1434,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1435,
							"name": "new AdminGetProductsVariantsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1433,
								"name": "AdminGetProductsVariantsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1436,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1437,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1438,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1439,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1434
					]
				},
				{
					"title": "Properties",
					"children": [
						1436,
						1437,
						1438,
						1439
					]
				}
			]
		},
		{
			"id": 1440,
			"name": "AdminPostProductsProductMetadataReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1441,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1442,
							"name": "new AdminPostProductsProductMetadataReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1440,
								"name": "AdminPostProductsProductMetadataReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1443,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata key"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1444,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata value"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1441
					]
				},
				{
					"title": "Properties",
					"children": [
						1443,
						1444
					]
				}
			]
		},
		{
			"id": 1445,
			"name": "AdminPostProductsProductOptionsOption",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1446,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1447,
							"name": "new AdminPostProductsProductOptionsOption",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1445,
								"name": "AdminPostProductsProductOptionsOption",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1448,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product Option"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1446
					]
				},
				{
					"title": "Properties",
					"children": [
						1448
					]
				}
			]
		},
		{
			"id": 5022,
			"name": "ProductVariantOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 5023,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 5024,
							"name": "new ProductVariantOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 5022,
								"name": "ProductVariantOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 5025,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5026,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						5023
					]
				},
				{
					"title": "Properties",
					"children": [
						5025,
						5026
					]
				}
			]
		},
		{
			"id": 4649,
			"name": "ProductVariantReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4650,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4651,
							"name": "new ProductVariantReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4649,
								"name": "ProductVariantReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4652,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of an existing product variant. If provided, the details of the product variant will be updated. If not, a new product variant will be created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4653,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4654,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4655,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN number of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4656,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC number of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4657,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic GTIN field of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4658,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4659,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of stock kept of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4660,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be purchased when out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4661,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether Medusa should keep track of the inventory of this product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4662,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4663,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4664,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4665,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4666,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4667,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4668,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4669,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 4670,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variant prices. A product variant can have different prices for each region or currency code."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4672,
							"name": "ProductVariantPricesUpdateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 4671,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Option values that the variant corresponds to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5022,
							"name": "ProductVariantOptionReq",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4650
					]
				},
				{
					"title": "Properties",
					"children": [
						4652,
						4653,
						4654,
						4655,
						4656,
						4657,
						4658,
						4659,
						4660,
						4661,
						4662,
						4663,
						4664,
						4665,
						4666,
						4667,
						4668,
						4669,
						4670,
						4671
					]
				}
			]
		},
		{
			"id": 1449,
			"name": "AdminPostProductsProductReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the product."
					}
				]
			},
			"children": [
				{
					"id": 1450,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1451,
							"name": "new AdminPostProductsProductReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the product."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1449,
								"name": "AdminPostProductsProductReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1452,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1453,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subtitle of the Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1454,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1455,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A flag to indicate if discounts can be applied to the Line Items generated from this Product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1456,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of images of the Product. Each value in the array is a URL to the image. You can use the upload API Routes to upload the image and obtain a URL."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1457,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail to use for the Product. The value is a URL to the thumbnail. You can use the upload API Routes to upload the thumbnail and obtain a URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1458,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique handle to identify the Product by. If not provided, the kebab-case version of the product title will be used. This can be used as a slug in URLs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1459,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product. The product is shown to the customer only if its status is `published`."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product.ts",
							"qualifiedName": "ProductStatus"
						},
						"name": "ProductStatus",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1460,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Product Type to associate the Product with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4571,
						"name": "ProductTypeReq",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1461,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Collection the Product belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1462,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product Tags to associate the Product with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4576,
							"name": "ProductTagReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1463,
					"name": "sales_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sales channels to associate the Product with."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4581,
									"name": "ProductSalesChannelReq",
									"package": "@medusajs/medusa"
								}
							}
						]
					}
				},
				{
					"id": 1464,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product categories to add the Product to."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "product_categories",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4585,
							"name": "ProductProductCategoryReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1465,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Variants to create with the Product. Each product variant must have a unique combination of Product Option values."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4649,
							"name": "ProductVariantReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1466,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1467,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1468,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1469,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1470,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1471,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1472,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1473,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the Product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1474,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1450
					]
				},
				{
					"title": "Properties",
					"children": [
						1452,
						1453,
						1454,
						1455,
						1456,
						1457,
						1458,
						1459,
						1460,
						1461,
						1462,
						1463,
						1464,
						1465,
						1466,
						1467,
						1468,
						1469,
						1470,
						1471,
						1472,
						1473,
						1474
					]
				}
			]
		},
		{
			"id": 4681,
			"name": "ProductVariantOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4682,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4683,
							"name": "new ProductVariantOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4681,
								"name": "ProductVariantOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4684,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4685,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4682
					]
				},
				{
					"title": "Properties",
					"children": [
						4684,
						4685
					]
				}
			]
		},
		{
			"id": 1475,
			"name": "AdminPostProductsProductVariantsVariantReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1476,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1477,
							"name": "new AdminPostProductsProductVariantsVariantReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1475,
								"name": "AdminPostProductsProductVariantsVariantReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1478,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1479,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1480,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN number of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1481,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC number of the item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1482,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A generic GTIN field of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1483,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Harmonized System code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1484,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount of stock kept of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1485,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be purchased when out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1486,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether Medusa should keep track of the inventory of this product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1487,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1488,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1489,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1490,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1491,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The country of origin of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1492,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Manufacturer Identification code of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1493,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material composition of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1494,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1495,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variant prices. A product variant can have different prices for each region or currency code."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4672,
							"name": "ProductVariantPricesUpdateReq",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1496,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Product Option values that the variant corresponds to."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4681,
							"name": "ProductVariantOptionReq",
							"package": "@medusajs/medusa"
						}
					},
					"defaultValue": "[]"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1476
					]
				},
				{
					"title": "Properties",
					"children": [
						1478,
						1479,
						1480,
						1481,
						1482,
						1483,
						1484,
						1485,
						1486,
						1487,
						1488,
						1489,
						1490,
						1491,
						1492,
						1493,
						1494,
						1495,
						1496
					]
				}
			]
		},
		{
			"id": 1507,
			"name": "AdminPostPublishableApiKeySalesChannelsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the sales channels to add to the publishable API key."
					}
				]
			},
			"children": [
				{
					"id": 1508,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1509,
							"name": "new AdminPostPublishableApiKeySalesChannelsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the sales channels to add to the publishable API key."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1507,
								"name": "AdminPostPublishableApiKeySalesChannelsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1510,
					"name": "sales_channel_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the sales channels to add to the publishable API key"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4686,
							"name": "ProductBatchSalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1508
					]
				},
				{
					"title": "Properties",
					"children": [
						1510
					]
				}
			]
		},
		{
			"id": 1511,
			"name": "AdminPostPublishableApiKeysReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the publishable API key to create."
					}
				]
			},
			"children": [
				{
					"id": 1512,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1513,
							"name": "new AdminPostPublishableApiKeysReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the publishable API key to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1511,
								"name": "AdminPostPublishableApiKeysReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1514,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the publishable API key"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1512
					]
				},
				{
					"title": "Properties",
					"children": [
						1514
					]
				}
			]
		},
		{
			"id": 1515,
			"name": "AdminDeletePublishableApiKeySalesChannelsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the sales channels to remove from the publishable API key."
					}
				]
			},
			"children": [
				{
					"id": 1516,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1517,
							"name": "new AdminDeletePublishableApiKeySalesChannelsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the sales channels to remove from the publishable API key."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1515,
								"name": "AdminDeletePublishableApiKeySalesChannelsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1518,
					"name": "sales_channel_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the sales channels to remove from the publishable API key"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4686,
							"name": "ProductBatchSalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1516
					]
				},
				{
					"title": "Properties",
					"children": [
						1518
					]
				}
			]
		},
		{
			"id": 1497,
			"name": "AdminPublishableApiKeysRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The publishable API key's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1498,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1499,
							"name": "publishable_api_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Publishable API key details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key.ts",
									"qualifiedName": "PublishableApiKey"
								},
								"name": "PublishableApiKey",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1499
							]
						}
					]
				}
			}
		},
		{
			"id": 1500,
			"name": "AdminPublishableApiKeysListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of publishable API keys with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1501,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1502,
									"name": "publishable_api_keys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of publishable API keys details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/publishable-api-key.ts",
												"qualifiedName": "PublishableApiKey"
											},
											"name": "PublishableApiKey",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1502
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1503,
			"name": "AdminPublishableApiKeyDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 1504,
			"name": "AdminPublishableApiKeysListSalesChannelsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of sales channel."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1505,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1506,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of sales channels details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
										"qualifiedName": "SalesChannel"
									},
									"name": "SalesChannel",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1506
							]
						}
					]
				}
			}
		},
		{
			"id": 1519,
			"name": "GetPublishableApiKeySalesChannelsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter the sales channels."
					}
				]
			},
			"children": [
				{
					"id": 1520,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1521,
							"name": "new GetPublishableApiKeySalesChannelsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1519,
								"name": "GetPublishableApiKeySalesChannelsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1522,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search sales channels' names and descriptions."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1520
					]
				},
				{
					"title": "Properties",
					"children": [
						1522
					]
				}
			]
		},
		{
			"id": 1523,
			"name": "GetPublishableApiKeysParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved publishable API keys."
					}
				]
			},
			"children": [
				{
					"id": 1527,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search publishable API keys' titles."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1528,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 1529,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 1530,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 1531,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 1524,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1525,
							"name": "new GetPublishableApiKeysParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 1526,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1523,
								"name": "GetPublishableApiKeysParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1524
					]
				},
				{
					"title": "Properties",
					"children": [
						1527,
						1528,
						1529,
						1530,
						1531
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 3969,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 1532,
			"name": "AdminPostPublishableApiKeysPublishableApiKeyReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the publishable API key."
					}
				]
			},
			"children": [
				{
					"id": 1533,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1534,
							"name": "new AdminPostPublishableApiKeysPublishableApiKeyReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the publishable API key."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1532,
								"name": "AdminPostPublishableApiKeysPublishableApiKeyReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1535,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the Publishable API Key."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1533
					]
				},
				{
					"title": "Properties",
					"children": [
						1535
					]
				}
			]
		},
		{
			"id": 1554,
			"name": "AdminPostRegionsRegionCountriesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the country to add to the region."
					}
				]
			},
			"children": [
				{
					"id": 1555,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1556,
							"name": "new AdminPostRegionsRegionCountriesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the country to add to the region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1554,
								"name": "AdminPostRegionsRegionCountriesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1557,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code for the Country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1555
					]
				},
				{
					"title": "Properties",
					"children": [
						1557
					]
				}
			]
		},
		{
			"id": 1558,
			"name": "AdminPostRegionsRegionFulfillmentProvidersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the fulfillment provider to add to the region."
					}
				]
			},
			"children": [
				{
					"id": 1559,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1560,
							"name": "new AdminPostRegionsRegionFulfillmentProvidersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the fulfillment provider to add to the region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1558,
								"name": "AdminPostRegionsRegionFulfillmentProvidersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1561,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1559
					]
				},
				{
					"title": "Properties",
					"children": [
						1561
					]
				}
			]
		},
		{
			"id": 1562,
			"name": "AdminPostRegionsRegionPaymentProvidersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment provider to add to the region."
					}
				]
			},
			"children": [
				{
					"id": 1563,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1564,
							"name": "new AdminPostRegionsRegionPaymentProvidersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment provider to add to the region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1562,
								"name": "AdminPostRegionsRegionPaymentProvidersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1565,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1563
					]
				},
				{
					"title": "Properties",
					"children": [
						1565
					]
				}
			]
		},
		{
			"id": 1566,
			"name": "AdminPostRegionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the region to create."
					}
				]
			},
			"children": [
				{
					"id": 1567,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1568,
							"name": "new AdminPostRegionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the region to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1566,
								"name": "AdminPostRegionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1569,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Region"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1570,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code to use in the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1571,
					"name": "tax_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax code of the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1572,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax rate to use in the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1573,
					"name": "payment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of Payment Provider IDs that can be used in the Region"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1574,
					"name": "fulfillment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of Fulfillment Provider IDs that can be used in the Region"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1575,
					"name": "countries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of countries' 2 ISO characters that should be included in the Region."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1576,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether taxes are included in the prices of the region."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1577,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1567
					]
				},
				{
					"title": "Properties",
					"children": [
						1569,
						1570,
						1571,
						1572,
						1573,
						1574,
						1575,
						1576,
						1577
					]
				}
			]
		},
		{
			"id": 1536,
			"name": "defaultAdminRegionFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/region.ts",
							"qualifiedName": "Region"
						},
						"name": "Region",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1537,
			"name": "defaultAdminRegionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1538,
			"name": "AdminRegionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The region's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1539,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1540,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Region details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/region.ts",
									"qualifiedName": "Region"
								},
								"name": "Region",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1540
							]
						}
					]
				}
			}
		},
		{
			"id": 1541,
			"name": "AdminRegionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of regions with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1542,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1543,
									"name": "regions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of regions details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/region.ts",
												"qualifiedName": "Region"
											},
											"name": "Region",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1543
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1544,
			"name": "AdminRegionsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 1545,
			"name": "FulfillmentOption",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1546,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1547,
							"name": "new FulfillmentOption",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1545,
								"name": "FulfillmentOption",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1548,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the fulfillment provider"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1549,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "fulfillment provider options"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1546
					]
				},
				{
					"title": "Properties",
					"children": [
						1548,
						1549
					]
				}
			]
		},
		{
			"id": 1550,
			"name": "AdminGetRegionsRegionFulfillmentOptionsRes",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of fulfillment options in a region."
					}
				]
			},
			"children": [
				{
					"id": 1551,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1552,
							"name": "new AdminGetRegionsRegionFulfillmentOptionsRes",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of fulfillment options in a region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1550,
								"name": "AdminGetRegionsRegionFulfillmentOptionsRes",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1553,
					"name": "fulfillment_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fulfillment providers details."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1545,
							"name": "FulfillmentOption",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1551
					]
				},
				{
					"title": "Properties",
					"children": [
						1553
					]
				}
			]
		},
		{
			"id": 1578,
			"name": "AdminGetRegionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved regions."
					}
				]
			},
			"children": [
				{
					"id": 1582,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the regions' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1583,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the regions' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1584,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the regions' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1585,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 1586,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 1587,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 1588,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 1579,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1580,
							"name": "new AdminGetRegionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 1581,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1578,
								"name": "AdminGetRegionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 50,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1579
					]
				},
				{
					"title": "Properties",
					"children": [
						1582,
						1583,
						1584,
						1585,
						1586,
						1587,
						1588
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 3969,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 1589,
			"name": "AdminPostRegionsRegionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the regions."
					}
				]
			},
			"children": [
				{
					"id": 1590,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1591,
							"name": "new AdminPostRegionsRegionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the regions."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1589,
								"name": "AdminPostRegionsRegionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1592,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Region"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1593,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code to use in the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1594,
					"name": "tax_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax code of the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1595,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax rate to use in the Region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1596,
					"name": "gift_cards_taxable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, taxes will be applied on gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1597,
					"name": "automatic_taxes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the Medusa backend will automatically calculate taxes for carts in this region. If set to `false`, the taxes must be calculated manually."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1598,
					"name": "tax_provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the tax provider to use. If none provided, the system tax provider is used."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1599,
					"name": "payment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of Payment Provider IDs that can be used in the Region"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1600,
					"name": "fulfillment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of Fulfillment Provider IDs that can be used in the Region"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1601,
					"name": "countries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A list of countries' 2 ISO characters that should be included in the Region."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1602,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether taxes are included in the prices of the region."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1603,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1590
					]
				},
				{
					"title": "Properties",
					"children": [
						1592,
						1593,
						1594,
						1595,
						1596,
						1597,
						1598,
						1599,
						1600,
						1601,
						1602,
						1603
					]
				}
			]
		},
		{
			"id": 1665,
			"name": "AdminPostReservationsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the reservation to create."
					}
				]
			},
			"children": [
				{
					"id": 1666,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1667,
							"name": "new AdminPostReservationsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the reservation to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1665,
								"name": "AdminPostReservationsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1668,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the line item of the reservation."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1669,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location of the reservation."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1670,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the inventory item the reservation is associated with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1671,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to reserve."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1672,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reservation's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1673,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1666
					]
				},
				{
					"title": "Properties",
					"children": [
						1668,
						1669,
						1670,
						1671,
						1672,
						1673
					]
				}
			]
		},
		{
			"id": 1652,
			"name": "AdminReservationsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The reservation's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1653,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1654,
							"name": "reservation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Reservation details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4695,
								"name": "ReservationItemDTO",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1654
							]
						}
					]
				}
			}
		},
		{
			"id": 1655,
			"name": "ExtendedReservationItem",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 4695,
						"name": "ReservationItemDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1656,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1657,
									"name": "line_item",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item associated with the reservation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
											"qualifiedName": "LineItem"
										},
										"name": "LineItem",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 1658,
									"name": "inventory_item",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item associated with the reservation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4392,
										"name": "InventoryItemDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1657,
										1658
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1659,
			"name": "AdminReservationsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of reservations with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1660,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1661,
									"name": "reservations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of reservations details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4695,
											"name": "ReservationItemDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1661
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1662,
			"name": "defaultAdminReservationRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 1663,
			"name": "defaultReservationFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1664,
			"name": "AdminReservationsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 1674,
			"name": "AdminGetReservationsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved reservations."
					}
				]
			},
			"children": [
				{
					"id": 1678,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Location IDs to filter reservations by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1679,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Inventory item IDs to filter reservations by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1680,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Line item IDs to filter reservations by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1681,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "\"Create by\" user IDs to filter reservations by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1682,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Numerical filters to apply on the reservations' "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3934,
						"name": "NumericalComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1683,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the reservations' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1684,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "String filters tp apply on the reservations' "
							},
							{
								"kind": "code",
								"text": "`description`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 3924,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 1685,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 1686,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 1687,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 1688,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 1675,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1676,
							"name": "new AdminGetReservationsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 1677,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1674,
								"name": "AdminGetReservationsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1675
					]
				},
				{
					"title": "Properties",
					"children": [
						1678,
						1679,
						1680,
						1681,
						1682,
						1683,
						1684,
						1685,
						1686,
						1687,
						1688
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 3969,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 1689,
			"name": "AdminPostReservationsReservationReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the reservation."
					}
				]
			},
			"children": [
				{
					"id": 1690,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1691,
							"name": "new AdminPostReservationsReservationReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the reservation."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1689,
								"name": "AdminPostReservationsReservationReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1692,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to reserve."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1693,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location associated with the reservation."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1694,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reservation's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1695,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1690
					]
				},
				{
					"title": "Properties",
					"children": [
						1692,
						1693,
						1694,
						1695
					]
				}
			]
		},
		{
			"id": 1613,
			"name": "AdminPostReturnReasonsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the return reason to create."
					}
				]
			},
			"children": [
				{
					"id": 1614,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1615,
							"name": "new AdminPostReturnReasonsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the return reason to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1613,
								"name": "AdminPostReturnReasonsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1616,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique value of the return reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1617,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label to display to the Customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1618,
					"name": "parent_return_reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent return reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1619,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1620,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1614
					]
				},
				{
					"title": "Properties",
					"children": [
						1616,
						1617,
						1618,
						1619,
						1620
					]
				}
			]
		},
		{
			"id": 1604,
			"name": "defaultAdminReturnReasonsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
							"qualifiedName": "ReturnReason"
						},
						"name": "ReturnReason",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1605,
			"name": "defaultAdminReturnReasonsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
							"qualifiedName": "ReturnReason"
						},
						"name": "ReturnReason",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1606,
			"name": "AdminReturnReasonsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return reason's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1607,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1608,
							"name": "return_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The return reason's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
									"qualifiedName": "ReturnReason"
								},
								"name": "ReturnReason",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1608
							]
						}
					]
				}
			}
		},
		{
			"id": 1609,
			"name": "AdminReturnReasonsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of return reasons."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1610,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1611,
							"name": "return_reasons",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of return reasons."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
										"qualifiedName": "ReturnReason"
									},
									"name": "ReturnReason",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1611
							]
						}
					]
				}
			}
		},
		{
			"id": 1612,
			"name": "AdminReturnReasonsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 1621,
			"name": "AdminPostReturnReasonsReasonReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the return reason."
					}
				]
			},
			"children": [
				{
					"id": 1622,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1623,
							"name": "new AdminPostReturnReasonsReasonReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the return reason."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1621,
								"name": "AdminPostReturnReasonsReasonReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1624,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The label to display to the Customer."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1625,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique value of the return reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1626,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Reason."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1627,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1622
					]
				},
				{
					"title": "Properties",
					"children": [
						1624,
						1625,
						1626,
						1627
					]
				}
			]
		},
		{
			"id": 1628,
			"name": "defaultRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1629,
			"name": "defaultRelationsList",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1630,
			"name": "defaultReturnCancelRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1631,
			"name": "defaultReturnCancelFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/order.ts",
							"qualifiedName": "Order"
						},
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1632,
			"name": "AdminReturnsCancelRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The associated order's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1633,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1634,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1634
							]
						}
					]
				}
			}
		},
		{
			"id": 1635,
			"name": "AdminReturnsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of returns with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1636,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1637,
									"name": "returns",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of returns details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/return.ts",
												"qualifiedName": "Return"
											},
											"name": "Return",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1637
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1638,
			"name": "AdminReturnsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1639,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1640,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/return.ts",
									"qualifiedName": "Return"
								},
								"name": "Return",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1640
							]
						}
					]
				}
			}
		},
		{
			"id": 1641,
			"name": "AdminGetReturnsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 1642,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1643,
							"name": "new AdminGetReturnsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1641,
								"name": "AdminGetReturnsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1644,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 1645,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1642
					]
				},
				{
					"title": "Properties",
					"children": [
						1644,
						1645
					]
				}
			]
		},
		{
			"id": 4690,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4691,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4692,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4690,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4693,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4694,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4691
					]
				},
				{
					"title": "Properties",
					"children": [
						4693,
						4694
					]
				}
			]
		},
		{
			"id": 1646,
			"name": "AdminPostReturnsReturnReceiveReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the received return."
					}
				]
			},
			"children": [
				{
					"id": 1647,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1648,
							"name": "new AdminPostReturnsReturnReceiveReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the received return."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1646,
								"name": "AdminPostReturnsReturnReceiveReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1649,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Line Items that have been received."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4690,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1650,
					"name": "refund",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to refund."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1651,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the location to return items from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1647
					]
				},
				{
					"title": "Properties",
					"children": [
						1649,
						1650,
						1651
					]
				}
			]
		},
		{
			"id": 1704,
			"name": "AdminPostSalesChannelsChannelProductsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to add to the sales channel."
					}
				]
			},
			"children": [
				{
					"id": 1705,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1706,
							"name": "new AdminPostSalesChannelsChannelProductsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to add to the sales channel."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1704,
								"name": "AdminPostSalesChannelsChannelProductsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1707,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to add to the sales channel"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4686,
							"name": "ProductBatchSalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1705
					]
				},
				{
					"title": "Properties",
					"children": [
						1707
					]
				}
			]
		},
		{
			"id": 1740,
			"name": "AdminPostSalesChannelsChannelStockLocationsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1741,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1742,
							"name": "new AdminPostSalesChannelsChannelStockLocationsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1740,
								"name": "AdminPostSalesChannelsChannelStockLocationsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1743,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1741
					]
				},
				{
					"title": "Properties",
					"children": [
						1743
					]
				}
			]
		},
		{
			"id": 1708,
			"name": "AdminPostSalesChannelsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the sales channel to create."
					}
				]
			},
			"children": [
				{
					"id": 1709,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1710,
							"name": "new AdminPostSalesChannelsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the sales channel to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1708,
								"name": "AdminPostSalesChannelsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1711,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Sales Channel"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1712,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the Sales Channel"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1713,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Sales Channel is disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1709
					]
				},
				{
					"title": "Properties",
					"children": [
						1711,
						1712,
						1713
					]
				}
			]
		},
		{
			"id": 1714,
			"name": "AdminDeleteSalesChannelsChannelProductsBatchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to delete from the sales channel."
					}
				]
			},
			"children": [
				{
					"id": 1715,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1716,
							"name": "new AdminDeleteSalesChannelsChannelProductsBatchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to delete from the sales channel."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1714,
								"name": "AdminDeleteSalesChannelsChannelProductsBatchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1717,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to remove from the sales channel."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4686,
							"name": "ProductBatchSalesChannel",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1715
					]
				},
				{
					"title": "Properties",
					"children": [
						1717
					]
				}
			]
		},
		{
			"id": 1696,
			"name": "AdminSalesChannelsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The sales channel's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1697,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1698,
							"name": "sales_channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sales Channel's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
									"qualifiedName": "SalesChannel"
								},
								"name": "SalesChannel",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1698
							]
						}
					]
				}
			}
		},
		{
			"id": 1699,
			"name": "AdminSalesChannelsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 1700,
			"name": "AdminSalesChannelsDeleteLocationRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 1701,
			"name": "AdminSalesChannelsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of sales channels with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1702,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1703,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of sales channels details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/sales-channel.ts",
												"qualifiedName": "SalesChannel"
											},
											"name": "SalesChannel",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1703
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1718,
			"name": "AdminGetSalesChannelsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved sales channels."
					}
				]
			},
			"children": [
				{
					"id": 1722,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter sales channels by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1723,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search sales channels' names and descriptions."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1724,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter sales channels by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1725,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter sales channels by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1726,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on sales channels' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1727,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on sales channels' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1728,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on sales channels' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1729,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1730,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().expand"
					}
				},
				{
					"id": 1731,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().fields"
					}
				},
				{
					"id": 1732,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().offset"
					}
				},
				{
					"id": 1733,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().limit"
					}
				},
				{
					"id": 1719,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1720,
							"name": "new AdminGetSalesChannelsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 1721,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1718,
								"name": "AdminGetSalesChannelsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin().constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin().constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1719
					]
				},
				{
					"title": "Properties",
					"children": [
						1722,
						1723,
						1724,
						1725,
						1726,
						1727,
						1728,
						1729,
						1730,
						1731,
						1732,
						1733
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 3969,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 1744,
			"name": "AdminDeleteSalesChannelsChannelStockLocationsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 1745,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1746,
							"name": "new AdminDeleteSalesChannelsChannelStockLocationsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1744,
								"name": "AdminDeleteSalesChannelsChannelStockLocationsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1747,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1745
					]
				},
				{
					"title": "Properties",
					"children": [
						1747
					]
				}
			]
		},
		{
			"id": 1734,
			"name": "AdminPostSalesChannelsSalesChannelReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the sales channel."
					}
				]
			},
			"children": [
				{
					"id": 1735,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1736,
							"name": "new AdminPostSalesChannelsSalesChannelReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the sales channel."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1734,
								"name": "AdminPostSalesChannelsSalesChannelReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1737,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sales channel"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1738,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1739,
					"name": "is_disabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Sales Channel is disabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1735
					]
				},
				{
					"title": "Properties",
					"children": [
						1737,
						1738,
						1739
					]
				}
			]
		},
		{
			"id": 4708,
			"name": "OptionRequirement",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4709,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4710,
							"name": "new OptionRequirement",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4708,
								"name": "OptionRequirement",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4711,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the requirement"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-option-requirement.ts",
							"qualifiedName": "RequirementType"
						},
						"name": "RequirementType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 4712,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to compare with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4709
					]
				},
				{
					"title": "Properties",
					"children": [
						4711,
						4712
					]
				}
			]
		},
		{
			"id": 1756,
			"name": "AdminPostShippingOptionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping option to create."
					}
				]
			},
			"children": [
				{
					"id": 1757,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1758,
							"name": "new AdminPostShippingOptionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping option to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1756,
								"name": "AdminPostShippingOptionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1759,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Shipping Option"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1760,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region in which the Shipping Option will be available."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1761,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Fulfillment Provider that handles the Shipping Option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1762,
					"name": "profile_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Profile to add the Shipping Option to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1763,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data needed for the Fulfillment Provider to handle shipping with this Shipping Option."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1764,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Shipping Option price. `flat_rate` indicates fixed pricing, whereas `calculated` indicates that the price will be calculated each time by the fulfillment provider."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
							"qualifiedName": "ShippingOptionPriceType"
						},
						"name": "ShippingOptionPriceType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1765,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for the Shipping Option. If the `price_type` is set to `calculated`, this amount will not actually be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1766,
					"name": "requirements",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The requirements that must be satisfied for the Shipping Option to be available."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4708,
							"name": "OptionRequirement",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1767,
					"name": "admin_only",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the shipping option can only be used when creating draft orders."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1768,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the Shipping Option can be used for returns or during checkout."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 1769,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1770,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of shipping option"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1757
					]
				},
				{
					"title": "Properties",
					"children": [
						1759,
						1760,
						1761,
						1762,
						1763,
						1764,
						1765,
						1766,
						1767,
						1768,
						1769,
						1770
					]
				}
			]
		},
		{
			"id": 1748,
			"name": "defaultFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
							"qualifiedName": "ShippingOption"
						},
						"name": "ShippingOption",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1749,
			"name": "AdminShippingOptionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of shipping options with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1750,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1751,
									"name": "shipping_options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of shipping options details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
												"qualifiedName": "ShippingOption"
											},
											"name": "ShippingOption",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1751
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1752,
			"name": "AdminShippingOptionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping option's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1753,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1754,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Shipping option details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
									"qualifiedName": "ShippingOption"
								},
								"name": "ShippingOption",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1754
							]
						}
					]
				}
			}
		},
		{
			"id": 1755,
			"name": "AdminShippingOptionsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 1771,
			"name": "AdminGetShippingOptionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter the retrieved shipping options."
					}
				]
			},
			"children": [
				{
					"id": 1772,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1773,
							"name": "new AdminGetShippingOptionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1771,
								"name": "AdminGetShippingOptionsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1774,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter shipping options by the ID of the region they belong to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1775,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter shipping options by whether they're return shipping options."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1776,
					"name": "admin_only",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter shipping options by whether they're available for admin users only."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1772
					]
				},
				{
					"title": "Properties",
					"children": [
						1774,
						1775,
						1776
					]
				}
			]
		},
		{
			"id": 4713,
			"name": "OptionRequirement",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4714,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4715,
							"name": "new OptionRequirement",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4713,
								"name": "OptionRequirement",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4716,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing requirement. If an ID is passed, the existing requirement's details are updated. Otherwise, a new requirement is created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4717,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the requirement"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4718,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to compare with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4714
					]
				},
				{
					"title": "Properties",
					"children": [
						4716,
						4717,
						4718
					]
				}
			]
		},
		{
			"id": 1777,
			"name": "AdminPostShippingOptionsOptionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the shipping option."
					}
				]
			},
			"children": [
				{
					"id": 1778,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1779,
							"name": "new AdminPostShippingOptionsOptionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the shipping option."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1777,
								"name": "AdminPostShippingOptionsOptionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1780,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Shipping Option"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1781,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for the Shipping Option. If the `price_type` of the shipping option is `calculated`, this amount will not actually be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1782,
					"name": "price_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
							"qualifiedName": "ShippingOptionPriceType"
						},
						"name": "ShippingOptionPriceType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1783,
					"name": "requirements",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The requirements that must be satisfied for the Shipping Option to be available."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4713,
							"name": "OptionRequirement",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 1784,
					"name": "admin_only",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If set to `true`, the shipping option can only be used when creating draft orders."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1785,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1786,
					"name": "includes_tax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax included in prices of shipping option"
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							},
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "inline-tag",
										"text": "tax_inclusive_pricing",
										"tag": "@featureFlag"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1778
					]
				},
				{
					"title": "Properties",
					"children": [
						1780,
						1781,
						1782,
						1783,
						1784,
						1785,
						1786
					]
				}
			]
		},
		{
			"id": 1796,
			"name": "AdminPostShippingProfilesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping profile to create."
					}
				]
			},
			"children": [
				{
					"id": 1797,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1798,
							"name": "new AdminPostShippingProfilesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping profile to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1796,
								"name": "AdminPostShippingProfilesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1799,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1800,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
							"qualifiedName": "ShippingProfileType"
						},
						"name": "ShippingProfileType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1801,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1797
					]
				},
				{
					"title": "Properties",
					"children": [
						1799,
						1800,
						1801
					]
				}
			]
		},
		{
			"id": 1787,
			"name": "defaultAdminShippingProfilesFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
							"qualifiedName": "ShippingProfile"
						},
						"name": "ShippingProfile",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1788,
			"name": "defaultAdminShippingProfilesRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1789,
			"name": "AdminDeleteShippingProfileRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 1790,
			"name": "AdminShippingProfilesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The shipping profile's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1791,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1792,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Shipping profile details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
									"qualifiedName": "ShippingProfile"
								},
								"name": "ShippingProfile",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1792
							]
						}
					]
				}
			}
		},
		{
			"id": 1793,
			"name": "AdminShippingProfilesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of shipping profiles."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1794,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1795,
							"name": "shipping_profiles",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of shipping profiles details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
										"qualifiedName": "ShippingProfile"
									},
									"name": "ShippingProfile",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1795
							]
						}
					]
				}
			}
		},
		{
			"id": 1802,
			"name": "AdminPostShippingProfilesProfileReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The detail to update of the shipping profile."
					}
				]
			},
			"children": [
				{
					"id": 1803,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1804,
							"name": "new AdminPostShippingProfilesProfileReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The detail to update of the shipping profile."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1802,
								"name": "AdminPostShippingProfilesProfileReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1805,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1806,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 1807,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/shipping-profile.ts",
							"qualifiedName": "ShippingProfileType"
						},
						"name": "ShippingProfileType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1808,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "product IDs to associate with the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1809,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Shipping option IDs to associate with the Shipping Profile"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1803
					]
				},
				{
					"title": "Properties",
					"children": [
						1805,
						1806,
						1807,
						1808,
						1809
					]
				}
			]
		},
		{
			"id": 4737,
			"name": "StockLocationAddress",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4738,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4739,
							"name": "new StockLocationAddress",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4737,
								"name": "StockLocationAddress",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4740,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4741,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' complement"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4742,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' company"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4743,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' city"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4744,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The two character ISO code for the country."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4745,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' phone number"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4746,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' postal code"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4747,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stock location address' province"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4738
					]
				},
				{
					"title": "Properties",
					"children": [
						4740,
						4741,
						4742,
						4743,
						4744,
						4745,
						4746,
						4747
					]
				}
			]
		},
		{
			"id": 1819,
			"name": "AdminPostStockLocationsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the stock location to create."
					}
				]
			},
			"children": [
				{
					"id": 1820,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1821,
							"name": "new AdminPostStockLocationsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the stock location to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1819,
								"name": "AdminPostStockLocationsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1822,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the name of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1823,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A new stock location address to create and associate with the stock location. Only required if `address_id` is not provided."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4737,
						"name": "StockLocationAddress",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1824,
					"name": "address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the ID of an existing stock location address to associate with the stock location. Only required if `address` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1825,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1820
					]
				},
				{
					"title": "Properties",
					"children": [
						1822,
						1823,
						1824,
						1825
					]
				}
			]
		},
		{
			"id": 1826,
			"name": "AdminPostStockLocationsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1827,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1828,
							"name": "new AdminPostStockLocationsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1826,
								"name": "AdminPostStockLocationsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 1829,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 1830,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1827
					]
				},
				{
					"title": "Properties",
					"children": [
						1829,
						1830
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1831,
			"name": "AdminGetStockLocationsLocationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1832,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1833,
							"name": "new AdminGetStockLocationsLocationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1831,
								"name": "AdminGetStockLocationsLocationParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 1834,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 1835,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1832
					]
				},
				{
					"title": "Properties",
					"children": [
						1834,
						1835
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1810,
			"name": "defaultAdminStockLocationFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 4719,
						"name": "StockLocationTypes.StockLocationDTO",
						"package": "@medusajs/types",
						"qualifiedName": "StockLocationDTO"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1811,
			"name": "defaultAdminStockLocationRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 1812,
			"name": "AdminStockLocationsDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 4729,
				"name": "DeleteResponse",
				"package": "@medusajs/types"
			}
		},
		{
			"id": 1813,
			"name": "AdminStockLocationsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The stock location's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1814,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1815,
							"name": "stock_location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stock location details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4734,
								"name": "StockLocationTypes.StockLocationExpandedDTO",
								"package": "@medusajs/types",
								"qualifiedName": "StockLocationExpandedDTO"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1815
							]
						}
					]
				}
			}
		},
		{
			"id": 1816,
			"name": "AdminStockLocationsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of stock locations with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 4424,
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1817,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1818,
									"name": "stock_locations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of stock locations."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4734,
											"name": "StockLocationTypes.StockLocationExpandedDTO",
											"package": "@medusajs/types",
											"qualifiedName": "StockLocationExpandedDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1818
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1836,
			"name": "AdminGetStockLocationsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved stock locations."
					}
				]
			},
			"children": [
				{
					"id": 1840,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter stock locations by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1841,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Names to filter stock locations by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1842,
					"name": "address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter stock locations by the ID of their associated addresses."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1843,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter stock locations by the ID of their associated sales channels."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1844,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 1845,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 1846,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 1847,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 1837,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1838,
							"name": "new AdminGetStockLocationsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 1839,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1836,
								"name": "AdminGetStockLocationsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 20,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1837
					]
				},
				{
					"title": "Properties",
					"children": [
						1840,
						1841,
						1842,
						1843,
						1844,
						1845,
						1846,
						1847
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 3969,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 4748,
			"name": "StockLocationAddress",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes of a stock location address to create or update."
					}
				]
			},
			"children": [
				{
					"id": 4749,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4750,
							"name": "new StockLocationAddress",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4748,
								"name": "StockLocationAddress",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4751,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "First line address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4752,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Second line address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4753,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Company."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4754,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "City."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4755,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Country code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4756,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Phone."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4757,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4758,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Province."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4749
					]
				},
				{
					"title": "Properties",
					"children": [
						4751,
						4752,
						4753,
						4754,
						4755,
						4756,
						4757,
						4758
					]
				}
			]
		},
		{
			"id": 1848,
			"name": "AdminPostStockLocationsLocationReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the stock location."
					}
				]
			},
			"children": [
				{
					"id": 1849,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1850,
							"name": "new AdminPostStockLocationsLocationReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the stock location."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1848,
								"name": "AdminPostStockLocationsLocationReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1851,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the name of the stock location"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1852,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data of an associated address to create or update."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4748,
						"name": "StockLocationAddress",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 1853,
					"name": "address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the stock location address ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1854,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1849
					]
				},
				{
					"title": "Properties",
					"children": [
						1851,
						1852,
						1853,
						1854
					]
				}
			]
		},
		{
			"id": 1855,
			"name": "AdminPostStockLocationsLocationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1856,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1857,
							"name": "new AdminPostStockLocationsLocationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1855,
								"name": "AdminPostStockLocationsLocationParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 1858,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 1859,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1856
					]
				},
				{
					"title": "Properties",
					"children": [
						1858,
						1859
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 1860,
			"name": "defaultRelationsExtended",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1861,
			"name": "AdminExtendedStoresRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The store's details with additional details like payment and tax providers."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1862,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1863,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Store details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4759,
								"name": "ExtendedStoreDTO",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1863
							]
						}
					]
				}
			}
		},
		{
			"id": 1864,
			"name": "AdminStoresRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The store's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1865,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1866,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Store details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/store.ts",
									"qualifiedName": "Store"
								},
								"name": "Store",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1866
							]
						}
					]
				}
			}
		},
		{
			"id": 1867,
			"name": "AdminTaxProvidersList",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of tax providers in a store."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1868,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1869,
							"name": "tax_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of tax providers details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/tax-provider.ts",
										"qualifiedName": "TaxProvider"
									},
									"name": "TaxProvider",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1869
							]
						}
					]
				}
			}
		},
		{
			"id": 1870,
			"name": "AdminPaymentProvidersList",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of payment providers in a store."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1871,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1872,
							"name": "payment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of payment providers details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/payment-provider.ts",
										"qualifiedName": "PaymentProvider"
									},
									"name": "PaymentProvider",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1872
							]
						}
					]
				}
			}
		},
		{
			"id": 1873,
			"name": "AdminPostStoreReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the store."
					}
				]
			},
			"children": [
				{
					"id": 1874,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1875,
							"name": "new AdminPostStoreReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the store."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1873,
								"name": "AdminPostStoreReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1876,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the Store"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1877,
					"name": "swap_link_template",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A template for Swap links - use `{{cart_id}}` to insert the Swap Cart ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1878,
					"name": "payment_link_template",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A template for payment links - use `{{cart_id}}` to insert the Cart ID"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1879,
					"name": "invite_link_template",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A template for invite links - use `{{invite_token}}` to insert the invite token"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1880,
					"name": "default_currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default currency code of the Store."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1881,
					"name": "currencies",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Array of available currencies in the store. Each currency is in 3 character ISO code format."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1882,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1874
					]
				},
				{
					"title": "Properties",
					"children": [
						1876,
						1877,
						1878,
						1879,
						1880,
						1881,
						1882
					]
				}
			]
		},
		{
			"id": 1883,
			"name": "defaultAdminSwapRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1884,
			"name": "defaultAdminSwapFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1885,
			"name": "AdminSwapsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of swaps with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1886,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1887,
									"name": "swaps",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of swaps details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
												"qualifiedName": "Swap"
											},
											"name": "Swap",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1887
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1888,
			"name": "AdminSwapsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The swap's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1889,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1890,
							"name": "swap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Swap details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
									"qualifiedName": "Swap"
								},
								"name": "Swap",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1890
							]
						}
					]
				}
			}
		},
		{
			"id": 1891,
			"name": "AdminGetSwapsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 1892,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1893,
							"name": "new AdminGetSwapsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1891,
								"name": "AdminGetSwapsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1894,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 1895,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1892
					]
				},
				{
					"title": "Properties",
					"children": [
						1894,
						1895
					]
				}
			]
		},
		{
			"id": 1948,
			"name": "AdminPostTaxRatesTaxRateProductTypesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product types to add to the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 1949,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1950,
							"name": "new AdminPostTaxRatesTaxRateProductTypesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product types to add to the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1948,
								"name": "AdminPostTaxRatesTaxRateProductTypesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1951,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the types of products to associate with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1949
					]
				},
				{
					"title": "Properties",
					"children": [
						1951
					]
				}
			]
		},
		{
			"id": 1952,
			"name": "AdminPostTaxRatesTaxRateProductTypesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1953,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1954,
							"name": "new AdminPostTaxRatesTaxRateProductTypesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1952,
								"name": "AdminPostTaxRatesTaxRateProductTypesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1955,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1956,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1953
					]
				},
				{
					"title": "Properties",
					"children": [
						1955,
						1956
					]
				}
			]
		},
		{
			"id": 1957,
			"name": "AdminPostTaxRatesTaxRateProductsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to associat with the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 1958,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1959,
							"name": "new AdminPostTaxRatesTaxRateProductsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to associat with the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1957,
								"name": "AdminPostTaxRatesTaxRateProductsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1960,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to associate with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1958
					]
				},
				{
					"title": "Properties",
					"children": [
						1960
					]
				}
			]
		},
		{
			"id": 1961,
			"name": "AdminPostTaxRatesTaxRateProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1962,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1963,
							"name": "new AdminPostTaxRatesTaxRateProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1961,
								"name": "AdminPostTaxRatesTaxRateProductsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1964,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1965,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1962
					]
				},
				{
					"title": "Properties",
					"children": [
						1964,
						1965
					]
				}
			]
		},
		{
			"id": 1966,
			"name": "AdminPostTaxRatesTaxRateShippingOptionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping options to associate with the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 1967,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1968,
							"name": "new AdminPostTaxRatesTaxRateShippingOptionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping options to associate with the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1966,
								"name": "AdminPostTaxRatesTaxRateShippingOptionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1969,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the shipping options to associate with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1967
					]
				},
				{
					"title": "Properties",
					"children": [
						1969
					]
				}
			]
		},
		{
			"id": 1970,
			"name": "AdminPostTaxRatesTaxRateShippingOptionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1971,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1972,
							"name": "new AdminPostTaxRatesTaxRateShippingOptionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1970,
								"name": "AdminPostTaxRatesTaxRateShippingOptionsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1973,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1974,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1971
					]
				},
				{
					"title": "Properties",
					"children": [
						1973,
						1974
					]
				}
			]
		},
		{
			"id": 1975,
			"name": "AdminPostTaxRatesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the tax rate to create."
					}
				]
			},
			"children": [
				{
					"id": 1976,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1977,
							"name": "new AdminPostTaxRatesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the tax rate to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1975,
								"name": "AdminPostTaxRatesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1978,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1979,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1980,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region that the tax rate belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1981,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The numeric rate to charge."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 1982,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products associated with this tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1983,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the shipping options associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1984,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the types of products associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1976
					]
				},
				{
					"title": "Properties",
					"children": [
						1978,
						1979,
						1980,
						1981,
						1982,
						1983,
						1984
					]
				}
			]
		},
		{
			"id": 1985,
			"name": "AdminPostTaxRatesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1986,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1987,
							"name": "new AdminPostTaxRatesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1985,
								"name": "AdminPostTaxRatesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1988,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1989,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1986
					]
				},
				{
					"title": "Properties",
					"children": [
						1988,
						1989
					]
				}
			]
		},
		{
			"id": 1916,
			"name": "AdminGetTaxRatesTaxRateParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1917,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1918,
							"name": "new AdminGetTaxRatesTaxRateParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1916,
								"name": "AdminGetTaxRatesTaxRateParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1919,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1920,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1917
					]
				},
				{
					"title": "Properties",
					"children": [
						1919,
						1920
					]
				}
			]
		},
		{
			"id": 1896,
			"name": "defaultAdminTaxRatesRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 1897,
			"name": "defaultAdminTaxRatesFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
							"qualifiedName": "TaxRate"
						},
						"name": "TaxRate",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 1898,
			"name": "AdminTaxRatesDeleteRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 1899,
			"name": "AdminTaxRatesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of tax rates with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1900,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1901,
									"name": "tax_rates",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of tax rate details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
												"qualifiedName": "TaxRate"
											},
											"name": "TaxRate",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										1901
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1902,
			"name": "AdminTaxRatesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1903,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1904,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Tax rate details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/tax-rate.ts",
									"qualifiedName": "TaxRate"
								},
								"name": "TaxRate",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								1904
							]
						}
					]
				}
			}
		},
		{
			"id": 1905,
			"name": "AdminGetTaxRatesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved tax rates."
					}
				]
			},
			"children": [
				{
					"id": 1906,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1907,
							"name": "new AdminGetTaxRatesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1905,
								"name": "AdminGetTaxRatesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1908,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter tax rates by the IDs of their associates region."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 1909,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter tax rates by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1910,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Code to filter tax rates by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1911,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to filter tax rates' "
							},
							{
								"kind": "code",
								"text": "`rate`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 3934,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 1912,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 1913,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n50\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "50"
				},
				{
					"id": 1914,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1915,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1906
					]
				},
				{
					"title": "Properties",
					"children": [
						1908,
						1909,
						1910,
						1911,
						1912,
						1913,
						1914,
						1915
					]
				}
			]
		},
		{
			"id": 1921,
			"name": "AdminDeleteTaxRatesTaxRateProductTypesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Product types to remove from the tax rates."
					}
				]
			},
			"children": [
				{
					"id": 1922,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1923,
							"name": "new AdminDeleteTaxRatesTaxRateProductTypesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product types to remove from the tax rates."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1921,
								"name": "AdminDeleteTaxRatesTaxRateProductTypesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1924,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the product types to remove their association with this tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1922
					]
				},
				{
					"title": "Properties",
					"children": [
						1924
					]
				}
			]
		},
		{
			"id": 1925,
			"name": "AdminDeleteTaxRatesTaxRateProductTypesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1926,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1927,
							"name": "new AdminDeleteTaxRatesTaxRateProductTypesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1925,
								"name": "AdminDeleteTaxRatesTaxRateProductTypesParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1928,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1929,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1926
					]
				},
				{
					"title": "Properties",
					"children": [
						1928,
						1929
					]
				}
			]
		},
		{
			"id": 1930,
			"name": "AdminDeleteTaxRatesTaxRateProductsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the products to remove their associated with the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 1931,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1932,
							"name": "new AdminDeleteTaxRatesTaxRateProductsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the products to remove their associated with the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1930,
								"name": "AdminDeleteTaxRatesTaxRateProductsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1933,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products to remove their association with this tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1931
					]
				},
				{
					"title": "Properties",
					"children": [
						1933
					]
				}
			]
		},
		{
			"id": 1934,
			"name": "AdminDeleteTaxRatesTaxRateProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1935,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1936,
							"name": "new AdminDeleteTaxRatesTaxRateProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1934,
								"name": "AdminDeleteTaxRatesTaxRateProductsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1937,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1938,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1935
					]
				},
				{
					"title": "Properties",
					"children": [
						1937,
						1938
					]
				}
			]
		},
		{
			"id": 1939,
			"name": "AdminDeleteTaxRatesTaxRateShippingOptionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping options to remove their associate with the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 1940,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1941,
							"name": "new AdminDeleteTaxRatesTaxRateShippingOptionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping options to remove their associate with the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1939,
								"name": "AdminDeleteTaxRatesTaxRateShippingOptionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1942,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the shipping options to remove their association with this tax rate."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1940
					]
				},
				{
					"title": "Properties",
					"children": [
						1942
					]
				}
			]
		},
		{
			"id": 1943,
			"name": "AdminDeleteTaxRatesTaxRateShippingOptionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 1944,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1945,
							"name": "new AdminDeleteTaxRatesTaxRateShippingOptionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1943,
								"name": "AdminDeleteTaxRatesTaxRateShippingOptionsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1946,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1947,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1944
					]
				},
				{
					"title": "Properties",
					"children": [
						1946,
						1947
					]
				}
			]
		},
		{
			"id": 1990,
			"name": "AdminPostTaxRatesTaxRateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the tax rate."
					}
				]
			},
			"children": [
				{
					"id": 1991,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1992,
							"name": "new AdminPostTaxRatesTaxRateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the tax rate."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 1990,
								"name": "AdminPostTaxRatesTaxRateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 1993,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1994,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the tax rate."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1995,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region that the tax rate belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1996,
					"name": "rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The numeric rate to charge."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 1997,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the products associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1998,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the shipping options associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 1999,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs of the types of product types associated with this tax rate"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1991
					]
				},
				{
					"title": "Properties",
					"children": [
						1993,
						1994,
						1995,
						1996,
						1997,
						1998,
						1999
					]
				}
			]
		},
		{
			"id": 2000,
			"name": "AdminPostTaxRatesTaxRateParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 2001,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2002,
							"name": "new AdminPostTaxRatesTaxRateParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2000,
								"name": "AdminPostTaxRatesTaxRateParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2003,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 2004,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2001
					]
				},
				{
					"title": "Properties",
					"children": [
						2003,
						2004
					]
				}
			]
		},
		{
			"id": 2012,
			"name": "IAdminPostUploadsFileReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2013,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2014,
							"name": "new IAdminPostUploadsFileReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2012,
								"name": "IAdminPostUploadsFileReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2015,
					"name": "originalName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2016,
					"name": "path",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2013
					]
				},
				{
					"title": "Properties",
					"children": [
						2015,
						2016
					]
				}
			]
		},
		{
			"id": 2017,
			"name": "AdminDeleteUploadsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to delete."
					}
				]
			},
			"children": [
				{
					"id": 2018,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2019,
							"name": "new AdminDeleteUploadsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the file to delete."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2017,
								"name": "AdminDeleteUploadsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2020,
					"name": "file_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "key of the file to delete. This is obtained when you first uploaded the file, or by the file service if you used it directly."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2018
					]
				},
				{
					"title": "Properties",
					"children": [
						2020
					]
				}
			]
		},
		{
			"id": 2021,
			"name": "AdminPostUploadsDownloadUrlReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to retrieve its download URL."
					}
				]
			},
			"children": [
				{
					"id": 2022,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2023,
							"name": "new AdminPostUploadsDownloadUrlReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the file to retrieve its download URL."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2021,
								"name": "AdminPostUploadsDownloadUrlReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2024,
					"name": "file_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "key of the file to obtain the download link for. This is obtained when you first uploaded the file, or by the file service if you used it directly."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2022
					]
				},
				{
					"title": "Properties",
					"children": [
						2024
					]
				}
			]
		},
		{
			"id": 2005,
			"name": "AdminUploadsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of uploaded files."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2006,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2007,
							"name": "uploads",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Uploaded files details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4765,
									"name": "FileServiceUploadResult",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2007
							]
						}
					]
				}
			}
		},
		{
			"id": 2008,
			"name": "AdminDeleteUploadsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 2009,
			"name": "AdminUploadsDownloadUrlRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The download URL details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2010,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2011,
							"name": "download_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Download URL of the file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2011
							]
						}
					]
				}
			}
		},
		{
			"id": 2050,
			"name": "AdminCreateUserRequest",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2051,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2052,
							"name": "new AdminCreateUserRequest",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2050,
								"name": "AdminCreateUserRequest",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2053,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2054,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2055,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2056,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The role assigned to the user. These roles don't provide any different privileges."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/user.ts",
							"qualifiedName": "UserRoles"
						},
						"name": "UserRoles",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2057,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2051
					]
				},
				{
					"title": "Properties",
					"children": [
						2053,
						2054,
						2055,
						2056,
						2057
					]
				}
			]
		},
		{
			"id": 2025,
			"name": "unauthenticatedUserRoutes",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 2026,
					"name": "unauthenticatedUserRoutes",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 2027,
							"name": "app",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 2028,
			"name": "AdminUserRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The user's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2029,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2030,
							"name": "user",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "User details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/user.ts",
											"qualifiedName": "User"
										},
										"name": "User",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "password_hash"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2030
							]
						}
					]
				}
			}
		},
		{
			"id": 2031,
			"name": "AdminUsersListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of users."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2032,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2033,
							"name": "users",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of users details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Omit"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/user.ts",
												"qualifiedName": "User"
											},
											"name": "User",
											"package": "@medusajs/medusa"
										},
										{
											"type": "literal",
											"value": "password_hash"
										}
									],
									"name": "Omit",
									"package": "typescript"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2033
							]
						}
					]
				}
			}
		},
		{
			"id": 2034,
			"name": "AdminDeleteUserRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 3910,
				"name": "DeleteResponse",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 2046,
			"name": "AdminResetPasswordTokenRequest",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the password reset token request."
					}
				]
			},
			"children": [
				{
					"id": 2047,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2048,
							"name": "new AdminResetPasswordTokenRequest",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the password reset token request."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2046,
								"name": "AdminResetPasswordTokenRequest",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2049,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2047
					]
				},
				{
					"title": "Properties",
					"children": [
						2049
					]
				}
			]
		},
		{
			"id": 2035,
			"name": "payload",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2036,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2037,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2038,
							"name": "user_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2039,
							"name": "password",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2037,
								2038,
								2039
							]
						}
					]
				}
			}
		},
		{
			"id": 2040,
			"name": "AdminResetPasswordRequest",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the password reset request."
					}
				]
			},
			"children": [
				{
					"id": 2041,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2042,
							"name": "new AdminResetPasswordRequest",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the password reset request."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2040,
								"name": "AdminResetPasswordRequest",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2043,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2044,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The password-reset token generated when the password reset was requested."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2045,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The User's new password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2041
					]
				},
				{
					"title": "Properties",
					"children": [
						2043,
						2044,
						2045
					]
				}
			]
		},
		{
			"id": 2058,
			"name": "AdminUpdateUserRequest",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2059,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2060,
							"name": "new AdminUpdateUserRequest",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2058,
								"name": "AdminUpdateUserRequest",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2061,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The first name of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2062,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The last name of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2063,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The role assigned to the user. These roles don't provide any different privileges."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/user.ts",
							"qualifiedName": "UserRoles"
						},
						"name": "UserRoles",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2064,
					"name": "api_token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The API token of the User."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2065,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional set of key-value pairs with additional information."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2059
					]
				},
				{
					"title": "Properties",
					"children": [
						2061,
						2062,
						2063,
						2064,
						2065
					]
				}
			]
		},
		{
			"id": 2094,
			"name": "LevelWithAvailability",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 4412,
						"name": "InventoryLevelDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2095,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2096,
									"name": "available_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2096
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 2097,
			"name": "ResponseInventoryItem",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 4392,
								"name": "InventoryItemDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2098,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2099,
									"name": "location_levels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory's location levels."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 2094,
											"name": "LevelWithAvailability",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2099
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 2100,
			"name": "VariantInventory",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2101,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2102,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the ID of the variant"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 2103,
							"name": "inventory",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 2097,
									"name": "ResponseInventoryItem",
									"package": "@medusajs/medusa"
								}
							}
						},
						{
							"id": 2104,
							"name": "sales_channel_availability",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Details about the variant's inventory availability in sales channels."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 2105,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 2106,
												"name": "channel_name",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "Sales channel's name"
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 2107,
												"name": "channel_id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "Sales channel's ID"
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 2108,
												"name": "available_quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "Available quantity in the sales channel"
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													2106,
													2107,
													2108
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2102,
								2103,
								2104
							]
						}
					]
				}
			}
		},
		{
			"id": 2109,
			"name": "AdminGetVariantsVariantInventoryRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The variant's inventory details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2110,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2111,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The product variant's inventory details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2100,
								"name": "VariantInventory",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2111
							]
						}
					]
				}
			}
		},
		{
			"id": 2089,
			"name": "AdminGetVariantParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 2090,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2091,
							"name": "new AdminGetVariantParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2089,
								"name": "AdminGetVariantParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 2092,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 2093,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2090
					]
				},
				{
					"title": "Properties",
					"children": [
						2092,
						2093
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2066,
			"name": "defaultAdminVariantRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2067,
			"name": "defaultAdminVariantFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
							"qualifiedName": "ProductVariant"
						},
						"name": "ProductVariant",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2068,
			"name": "AdminVariantsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of variants with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2069,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2070,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product variant details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4769,
											"name": "PricedVariant",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2070
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 2071,
			"name": "AdminVariantsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product variant's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2072,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2073,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product variant's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4769,
								"name": "PricedVariant",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2073
							]
						}
					]
				}
			}
		},
		{
			"id": 2074,
			"name": "AdminGetVariantsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product variants."
					}
				]
			},
			"children": [
				{
					"id": 2075,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2076,
							"name": "new AdminGetVariantsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2074,
								"name": "AdminGetVariantsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4772,
								"name": "AdminPriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4771,
						"name": "AdminPriceSelectionParams.constructor"
					}
				},
				{
					"id": 2077,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product variants' IDs."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2078,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20"
				},
				{
					"id": 2079,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 2080,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 4777,
						"name": "AdminPriceSelectionParams.expand"
					}
				},
				{
					"id": 2081,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 4778,
						"name": "AdminPriceSelectionParams.fields"
					}
				},
				{
					"id": 2082,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 2083,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Titles to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 2084,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply on product variants' "
							},
							{
								"kind": "code",
								"text": "`inventory_quantity`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 3934,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 2086,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4774,
						"name": "AdminPriceSelectionParams.cart_id"
					}
				},
				{
					"id": 2087,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4775,
						"name": "AdminPriceSelectionParams.region_id"
					}
				},
				{
					"id": 2088,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4776,
						"name": "AdminPriceSelectionParams.currency_code"
					}
				},
				{
					"id": 2085,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a customer ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4773,
						"name": "AdminPriceSelectionParams.customer_id"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2075
					]
				},
				{
					"title": "Properties",
					"children": [
						2077,
						2078,
						2079,
						2080,
						2081,
						2082,
						2083,
						2084,
						2086,
						2087,
						2088,
						2085
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4770,
					"name": "AdminPriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2121,
			"name": "StorePostAuthReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2122,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2123,
							"name": "new StorePostAuthReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2121,
								"name": "StorePostAuthReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2124,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2125,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2122
					]
				},
				{
					"title": "Properties",
					"children": [
						2124,
						2125
					]
				}
			]
		},
		{
			"id": 2112,
			"name": "StoreAuthRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2113,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2114,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
									"qualifiedName": "Customer"
								},
								"name": "Customer",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2114
							]
						}
					]
				}
			}
		},
		{
			"id": 2115,
			"name": "StoreBearerAuthRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The access token details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2116,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2117,
							"name": "access_token",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Access token that can be used to send authenticated requests."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2117
							]
						}
					]
				}
			}
		},
		{
			"id": 2118,
			"name": "StoreGetAuthEmailRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details on whether the email exists."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2119,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2120,
							"name": "exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether email exists or not."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2120
							]
						}
					]
				}
			}
		},
		{
			"id": 2141,
			"name": "StorePostCartsCartShippingMethodReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the shipping method to add to the cart."
					}
				]
			},
			"children": [
				{
					"id": 2142,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2143,
							"name": "new StorePostCartsCartShippingMethodReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the shipping method to add to the cart."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2141,
								"name": "StorePostCartsCartShippingMethodReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2144,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the shipping option to create the method from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2145,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used to hold any data that the shipping method may need to process the fulfillment of the order. This depends on the fulfillment provider you're using."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"defaultValue": "{}"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2142
					]
				},
				{
					"title": "Properties",
					"children": [
						2144,
						2145
					]
				}
			]
		},
		{
			"id": 2146,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2147,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2148,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2146,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2149,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2150,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to add into the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2147
					]
				},
				{
					"title": "Properties",
					"children": [
						2149,
						2150
					]
				}
			]
		},
		{
			"id": 2151,
			"name": "StorePostCartReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the cart to be created."
					}
				]
			},
			"children": [
				{
					"id": 2152,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2153,
							"name": "new StorePostCartReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the cart to be created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2151,
								"name": "StorePostCartReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2154,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region to create the Cart in. Setting the cart's region can affect the pricing of the items in the cart as well as the used currency. If this parameter is not provided, the first region in the store is used by default."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2155,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The two character ISO country code to create the Cart in. Setting this parameter will set the country code of the shipping address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2156,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of product variants to generate line items from."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 2146,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 2157,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object to provide context to the Cart. The `context` field is automatically populated with `ip` and `user_agent`"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 2158,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Sales channel to create the Cart in. The cart's sales channel affects which products can be added to the cart. If a product does not exist in the cart's sales channel, it cannot be added to the cart. If you add a publishable API key in the header of this request and specify a sales channel ID, the specified sales channel must be within the scope of the publishable API key's resources. If you add a publishable API key in the header of this request, you don't specify a sales channel ID, and the publishable API key is associated with one sales channel, that sales channel will be attached to the cart. If no sales channel is passed and no publishable API key header is passed or the publishable API key isn't associated with any sales channel, the cart will not be associated with any sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2152
					]
				},
				{
					"title": "Properties",
					"children": [
						2154,
						2155,
						2156,
						2157,
						2158
					]
				}
			]
		},
		{
			"id": 2159,
			"name": "StorePostCartsCartLineItemsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the line item to create."
					}
				]
			},
			"children": [
				{
					"id": 2160,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2161,
							"name": "new StorePostCartsCartLineItemsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the line item to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2159,
								"name": "StorePostCartsCartLineItemsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2162,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the Product Variant to generate the Line Item from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2163,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Product Variant to add to the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2164,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details about the Line Item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2160
					]
				},
				{
					"title": "Properties",
					"children": [
						2162,
						2163,
						2164
					]
				}
			]
		},
		{
			"id": 2126,
			"name": "defaultStoreCartFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
							"qualifiedName": "Cart"
						},
						"name": "Cart",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 2127,
			"name": "defaultStoreCartRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2128,
			"name": "StoreCartsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The cart's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2129,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2130,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Cart details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "refundable_amount"
											},
											{
												"type": "literal",
												"value": "refunded_total"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2130
							]
						}
					]
				}
			}
		},
		{
			"id": 2131,
			"name": "StoreCompleteCartRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "If the cart is completed successfully, this will have the created order or the swap's details, based on the cart's type. Otherwise, it'll be the cart's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 2132,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2133,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "cart"
									}
								},
								{
									"id": 2134,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A cart represents a virtual shopping bag. It can be used to complete an order, a swap, or a claim."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2133,
										2134
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2135,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2136,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "order"
									}
								},
								{
									"id": 2137,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An order is a purchase made by a customer. It holds details about payment and fulfillment of the order. An order may also be created from a draft order, which is created by an admin user."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/order.ts",
											"qualifiedName": "Order"
										},
										"name": "Order",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2136,
										2137
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2138,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2139,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "swap"
									}
								},
								{
									"id": 2140,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A swap can be created when a Customer wishes to exchange Products that they have purchased with different Products. It consists of a Return of previously purchased Products and a Fulfillment of new Products. It also includes information on any additional payment or refund required based on the difference between the exchanged products."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
											"qualifiedName": "Swap"
										},
										"name": "Swap",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2139,
										2140
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 2165,
			"name": "StorePostCartsCartPaymentSessionReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to set."
					}
				]
			},
			"children": [
				{
					"id": 2166,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2167,
							"name": "new StorePostCartsCartPaymentSessionReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment session to set."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2165,
								"name": "StorePostCartsCartPaymentSessionReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2168,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2166
					]
				},
				{
					"title": "Properties",
					"children": [
						2168
					]
				}
			]
		},
		{
			"id": 4779,
			"name": "GiftCard",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Gift Cards are redeemable and represent a value that can be used towards the payment of an Order."
					}
				]
			},
			"children": [
				{
					"id": 4780,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4781,
							"name": "new GiftCard",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gift Cards are redeemable and represent a value that can be used towards the payment of an Order."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4779,
								"name": "GiftCard",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4782,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4780
					]
				},
				{
					"title": "Properties",
					"children": [
						4782
					]
				}
			]
		},
		{
			"id": 4783,
			"name": "Discount",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A discount can be applied to a cart for promotional purposes."
					}
				]
			},
			"children": [
				{
					"id": 4784,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4785,
							"name": "new Discount",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A discount can be applied to a cart for promotional purposes."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4783,
								"name": "Discount",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4786,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The code of the discount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4784
					]
				},
				{
					"title": "Properties",
					"children": [
						4786
					]
				}
			]
		},
		{
			"id": 2169,
			"name": "StorePostCartsCartReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the cart."
					}
				]
			},
			"children": [
				{
					"id": 2170,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2171,
							"name": "new StorePostCartsCartReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the cart."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2169,
								"name": "StorePostCartsCartReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2172,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region to create the Cart in. Setting the cart's region can affect the pricing of the items in the cart as well as the used currency."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2173,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO country code to create the Cart in. Setting this parameter will set the country code of the shipping address."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2174,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An email to be used on the Cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2175,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for billing purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 3941,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 2176,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to be used for shipping purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 3941,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 2177,
					"name": "gift_cards",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Gift Card codes to add to the Cart."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4779,
							"name": "GiftCard",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 2178,
					"name": "discounts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of Discount codes to add to the Cart."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4783,
							"name": "Discount",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 2179,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Customer to associate the Cart with."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2180,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object to provide context to the Cart. The `context` field is automatically populated with `ip` and `user_agent`"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 2181,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Sales channel to create the Cart in. The cart's sales channel affects which products can be added to the cart. If a product does not exist in the cart's sales channel, it cannot be added to the cart. If you add a publishable API key in the header of this request and specify a sales channel ID, the specified sales channel must be within the scope of the publishable API key's resources."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2170
					]
				},
				{
					"title": "Properties",
					"children": [
						2172,
						2173,
						2174,
						2175,
						2176,
						2177,
						2178,
						2179,
						2180,
						2181
					]
				}
			]
		},
		{
			"id": 2182,
			"name": "StorePostCartsCartLineItemsItemReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the line item."
					}
				]
			},
			"children": [
				{
					"id": 2183,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2184,
							"name": "new StorePostCartsCartLineItemsItemReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the line item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2182,
								"name": "StorePostCartsCartLineItemsItemReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2185,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the line item in the cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2186,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details about the Line Item. If omitted, the metadata will remain unchanged.\""
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2183
					]
				},
				{
					"title": "Properties",
					"children": [
						2185,
						2186
					]
				}
			]
		},
		{
			"id": 2187,
			"name": "StorePostCartsCartPaymentSessionUpdateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2188,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2189,
							"name": "new StorePostCartsCartPaymentSessionUpdateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2187,
								"name": "StorePostCartsCartPaymentSessionUpdateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2190,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data to update the payment session with."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2188
					]
				},
				{
					"title": "Properties",
					"children": [
						2190
					]
				}
			]
		},
		{
			"id": 2191,
			"name": "defaultStoreCollectionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 2192,
			"name": "allowedFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2193,
			"name": "StoreCollectionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product collections with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2194,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2195,
									"name": "collections",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product collections details"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
												"qualifiedName": "ProductCollection"
											},
											"name": "ProductCollection",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2195
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 2196,
			"name": "StoreCollectionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the product collection."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2197,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2198,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product collection details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-collection.ts",
									"qualifiedName": "ProductCollection"
								},
								"name": "ProductCollection",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2198
							]
						}
					]
				}
			}
		},
		{
			"id": 2199,
			"name": "StoreGetCollectionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product collections."
					}
				]
			},
			"children": [
				{
					"id": 2200,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2201,
							"name": "new StoreGetCollectionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2199,
								"name": "StoreGetCollectionsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2202,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handles to filter product collections by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 2203,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 2204,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 2205,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2206,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product collections' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2200
					]
				},
				{
					"title": "Properties",
					"children": [
						2202,
						2203,
						2204,
						2205,
						2206
					]
				}
			]
		},
		{
			"id": 2226,
			"name": "StorePostCustomersCustomerAddressesReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2227,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2228,
							"name": "new StorePostCustomersCustomerAddressesReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2226,
								"name": "StorePostCustomersCustomerAddressesReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2229,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Address to add to the Customer's saved addresses."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3955,
						"name": "AddressCreatePayload",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2227
					]
				},
				{
					"title": "Properties",
					"children": [
						2229
					]
				}
			]
		},
		{
			"id": 2230,
			"name": "StorePostCustomersReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the customer to create."
					}
				]
			},
			"children": [
				{
					"id": 2231,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2232,
							"name": "new StorePostCustomersReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the customer to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2230,
								"name": "StorePostCustomersReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2233,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2234,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2235,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2236,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2237,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2231
					]
				},
				{
					"title": "Properties",
					"children": [
						2233,
						2234,
						2235,
						2236,
						2237
					]
				}
			]
		},
		{
			"id": 2207,
			"name": "defaultStoreCustomersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2208,
			"name": "defaultStoreCustomersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
							"qualifiedName": "Customer"
						},
						"name": "Customer",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2209,
			"name": "allowedStoreCustomersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2210,
			"name": "allowedStoreCustomersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2211,
			"name": "StoreCustomersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The customer's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2212,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2213,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
											"qualifiedName": "Customer"
										},
										"name": "Customer",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "password_hash"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2213
							]
						}
					]
				}
			}
		},
		{
			"id": 2214,
			"name": "StoreCustomersResetPasswordRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2215,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2216,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customer details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
											"qualifiedName": "Customer"
										},
										"name": "Customer",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": "password_hash"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2216
							]
						}
					]
				}
			}
		},
		{
			"id": 2217,
			"name": "StoreCustomersListOrdersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of the customer's orders with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2218,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2219,
									"name": "orders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of orders details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/order.ts",
												"qualifiedName": "Order"
											},
											"name": "Order",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2219
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 2220,
			"name": "StoreCustomersListPaymentMethodsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment method's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2221,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2222,
							"name": "payment_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the saved payment methods."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 2223,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 2224,
												"name": "provider_id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the Payment Provider where the payment method is saved."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 2225,
												"name": "data",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The data needed for the Payment Provider to use the saved payment method."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													2224,
													2225
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2222
							]
						}
					]
				}
			}
		},
		{
			"id": 2238,
			"name": "StoreGetCustomersCustomerOrdersPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 2239,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2240,
							"name": "new StoreGetCustomersCustomerOrdersPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2238,
								"name": "StoreGetCustomersCustomerOrdersPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2241,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 2242,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 2243,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2244,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2239
					]
				},
				{
					"title": "Properties",
					"children": [
						2241,
						2242,
						2243,
						2244
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 2245,
					"name": "StoreGetCustomersCustomerOrdersParams"
				}
			]
		},
		{
			"id": 2245,
			"name": "StoreGetCustomersCustomerOrdersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved orders."
					}
				]
			},
			"children": [
				{
					"id": 2246,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2247,
							"name": "new StoreGetCustomersCustomerOrdersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2245,
								"name": "StoreGetCustomersCustomerOrdersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2240,
								"name": "StoreGetCustomersCustomerOrdersPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 2239,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.constructor"
					}
				},
				{
					"id": 2262,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n10\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10",
					"inheritedFrom": {
						"type": "reference",
						"target": 2241,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.limit"
					}
				},
				{
					"id": 2263,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 2242,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.offset"
					}
				},
				{
					"id": 2264,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 2243,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.fields"
					}
				},
				{
					"id": 2265,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 2244,
						"name": "StoreGetCustomersCustomerOrdersPaginationParams.expand"
					}
				},
				{
					"id": 2248,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2249,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search orders' display ID, email, shipping address's first name, customer's first name, customer's last name, and customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2250,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/order.ts",
								"qualifiedName": "OrderStatus"
							},
							"name": "OrderStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 2251,
					"name": "fulfillment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fulfillment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/order.ts",
								"qualifiedName": "FulfillmentStatus"
							},
							"name": "FulfillmentStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 2252,
					"name": "payment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/order.ts",
								"qualifiedName": "PaymentStatus"
							},
							"name": "PaymentStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 2253,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Display ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2254,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cart ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2255,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Email to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2256,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Region ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2257,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency code to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2258,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax rate to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2259,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2260,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2261,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`canceled_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2246
					]
				},
				{
					"title": "Properties",
					"children": [
						2262,
						2263,
						2264,
						2265,
						2248,
						2249,
						2250,
						2251,
						2252,
						2253,
						2254,
						2255,
						2256,
						2257,
						2258,
						2259,
						2260,
						2261
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 2238,
					"name": "StoreGetCustomersCustomerOrdersPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2272,
			"name": "StorePostCustomersCustomerPasswordTokenReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2273,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2274,
							"name": "new StorePostCustomersCustomerPasswordTokenReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2272,
								"name": "StorePostCustomersCustomerPasswordTokenReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2275,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2273
					]
				},
				{
					"title": "Properties",
					"children": [
						2275
					]
				}
			]
		},
		{
			"id": 2266,
			"name": "StorePostCustomersResetPasswordReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2267,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2268,
							"name": "new StorePostCustomersResetPasswordReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2266,
								"name": "StorePostCustomersResetPasswordReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2269,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2270,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reset password token"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2271,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2267
					]
				},
				{
					"title": "Properties",
					"children": [
						2269,
						2270,
						2271
					]
				}
			]
		},
		{
			"id": 2276,
			"name": "StorePostCustomersCustomerAddressesAddressReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2277,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2278,
							"name": "new StorePostCustomersCustomerAddressesAddressReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2276,
								"name": "StorePostCustomersCustomerAddressesAddressReq",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3943,
								"name": "AddressPayload.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3942,
						"name": "AddressPayload.constructor"
					}
				},
				{
					"id": 2279,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "First name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3944,
						"name": "AddressPayload.first_name"
					}
				},
				{
					"id": 2280,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Last name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3945,
						"name": "AddressPayload.last_name"
					}
				},
				{
					"id": 2281,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Phone Number"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3946,
						"name": "AddressPayload.phone"
					}
				},
				{
					"id": 2282,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3947,
						"name": "AddressPayload.metadata"
					}
				},
				{
					"id": 2283,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Company"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3948,
						"name": "AddressPayload.company"
					}
				},
				{
					"id": 2284,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 1"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3949,
						"name": "AddressPayload.address_1"
					}
				},
				{
					"id": 2285,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 2"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3950,
						"name": "AddressPayload.address_2"
					}
				},
				{
					"id": 2286,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "City"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3951,
						"name": "AddressPayload.city"
					}
				},
				{
					"id": 2287,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code of the country in lower case"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3952,
						"name": "AddressPayload.country_code"
					}
				},
				{
					"id": 2288,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Province"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3953,
						"name": "AddressPayload.province"
					}
				},
				{
					"id": 2289,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal Code"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3954,
						"name": "AddressPayload.postal_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2277
					]
				},
				{
					"title": "Properties",
					"children": [
						2279,
						2280,
						2281,
						2282,
						2283,
						2284,
						2285,
						2286,
						2287,
						2288,
						2289
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3941,
					"name": "AddressPayload",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2290,
			"name": "StorePostCustomersCustomerReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details to update of the customer."
					}
				]
			},
			"children": [
				{
					"id": 2291,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2292,
							"name": "new StorePostCustomersCustomerReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details to update of the customer."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2290,
								"name": "StorePostCustomersCustomerReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2293,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The address to be used for billing purposes."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 3941,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 2294,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's first name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2295,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2296,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's password."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2297,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's phone number."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2298,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2299,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Additional custom data about the customer."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2291
					]
				},
				{
					"title": "Properties",
					"children": [
						2293,
						2294,
						2295,
						2296,
						2297,
						2298,
						2299
					]
				}
			]
		},
		{
			"id": 2300,
			"name": "defaultStoreGiftCardRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2301,
			"name": "defaultStoreGiftCardFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
							"qualifiedName": "GiftCard"
						},
						"name": "GiftCard",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2302,
			"name": "allowedStoreGiftCardRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2303,
			"name": "allowedStoreGiftCardFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2304,
			"name": "StoreGiftCardsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The gift card's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2305,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2306,
							"name": "gift_card",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gift card details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/gift-card.ts",
									"qualifiedName": "GiftCard"
								},
								"name": "GiftCard",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2306
							]
						}
					]
				}
			}
		},
		{
			"id": 2310,
			"name": "StorePostOrderEditsOrderEditDecline",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the order edit's decline."
					}
				]
			},
			"children": [
				{
					"id": 2311,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2312,
							"name": "new StorePostOrderEditsOrderEditDecline",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the order edit's decline."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2310,
								"name": "StorePostOrderEditsOrderEditDecline",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2313,
					"name": "declined_reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reason for declining the Order Edit."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2311
					]
				},
				{
					"title": "Properties",
					"children": [
						2313
					]
				}
			]
		},
		{
			"id": 2307,
			"name": "StoreOrderEditsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order edit's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2308,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2309,
							"name": "order_edit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order edit details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/order-edit.ts",
											"qualifiedName": "OrderEdit"
										},
										"name": "OrderEdit",
										"package": "@medusajs/medusa"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "internal_note"
											},
											{
												"type": "literal",
												"value": "created_by"
											},
											{
												"type": "literal",
												"value": "confirmed_by"
											},
											{
												"type": "literal",
												"value": "canceled_by"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2309
							]
						}
					]
				}
			}
		},
		{
			"id": 2321,
			"name": "StorePostCustomersCustomerAcceptClaimReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details necessary to grant order access."
					}
				]
			},
			"children": [
				{
					"id": 2322,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2323,
							"name": "new StorePostCustomersCustomerAcceptClaimReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details necessary to grant order access."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2321,
								"name": "StorePostCustomersCustomerAcceptClaimReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2324,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim token generated by previous request to the Claim Order API Route."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2322
					]
				},
				{
					"title": "Properties",
					"children": [
						2324
					]
				}
			]
		},
		{
			"id": 2314,
			"name": "defaultStoreOrdersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2315,
			"name": "allowedStoreOrdersRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2316,
			"name": "defaultStoreOrdersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/order.ts",
							"qualifiedName": "Order"
						},
						"name": "Order",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2317,
			"name": "allowedStoreOrdersFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2318,
			"name": "StoreOrdersRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The order's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2319,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2320,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Order details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/order.ts",
									"qualifiedName": "Order"
								},
								"name": "Order",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2320
							]
						}
					]
				}
			}
		},
		{
			"id": 2325,
			"name": "ShippingAddressPayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the order's shipping address."
					}
				]
			},
			"children": [
				{
					"id": 2326,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2327,
							"name": "new ShippingAddressPayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2325,
								"name": "ShippingAddressPayload",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2328,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2326
					]
				},
				{
					"title": "Properties",
					"children": [
						2328
					]
				}
			]
		},
		{
			"id": 2329,
			"name": "StoreGetOrdersParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to narrow down the looked-up order, with configurations applied on the retrieved order."
					}
				]
			},
			"children": [
				{
					"id": 2330,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2331,
							"name": "new StoreGetOrdersParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2329,
								"name": "StoreGetOrdersParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 2332,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Display ID of the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2333,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Email of the order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2334,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the retrieved order by its shipping address details."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 2325,
						"name": "ShippingAddressPayload",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2335,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 2336,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2330
					]
				},
				{
					"title": "Properties",
					"children": [
						2332,
						2333,
						2334,
						2335,
						2336
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2337,
			"name": "StorePostCustomersCustomerOrderClaimReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the orders to claim."
					}
				]
			},
			"children": [
				{
					"id": 2338,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2339,
							"name": "new StorePostCustomersCustomerOrderClaimReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the orders to claim."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2337,
								"name": "StorePostCustomersCustomerOrderClaimReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2340,
					"name": "order_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the orders to claim"
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2338
					]
				},
				{
					"title": "Properties",
					"children": [
						2340
					]
				}
			]
		},
		{
			"id": 2348,
			"name": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment sessions to authorize."
					}
				]
			},
			"children": [
				{
					"id": 2349,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2350,
							"name": "new StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment sessions to authorize."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2348,
								"name": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2351,
					"name": "session_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of Payment Session IDs to authorize."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2349
					]
				},
				{
					"title": "Properties",
					"children": [
						2351
					]
				}
			]
		},
		{
			"id": 2352,
			"name": "StoreGetPaymentCollectionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 2353,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2354,
							"name": "new StoreGetPaymentCollectionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2352,
								"name": "StoreGetPaymentCollectionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 2355,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 2356,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2353
					]
				},
				{
					"title": "Properties",
					"children": [
						2355,
						2356
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2341,
			"name": "defaultPaymentCollectionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2342,
			"name": "StorePaymentCollectionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The payment collection's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2343,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2344,
							"name": "payment_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Payment collection's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/payment-collection.ts",
									"qualifiedName": "PaymentCollection"
								},
								"name": "PaymentCollection",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2344
							]
						}
					]
				}
			}
		},
		{
			"id": 2345,
			"name": "StorePaymentCollectionsSessionRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2346,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2347,
							"name": "payment_session",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Payment session's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
									"qualifiedName": "PaymentSession"
								},
								"name": "PaymentSession",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2347
							]
						}
					]
				}
			}
		},
		{
			"id": 2357,
			"name": "StorePostPaymentCollectionsSessionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2358,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2359,
							"name": "new StorePostPaymentCollectionsSessionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2357,
								"name": "StorePostPaymentCollectionsSessionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2360,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2361,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment amount"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2362,
					"name": "session_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Session to be updated. If no ID is provided, a new payment session is created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2358
					]
				},
				{
					"title": "Properties",
					"children": [
						2360,
						2361,
						2362
					]
				}
			]
		},
		{
			"id": 2363,
			"name": "StorePostPaymentCollectionsBatchSessionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment sessions to manage."
					}
				]
			},
			"children": [
				{
					"id": 2364,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2365,
							"name": "new StorePostPaymentCollectionsBatchSessionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment sessions to manage."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2363,
								"name": "StorePostPaymentCollectionsBatchSessionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2366,
					"name": "sessions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment sessions related to the Payment Collection. Existing sessions that are not added in this array will be deleted."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 2357,
							"name": "StorePostPaymentCollectionsSessionsReq",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2364
					]
				},
				{
					"title": "Properties",
					"children": [
						2366
					]
				}
			]
		},
		{
			"id": 2367,
			"name": "StorePaymentCollectionSessionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the payment session to manage."
					}
				]
			},
			"children": [
				{
					"id": 2368,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2369,
							"name": "new StorePaymentCollectionSessionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the payment session to manage."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2367,
								"name": "StorePaymentCollectionSessionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2370,
					"name": "provider_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Payment Provider."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2368
					]
				},
				{
					"title": "Properties",
					"children": [
						2370
					]
				}
			]
		},
		{
			"id": 2384,
			"name": "StoreGetProductCategoriesCategoryParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 2385,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2386,
							"name": "new StoreGetProductCategoriesCategoryParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2384,
								"name": "StoreGetProductCategoriesCategoryParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 2387,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 2388,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2385
					]
				},
				{
					"title": "Properties",
					"children": [
						2387,
						2388
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2371,
			"name": "defaultStoreProductCategoryRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2372,
			"name": "defaultStoreCategoryScope",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2373,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2374,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false"
						},
						{
							"id": 2375,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2374,
								2375
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2376,
			"name": "defaultStoreProductCategoryFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2377,
			"name": "allowedStoreProductCategoryFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2378,
			"name": "StoreGetProductCategoriesCategoryRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product category's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2379,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2380,
							"name": "product_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product category details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
									"qualifiedName": "ProductCategory"
								},
								"name": "ProductCategory",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2380
							]
						}
					]
				}
			}
		},
		{
			"id": 2381,
			"name": "StoreGetProductCategoriesRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product categories with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2382,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2383,
									"name": "product_categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product categories details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
												"qualifiedName": "ProductCategory"
											},
											"name": "ProductCategory",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2383
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 2389,
			"name": "StoreGetProductCategoriesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product categories."
					}
				]
			},
			"children": [
				{
					"id": 2393,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product categories' names and handles."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2394,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter product categories by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2395,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product categories by the ID of their associated parent category."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 2396,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include child categories in the retrieved categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2397,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 2398,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 2399,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 2400,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of product categories returned in the list. Default is "
							},
							{
								"kind": "code",
								"text": "`100`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 2390,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2391,
							"name": "new StoreGetProductCategoriesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 2392,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2389,
								"name": "StoreGetProductCategoriesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2390
					]
				},
				{
					"title": "Properties",
					"children": [
						2393,
						2394,
						2395,
						2396,
						2397,
						2398,
						2399,
						2400
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 3969,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 2401,
			"name": "defaultStoreProductTagFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2402,
			"name": "allowedStoreProductTagFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2403,
			"name": "defaultStoreProductTagRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 2404,
			"name": "StoreProductTagsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product tags with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2405,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2406,
									"name": "product_tags",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product tags details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-tag.ts",
												"qualifiedName": "ProductTag"
											},
											"name": "ProductTag",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2406
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 2407,
			"name": "StoreGetProductTagsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product tags."
					}
				]
			},
			"children": [
				{
					"id": 2408,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2409,
							"name": "new StoreGetProductTagsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2407,
								"name": "StoreGetProductTagsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3976,
								"name": "FindPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3975,
						"name": "FindPaginationParams.constructor"
					}
				},
				{
					"id": 2410,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3924,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 2411,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product tags' values."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2412,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to filter product tags by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3924,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 2413,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply to the product tags' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2414,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply to the product tags' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2415,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2416,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product tags by the ID of their associated discount condition."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2417,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 3977,
						"name": "FindPaginationParams.offset"
					}
				},
				{
					"id": 2418,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": 3978,
						"name": "FindPaginationParams.limit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2408
					]
				},
				{
					"title": "Properties",
					"children": [
						2410,
						2411,
						2412,
						2413,
						2414,
						2415,
						2416,
						2417,
						2418
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3974,
					"name": "FindPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2419,
			"name": "allowedStoreProductTypeFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2420,
			"name": "defaultStoreProductTypeFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2421,
			"name": "defaultStoreProductTypeRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "never"
				}
			},
			"defaultValue": "[]"
		},
		{
			"id": 2422,
			"name": "StoreProductTypesListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2423,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2424,
									"name": "product_types",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of product types details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/product-type.ts",
												"qualifiedName": "ProductType"
											},
											"name": "ProductType",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2424
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 2425,
			"name": "StoreGetProductTypesParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product types."
					}
				]
			},
			"children": [
				{
					"id": 2426,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2427,
							"name": "new StoreGetProductTypesParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2425,
								"name": "StoreGetProductTypesParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3976,
								"name": "FindPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3975,
						"name": "FindPaginationParams.constructor"
					}
				},
				{
					"id": 2428,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3924,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 2429,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search product types' values."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2430,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Values to filter product types by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3924,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 2431,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product types' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2432,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the product types' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2433,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2434,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product types by the ID of their associated discount condition."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2435,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 3977,
						"name": "FindPaginationParams.offset"
					}
				},
				{
					"id": 2436,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": 3978,
						"name": "FindPaginationParams.limit"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2426
					]
				},
				{
					"title": "Properties",
					"children": [
						2428,
						2429,
						2430,
						2431,
						2432,
						2433,
						2434,
						2435,
						2436
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3974,
					"name": "FindPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2437,
			"name": "defaultStoreProductsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2438,
			"name": "defaultStoreProductsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/product.ts",
							"qualifiedName": "Product"
						},
						"name": "Product",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2439,
			"name": "allowedStoreProductsFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2440,
			"name": "allowedStoreProductsRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2441,
			"name": "defaultStoreProductRemoteQueryObject",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This is temporary."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2442,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2443,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/product.ts",
											"qualifiedName": "Product"
										},
										"name": "Product",
										"package": "@medusajs/medusa"
									}
								}
							},
							"defaultValue": "defaultStoreProductsFields"
						},
						{
							"id": 2444,
							"name": "images",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2445,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2446,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2446
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 2447,
							"name": "tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2448,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2449,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2449
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 2450,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2451,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2452,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2452
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 2453,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2454,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2455,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2455
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 2456,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2457,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2458,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 2459,
											"name": "values",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2460,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2461,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2461
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2458,
												2459
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 2462,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2463,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2464,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 2465,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 2466,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2467,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															"defaultValue": "..."
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2467
															]
														}
													]
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2464,
												2465
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 2468,
							"name": "profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2469,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2470,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2470
											]
										}
									]
								}
							},
							"defaultValue": "..."
						},
						{
							"id": 2471,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 2472,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 2473,
											"name": "fields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												2473
											]
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2443,
								2444,
								2447,
								2450,
								2453,
								2456,
								2462,
								2468,
								2471
							]
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2474,
			"name": "StoreProductsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2475,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2476,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4568,
								"name": "PricedProduct",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2476
							]
						}
					]
				}
			}
		},
		{
			"id": 2477,
			"name": "StorePostSearchRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of search results."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 2478,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2479,
									"name": "hits",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Array of search results. The format of the items depends on the search engine installed on the Medusa backend."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2479
									]
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 2480,
			"name": "StoreProductsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of products with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3906,
						"name": "PaginatedResponse",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2481,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2482,
									"name": "products",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of products details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4568,
											"name": "PricedProduct",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2482
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 2483,
			"name": "StoreGetProductsPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 2484,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2485,
							"name": "new StoreGetProductsPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2483,
								"name": "StoreGetProductsPaginationParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4789,
								"name": "PriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4788,
						"name": "PriceSelectionParams.constructor"
					}
				},
				{
					"id": 2486,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 2487,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n100\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100"
				},
				{
					"id": 2488,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2492,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4793,
						"name": "PriceSelectionParams.expand"
					}
				},
				{
					"id": 2493,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4794,
						"name": "PriceSelectionParams.fields"
					}
				},
				{
					"id": 2489,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4790,
						"name": "PriceSelectionParams.cart_id"
					}
				},
				{
					"id": 2490,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4791,
						"name": "PriceSelectionParams.region_id"
					}
				},
				{
					"id": 2491,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4792,
						"name": "PriceSelectionParams.currency_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2484
					]
				},
				{
					"title": "Properties",
					"children": [
						2486,
						2487,
						2488,
						2492,
						2493,
						2489,
						2490,
						2491
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4787,
					"name": "PriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 2494,
					"name": "StoreGetProductsParams"
				}
			]
		},
		{
			"id": 2494,
			"name": "StoreGetProductsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved products."
					}
				]
			},
			"children": [
				{
					"id": 2495,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2496,
							"name": "new StoreGetProductsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2494,
								"name": "StoreGetProductsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 2485,
								"name": "StoreGetProductsPaginationParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 2484,
						"name": "StoreGetProductsPaginationParams.constructor"
					}
				},
				{
					"id": 2511,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": 2486,
						"name": "StoreGetProductsPaginationParams.offset"
					}
				},
				{
					"id": 2512,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n100\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100",
					"inheritedFrom": {
						"type": "reference",
						"target": 2487,
						"name": "StoreGetProductsPaginationParams.limit"
					}
				},
				{
					"id": 2513,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 2488,
						"name": "StoreGetProductsPaginationParams.order"
					}
				},
				{
					"id": 2497,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 2498,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search products' title, description, variants' title and sku, and collections' title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2499,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product collection's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 2500,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated tags' value."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 2501,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2502,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2503,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2504,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by whether they're gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2505,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product type's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 2506,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated sales channels' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 2507,
					"name": "category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product category's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 2508,
					"name": "include_category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include product category children in the response."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "text",
										"text": "product_categories"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 2509,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2510,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2517,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 2492,
						"name": "StoreGetProductsPaginationParams.expand"
					}
				},
				{
					"id": 2518,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 2493,
						"name": "StoreGetProductsPaginationParams.fields"
					}
				},
				{
					"id": 2514,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 2489,
						"name": "StoreGetProductsPaginationParams.cart_id"
					}
				},
				{
					"id": 2515,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 2490,
						"name": "StoreGetProductsPaginationParams.region_id"
					}
				},
				{
					"id": 2516,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 2491,
						"name": "StoreGetProductsPaginationParams.currency_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2495
					]
				},
				{
					"title": "Properties",
					"children": [
						2511,
						2512,
						2513,
						2497,
						2498,
						2499,
						2500,
						2501,
						2502,
						2503,
						2504,
						2505,
						2506,
						2507,
						2508,
						2509,
						2510,
						2517,
						2518,
						2514,
						2515,
						2516
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 2483,
					"name": "StoreGetProductsPaginationParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2519,
			"name": "StorePostSearchReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2520,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2521,
							"name": "new StorePostSearchReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2519,
								"name": "StorePostSearchReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2522,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The search query."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2523,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of products to skip when retrieving the products."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2524,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of products returned."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 2525,
					"name": "filter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Pass filters based on the search service."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2520
					]
				},
				{
					"title": "Properties",
					"children": [
						2522,
						2523,
						2524,
						2525
					]
				}
			]
		},
		{
			"id": 2534,
			"name": "StoreGetRegionsRegionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 2535,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2536,
							"name": "new StoreGetRegionsRegionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2534,
								"name": "StoreGetRegionsRegionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 2537,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 2538,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2535
					]
				},
				{
					"title": "Properties",
					"children": [
						2537,
						2538
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2526,
			"name": "defaultStoreRegionRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2527,
			"name": "defaultStoreRegionFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2528,
			"name": "StoreRegionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of regions with pagination fields."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 4424,
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 2529,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 2530,
									"name": "regions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of regions details."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/region.ts",
												"qualifiedName": "Region"
											},
											"name": "Region",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										2530
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 2531,
			"name": "StoreRegionsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The region's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2532,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2533,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Region details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/region.ts",
									"qualifiedName": "Region"
								},
								"name": "Region",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2533
							]
						}
					]
				}
			}
		},
		{
			"id": 2539,
			"name": "StoreGetRegionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 2543,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2544,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2545,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).expand"
					}
				},
				{
					"id": 2546,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).fields"
					}
				},
				{
					"id": 2547,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).offset"
					}
				},
				{
					"id": 2548,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20",
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).limit"
					}
				},
				{
					"id": 2540,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2541,
							"name": "new StoreGetRegionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 2542,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2539,
								"name": "StoreGetRegionsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "extendedFindParamsMixin({\n  limit: 100,\n  offset: 0,\n}).constructor"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2540
					]
				},
				{
					"title": "Properties",
					"children": [
						2543,
						2544,
						2545,
						2546,
						2547,
						2548
					]
				}
			],
			"extendedTypes": [
				{
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"target": 3969,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindParams",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3974,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "this"
								}
							],
							"name": "FindPaginationParams",
							"package": "@medusajs/medusa"
						}
					]
				}
			]
		},
		{
			"id": 2549,
			"name": "defaultStoreReturnReasonFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
							"qualifiedName": "ReturnReason"
						},
						"name": "ReturnReason",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2550,
			"name": "defaultStoreReturnReasonRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
							"qualifiedName": "ReturnReason"
						},
						"name": "ReturnReason",
						"package": "@medusajs/medusa"
					}
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2551,
			"name": "StoreReturnReasonsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of return reasons."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2552,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2553,
							"name": "return_reasons",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of return reasons details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
										"qualifiedName": "ReturnReason"
									},
									"name": "ReturnReason",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2553
							]
						}
					]
				}
			}
		},
		{
			"id": 2554,
			"name": "StoreReturnReasonsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return reason's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2555,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2556,
							"name": "return_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return reason details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/return-reason.ts",
									"qualifiedName": "ReturnReason"
								},
								"name": "ReturnReason",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2556
							]
						}
					]
				}
			}
		},
		{
			"id": 4802,
			"name": "ReturnShipping",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4803,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4804,
							"name": "new ReturnShipping",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4802,
								"name": "ReturnShipping",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4805,
					"name": "option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create the Shipping Method from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4803
					]
				},
				{
					"title": "Properties",
					"children": [
						4805
					]
				}
			]
		},
		{
			"id": 4795,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4796,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4797,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4795,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4798,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the line item to return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4799,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4800,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the return reason. Return reasons can be retrieved from the List Return Reasons API Route."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4801,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A note to add to the item returned."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4796
					]
				},
				{
					"title": "Properties",
					"children": [
						4798,
						4799,
						4800,
						4801
					]
				}
			]
		},
		{
			"id": 2560,
			"name": "StorePostReturnsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the return to create."
					}
				]
			},
			"children": [
				{
					"id": 2561,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2562,
							"name": "new StorePostReturnsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the return to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2560,
								"name": "StorePostReturnsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2563,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Order to create the return for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2564,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items to include in the return."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4795,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 2565,
					"name": "return_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The return shipping method used to return the items. If provided, a fulfillment is automatically created for the return."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4802,
						"name": "ReturnShipping",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2561
					]
				},
				{
					"title": "Properties",
					"children": [
						2563,
						2564,
						2565
					]
				}
			]
		},
		{
			"id": 2557,
			"name": "StoreReturnsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2558,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2559,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/return.ts",
									"qualifiedName": "Return"
								},
								"name": "Return",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2559
							]
						}
					]
				}
			}
		},
		{
			"id": 2566,
			"name": "StoreShippingOptionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of shipping options."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2567,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2568,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of shipping options details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4806,
									"name": "PricedShippingOption",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2568
							]
						}
					]
				}
			}
		},
		{
			"id": 2569,
			"name": "StoreCartShippingOptionsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2570,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2571,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of shipping options details."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4806,
									"name": "PricedShippingOption",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2571
							]
						}
					]
				}
			}
		},
		{
			"id": 2572,
			"name": "StoreGetShippingOptionsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the retrieved shipping options."
					}
				]
			},
			"children": [
				{
					"id": 2573,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2574,
							"name": "new StoreGetShippingOptionsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2572,
								"name": "StoreGetShippingOptionsParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2575,
					"name": "product_ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Product ID that is used to filter shipping options by whether they can be used to ship that product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2576,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping options by the ID of their associated region."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2577,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter the shipping options by whether they're return shipping options."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2573
					]
				},
				{
					"title": "Properties",
					"children": [
						2575,
						2576,
						2577
					]
				}
			]
		},
		{
			"id": 4807,
			"name": "Item",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4808,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4809,
							"name": "new Item",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4807,
								"name": "Item",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4810,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order's line item to return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4811,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity to return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4812,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the reason of this return. Return reasons can be retrieved from the List Return Reasons API Route."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4813,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The note to add to the item being swapped."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4808
					]
				},
				{
					"title": "Properties",
					"children": [
						4810,
						4811,
						4812,
						4813
					]
				}
			]
		},
		{
			"id": 4814,
			"name": "AdditionalItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4815,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4816,
							"name": "new AdditionalItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4814,
								"name": "AdditionalItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4817,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4818,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4815
					]
				},
				{
					"title": "Properties",
					"children": [
						4817,
						4818
					]
				}
			]
		},
		{
			"id": 2583,
			"name": "StorePostSwapsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the swap to create."
					}
				]
			},
			"children": [
				{
					"id": 2584,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2585,
							"name": "new StorePostSwapsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The details of the swap to create."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 2583,
								"name": "StorePostSwapsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 2586,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Order to create the Swap for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2587,
					"name": "return_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items to include in the Return."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4807,
							"name": "Item",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 2588,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items to exchange the returned items with."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4814,
							"name": "AdditionalItem",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 2589,
					"name": "return_shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Shipping Option to create the Shipping Method from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2584
					]
				},
				{
					"title": "Properties",
					"children": [
						2586,
						2587,
						2588,
						2589
					]
				}
			]
		},
		{
			"id": 2578,
			"name": "defaultStoreSwapRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2579,
			"name": "defaultStoreSwapFields",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "literal",
					"value": "select"
				},
				"objectType": {
					"type": "reference",
					"target": 3853,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
								"qualifiedName": "Swap"
							},
							"name": "Swap",
							"package": "@medusajs/medusa"
						}
					],
					"name": "FindConfig",
					"package": "@medusajs/medusa"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2580,
			"name": "StoreSwapsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The swap's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2581,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2582,
							"name": "swap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Swap details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/swap.ts",
									"qualifiedName": "Swap"
								},
								"name": "Swap",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2582
							]
						}
					]
				}
			}
		},
		{
			"id": 2598,
			"name": "StoreGetVariantsVariantParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to apply on retrieved prices."
					}
				]
			},
			"children": [
				{
					"id": 2599,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2600,
							"name": "new StoreGetVariantsVariantParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2598,
								"name": "StoreGetVariantsVariantParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4789,
								"name": "PriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4788,
						"name": "PriceSelectionParams.constructor"
					}
				},
				{
					"id": 2601,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2605,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4793,
						"name": "PriceSelectionParams.expand"
					}
				},
				{
					"id": 2606,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4794,
						"name": "PriceSelectionParams.fields"
					}
				},
				{
					"id": 2602,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4790,
						"name": "PriceSelectionParams.cart_id"
					}
				},
				{
					"id": 2603,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4791,
						"name": "PriceSelectionParams.region_id"
					}
				},
				{
					"id": 2604,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4792,
						"name": "PriceSelectionParams.currency_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2599
					]
				},
				{
					"title": "Properties",
					"children": [
						2601,
						2605,
						2606,
						2602,
						2603,
						2604
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4787,
					"name": "PriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2590,
			"name": "defaultStoreVariantRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2591,
			"name": "allowedStoreVariantRelations",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 2592,
			"name": "StoreVariantsRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product variant's details."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2593,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2594,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Product variant description."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4769,
								"name": "PricedVariant",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2594
							]
						}
					]
				}
			}
		},
		{
			"id": 2595,
			"name": "StoreVariantsListRes",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The list of product variants."
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2596,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2597,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of product variant descriptions."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4769,
									"name": "PricedVariant",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2597
							]
						}
					]
				}
			}
		},
		{
			"id": 2607,
			"name": "StoreGetVariantsParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters used to filter and configure the pagination of the retrieved product variants."
					}
				]
			},
			"children": [
				{
					"id": 2608,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 2609,
							"name": "new StoreGetVariantsParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 2607,
								"name": "StoreGetVariantsParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4789,
								"name": "PriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4788,
						"name": "PriceSelectionParams.constructor"
					}
				},
				{
					"id": 2610,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n100\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "100"
				},
				{
					"id": 2611,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 2612,
					"name": "ids",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter the product variants by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2613,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter product variants by the ID of their associated sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2614,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 2615,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Titles to filter product variants by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 2616,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Number filters to apply on the product variants' "
							},
							{
								"kind": "code",
								"text": "`inventory_quantity`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 3934,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 2620,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4793,
						"name": "PriceSelectionParams.expand"
					}
				},
				{
					"id": 2621,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4794,
						"name": "PriceSelectionParams.fields"
					}
				},
				{
					"id": 2617,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4790,
						"name": "PriceSelectionParams.cart_id"
					}
				},
				{
					"id": 2618,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4791,
						"name": "PriceSelectionParams.region_id"
					}
				},
				{
					"id": 2619,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4792,
						"name": "PriceSelectionParams.currency_code"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2608
					]
				},
				{
					"title": "Properties",
					"children": [
						2610,
						2611,
						2612,
						2613,
						2614,
						2615,
						2616,
						2620,
						2621,
						2617,
						2618,
						2619
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4787,
					"name": "PriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2704,
			"name": "IBatchJobStrategy",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 2705,
					"name": "prepareBatchJobForProcessing",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2706,
							"name": "prepareBatchJobForProcessing",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Method for preparing a batch job for processing"
									}
								]
							},
							"parameters": [
								{
									"id": 2707,
									"name": "batchJobEntity",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3813,
										"name": "CreateBatchJobInput",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 2708,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
											"qualifiedName": "__global.Express.Request"
										},
										"name": "Request",
										"package": "@types/express-serve-static-core",
										"qualifiedName": "__global.Express.Request"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3813,
										"name": "CreateBatchJobInput",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2709,
					"name": "preProcessBatchJob",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2710,
							"name": "preProcessBatchJob",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Method for pre-processing a batch job"
									}
								]
							},
							"parameters": [
								{
									"id": 2711,
									"name": "batchJobId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2712,
					"name": "processJob",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2713,
							"name": "processJob",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Method does the actual processing of the job. Should report back on the progress of the operation."
									}
								]
							},
							"parameters": [
								{
									"id": 2714,
									"name": "batchJobId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2715,
					"name": "buildTemplate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2716,
							"name": "buildTemplate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Builds and returns a template file that can be downloaded and filled in"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2717,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					}
				},
				{
					"id": 2718,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					}
				},
				{
					"id": 2719,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 2720,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					}
				},
				{
					"id": 2721,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					}
				},
				{
					"id": 2722,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					}
				},
				{
					"id": 2723,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					}
				},
				{
					"id": 2724,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2725,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2726,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					}
				},
				{
					"id": 2727,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2728,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2729,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2730,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2731,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2731
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					}
				},
				{
					"id": 2732,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2733,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2734,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 2735,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 2736,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2737,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 2738,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2739,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 2740,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2741,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 2742,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 2743,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 2744,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2745,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 2746,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2747,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						2717,
						2718,
						2721,
						2722,
						2723
					]
				},
				{
					"title": "Accessors",
					"children": [
						2719
					]
				},
				{
					"title": "Methods",
					"children": [
						2705,
						2709,
						2712,
						2715,
						2724,
						2727,
						2732
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 2748,
					"name": "AbstractBatchJobStrategy"
				}
			]
		},
		{
			"id": 2748,
			"name": "AbstractBatchJobStrategy",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 2749,
					"name": "_isBatchJobStrategy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 2750,
					"name": "identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2751,
					"name": "batchType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 2760,
					"name": "batchJobService_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isAbstract": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/services/batch-job.ts",
							"qualifiedName": "BatchJobService"
						},
						"name": "BatchJobService",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 2752,
					"name": "isBatchJobStrategy",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"signatures": [
						{
							"id": 2753,
							"name": "isBatchJobStrategy",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2754,
									"name": "object",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "object",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 2704,
									"name": "IBatchJobStrategy",
									"package": "@medusajs/medusa"
								}
							}
						}
					]
				},
				{
					"id": 2761,
					"name": "prepareBatchJobForProcessing",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2762,
							"name": "prepareBatchJobForProcessing",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Method for preparing a batch job for processing"
									}
								]
							},
							"parameters": [
								{
									"id": 2763,
									"name": "batchJob",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3813,
										"name": "CreateBatchJobInput",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 2764,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/@types/express-serve-static-core/index.d.ts",
											"qualifiedName": "__global.Express.Request"
										},
										"name": "Request",
										"package": "@types/express-serve-static-core",
										"qualifiedName": "__global.Express.Request"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3813,
										"name": "CreateBatchJobInput",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2706,
								"name": "IBatchJobStrategy.prepareBatchJobForProcessing"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2705,
						"name": "IBatchJobStrategy.prepareBatchJobForProcessing"
					}
				},
				{
					"id": 2765,
					"name": "preProcessBatchJob",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"signatures": [
						{
							"id": 2766,
							"name": "preProcessBatchJob",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Method for pre-processing a batch job"
									}
								]
							},
							"parameters": [
								{
									"id": 2767,
									"name": "batchJobId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2710,
								"name": "IBatchJobStrategy.preProcessBatchJob"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2709,
						"name": "IBatchJobStrategy.preProcessBatchJob"
					}
				},
				{
					"id": 2768,
					"name": "processJob",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 2769,
							"name": "processJob",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Method does the actual processing of the job. Should report back on the progress of the operation."
									}
								]
							},
							"parameters": [
								{
									"id": 2770,
									"name": "batchJobId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2713,
								"name": "IBatchJobStrategy.processJob"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2712,
						"name": "IBatchJobStrategy.processJob"
					}
				},
				{
					"id": 2771,
					"name": "buildTemplate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 2772,
							"name": "buildTemplate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Builds and returns a template file that can be downloaded and filled in"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2716,
								"name": "IBatchJobStrategy.buildTemplate"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2715,
						"name": "IBatchJobStrategy.buildTemplate"
					}
				},
				{
					"id": 2773,
					"name": "shouldRetryOnProcessingError",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2774,
							"name": "shouldRetryOnProcessingError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2775,
									"name": "batchJob",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A Batch Job indicates an asynchronus task stored in the Medusa backend. Its status determines whether it has been executed or not."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
											"qualifiedName": "BatchJob"
										},
										"name": "BatchJob",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 2776,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2777,
					"name": "handleProcessingError",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2778,
							"name": "handleProcessingError",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameter": [
								{
									"id": 2779,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 2780,
									"name": "batchJobId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2781,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 2782,
									"name": "result",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 2779,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2783,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2717,
						"name": "IBatchJobStrategy.manager_"
					}
				},
				{
					"id": 2784,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2718,
						"name": "IBatchJobStrategy.transactionManager_"
					}
				},
				{
					"id": 2785,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 2786,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						},
						"implementationOf": {
							"type": "reference",
							"target": -1,
							"name": "IBatchJobStrategy.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2719,
						"name": "IBatchJobStrategy.activeManager_"
					}
				},
				{
					"id": 2755,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2756,
							"name": "new AbstractBatchJobStrategy",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 2757,
									"name": "__container__",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2758,
									"name": "__configModule__",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 2759,
									"name": "__moduleDeclaration__",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2748,
								"name": "AbstractBatchJobStrategy",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3768,
								"name": "TransactionBaseService.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3767,
						"name": "TransactionBaseService.constructor"
					}
				},
				{
					"id": 2787,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2721,
						"name": "IBatchJobStrategy.__container__"
					}
				},
				{
					"id": 2788,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2722,
						"name": "IBatchJobStrategy.__configModule__"
					}
				},
				{
					"id": 2789,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2723,
						"name": "IBatchJobStrategy.__moduleDeclaration__"
					}
				},
				{
					"id": 2790,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2791,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2792,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2725,
								"name": "IBatchJobStrategy.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2724,
						"name": "IBatchJobStrategy.withTransaction"
					}
				},
				{
					"id": 2793,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2794,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2795,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2796,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2797,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2797
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2728,
								"name": "IBatchJobStrategy.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2727,
						"name": "IBatchJobStrategy.shouldRetryTransaction_"
					}
				},
				{
					"id": 2798,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2799,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2800,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 2801,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 2802,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2803,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 2804,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2805,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 2806,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2807,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 2808,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 2809,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 2810,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2811,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 2812,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2813,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2733,
								"name": "IBatchJobStrategy.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2732,
						"name": "IBatchJobStrategy.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2755
					]
				},
				{
					"title": "Properties",
					"children": [
						2749,
						2750,
						2751,
						2760,
						2783,
						2784,
						2787,
						2788,
						2789
					]
				},
				{
					"title": "Accessors",
					"children": [
						2785
					]
				},
				{
					"title": "Methods",
					"children": [
						2752,
						2761,
						2765,
						2768,
						2771,
						2773,
						2777,
						2790,
						2793,
						2798
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 2704,
					"name": "IBatchJobStrategy",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2814,
			"name": "CartCompletionResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 2815,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 2816,
							"name": "response_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The response code for the completion request"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 2817,
							"name": "response_body",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The response body for the completion request"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								2816,
								2817
							]
						}
					]
				}
			}
		},
		{
			"id": 2818,
			"name": "ICartCompletionStrategy",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 2819,
					"name": "complete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2820,
							"name": "complete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Takes a cart id and completes the cart. This for example takes place when\ncreating an order or confirming a swap."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the response for the completion request"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2821,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the id of the Cart to complete."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2822,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the idempotency key for the request"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
											"qualifiedName": "IdempotencyKey"
										},
										"name": "IdempotencyKey",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 2823,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the request context for the completion request"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4851,
										"name": "RequestContext",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2814,
										"name": "CartCompletionResponse",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						2819
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 2824,
					"name": "AbstractCartCompletionStrategy"
				}
			]
		},
		{
			"id": 2824,
			"name": "AbstractCartCompletionStrategy",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 2825,
					"name": "_isCartCompletionStrategy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 2826,
					"name": "isCartCompletionStrategy",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"signatures": [
						{
							"id": 2827,
							"name": "isCartCompletionStrategy",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2828,
									"name": "object",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "object",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 2818,
									"name": "ICartCompletionStrategy",
									"package": "@medusajs/medusa"
								}
							}
						}
					]
				},
				{
					"id": 2834,
					"name": "complete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 2835,
							"name": "complete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Takes a cart id and completes the cart. This for example takes place when\ncreating an order or confirming a swap."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the response for the completion request"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2836,
									"name": "cartId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the id of the Cart to complete."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 2837,
									"name": "idempotencyKey",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Idempotency Key is used to continue a process in case of any failure that might occur."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/idempotency-key.ts",
											"qualifiedName": "IdempotencyKey"
										},
										"name": "IdempotencyKey",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 2838,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the request context for the completion request"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4851,
										"name": "RequestContext",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2814,
										"name": "CartCompletionResponse",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2820,
								"name": "ICartCompletionStrategy.complete"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2819,
						"name": "ICartCompletionStrategy.complete"
					}
				},
				{
					"id": 2839,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					}
				},
				{
					"id": 2840,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					}
				},
				{
					"id": 2841,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 2842,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					}
				},
				{
					"id": 2829,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2830,
							"name": "new AbstractCartCompletionStrategy",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 2831,
									"name": "__container__",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2832,
									"name": "__configModule__",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 2833,
									"name": "__moduleDeclaration__",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2824,
								"name": "AbstractCartCompletionStrategy",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3768,
								"name": "TransactionBaseService.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3767,
						"name": "TransactionBaseService.constructor"
					}
				},
				{
					"id": 2843,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					}
				},
				{
					"id": 2844,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					}
				},
				{
					"id": 2845,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					}
				},
				{
					"id": 2846,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2847,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2848,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					}
				},
				{
					"id": 2849,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2850,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2851,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2852,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2853,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2853
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					}
				},
				{
					"id": 2854,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2855,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2856,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 2857,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 2858,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2859,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 2860,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2861,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 2862,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2863,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 2864,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 2865,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 2866,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2867,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 2868,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2869,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2829
					]
				},
				{
					"title": "Properties",
					"children": [
						2825,
						2839,
						2840,
						2843,
						2844,
						2845
					]
				},
				{
					"title": "Accessors",
					"children": [
						2841
					]
				},
				{
					"title": "Methods",
					"children": [
						2826,
						2834,
						2846,
						2849,
						2854
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 2818,
					"name": "ICartCompletionStrategy",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 2870,
			"name": "IFileService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 2871,
					"name": "upload",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2872,
							"name": "upload",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "upload file to fileservice"
									}
								]
							},
							"parameters": [
								{
									"id": 2873,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Multer file from express multipart/form-data"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/@types/multer/index.d.ts",
											"qualifiedName": "__global.Express.Multer.File"
										},
										"name": "File",
										"package": "@types/multer",
										"qualifiedName": "__global.Express.Multer.File"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4765,
										"name": "FileServiceUploadResult",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2874,
					"name": "uploadProtected",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2875,
							"name": "uploadProtected",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "upload private file to fileservice"
									}
								]
							},
							"parameters": [
								{
									"id": 2876,
									"name": "file",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Multer file from express multipart/form-data"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/@types/multer/index.d.ts",
											"qualifiedName": "__global.Express.Multer.File"
										},
										"name": "File",
										"package": "@types/multer",
										"qualifiedName": "__global.Express.Multer.File"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4765,
										"name": "FileServiceUploadResult",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2877,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2878,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "remove file from fileservice"
									}
								]
							},
							"parameters": [
								{
									"id": 2879,
									"name": "fileData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Remove file described by record"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4854,
										"name": "DeleteFileType",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2880,
					"name": "getUploadStreamDescriptor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2881,
							"name": "getUploadStreamDescriptor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "upload file to fileservice from stream"
									}
								]
							},
							"parameters": [
								{
									"id": 2882,
									"name": "fileData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file metadata relevant for fileservice to create and upload the file"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4859,
										"name": "UploadStreamDescriptorType",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4866,
										"name": "FileServiceGetUploadStreamResult",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2883,
					"name": "getDownloadStream",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2884,
							"name": "getDownloadStream",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "download file from fileservice as stream"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "readable stream of the file to download"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2885,
									"name": "fileData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file metadata relevant for fileservice to download the file"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4874,
										"name": "GetUploadedFileType",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/node/globals.d.ts",
											"qualifiedName": "NodeJS.ReadableStream"
										},
										"name": "ReadableStream",
										"package": "@types/node",
										"qualifiedName": "NodeJS.ReadableStream"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2886,
					"name": "getPresignedDownloadUrl",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2887,
							"name": "getPresignedDownloadUrl",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generate a presigned download url to obtain a file"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "presigned url to download the file"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2888,
									"name": "fileData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file metadata relevant for fileservice to download the file"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4874,
										"name": "GetUploadedFileType",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2889,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					}
				},
				{
					"id": 2890,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					}
				},
				{
					"id": 2891,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 2892,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					}
				},
				{
					"id": 2893,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					}
				},
				{
					"id": 2894,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					}
				},
				{
					"id": 2895,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					}
				},
				{
					"id": 2896,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2897,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2898,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					}
				},
				{
					"id": 2899,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2900,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2901,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2902,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2903,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2903
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					}
				},
				{
					"id": 2904,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2905,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2906,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 2907,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 2908,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2909,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 2910,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2911,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 2912,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2913,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 2914,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 2915,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 2916,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2917,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 2918,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2919,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						2889,
						2890,
						2893,
						2894,
						2895
					]
				},
				{
					"title": "Accessors",
					"children": [
						2891
					]
				},
				{
					"title": "Methods",
					"children": [
						2871,
						2874,
						2877,
						2880,
						2883,
						2886,
						2896,
						2899,
						2904
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 2920,
					"name": "AbstractFileService"
				}
			]
		},
		{
			"id": 2920,
			"name": "AbstractFileService",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 2921,
					"name": "_isFileService",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 2922,
					"name": "isFileService",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"signatures": [
						{
							"id": 2923,
							"name": "isFileService",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2924,
									"name": "object",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "predicate",
								"name": "object",
								"asserts": false,
								"targetType": {
									"type": "reference",
									"target": 2920,
									"name": "AbstractFileService",
									"package": "@medusajs/medusa"
								}
							}
						}
					]
				},
				{
					"id": 2930,
					"name": "upload",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 2931,
							"name": "upload",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "upload file to fileservice"
									}
								]
							},
							"parameters": [
								{
									"id": 2932,
									"name": "fileData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Multer file from express multipart/form-data"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/@types/multer/index.d.ts",
											"qualifiedName": "__global.Express.Multer.File"
										},
										"name": "File",
										"package": "@types/multer",
										"qualifiedName": "__global.Express.Multer.File"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4765,
										"name": "FileServiceUploadResult",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2872,
								"name": "IFileService.upload"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2871,
						"name": "IFileService.upload"
					}
				},
				{
					"id": 2933,
					"name": "uploadProtected",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 2934,
							"name": "uploadProtected",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "upload private file to fileservice"
									}
								]
							},
							"parameters": [
								{
									"id": 2935,
									"name": "fileData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Multer file from express multipart/form-data"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/@types/multer/index.d.ts",
											"qualifiedName": "__global.Express.Multer.File"
										},
										"name": "File",
										"package": "@types/multer",
										"qualifiedName": "__global.Express.Multer.File"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4765,
										"name": "FileServiceUploadResult",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2875,
								"name": "IFileService.uploadProtected"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2874,
						"name": "IFileService.uploadProtected"
					}
				},
				{
					"id": 2936,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 2937,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "remove file from fileservice"
									}
								]
							},
							"parameters": [
								{
									"id": 2938,
									"name": "fileData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Remove file described by record"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4854,
										"name": "DeleteFileType",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2878,
								"name": "IFileService.delete"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2877,
						"name": "IFileService.delete"
					}
				},
				{
					"id": 2939,
					"name": "getUploadStreamDescriptor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 2940,
							"name": "getUploadStreamDescriptor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "upload file to fileservice from stream"
									}
								]
							},
							"parameters": [
								{
									"id": 2941,
									"name": "fileData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file metadata relevant for fileservice to create and upload the file"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4859,
										"name": "UploadStreamDescriptorType",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4866,
										"name": "FileServiceGetUploadStreamResult",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2881,
								"name": "IFileService.getUploadStreamDescriptor"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2880,
						"name": "IFileService.getUploadStreamDescriptor"
					}
				},
				{
					"id": 2942,
					"name": "getDownloadStream",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 2943,
							"name": "getDownloadStream",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "download file from fileservice as stream"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "readable stream of the file to download"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2944,
									"name": "fileData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file metadata relevant for fileservice to download the file"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4874,
										"name": "GetUploadedFileType",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/@types/node/globals.d.ts",
											"qualifiedName": "NodeJS.ReadableStream"
										},
										"name": "ReadableStream",
										"package": "@types/node",
										"qualifiedName": "NodeJS.ReadableStream"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2884,
								"name": "IFileService.getDownloadStream"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2883,
						"name": "IFileService.getDownloadStream"
					}
				},
				{
					"id": 2945,
					"name": "getPresignedDownloadUrl",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 2946,
							"name": "getPresignedDownloadUrl",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generate a presigned download url to obtain a file"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "presigned url to download the file"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2947,
									"name": "fileData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "file metadata relevant for fileservice to download the file"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4874,
										"name": "GetUploadedFileType",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2887,
								"name": "IFileService.getPresignedDownloadUrl"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2886,
						"name": "IFileService.getPresignedDownloadUrl"
					}
				},
				{
					"id": 2948,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2889,
						"name": "IFileService.manager_"
					}
				},
				{
					"id": 2949,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2890,
						"name": "IFileService.transactionManager_"
					}
				},
				{
					"id": 2950,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 2951,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						},
						"implementationOf": {
							"type": "reference",
							"target": -1,
							"name": "IFileService.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2891,
						"name": "IFileService.activeManager_"
					}
				},
				{
					"id": 2925,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2926,
							"name": "new AbstractFileService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 2927,
									"name": "__container__",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 2928,
									"name": "__configModule__",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 2929,
									"name": "__moduleDeclaration__",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 2920,
								"name": "AbstractFileService",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3768,
								"name": "TransactionBaseService.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3767,
						"name": "TransactionBaseService.constructor"
					}
				},
				{
					"id": 2952,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2893,
						"name": "IFileService.__container__"
					}
				},
				{
					"id": 2953,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2894,
						"name": "IFileService.__configModule__"
					}
				},
				{
					"id": 2954,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2895,
						"name": "IFileService.__moduleDeclaration__"
					}
				},
				{
					"id": 2955,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2956,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2957,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2897,
								"name": "IFileService.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2896,
						"name": "IFileService.withTransaction"
					}
				},
				{
					"id": 2958,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2959,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 2960,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2961,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 2962,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																2962
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2900,
								"name": "IFileService.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2899,
						"name": "IFileService.shouldRetryTransaction_"
					}
				},
				{
					"id": 2963,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 2964,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 2965,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 2966,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 2967,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2968,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 2969,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2970,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 2971,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 2972,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 2973,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 2974,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 2975,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 2976,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 2977,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 2978,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2905,
								"name": "IFileService.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 2904,
						"name": "IFileService.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2925
					]
				},
				{
					"title": "Properties",
					"children": [
						2921,
						2948,
						2949,
						2952,
						2953,
						2954
					]
				},
				{
					"title": "Accessors",
					"children": [
						2950
					]
				},
				{
					"title": "Methods",
					"children": [
						2922,
						2930,
						2933,
						2936,
						2939,
						2942,
						2945,
						2955,
						2958,
						2963
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 2870,
					"name": "IFileService",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 4881,
			"name": "FulfillmentProviderData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "unknown"
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 4880,
			"name": "ShippingOptionData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "unknown"
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 4882,
			"name": "ShippingMethodData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "unknown"
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 2979,
			"name": "FulfillmentService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "## Overview\n\nA fulfillment provider is the shipping provider used to fulfill orders and deliver them to customers. An example of a fulfillment provider is FedEx.\n\nBy default, a Medusa Backend has a "
					},
					{
						"kind": "code",
						"text": "`manual`"
					},
					{
						"kind": "text",
						"text": " fulfillment provider which has minimal implementation. It allows you to accept orders and fulfill them manually. However, you can integrate any fulfillment provider into Medusa, and your fulfillment provider can interact with third-party shipping providers.\n\nA fulfillment provider is a service that extends the "
					},
					{
						"kind": "code",
						"text": "`AbstractFulfillmentService`"
					},
					{
						"kind": "text",
						"text": " and implements its methods. So, adding a fulfillment provider is as simple as creating a service file in "
					},
					{
						"kind": "code",
						"text": "`src/services`"
					},
					{
						"kind": "text",
						"text": ".\nThe file's name is the fulfillment provider's class name as a slug and without the word "
					},
					{
						"kind": "code",
						"text": "`Service`"
					},
					{
						"kind": "text",
						"text": ". For example, if you're creating a "
					},
					{
						"kind": "code",
						"text": "`MyFulfillmentService`"
					},
					{
						"kind": "text",
						"text": " class, the file name is "
					},
					{
						"kind": "code",
						"text": "`src/services/my-fulfillment.ts`"
					},
					{
						"kind": "text",
						"text": ".\n\n"
					},
					{
						"kind": "code",
						"text": "```ts title=src/services/my-fulfillment.ts\nimport { AbstractFulfillmentService } from \"@medusajs/medusa\"\n\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // methods here...\n}\n\nexport default MyFulfillmentService\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---\n\n## Identifier Property\n\nThe "
					},
					{
						"kind": "code",
						"text": "`FulfillmentProvider`"
					},
					{
						"kind": "text",
						"text": " entity has 2 properties: "
					},
					{
						"kind": "code",
						"text": "`identifier`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`is_installed`"
					},
					{
						"kind": "text",
						"text": ". The "
					},
					{
						"kind": "code",
						"text": "`identifier`"
					},
					{
						"kind": "text",
						"text": " property in the fulfillment provider service is used when the fulfillment provider is added to the database.\n\nThe value of this property is also used to reference the fulfillment provider throughout Medusa. For example, it is used to [add a fulfillment provider](https://docs.medusajs.com/api/admin#regions_postregionsregionfulfillmentproviders) to a region.\n\n"
					},
					{
						"kind": "code",
						"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  static identifier = \"my-fulfillment\"\n\n  // ...\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---"
					}
				]
			},
			"children": [
				{
					"id": 2982,
					"name": "getFulfillmentOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2983,
							"name": "getFulfillmentOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used when retrieving the list of fulfillment options available in a region, particularly by the [List Fulfillment Options API Route](https://docs.medusajs.com/api/admin#regions_getregionsregionfulfillmentoptions).\nFor example, if you’re integrating UPS as a fulfillment provider, you might support two fulfillment options: UPS Express Shipping and UPS Access Point. Each of these options can have different data associated with them."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of fulfillment options. These options don't have any required format. Later on, these options can be used when creating a shipping option,\nsuch as when using the [Create Shipping Option API Route](https://docs.medusajs.com/api/admin#shipping-options_postshippingoptions). The chosen fulfillment option, which is one of the\nitems in the array returned by this method, will be set in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object of the shipping option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async getFulfillmentOptions(): Promise<any[]> {\n    return [\n      {\n        id: \"my-fulfillment\",\n      },\n      {\n        id: \"my-fulfillment-dynamic\",\n      },\n    ]\n  }\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2984,
					"name": "validateFulfillmentData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2985,
							"name": "validateFulfillmentData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is called when a shipping method is created. This typically happens when the customer chooses a shipping option during checkout, when a shipping method is created\nfor an order return, or in other similar cases. The shipping option and its data are validated before the shipping method is created.\n\nYou can use the provided parameters to validate the chosen shipping option. For example, you can check if the "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " object passed as a second parameter includes all data needed to\nfulfill the shipment later on.\n\nIf any of the data is invalid, you can throw an error. This error will stop Medusa from creating a shipping method and the error message will be returned as a result of the API Route."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The data that will be stored in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property of the shipping method to be created.\nMake sure the value you return contains everything you need to fulfill the shipment later on. The returned value may also be used to calculate the price of the shipping method\nif it doesn't have a set price. It will be passed along to the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "calculatePrice",
												"target": 2995,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " method."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async validateFulfillmentData(\n    optionData: Record<string, unknown>,\n    data: Record<string, unknown>,\n    cart: Cart\n  ): Promise<Record<string, unknown>> {\n    if (data.id !== \"my-fulfillment\") {\n      throw new Error(\"invalid data\")\n    }\n\n    return {\n      ...data,\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2986,
									"name": "optionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object of the shipping option selected when creating the shipping method."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4880,
										"name": "ShippingOptionData",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 2987,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object passed in the body of the request."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4881,
										"name": "FulfillmentProviderData",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 2988,
									"name": "cart",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The customer's cart details. It may be empty if the shipping method isn't associated with a cart, such as when it's associated with a claim."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2989,
					"name": "validateOption",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2990,
							"name": "validateOption",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Once the admin creates the shipping option, the data of the shipping option will be validated first using this method. This method is called when the [Create Shipping Option API Route](https://docs.medusajs.com/api/admin#shipping-options_postshippingoptions) is used."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the fulfillment option is valid. If the returned value is false, an error is thrown and the shipping option will not be saved."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, you can use this method to ensure that the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object is correct:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async validateOption(\n    data: Record<string, unknown>\n  ): Promise<boolean> {\n    return data.id == \"my-fulfillment\"\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2991,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the data object that is sent in the body of the request, basically, the data object of the shipping option. You can use this data to validate the shipping option before it is saved."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4880,
										"name": "ShippingOptionData",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2992,
					"name": "canCalculate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2993,
							"name": "canCalculate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to determine whether a shipping option is calculated dynamically or flat rate. It is called if the "
									},
									{
										"kind": "code",
										"text": "`price_type`"
									},
									{
										"kind": "text",
										"text": " of the shipping option being created is set to calculated."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "If this method returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ", that means that the price can be calculated dynamically and the shipping option can have the "
											},
											{
												"kind": "code",
												"text": "`price_type`"
											},
											{
												"kind": "text",
												"text": " set to calculated.\nThe amount property of the shipping option will then be set to null. The amount will be created later when the shipping method is created on checkout using the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "calculatePrice",
												"target": 2995,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " method.\nIf the method returns "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": ", an error is thrown as it means the selected shipping option is invalid and it can only have the "
											},
											{
												"kind": "code",
												"text": "`flat_rate`"
											},
											{
												"kind": "text",
												"text": " price type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async canCalculate(\n    data: Record<string, unknown>\n  ): Promise<boolean> {\n    return data.id === \"my-fulfillment-dynamic\"\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2994,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object of the shipping option being created. You can use this data to determine whether the shipping option should be calculated or not.\nThis is useful if the fulfillment provider you are integrating has both flat rate and dynamically priced fulfillment options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4880,
										"name": "ShippingOptionData",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 2995,
					"name": "calculatePrice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 2996,
							"name": "calculatePrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used in different places, including:\n\n1. When the shipping options for a cart are retrieved during checkout. If a shipping option has their "
									},
									{
										"kind": "code",
										"text": "`price_type`"
									},
									{
										"kind": "text",
										"text": " set to calculated, this method is used to set the amount of the returned shipping option.\n2. When a shipping method is created. If the shipping option associated with the method has their "
									},
									{
										"kind": "code",
										"text": "`price_type`"
									},
									{
										"kind": "text",
										"text": " set to "
									},
									{
										"kind": "code",
										"text": "`calculated`"
									},
									{
										"kind": "text",
										"text": ", this method is used to set the "
									},
									{
										"kind": "code",
										"text": "`price`"
									},
									{
										"kind": "text",
										"text": " attribute of the shipping method in the database.\n3. When the cart's totals are calculated."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Used to set the price of the shipping method or option, based on the context the method is used in."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "An example of calculating the price based on some custom logic:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async calculatePrice(\n    optionData: Record<string, unknown>,\n    data: Record<string, unknown>,\n    cart: Cart\n  ): Promise<number> {\n    return cart.items.length * 1000\n  }\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nIf your fulfillment provider does not provide any dynamically calculated rates you can return any static value or throw an error. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async calculatePrice(\n    optionData: Record<string, unknown>,\n    data: Record<string, unknown>,\n    cart: Cart\n  ): Promise<number> {\n    throw new Error(\"Method not implemented.\")\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 2997,
									"name": "optionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object of the selected shipping option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4880,
										"name": "ShippingOptionData",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 2998,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object that is different based on the context it's used in:\n\n1. If the price is being calculated for the list of shipping options available for a cart, it's the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object of the shipping option.\n2. If the price is being calculated when the shipping method is being created, it's the data returned by the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "validateFulfillmentData",
												"target": 2984,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " method used during the shipping method creation.\n3. If the price is being calculated while calculating the cart's totals, it will be the data object of the cart's shipping method."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4881,
										"name": "FulfillmentProviderData",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 2999,
									"name": "cart",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Either the Cart or the Order object."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3000,
					"name": "createFulfillment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3001,
							"name": "createFulfillment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used when a fulfillment is created for an order, a claim, or a swap."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The data that will be stored in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " attribute of the created fulfillment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "Here is a basic implementation of "
											},
											{
												"kind": "code",
												"text": "`createFulfillment`"
											},
											{
												"kind": "text",
												"text": " for a fulfillment provider that does not interact with any third-party provider to create the fulfillment:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async createFulfillment(\n    data: Record<string, unknown>,\n    items: LineItem[],\n    order: Order,\n    fulfillment: Fulfillment\n  ) {\n    // No data is being sent anywhere\n    // No data to be stored in the fulfillment's data object\n    return {}\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3002,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object of the shipping method associated with the resource, such as the order.\nYou can use it to access the data specific to the shipping option. This is based on your implementation of previous methods."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4882,
										"name": "ShippingMethodData",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3003,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line items in the order to be fulfilled. The admin can choose all or some of the items to fulfill."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
												"qualifiedName": "LineItem"
											},
											"name": "LineItem",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 3004,
									"name": "order",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the created resource, which is either an order, a claim, or a swap:\n- If the resource the fulfillment is being created for is a claim, the "
											},
											{
												"kind": "code",
												"text": "`is_claim`"
											},
											{
												"kind": "text",
												"text": " property in the object will be "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ".\n- If the resource the fulfillment is being created for is a swap, the "
											},
											{
												"kind": "code",
												"text": "`is_swap`"
											},
											{
												"kind": "text",
												"text": " property in the object will be "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ".\n- Otherwise, the resource is an order."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/order.ts",
											"qualifiedName": "Order"
										},
										"name": "Order",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3005,
									"name": "fulfillment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fulfillment being created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
											"qualifiedName": "Fulfillment"
										},
										"name": "Fulfillment",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4881,
										"name": "FulfillmentProviderData",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3006,
					"name": "cancelFulfillment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3007,
							"name": "cancelFulfillment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is called when a fulfillment is cancelled by the admin. This fulfillment can be for an order, a claim, or a swap."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The method isn't expected to return any specific data."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "This is the basic implementation of the method for a fulfillment provider that doesn't interact with a third-party provider to cancel the fulfillment:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends FulfillmentService {\n  // ...\n  async cancelFulfillment(\n    fulfillment: Record<string, unknown>\n  ): Promise<any> {\n    return {}\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3008,
									"name": "fulfillmentData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " attribute of the fulfillment being canceled"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4881,
										"name": "FulfillmentProviderData",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3009,
					"name": "createReturn",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3010,
							"name": "createReturn",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fulfillment providers can also be used to return products. A shipping option can be used for returns if the "
									},
									{
										"kind": "code",
										"text": "`is_return`"
									},
									{
										"kind": "text",
										"text": " property is true or if an admin creates a Return Shipping Option from the settings.\nThis method is used when the admin [creates a return request](https://docs.medusajs.com/api/admin#orders_postordersorderreturns) for an order,\n[creates a swap](https://docs.medusajs.com/api/admin#orders_postordersorderswaps) for an order, or when the\n[customer creates a return of their order](https://docs.medusajs.com/api/store#returns_postreturns). The fulfillment is created automatically for the order return."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Used to set the value of the "
											},
											{
												"kind": "code",
												"text": "`shipping_data`"
											},
											{
												"kind": "text",
												"text": " attribute of the return being created."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "This is the basic implementation of the method for a fulfillment provider that does not contact with a third-party provider to fulfill the return:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async createReturn(\n    returnOrder: CreateReturnType\n  ): Promise<Record<string, unknown>> {\n    return {}\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3011,
									"name": "returnOrder",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the return that the fulfillment is being created for."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4883,
										"name": "CreateReturnType",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3012,
					"name": "getFulfillmentDocuments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3013,
							"name": "getFulfillmentDocuments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve any documents associated with a fulfillment. This method isn't used by default in the backend, but you can use it for custom use cases such as allowing admins to download these documents."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There are no restrictions on the returned response. If your fulfillment provider doesn't provide this functionality, you can leave the method empty or through an error."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends FulfillmentService {\n  // ...\n  async getFulfillmentDocuments(\n    data: Record<string, unknown>\n  ): Promise<any> {\n    // assuming you contact a client to\n    // retrieve the document\n    return this.client.getFulfillmentDocuments()\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3014,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " attribute of the fulfillment that you're retrieving the documents for."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4881,
										"name": "FulfillmentProviderData",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3015,
					"name": "getReturnDocuments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3016,
							"name": "getReturnDocuments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve any documents associated with a return. This method isn't used by default in the backend, but you can use it for custom use cases such as allowing admins to download these documents."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There are no restrictions on the returned response. If your fulfillment provider doesn't provide this functionality, you can leave the method empty or through an error."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends FulfillmentService {\n  // ...\n  async getReturnDocuments(\n    data: Record<string, unknown>\n  ): Promise<any> {\n    // assuming you contact a client to\n    // retrieve the document\n    return this.client.getReturnDocuments()\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3017,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data attribute of the return that you're retrieving the documents for."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3018,
					"name": "getShipmentDocuments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3019,
							"name": "getShipmentDocuments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve any documents associated with a shipment. This method isn't used by default in the backend, but you can use it for custom use cases such as allowing admins to download these documents."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There are no restrictions on the returned response. If your fulfillment provider doesn't provide this functionality, you can leave the method empty or through an error."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends FulfillmentService {\n  // ...\n  async getShipmentDocuments(\n    data: Record<string, unknown>\n  ): Promise<any> {\n    // assuming you contact a client to\n    // retrieve the document\n    return this.client.getShipmentDocuments()\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3020,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " attribute of the shipment that you're retrieving the documents for."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3021,
					"name": "retrieveDocuments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3022,
							"name": "retrieveDocuments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve any documents associated with an order and its fulfillments. This method isn't used by default in the backend, but you can use it for\ncustom use cases such as allowing admins to download these documents."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There are no restrictions on the returned response. If your fulfillment provider doesn't provide this functionality, you can leave the method empty or through an error."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends FulfillmentService {\n  // ...\n  async retrieveDocuments(\n    fulfillmentData: Record<string, unknown>,\n    documentType: \"invoice\" | \"label\"\n  ): Promise<any> {\n    // assuming you contact a client to\n    // retrieve the document\n    return this.client.getDocuments()\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3023,
									"name": "fulfillmentData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " attribute of the order's fulfillment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4881,
										"name": "FulfillmentProviderData",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3024,
									"name": "documentType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of document to retrieve."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "label"
											},
											{
												"type": "literal",
												"value": "invoice"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3025,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					}
				},
				{
					"id": 3026,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					}
				},
				{
					"id": 3027,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 3028,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					}
				},
				{
					"id": 3029,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					}
				},
				{
					"id": 3030,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					}
				},
				{
					"id": 3031,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					}
				},
				{
					"id": 3032,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3033,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3034,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					}
				},
				{
					"id": 3035,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3036,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3037,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3038,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3039,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3039
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					}
				},
				{
					"id": 3040,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3041,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 3042,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 3043,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3044,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3045,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3046,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3047,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 3048,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3049,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 3050,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 3051,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 3052,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3053,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3054,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3055,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3025,
						3026,
						3029,
						3030,
						3031
					]
				},
				{
					"title": "Accessors",
					"children": [
						3027
					]
				},
				{
					"title": "Methods",
					"children": [
						2982,
						2984,
						2989,
						2992,
						2995,
						3000,
						3006,
						3009,
						3012,
						3015,
						3018,
						3021,
						3032,
						3035,
						3040
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 3056,
					"name": "AbstractFulfillmentService"
				}
			]
		},
		{
			"id": 3056,
			"name": "AbstractFulfillmentService",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 3062,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3063,
							"name": "new AbstractFulfillmentService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "You can use the "
									},
									{
										"kind": "code",
										"text": "`constructor`"
									},
									{
										"kind": "text",
										"text": " of your fulfillment provider to access the different services in Medusa through dependency injection.\n\nYou can also use the constructor to initialize your integration with the third-party provider. For example, if you use a client to connect to the third-party provider’s APIs, you can initialize it in the constructor and use it in other methods in the service.\nAdditionally, if you’re creating your fulfillment provider as an external plugin to be installed on any Medusa backend and you want to access the options added for the plugin, you can access it in the constructor."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  constructor(container, options) {\n    super(container)\n    // you can access options here\n\n    // you can also initialize a client that\n    // communicates with a third-party service.\n    this.client = new Client(options)\n  }\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3064,
									"name": "container",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An instance of "
											},
											{
												"kind": "code",
												"text": "`MedusaContainer`"
											},
											{
												"kind": "text",
												"text": " that allows you to access other resources, such as services, in your Medusa backend."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4884,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3065,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this fulfillment provider is created in a plugin, the plugin's options are passed in this parameter."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 3056,
								"name": "AbstractFulfillmentService",
								"package": "@medusajs/medusa"
							},
							"overwrites": {
								"type": "reference",
								"target": 3768,
								"name": "TransactionBaseService.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 3767,
						"name": "TransactionBaseService.constructor"
					}
				},
				{
					"id": 3066,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of "
							},
							{
								"kind": "code",
								"text": "`MedusaContainer`"
							},
							{
								"kind": "text",
								"text": " that allows you to access other resources, such as services, in your Medusa backend."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4884,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3067,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If this fulfillment provider is created in a plugin, the plugin's options are passed in this parameter."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 3061,
					"name": "identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`FulfillmentProvider`"
							},
							{
								"kind": "text",
								"text": " entity has 2 properties: "
							},
							{
								"kind": "code",
								"text": "`identifier`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`is_installed`"
							},
							{
								"kind": "text",
								"text": ". The "
							},
							{
								"kind": "code",
								"text": "`identifier`"
							},
							{
								"kind": "text",
								"text": " property in the class is used when the fulfillment provider is created in the database.\nThe value of this property is also used to reference the fulfillment provider throughout Medusa. For example, it is used to [add a fulfillment provider](https://docs.medusajs.com/api/admin#regions_postregionsregionfulfillmentproviders) to a region."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  static identifier = \"my-fulfillment\"\n\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3070,
					"name": "getFulfillmentOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3071,
							"name": "getFulfillmentOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used when retrieving the list of fulfillment options available in a region, particularly by the [List Fulfillment Options API Route](https://docs.medusajs.com/api/admin#regions_getregionsregionfulfillmentoptions).\nFor example, if you’re integrating UPS as a fulfillment provider, you might support two fulfillment options: UPS Express Shipping and UPS Access Point. Each of these options can have different data associated with them."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of fulfillment options. These options don't have any required format. Later on, these options can be used when creating a shipping option,\nsuch as when using the [Create Shipping Option API Route](https://docs.medusajs.com/api/admin#shipping-options_postshippingoptions). The chosen fulfillment option, which is one of the\nitems in the array returned by this method, will be set in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object of the shipping option."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async getFulfillmentOptions(): Promise<any[]> {\n    return [\n      {\n        id: \"my-fulfillment\",\n      },\n      {\n        id: \"my-fulfillment-dynamic\",\n      },\n    ]\n  }\n}\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2983,
								"name": "FulfillmentService.getFulfillmentOptions"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2982,
						"name": "FulfillmentService.getFulfillmentOptions"
					}
				},
				{
					"id": 3072,
					"name": "validateFulfillmentData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3073,
							"name": "validateFulfillmentData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is called when a shipping method is created. This typically happens when the customer chooses a shipping option during checkout, when a shipping method is created\nfor an order return, or in other similar cases. The shipping option and its data are validated before the shipping method is created.\n\nYou can use the provided parameters to validate the chosen shipping option. For example, you can check if the "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " object passed as a second parameter includes all data needed to\nfulfill the shipment later on.\n\nIf any of the data is invalid, you can throw an error. This error will stop Medusa from creating a shipping method and the error message will be returned as a result of the API Route."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The data that will be stored in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " property of the shipping method to be created.\nMake sure the value you return contains everything you need to fulfill the shipment later on. The returned value may also be used to calculate the price of the shipping method\nif it doesn't have a set price. It will be passed along to the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "calculatePrice",
												"target": 2995,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " method."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async validateFulfillmentData(\n    optionData: Record<string, unknown>,\n    data: Record<string, unknown>,\n    cart: Cart\n  ): Promise<Record<string, unknown>> {\n    if (data.id !== \"my-fulfillment\") {\n      throw new Error(\"invalid data\")\n    }\n\n    return {\n      ...data,\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3074,
									"name": "optionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object of the shipping option selected when creating the shipping method."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4880,
										"name": "ShippingOptionData",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3075,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object passed in the body of the request."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4881,
										"name": "FulfillmentProviderData",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3076,
									"name": "cart",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A cart represents a virtual shopping bag. It can be used to complete an order, a swap, or a claim."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2985,
								"name": "FulfillmentService.validateFulfillmentData"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2984,
						"name": "FulfillmentService.validateFulfillmentData"
					}
				},
				{
					"id": 3077,
					"name": "validateOption",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3078,
							"name": "validateOption",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Once the admin creates the shipping option, the data of the shipping option will be validated first using this method. This method is called when the [Create Shipping Option API Route](https://docs.medusajs.com/api/admin#shipping-options_postshippingoptions) is used."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the fulfillment option is valid. If the returned value is false, an error is thrown and the shipping option will not be saved."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, you can use this method to ensure that the "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object is correct:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async validateOption(\n    data: Record<string, unknown>\n  ): Promise<boolean> {\n    return data.id == \"my-fulfillment\"\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3079,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the data object that is sent in the body of the request, basically, the data object of the shipping option. You can use this data to validate the shipping option before it is saved."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4880,
										"name": "ShippingOptionData",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2990,
								"name": "FulfillmentService.validateOption"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2989,
						"name": "FulfillmentService.validateOption"
					}
				},
				{
					"id": 3080,
					"name": "canCalculate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3081,
							"name": "canCalculate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to determine whether a shipping option is calculated dynamically or flat rate. It is called if the "
									},
									{
										"kind": "code",
										"text": "`price_type`"
									},
									{
										"kind": "text",
										"text": " of the shipping option being created is set to calculated."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "If this method returns "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ", that means that the price can be calculated dynamically and the shipping option can have the "
											},
											{
												"kind": "code",
												"text": "`price_type`"
											},
											{
												"kind": "text",
												"text": " set to calculated.\nThe amount property of the shipping option will then be set to null. The amount will be created later when the shipping method is created on checkout using the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "calculatePrice",
												"target": 2995,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " method.\nIf the method returns "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": ", an error is thrown as it means the selected shipping option is invalid and it can only have the "
											},
											{
												"kind": "code",
												"text": "`flat_rate`"
											},
											{
												"kind": "text",
												"text": " price type."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async canCalculate(\n    data: Record<string, unknown>\n  ): Promise<boolean> {\n    return data.id === \"my-fulfillment-dynamic\"\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3082,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object of the shipping option being created. You can use this data to determine whether the shipping option should be calculated or not.\nThis is useful if the fulfillment provider you are integrating has both flat rate and dynamically priced fulfillment options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4880,
										"name": "ShippingOptionData",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2993,
								"name": "FulfillmentService.canCalculate"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2992,
						"name": "FulfillmentService.canCalculate"
					}
				},
				{
					"id": 3083,
					"name": "calculatePrice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3084,
							"name": "calculatePrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used in different places, including:\n\n1. When the shipping options for a cart are retrieved during checkout. If a shipping option has their "
									},
									{
										"kind": "code",
										"text": "`price_type`"
									},
									{
										"kind": "text",
										"text": " set to calculated, this method is used to set the amount of the returned shipping option.\n2. When a shipping method is created. If the shipping option associated with the method has their "
									},
									{
										"kind": "code",
										"text": "`price_type`"
									},
									{
										"kind": "text",
										"text": " set to "
									},
									{
										"kind": "code",
										"text": "`calculated`"
									},
									{
										"kind": "text",
										"text": ", this method is used to set the "
									},
									{
										"kind": "code",
										"text": "`price`"
									},
									{
										"kind": "text",
										"text": " attribute of the shipping method in the database.\n3. When the cart's totals are calculated."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Used to set the price of the shipping method or option, based on the context the method is used in."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "An example of calculating the price based on some custom logic:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async calculatePrice(\n    optionData: Record<string, unknown>,\n    data: Record<string, unknown>,\n    cart: Cart\n  ): Promise<number> {\n    return cart.items.length * 1000\n  }\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nIf your fulfillment provider does not provide any dynamically calculated rates you can return any static value or throw an error. For example:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async calculatePrice(\n    optionData: Record<string, unknown>,\n    data: Record<string, unknown>,\n    cart: Cart\n  ): Promise<number> {\n    throw new Error(\"Method not implemented.\")\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3085,
									"name": "optionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object of the selected shipping option."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4880,
										"name": "ShippingOptionData",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3086,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object that is different based on the context it's used in:\n\n1. If the price is being calculated for the list of shipping options available for a cart, it's the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object of the shipping option.\n2. If the price is being calculated when the shipping method is being created, it's the data returned by the "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "validateFulfillmentData",
												"target": 2984,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": " method used during the shipping method creation.\n3. If the price is being calculated while calculating the cart's totals, it will be the data object of the cart's shipping method."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4881,
										"name": "FulfillmentProviderData",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3087,
									"name": "cart",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A cart represents a virtual shopping bag. It can be used to complete an order, a swap, or a claim."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 2996,
								"name": "FulfillmentService.calculatePrice"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 2995,
						"name": "FulfillmentService.calculatePrice"
					}
				},
				{
					"id": 3088,
					"name": "createFulfillment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3089,
							"name": "createFulfillment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used when a fulfillment is created for an order, a claim, or a swap."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The data that will be stored in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " attribute of the created fulfillment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "Here is a basic implementation of "
											},
											{
												"kind": "code",
												"text": "`createFulfillment`"
											},
											{
												"kind": "text",
												"text": " for a fulfillment provider that does not interact with any third-party provider to create the fulfillment:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async createFulfillment(\n    data: Record<string, unknown>,\n    items: LineItem[],\n    order: Order,\n    fulfillment: Fulfillment\n  ) {\n    // No data is being sent anywhere\n    // No data to be stored in the fulfillment's data object\n    return {}\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3090,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " object of the shipping method associated with the resource, such as the order.\nYou can use it to access the data specific to the shipping option. This is based on your implementation of previous methods."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4882,
										"name": "ShippingMethodData",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3091,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line items in the order to be fulfilled. The admin can choose all or some of the items to fulfill."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
												"qualifiedName": "LineItem"
											},
											"name": "LineItem",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 3092,
									"name": "order",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An order is a purchase made by a customer. It holds details about payment and fulfillment of the order. An order may also be created from a draft order, which is created by an admin user."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/order.ts",
											"qualifiedName": "Order"
										},
										"name": "Order",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3093,
									"name": "fulfillment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A Fulfillment is created once an admin can prepare the purchased goods. Fulfillments will eventually be shipped and hold information about how to track shipments. Fulfillments are created through a fulfillment provider, which typically integrates a third-party shipping service. Fulfillments can be associated with orders, claims, swaps, and returns."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/fulfillment.ts",
											"qualifiedName": "Fulfillment"
										},
										"name": "Fulfillment",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4881,
										"name": "FulfillmentProviderData",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3001,
								"name": "FulfillmentService.createFulfillment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3000,
						"name": "FulfillmentService.createFulfillment"
					}
				},
				{
					"id": 3094,
					"name": "cancelFulfillment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3095,
							"name": "cancelFulfillment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is called when a fulfillment is cancelled by the admin. This fulfillment can be for an order, a claim, or a swap."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The method isn't expected to return any specific data."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "This is the basic implementation of the method for a fulfillment provider that doesn't interact with a third-party provider to cancel the fulfillment:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends FulfillmentService {\n  // ...\n  async cancelFulfillment(\n    fulfillment: Record<string, unknown>\n  ): Promise<any> {\n    return {}\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3096,
									"name": "fulfillment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " attribute of the fulfillment being canceled"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4881,
										"name": "FulfillmentProviderData",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3007,
								"name": "FulfillmentService.cancelFulfillment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3006,
						"name": "FulfillmentService.cancelFulfillment"
					}
				},
				{
					"id": 3097,
					"name": "createReturn",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3098,
							"name": "createReturn",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fulfillment providers can also be used to return products. A shipping option can be used for returns if the "
									},
									{
										"kind": "code",
										"text": "`is_return`"
									},
									{
										"kind": "text",
										"text": " property is true or if an admin creates a Return Shipping Option from the settings.\nThis method is used when the admin [creates a return request](https://docs.medusajs.com/api/admin#orders_postordersorderreturns) for an order,\n[creates a swap](https://docs.medusajs.com/api/admin#orders_postordersorderswaps) for an order, or when the\n[customer creates a return of their order](https://docs.medusajs.com/api/store#returns_postreturns). The fulfillment is created automatically for the order return."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Used to set the value of the "
											},
											{
												"kind": "code",
												"text": "`shipping_data`"
											},
											{
												"kind": "text",
												"text": " attribute of the return being created."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "This is the basic implementation of the method for a fulfillment provider that does not contact with a third-party provider to fulfill the return:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends AbstractFulfillmentService {\n  // ...\n  async createReturn(\n    returnOrder: CreateReturnType\n  ): Promise<Record<string, unknown>> {\n    return {}\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3099,
									"name": "returnOrder",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the return that the fulfillment is being created for."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4883,
										"name": "CreateReturnType",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3010,
								"name": "FulfillmentService.createReturn"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3009,
						"name": "FulfillmentService.createReturn"
					}
				},
				{
					"id": 3100,
					"name": "getFulfillmentDocuments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3101,
							"name": "getFulfillmentDocuments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve any documents associated with a fulfillment. This method isn't used by default in the backend, but you can use it for custom use cases such as allowing admins to download these documents."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There are no restrictions on the returned response. If your fulfillment provider doesn't provide this functionality, you can leave the method empty or through an error."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends FulfillmentService {\n  // ...\n  async getFulfillmentDocuments(\n    data: Record<string, unknown>\n  ): Promise<any> {\n    // assuming you contact a client to\n    // retrieve the document\n    return this.client.getFulfillmentDocuments()\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3102,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " attribute of the fulfillment that you're retrieving the documents for."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4881,
										"name": "FulfillmentProviderData",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3013,
								"name": "FulfillmentService.getFulfillmentDocuments"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3012,
						"name": "FulfillmentService.getFulfillmentDocuments"
					}
				},
				{
					"id": 3103,
					"name": "getReturnDocuments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3104,
							"name": "getReturnDocuments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve any documents associated with a return. This method isn't used by default in the backend, but you can use it for custom use cases such as allowing admins to download these documents."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There are no restrictions on the returned response. If your fulfillment provider doesn't provide this functionality, you can leave the method empty or through an error."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends FulfillmentService {\n  // ...\n  async getReturnDocuments(\n    data: Record<string, unknown>\n  ): Promise<any> {\n    // assuming you contact a client to\n    // retrieve the document\n    return this.client.getReturnDocuments()\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3105,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data attribute of the return that you're retrieving the documents for."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3016,
								"name": "FulfillmentService.getReturnDocuments"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3015,
						"name": "FulfillmentService.getReturnDocuments"
					}
				},
				{
					"id": 3106,
					"name": "getShipmentDocuments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3107,
							"name": "getShipmentDocuments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve any documents associated with a shipment. This method isn't used by default in the backend, but you can use it for custom use cases such as allowing admins to download these documents."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There are no restrictions on the returned response. If your fulfillment provider doesn't provide this functionality, you can leave the method empty or through an error."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends FulfillmentService {\n  // ...\n  async getShipmentDocuments(\n    data: Record<string, unknown>\n  ): Promise<any> {\n    // assuming you contact a client to\n    // retrieve the document\n    return this.client.getShipmentDocuments()\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3108,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " attribute of the shipment that you're retrieving the documents for."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3019,
								"name": "FulfillmentService.getShipmentDocuments"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3018,
						"name": "FulfillmentService.getShipmentDocuments"
					}
				},
				{
					"id": 3109,
					"name": "retrieveDocuments",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3110,
							"name": "retrieveDocuments",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve any documents associated with an order and its fulfillments. This method isn't used by default in the backend, but you can use it for\ncustom use cases such as allowing admins to download these documents."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "There are no restrictions on the returned response. If your fulfillment provider doesn't provide this functionality, you can leave the method empty or through an error."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyFulfillmentService extends FulfillmentService {\n  // ...\n  async retrieveDocuments(\n    fulfillmentData: Record<string, unknown>,\n    documentType: \"invoice\" | \"label\"\n  ): Promise<any> {\n    // assuming you contact a client to\n    // retrieve the document\n    return this.client.getDocuments()\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3111,
									"name": "fulfillmentData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " attribute of the order's fulfillment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 3112,
									"name": "documentType",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of document to retrieve."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "label"
											},
											{
												"type": "literal",
												"value": "invoice"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3022,
								"name": "FulfillmentService.retrieveDocuments"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3021,
						"name": "FulfillmentService.retrieveDocuments"
					}
				},
				{
					"id": 3113,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3025,
						"name": "FulfillmentService.manager_"
					}
				},
				{
					"id": 3114,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3026,
						"name": "FulfillmentService.transactionManager_"
					}
				},
				{
					"id": 3115,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 3116,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						},
						"implementationOf": {
							"type": "reference",
							"target": -1,
							"name": "FulfillmentService.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3027,
						"name": "FulfillmentService.activeManager_"
					}
				},
				{
					"id": 3117,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3029,
						"name": "FulfillmentService.__container__"
					}
				},
				{
					"id": 3118,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3030,
						"name": "FulfillmentService.__configModule__"
					}
				},
				{
					"id": 3119,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3031,
						"name": "FulfillmentService.__moduleDeclaration__"
					}
				},
				{
					"id": 3120,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3121,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3122,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3033,
								"name": "FulfillmentService.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3032,
						"name": "FulfillmentService.withTransaction"
					}
				},
				{
					"id": 3123,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3124,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3125,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3126,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3127,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3127
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3036,
								"name": "FulfillmentService.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3035,
						"name": "FulfillmentService.shouldRetryTransaction_"
					}
				},
				{
					"id": 3128,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3129,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 3130,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 3131,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3132,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3133,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3134,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3135,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 3136,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3137,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 3138,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 3139,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 3140,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3141,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3142,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3143,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3041,
								"name": "FulfillmentService.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3040,
						"name": "FulfillmentService.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3062
					]
				},
				{
					"title": "Properties",
					"children": [
						3066,
						3067,
						3061,
						3113,
						3114,
						3117,
						3118,
						3119
					]
				},
				{
					"title": "Accessors",
					"children": [
						3115
					]
				},
				{
					"title": "Methods",
					"children": [
						3070,
						3072,
						3077,
						3080,
						3083,
						3088,
						3094,
						3097,
						3100,
						3103,
						3106,
						3109,
						3120,
						3123,
						3128
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 2979,
					"name": "FulfillmentService",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 3144,
			"name": "ReturnedData",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a sent or resent notification."
					}
				]
			},
			"children": [
				{
					"id": 3145,
					"name": "to",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The receiver of the Notification. For example, if you sent an email to the customer then "
							},
							{
								"kind": "code",
								"text": "`to`"
							},
							{
								"kind": "text",
								"text": " is the email address of the customer.\nIn other cases, it might be a phone number or a username."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3146,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the sent notification. There are no restriction on the returned status."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3147,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data used to send the Notification. For example, if you sent an order confirmation email to the customer, then the "
							},
							{
								"kind": "code",
								"text": "`data`"
							},
							{
								"kind": "text",
								"text": " object\nmight include the order items or the subject of the email. This "
							},
							{
								"kind": "code",
								"text": "`data`"
							},
							{
								"kind": "text",
								"text": " is necessary if the notification is resent later as you can use the same data."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3145,
						3146,
						3147
					]
				}
			]
		},
		{
			"id": 3148,
			"name": "INotificationService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "## Overview\n\n:::note[Prerequisites]\n\nBefore creating a Notification Provider, [install an event bus module](https://docs.medusajs.com/development/events/modules/redis).\n\n:::\n\nA Notification Provider is a provider that handles sending and resending of notifications.\n\nTo create a Notification Provider, create a TypeScript or JavaScript file in "
					},
					{
						"kind": "code",
						"text": "`src/services`"
					},
					{
						"kind": "text",
						"text": ". The name of the file is the name of the provider\n(for example, "
					},
					{
						"kind": "code",
						"text": "`sendgrid.ts`"
					},
					{
						"kind": "text",
						"text": "). The file must export a class that extends the "
					},
					{
						"kind": "code",
						"text": "`AbstractNotificationService`"
					},
					{
						"kind": "text",
						"text": " class imported from "
					},
					{
						"kind": "code",
						"text": "`@medusajs/medusa`"
					},
					{
						"kind": "text",
						"text": ".\n\nFor example, create the file "
					},
					{
						"kind": "code",
						"text": "`src/services/email-sender.ts`"
					},
					{
						"kind": "text",
						"text": " with the following content:\n\n"
					},
					{
						"kind": "code",
						"text": "```ts title=\"src/services/email-sender.ts\"\nimport { AbstractNotificationService } from \"@medusajs/medusa\"\nimport { EntityManager } from \"typeorm\"\n\nclass EmailSenderService extends AbstractNotificationService {\n  protected manager_: EntityManager\n  protected transactionManager_: EntityManager\n\n  sendNotification(\n    event: string,\n    data: unknown,\n    attachmentGenerator: unknown\n  ): Promise<{\n      to: string;\n      status: string;\n      data: Record<string, unknown>;\n    }> {\n    throw new Error(\"Method not implemented.\")\n  }\n  resendNotification(\n    notification: unknown,\n    config: unknown,\n    attachmentGenerator: unknown\n  ): Promise<{\n      to: string;\n      status: string;\n      data: Record<string, unknown>;\n    }> {\n    throw new Error(\"Method not implemented.\")\n  }\n\n}\n\nexport default EmailSenderService\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---\n\n## Identifier Property\n\nThe "
					},
					{
						"kind": "code",
						"text": "`NotificationProvider`"
					},
					{
						"kind": "text",
						"text": " entity has 2 properties: "
					},
					{
						"kind": "code",
						"text": "`identifier`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`is_installed`"
					},
					{
						"kind": "text",
						"text": ". The value of the "
					},
					{
						"kind": "code",
						"text": "`identifier`"
					},
					{
						"kind": "text",
						"text": " property in the notification provider\nclass is used when the Notification Provider is created in the database.\n\nThe value of this property is also used later when you want to subscribe the Notification Provider to events in a [Loader](https://docs.medusajs.com/development/loaders/overview).\n\nFor example:\n\n"
					},
					{
						"kind": "code",
						"text": "```ts\nclass EmailSenderService extends AbstractNotificationService {\n  static identifier = \"email-sender\"\n  // ...\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---"
					}
				]
			},
			"children": [
				{
					"id": 3149,
					"name": "sendNotification",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3150,
							"name": "sendNotification",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When an event is triggered that your Notification Provider is registered as a handler for, the ["
									},
									{
										"kind": "code",
										"text": "`NotificationService`"
									},
									{
										"kind": "text",
										"text": "](https://docs.medusajs.com/references/services/classes/services.NotificationService)\nin the Medusa backend executes this method of your Notification Provider.\n\nIn this method, you can perform the necessary operation to send the Notification. For example, you can send an email to the customer when they place an order."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The sending details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass EmailSenderService extends AbstractNotificationService {\n  // ...\n  async sendNotification(\n    event: string,\n    data: any,\n    attachmentGenerator: unknown\n  ): Promise<{\n      to: string;\n      status: string;\n      data: Record<string, unknown>;\n    }> {\n    if (event === \"order.placed\") {\n      // retrieve order\n      const order = await this.orderService.retrieve(data.id)\n      // TODO send email\n\n      console.log(\"Notification sent\")\n      return {\n        to: order.email,\n        status: \"done\",\n        data: {\n          // any data necessary to send the email\n          // for example:\n          subject: \"You placed a new order!\",\n          items: order.items,\n        },\n      }\n    }\n  }\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3151,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event that was triggered. For example, "
											},
											{
												"kind": "code",
												"text": "`order.placed`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3152,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data payload of the event that was triggered. For example, if the "
											},
											{
												"kind": "code",
												"text": "`order.placed`"
											},
											{
												"kind": "text",
												"text": " event is triggered,\nthe "
											},
											{
												"kind": "code",
												"text": "`eventData`"
											},
											{
												"kind": "text",
												"text": " object contains the property "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " which is the ID of the order that was placed. You can refer to the\n[Events reference](https://docs.medusajs.com/development/events/events-list) for information on all events and their payloads."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 3153,
									"name": "attachmentGenerator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If you’ve previously register an attachment generator to the "
											},
											{
												"kind": "code",
												"text": "`NotificationService`"
											},
											{
												"kind": "text",
												"text": " using the\n["
											},
											{
												"kind": "code",
												"text": "`registerAttachmentGenerator`"
											},
											{
												"kind": "text",
												"text": "](https://docs.medusajs.com/references/services/classes/services.NotificationService#registerattachmentgenerator) method,\nyou have access to it here. You can use the "
											},
											{
												"kind": "code",
												"text": "`attachmentGenerator`"
											},
											{
												"kind": "text",
												"text": " to generate on-demand invoices or other documents. The default value of this parameter is "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3144,
										"name": "ReturnedData",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3154,
					"name": "resendNotification",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3155,
							"name": "resendNotification",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to resend notifications, which is typically triggered by the\n[Resend Notification API Route](https://docs.medusajs.com/api/admin#notifications_postnotificationsnotificationresend)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The resend details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass EmailSenderService extends AbstractNotificationService {\n  // ...\n  async resendNotification(\n    notification: any,\n    config: any,\n    attachmentGenerator: unknown\n  ): Promise<{\n      to: string;\n      status: string;\n      data: Record<string, unknown>;\n    }> {\n    // check if the receiver should be changed\n    const to: string = config.to || notification.to\n\n    // TODO resend the notification using the same data\n    // that is saved under notification.data\n\n    console.log(\"Notification resent\")\n    return {\n      to,\n      status: \"done\",\n      data: notification.data, // make changes to the data\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3156,
									"name": "notification",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The original [Notification record](https://docs.medusajs.com/references/entities/classes/Notification) that was created after you sent the\nnotification with "
											},
											{
												"kind": "code",
												"text": "`sendNotification`"
											},
											{
												"kind": "text",
												"text": ". It includes the "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " attributes which are populated originally using the "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " properties of\nthe object you return in "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "sendNotification",
												"target": 3149,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 3157,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The new configuration used to resend the notification. The [Resend Notification API Route](https://docs.medusajs.com/api/admin#notifications_postnotificationsnotificationresend),\nallows you to pass a new "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " field. If specified, it will be available in this config object."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 3158,
									"name": "attachmentGenerator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "f you’ve previously register an attachment generator to the "
											},
											{
												"kind": "code",
												"text": "`NotificationService`"
											},
											{
												"kind": "text",
												"text": " using the\n["
											},
											{
												"kind": "code",
												"text": "`registerAttachmentGenerator`"
											},
											{
												"kind": "text",
												"text": "](https://docs.medusajs.com/references/services/classes/services.NotificationService#registerattachmentgenerator) method,\nyou have access to it here. You can use the "
											},
											{
												"kind": "code",
												"text": "`attachmentGenerator`"
											},
											{
												"kind": "text",
												"text": " to generate on-demand invoices or other documents. The default value of this parameter is "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3144,
										"name": "ReturnedData",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3159,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					}
				},
				{
					"id": 3160,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					}
				},
				{
					"id": 3161,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 3162,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					}
				},
				{
					"id": 3163,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					}
				},
				{
					"id": 3164,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					}
				},
				{
					"id": 3165,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					}
				},
				{
					"id": 3166,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3167,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3168,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					}
				},
				{
					"id": 3169,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3170,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3171,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3172,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3173,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3173
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					}
				},
				{
					"id": 3174,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3175,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 3176,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 3177,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3178,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3179,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3180,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3181,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 3182,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3183,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 3184,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 3185,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 3186,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3187,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3188,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3189,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3159,
						3160,
						3163,
						3164,
						3165
					]
				},
				{
					"title": "Accessors",
					"children": [
						3161
					]
				},
				{
					"title": "Methods",
					"children": [
						3149,
						3154,
						3166,
						3169,
						3174
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 3190,
					"name": "AbstractNotificationService"
				}
			]
		},
		{
			"id": 3190,
			"name": "AbstractNotificationService",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 3192,
					"name": "identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3196,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3197,
							"name": "new AbstractNotificationService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "You can use the "
									},
									{
										"kind": "code",
										"text": "`constructor`"
									},
									{
										"kind": "text",
										"text": " of your notification provider to access the different services in Medusa through dependency injection.\n\nYou can also use the constructor to initialize your integration with the third-party provider. For example, if you use a client to connect to the third-party provider’s APIs,\nyou can initialize it in the constructor and use it in other methods in the service.\n\nAdditionally, if you’re creating your notification provider as an external plugin to be installed on any Medusa backend and you want to access the options\nadded for the plugin, you can access it in the constructor."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// ...\nimport { AbstractNotificationService, OrderService } from \"@medusajs/medusa\"\nimport { EntityManager } from \"typeorm\"\n\nclass EmailSenderService extends AbstractNotificationService {\n  // ...\n  protected orderService: OrderService\n\n  constructor(container, options) {\n    super(container)\n    // you can access options here in case you're\n    // using a plugin\n\n    this.orderService = container.orderService\n\n    // you can also initialize a client that\n    // communicates with a third-party service.\n    this.client = new Client(options)\n  }\n\n  // ...\n}\n\nexport default EmailSenderService\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3198,
									"name": "container",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An instance of "
											},
											{
												"kind": "code",
												"text": "`MedusaContainer`"
											},
											{
												"kind": "text",
												"text": " that allows you to access other resources, such as services, in your Medusa backend."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4884,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3199,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this notification provider is created in a plugin, the plugin's options are passed in this parameter."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 3190,
								"name": "AbstractNotificationService",
								"package": "@medusajs/medusa"
							},
							"overwrites": {
								"type": "reference",
								"target": 3768,
								"name": "TransactionBaseService.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 3767,
						"name": "TransactionBaseService.constructor"
					}
				},
				{
					"id": 3202,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of "
							},
							{
								"kind": "code",
								"text": "`MedusaContainer`"
							},
							{
								"kind": "text",
								"text": " that allows you to access other resources, such as services, in your Medusa backend."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4884,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3203,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If this notification provider is created in a plugin, the plugin's options are passed in this parameter."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 3204,
					"name": "sendNotification",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3205,
							"name": "sendNotification",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When an event is triggered that your Notification Provider is registered as a handler for, the ["
									},
									{
										"kind": "code",
										"text": "`NotificationService`"
									},
									{
										"kind": "text",
										"text": "](https://docs.medusajs.com/references/services/classes/services.NotificationService)\nin the Medusa backend executes this method of your Notification Provider.\n\nIn this method, you can perform the necessary operation to send the Notification. For example, you can send an email to the customer when they place an order."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The sending details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass EmailSenderService extends AbstractNotificationService {\n  // ...\n  async sendNotification(\n    event: string,\n    data: any,\n    attachmentGenerator: unknown\n  ): Promise<{\n      to: string;\n      status: string;\n      data: Record<string, unknown>;\n    }> {\n    if (event === \"order.placed\") {\n      // retrieve order\n      const order = await this.orderService.retrieve(data.id)\n      // TODO send email\n\n      console.log(\"Notification sent\")\n      return {\n        to: order.email,\n        status: \"done\",\n        data: {\n          // any data necessary to send the email\n          // for example:\n          subject: \"You placed a new order!\",\n          items: order.items,\n        },\n      }\n    }\n  }\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3206,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event that was triggered. For example, "
											},
											{
												"kind": "code",
												"text": "`order.placed`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3207,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data payload of the event that was triggered. For example, if the "
											},
											{
												"kind": "code",
												"text": "`order.placed`"
											},
											{
												"kind": "text",
												"text": " event is triggered,\nthe "
											},
											{
												"kind": "code",
												"text": "`eventData`"
											},
											{
												"kind": "text",
												"text": " object contains the property "
											},
											{
												"kind": "code",
												"text": "`id`"
											},
											{
												"kind": "text",
												"text": " which is the ID of the order that was placed. You can refer to the\n[Events reference](https://docs.medusajs.com/development/events/events-list) for information on all events and their payloads."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 3208,
									"name": "attachmentGenerator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If you’ve previously register an attachment generator to the "
											},
											{
												"kind": "code",
												"text": "`NotificationService`"
											},
											{
												"kind": "text",
												"text": " using the\n["
											},
											{
												"kind": "code",
												"text": "`registerAttachmentGenerator`"
											},
											{
												"kind": "text",
												"text": "](https://docs.medusajs.com/references/services/classes/services.NotificationService#registerattachmentgenerator) method,\nyou have access to it here. You can use the "
											},
											{
												"kind": "code",
												"text": "`attachmentGenerator`"
											},
											{
												"kind": "text",
												"text": " to generate on-demand invoices or other documents. The default value of this parameter is "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3144,
										"name": "ReturnedData",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3150,
								"name": "INotificationService.sendNotification"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3149,
						"name": "INotificationService.sendNotification"
					}
				},
				{
					"id": 3209,
					"name": "resendNotification",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3210,
							"name": "resendNotification",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to resend notifications, which is typically triggered by the\n[Resend Notification API Route](https://docs.medusajs.com/api/admin#notifications_postnotificationsnotificationresend)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The resend details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass EmailSenderService extends AbstractNotificationService {\n  // ...\n  async resendNotification(\n    notification: any,\n    config: any,\n    attachmentGenerator: unknown\n  ): Promise<{\n      to: string;\n      status: string;\n      data: Record<string, unknown>;\n    }> {\n    // check if the receiver should be changed\n    const to: string = config.to || notification.to\n\n    // TODO resend the notification using the same data\n    // that is saved under notification.data\n\n    console.log(\"Notification resent\")\n    return {\n      to,\n      status: \"done\",\n      data: notification.data, // make changes to the data\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3211,
									"name": "notification",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The original [Notification record](https://docs.medusajs.com/references/entities/classes/Notification) that was created after you sent the\nnotification with "
											},
											{
												"kind": "code",
												"text": "`sendNotification`"
											},
											{
												"kind": "text",
												"text": ". It includes the "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " attributes which are populated originally using the "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " properties of\nthe object you return in "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "sendNotification",
												"target": 3149,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 3212,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The new configuration used to resend the notification. The [Resend Notification API Route](https://docs.medusajs.com/api/admin#notifications_postnotificationsnotificationresend),\nallows you to pass a new "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " field. If specified, it will be available in this config object."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 3213,
									"name": "attachmentGenerator",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "f you’ve previously register an attachment generator to the "
											},
											{
												"kind": "code",
												"text": "`NotificationService`"
											},
											{
												"kind": "text",
												"text": " using the\n["
											},
											{
												"kind": "code",
												"text": "`registerAttachmentGenerator`"
											},
											{
												"kind": "text",
												"text": "](https://docs.medusajs.com/references/services/classes/services.NotificationService#registerattachmentgenerator) method,\nyou have access to it here. You can use the "
											},
											{
												"kind": "code",
												"text": "`attachmentGenerator`"
											},
											{
												"kind": "text",
												"text": " to generate on-demand invoices or other documents. The default value of this parameter is "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3144,
										"name": "ReturnedData",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3155,
								"name": "INotificationService.resendNotification"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3154,
						"name": "INotificationService.resendNotification"
					}
				},
				{
					"id": 3214,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3159,
						"name": "INotificationService.manager_"
					}
				},
				{
					"id": 3215,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3160,
						"name": "INotificationService.transactionManager_"
					}
				},
				{
					"id": 3216,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 3217,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						},
						"implementationOf": {
							"type": "reference",
							"target": -1,
							"name": "INotificationService.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3161,
						"name": "INotificationService.activeManager_"
					}
				},
				{
					"id": 3218,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3163,
						"name": "INotificationService.__container__"
					}
				},
				{
					"id": 3219,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3164,
						"name": "INotificationService.__configModule__"
					}
				},
				{
					"id": 3220,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3165,
						"name": "INotificationService.__moduleDeclaration__"
					}
				},
				{
					"id": 3221,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3222,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3223,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3167,
								"name": "INotificationService.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3166,
						"name": "INotificationService.withTransaction"
					}
				},
				{
					"id": 3224,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3225,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3226,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3227,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3228,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3228
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3170,
								"name": "INotificationService.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3169,
						"name": "INotificationService.shouldRetryTransaction_"
					}
				},
				{
					"id": 3229,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3230,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 3231,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 3232,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3233,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3234,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3235,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3236,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 3237,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3238,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 3239,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 3240,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 3241,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3242,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3243,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3244,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3175,
								"name": "INotificationService.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3174,
						"name": "INotificationService.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3196
					]
				},
				{
					"title": "Properties",
					"children": [
						3192,
						3202,
						3203,
						3214,
						3215,
						3218,
						3219,
						3220
					]
				},
				{
					"title": "Accessors",
					"children": [
						3216
					]
				},
				{
					"title": "Methods",
					"children": [
						3204,
						3209,
						3221,
						3224,
						3229
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 3148,
					"name": "INotificationService",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 3248,
			"name": "PaymentProcessorContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A payment's context."
					}
				]
			},
			"children": [
				{
					"id": 3249,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's billing address."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/address.ts",
									"qualifiedName": "Address"
								},
								"name": "Address",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 3250,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer's email."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3251,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The selected currency code, typically associated with the customer's cart."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3252,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The payment's amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3253,
					"name": "resource_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the resource the payment is associated with. For example, the cart's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3254,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer associated with this payment."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
							"qualifiedName": "Customer"
						},
						"name": "Customer",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 3255,
					"name": "context",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The cart's context."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 3256,
					"name": "paymentSessionData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If the payment session hasn't been created or initiated yet, it'll be an empty object.\nIf the payment session exists, it'll be the value of the payment session's "
							},
							{
								"kind": "code",
								"text": "`data`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3249,
						3250,
						3251,
						3252,
						3253,
						3254,
						3255,
						3256
					]
				}
			]
		},
		{
			"id": 3257,
			"name": "PaymentProcessorSessionResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The response of operations on a payment."
					}
				]
			},
			"children": [
				{
					"id": 3258,
					"name": "update_requests",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used to specify data that should be updated in the Medusa backend."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3259,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3260,
									"name": "customer_metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Specifies a new value of the "
											},
											{
												"kind": "code",
												"text": "`metadata`"
											},
											{
												"kind": "text",
												"text": " field of the customer associated with the payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3260
									]
								}
							]
						}
					}
				},
				{
					"id": 3261,
					"name": "session_data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data to be stored in the "
							},
							{
								"kind": "code",
								"text": "`data`"
							},
							{
								"kind": "text",
								"text": " field of the Payment Session to be created.\nThe "
							},
							{
								"kind": "code",
								"text": "`data`"
							},
							{
								"kind": "text",
								"text": " field is useful to hold any data required by the third-party provider to process the payment or retrieve its details at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3258,
						3261
					]
				}
			]
		},
		{
			"id": 3262,
			"name": "PaymentProcessorError",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is returned in case of an error."
					}
				]
			},
			"children": [
				{
					"id": 3263,
					"name": "error",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The error message"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3264,
					"name": "code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The error code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3265,
					"name": "detail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Any additional helpful details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3263,
						3264,
						3265
					]
				}
			]
		},
		{
			"id": 3266,
			"name": "PaymentProcessor",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "## Overview\n\nA Payment Processor is the payment method used to authorize, capture, and refund payment, among other actions. An example of a Payment Processor is Stripe.\n\nBy default, Medusa has a "
					},
					{
						"kind": "code",
						"text": "`manual`"
					},
					{
						"kind": "text",
						"text": " payment provider that has minimal implementation. It can be synonymous with a Cash on Delivery payment method. It allows\nstore operators to manage the payment themselves but still keep track of its different stages on Medusa.\n\nA payment processor is a service that extends the "
					},
					{
						"kind": "code",
						"text": "`AbstractPaymentProcessor`"
					},
					{
						"kind": "text",
						"text": " and implements its methods. So, adding a Payment Processor is as simple as\ncreating a service file in "
					},
					{
						"kind": "code",
						"text": "`src/services`"
					},
					{
						"kind": "text",
						"text": ". The file's name is the payment processor's class name as a slug and without the word "
					},
					{
						"kind": "code",
						"text": "`Service`"
					},
					{
						"kind": "text",
						"text": ".\nFor example, if you're creating a "
					},
					{
						"kind": "code",
						"text": "`MyPaymentService`"
					},
					{
						"kind": "text",
						"text": " class, the file name is "
					},
					{
						"kind": "code",
						"text": "`src/services/my-payment.ts`"
					},
					{
						"kind": "text",
						"text": ".\n\n"
					},
					{
						"kind": "code",
						"text": "```ts\nimport { AbstractPaymentProcessor } from \"@medusajs/medusa\";\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // methods here...\n}\n\nexport default MyPaymentService\n```"
					},
					{
						"kind": "text",
						"text": "\n\nThe methods of the payment processor are used at different points in the Checkout flow as well as when processing an order after it’s placed.\n\n![Checkout Flow - Payment](https://res.cloudinary.com/dza7lstvk/image/upload/v1680177820/Medusa%20Docs/Diagrams/checkout-payment_cy9efp.jpg)\n\n---\n\n## Identifier Property\n\nThe "
					},
					{
						"kind": "code",
						"text": "`PaymentProvider`"
					},
					{
						"kind": "text",
						"text": " entity has 2 properties: "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`is_installed`"
					},
					{
						"kind": "text",
						"text": ". The "
					},
					{
						"kind": "code",
						"text": "`identifier`"
					},
					{
						"kind": "text",
						"text": " property in the payment processor service is used when the payment processor is added to the database.\n\nThe value of this property is also used to reference the payment processor throughout Medusa.\nFor example, it is used to [add a payment processor](https://docs.medusajs.com/api/admin#regions_postregionsregionpaymentproviders) to a region.\n\n"
					},
					{
						"kind": "code",
						"text": "```ts\nclass MyPaymentService extends AbstractPaymentProcessor {\n  static identifier = \"my-payment\"\n  // ...\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---\n\n## PaymentProcessorError\n\nBefore diving into the methods of the Payment Processor, you'll notice that part of the expected return signature of these method includes "
					},
					{
						"kind": "code",
						"text": "`PaymentProcessorError`"
					},
					{
						"kind": "text",
						"text": ".\n\n"
					},
					{
						"kind": "code",
						"text": "```ts\ninterface PaymentProcessorError {\n  error: string\n  code?: string\n  detail?: any\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\nWhile implementing the Payment Processor's methods, if you need to inform the Medusa core that an error occurred at a certain stage,\nreturn an object having the attributes defined in the "
					},
					{
						"kind": "code",
						"text": "`PaymentProcessorError`"
					},
					{
						"kind": "text",
						"text": " interface.\n\nFor example, the Stripe payment processor has the following method to create the error object, which is used within other methods:\n\n"
					},
					{
						"kind": "code",
						"text": "```ts\nabstract class StripeBase extends AbstractPaymentProcessor {\n  // ...\n  protected buildError(\n    message: string,\n    e: Stripe.StripeRawError | PaymentProcessorError | Error\n  ): PaymentProcessorError {\n    return {\n      error: message,\n      code: \"code\" in e ? e.code : \"\",\n      detail: isPaymentProcessorError(e)\n        ? `${e.error}${EOL}${e.detail ?? \"\"}`\n        : \"detail\" in e\n        ? e.detail\n        : e.message ?? \"\",\n    }\n  }\n\n  // used in other methods\n  async retrievePayment(\n    paymentSessionData: Record<string, unknown>\n  ): Promise<\n    PaymentProcessorError |\n    PaymentProcessorSessionResponse[\"session_data\"]\n  > {\n    try {\n      // ...\n    } catch (e) {\n      return this.buildError(\n        \"An error occurred in retrievePayment\",\n        e\n      )\n    }\n  }\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---"
					}
				]
			},
			"children": [
				{
					"id": 3269,
					"name": "initiatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3270,
							"name": "initiatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is called either if a region has only one payment provider enabled or when [a Payment Session is selected](https://docs.medusajs.com/api/store#carts_postcartscartpaymentsession),\nwhich occurs when the customer selects their preferred payment method during checkout.\n\nIt is used to allow you to make any necessary calls to the third-party provider to initialize the payment. For example, in Stripe this method is used to create a Payment Intent for the customer."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either the payment's data or an error object."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentContext,\n  PaymentSessionResponse,\n  // ...\n} from \"@medusajs/medusa\"\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async initiatePayment(\n    context: PaymentProcessorContext\n  ): Promise<\n    PaymentProcessorError | PaymentProcessorSessionResponse\n  > {\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    const clientPayment = await this.client.initiate(context)\n\n    return {\n      session_data: {\n        id: clientPayment.id\n      },\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3271,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context of the payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3248,
										"name": "PaymentProcessorContext",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											},
											{
												"type": "reference",
												"target": 3257,
												"name": "PaymentProcessorSessionResponse",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3272,
					"name": "updatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3273,
							"name": "updatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update the payment session when the payment amount changes. It's called whenever the cart or any of its related data is updated.\nFor example, when a [line item is added to the cart](https://docs.medusajs.com/api/store#carts_postcartscartlineitems) or when a\n[shipping method is selected](https://docs.medusajs.com/api/store#carts_postcartscartshippingmethod)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either the payment's data or an error object."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorContext,\n  PaymentProcessorError,\n  PaymentProcessorSessionResponse,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async updatePayment(\n    context: PaymentProcessorContext\n  ): Promise<\n    void |\n    PaymentProcessorError |\n    PaymentProcessorSessionResponse\n  > {\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    const paymentId = context.paymentSessionData.id\n\n    await this.client.update(paymentId, context)\n\n    return {\n      session_data: context.paymentSessionData\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3274,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context of the payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3248,
										"name": "PaymentProcessorContext",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											},
											{
												"type": "reference",
												"target": 3257,
												"name": "PaymentProcessorSessionResponse",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3275,
					"name": "refundPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3276,
							"name": "refundPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to refund an order’s payment. This is typically triggered manually by the store operator from the admin. The refund amount might be the total order amount or part of it.\n\nThis method is also used for refunding payments of a swap or a claim of an order, or when a request is sent to the [Refund Payment API Route](https://docs.medusajs.com/api/admin#payments_postpaymentspaymentrefunds).\n\nYou can utilize this method to interact with the third-party provider and perform any actions necessary to refund the payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either an error object or a value that's stored in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async refundPayment(\n    paymentSessionData: Record<string, unknown>,\n    refundAmount: number\n  ): Promise<Record<string, unknown> | PaymentProcessorError> {\n    const paymentId = paymentSessionData.id\n\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    const refundData = this.client.refund(paymentId, refundAmount)\n\n    return {\n      id: paymentId,\n      ...refundData\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3277,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of a Payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 3278,
									"name": "refundAmount",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the amount to refund."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3279,
					"name": "authorizePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3280,
							"name": "authorizePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to authorize payment using the Payment Session of an order. This is called when the\n[cart is completed](https://docs.medusajs.com/api/store#carts_postcartscartcomplete) and before the order is created.\n\nThis method is also used for authorizing payments of a swap of an order and when authorizing sessions in a payment collection.\nYou can interact with a third-party provider and perform any actions necessary to authorize the payment.\n\nThe payment authorization might require additional action from the customer before it is declared authorized. Once that additional action is performed,\nthe "
									},
									{
										"kind": "code",
										"text": "`authorizePayment`"
									},
									{
										"kind": "text",
										"text": " method will be called again to validate that the payment is now fully authorized. So, make sure to implement it for this case as well, if necessary.\n\nOnce the payment is authorized successfully and the Payment Session status is set to "
									},
									{
										"kind": "code",
										"text": "`authorized`"
									},
									{
										"kind": "text",
										"text": ", the associated order or swap can then be placed or created.\nIf the payment authorization fails, then an error will be thrown and the order will not be created.\n\n:::note\n\nThe payment authorization status is determined using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getPaymentStatus",
										"target": 3298,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method. If the status is "
									},
									{
										"kind": "code",
										"text": "`requires_more`"
									},
									{
										"kind": "text",
										"text": ", then it means additional actions are required\nfrom the customer. If you try to create the order with a status that isn't "
									},
									{
										"kind": "code",
										"text": "`authorized`"
									},
									{
										"kind": "text",
										"text": ", the process will fail.\n\n:::"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The authorization details or an error object."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError,\n  PaymentSessionStatus,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async authorizePayment(\n    paymentSessionData: Record<string, unknown>,\n    context: Record<string, unknown>\n  ): Promise<\n    PaymentProcessorError |\n    {\n      status: PaymentSessionStatus;\n      data: Record<string, unknown>;\n    }\n  > {\n    try {\n      await this.client.authorize(paymentSessionData.id)\n\n      return {\n        status: PaymentSessionStatus.AUTHORIZED,\n        data: {\n          id: paymentSessionData.id\n        }\n      }\n    } catch (e) {\n      return {\n        error: e.message\n      }\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3281,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 3282,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context of the authorization. It may include some of the following fields:\n\n- "
											},
											{
												"kind": "code",
												"text": "`ip`"
											},
											{
												"kind": "text",
												"text": ": The customer’s IP.\n- "
											},
											{
												"kind": "code",
												"text": "`idempotency_key`"
											},
											{
												"kind": "text",
												"text": ": The [Idempotency Key](https://docs.medusajs.com/modules/carts-and-checkout/payment#idempotency-key) that is associated with the current cart. It is useful when retrying payments, retrying checkout at a failed point, or for payments that require additional actions from the customer.\n- "
											},
											{
												"kind": "code",
												"text": "`cart_id`"
											},
											{
												"kind": "text",
												"text": ": The ID of a cart. This is only during operations like placing an order or creating a swap."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3283,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3284,
															"name": "status",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The status of the payment, which will be stored in the payment session's "
																	},
																	{
																		"kind": "code",
																		"text": "`status`"
																	},
																	{
																		"kind": "text",
																		"text": " field."
																	}
																]
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
																	"qualifiedName": "PaymentSessionStatus"
																},
																"name": "PaymentSessionStatus",
																"package": "@medusajs/medusa"
															}
														},
														{
															"id": 3285,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "The "
																	},
																	{
																		"kind": "code",
																		"text": "`data`"
																	},
																	{
																		"kind": "text",
																		"text": " to be stored in the payment session's "
																	},
																	{
																		"kind": "code",
																		"text": "`data`"
																	},
																	{
																		"kind": "text",
																		"text": " field."
																	}
																]
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3284,
																3285
															]
														}
													]
												}
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3286,
					"name": "capturePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3287,
							"name": "capturePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to capture the payment amount of an order. This is typically triggered manually by the store operator from the admin.\n\nThis method is also used for capturing payments of a swap of an order, or when a request is sent to the [Capture Payment API Route](https://docs.medusajs.com/api/admin#payments_postpaymentspaymentcapture).\n\nYou can utilize this method to interact with the third-party provider and perform any actions necessary to capture the payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either an error object or a value that's stored in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async capturePayment(\n    paymentSessionData: Record<string, unknown>\n  ): Promise<Record<string, unknown> | PaymentProcessorError> {\n    const paymentId = paymentSessionData.id\n\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    const captureData = this.client.catch(paymentId)\n\n    return {\n      id: paymentId,\n      ...captureData\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3288,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment for its first parameter."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3289,
					"name": "deletePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3290,
							"name": "deletePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to perform any actions necessary before a Payment Session is deleted. The Payment Session is deleted in one of the following cases:\n\n1. When a request is sent to [delete the Payment Session](https://docs.medusajs.com/api/store#carts_deletecartscartpaymentsessionssession).\n2. When the [Payment Session is refreshed](https://docs.medusajs.com/api/store#carts_postcartscartpaymentsessionssession). The Payment Session is deleted so that a newer one is initialized instead.\n3. When the Payment Processor is no longer available. This generally happens when the store operator removes it from the available Payment Processor in the admin.\n4. When the region of the store is changed based on the cart information and the Payment Processor is not available in the new region."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either an error object or an empty object."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async deletePayment(\n    paymentSessionData: Record<string, unknown>\n  ): Promise<Record<string, unknown> | PaymentProcessorError> {\n    const paymentId = paymentSessionData.id\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    this.client.delete(paymentId)\n\n    return {}\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3291,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment Session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3292,
					"name": "retrievePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3293,
							"name": "retrievePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to provide a uniform way of retrieving the payment information from the third-party provider.\nFor example, in Stripe’s Payment Processor this method is used to retrieve the payment intent details from Stripe."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's data, typically retrieved from a third-party provider."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async retrievePayment(\n    paymentSessionData: Record<string, unknown>\n  ): Promise<Record<string, unknown> | PaymentProcessorError> {\n    const paymentId = paymentSessionData.id\n\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    return await this.client.retrieve(paymentId)\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3294,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of a Payment Session. Make sure to store in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field any necessary data that would allow you to retrieve the payment data from the third-party provider."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3295,
					"name": "cancelPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3296,
							"name": "cancelPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to cancel an order’s payment. This method is typically triggered by one of the following situations:\n\n1. Before an order is placed and after the payment is authorized, an inventory check is done on products to ensure that products are still available for purchase. If the inventory check fails for any of the products, the payment is canceled.\n2. If the store operator cancels the order from the admin.\n3. When the payment of an order's swap is canceled.\n\nYou can utilize this method to interact with the third-party provider and perform any actions necessary to cancel the payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either an error object or a value that's stored in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async cancelPayment(\n    paymentSessionData: Record<string, unknown>\n  ): Promise<Record<string, unknown> | PaymentProcessorError> {\n    const paymentId = paymentSessionData.id\n\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    const cancelData = this.client.cancel(paymentId)\n\n    return {\n      id: paymentId,\n      ...cancelData\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3297,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3298,
					"name": "getPaymentStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3299,
							"name": "getPaymentStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to get the status of a Payment or a Payment Session. Its main usage is within the place order and create swap flows.\nIf the status returned is not "
									},
									{
										"kind": "code",
										"text": "`authorized`"
									},
									{
										"kind": "text",
										"text": " within these flows, then the payment is considered failed and an error will be thrown, stopping the flow from completion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The status of the Payment or Payment Session."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentSessionStatus\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async getPaymentStatus(\n    paymentSessionData: Record<string, unknown>\n  ): Promise<PaymentSessionStatus> {\n    const paymentId = paymentSessionData.id\n\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    return await this.client.getStatus(paymentId) as PaymentSessionStatus\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3300,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of a Payment as a parameter. You can use this data to interact with the third-party provider to check the status of the payment if necessary."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
											"qualifiedName": "PaymentSessionStatus"
										},
										"name": "PaymentSessionStatus",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3301,
					"name": "updatePaymentData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3302,
							"name": "updatePaymentData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update the "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " field of a payment session. It's called when a request is sent to the\n[Update Payment Session API Route](https://docs.medusajs.com/api/store#carts_postcartscartpaymentsessionupdate), or when the "
									},
									{
										"kind": "code",
										"text": "`CartService`"
									},
									{
										"kind": "text",
										"text": "'s "
									},
									{
										"kind": "code",
										"text": "`updatePaymentSession`"
									},
									{
										"kind": "text",
										"text": " is used.\n\nThis method can also be used to update the data in the third-party payment provider, if necessary."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the data to store in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the payment session.\nYou can keep the data as-is, or make changes to it by communicating with the third-party provider."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError,\n  PaymentProviderService,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  protected paymentProviderService: PaymentProviderService\n  // ...\n  constructor(container, options) {\n    super(container)\n    this.paymentProviderService = container.paymentProviderService\n    // ...\n  }\n  // ...\n  async updatePaymentData(\n    sessionId: string,\n    data: Record<string, unknown>\n  ): Promise<\n    Record<string, unknown> |\n    PaymentProcessorError\n  > {\n    const paymentSession = await this.paymentProviderService.retrieveSession(sessionId)\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    const clientPayment = await this.client.update(paymentSession.data.id, data)\n\n    return {\n      id: clientPayment.id\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3303,
									"name": "sessionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the payment session."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3304,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data to be updated in the payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						3269,
						3272,
						3275,
						3279,
						3286,
						3289,
						3292,
						3295,
						3298,
						3301
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 3305,
					"name": "AbstractPaymentProcessor"
				}
			]
		},
		{
			"id": 3305,
			"name": "AbstractPaymentProcessor",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "## Overview\n\nA Payment Processor is the payment method used to authorize, capture, and refund payment, among other actions. An example of a Payment Processor is Stripe.\n\nBy default, Medusa has a "
					},
					{
						"kind": "code",
						"text": "`manual`"
					},
					{
						"kind": "text",
						"text": " payment provider that has minimal implementation. It can be synonymous with a Cash on Delivery payment method. It allows\nstore operators to manage the payment themselves but still keep track of its different stages on Medusa.\n\nA payment processor is a service that extends the "
					},
					{
						"kind": "code",
						"text": "`AbstractPaymentProcessor`"
					},
					{
						"kind": "text",
						"text": " and implements its methods. So, adding a Payment Processor is as simple as\ncreating a service file in "
					},
					{
						"kind": "code",
						"text": "`src/services`"
					},
					{
						"kind": "text",
						"text": ". The file's name is the payment processor's class name as a slug and without the word "
					},
					{
						"kind": "code",
						"text": "`Service`"
					},
					{
						"kind": "text",
						"text": ".\nFor example, if you're creating a "
					},
					{
						"kind": "code",
						"text": "`MyPaymentService`"
					},
					{
						"kind": "text",
						"text": " class, the file name is "
					},
					{
						"kind": "code",
						"text": "`src/services/my-payment.ts`"
					},
					{
						"kind": "text",
						"text": ".\n\n"
					},
					{
						"kind": "code",
						"text": "```ts\nimport { AbstractPaymentProcessor } from \"@medusajs/medusa\";\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // methods here...\n}\n\nexport default MyPaymentService\n```"
					},
					{
						"kind": "text",
						"text": "\n\nThe methods of the payment processor are used at different points in the Checkout flow as well as when processing an order after it’s placed.\n\n![Checkout Flow - Payment](https://res.cloudinary.com/dza7lstvk/image/upload/v1680177820/Medusa%20Docs/Diagrams/checkout-payment_cy9efp.jpg)\n\n---\n\n## Identifier Property\n\nThe "
					},
					{
						"kind": "code",
						"text": "`PaymentProvider`"
					},
					{
						"kind": "text",
						"text": " entity has 2 properties: "
					},
					{
						"kind": "code",
						"text": "`id`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`is_installed`"
					},
					{
						"kind": "text",
						"text": ". The "
					},
					{
						"kind": "code",
						"text": "`identifier`"
					},
					{
						"kind": "text",
						"text": " property in the payment processor service is used when the payment processor is added to the database.\n\nThe value of this property is also used to reference the payment processor throughout Medusa.\nFor example, it is used to [add a payment processor](https://docs.medusajs.com/api/admin#regions_postregionsregionpaymentproviders) to a region.\n\n"
					},
					{
						"kind": "code",
						"text": "```ts\nclass MyPaymentService extends AbstractPaymentProcessor {\n  static identifier = \"my-payment\"\n  // ...\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---\n\n## PaymentProcessorError\n\nBefore diving into the methods of the Payment Processor, you'll notice that part of the expected return signature of these method includes "
					},
					{
						"kind": "code",
						"text": "`PaymentProcessorError`"
					},
					{
						"kind": "text",
						"text": ".\n\n"
					},
					{
						"kind": "code",
						"text": "```ts\ninterface PaymentProcessorError {\n  error: string\n  code?: string\n  detail?: any\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\nWhile implementing the Payment Processor's methods, if you need to inform the Medusa core that an error occurred at a certain stage,\nreturn an object having the attributes defined in the "
					},
					{
						"kind": "code",
						"text": "`PaymentProcessorError`"
					},
					{
						"kind": "text",
						"text": " interface.\n\nFor example, the Stripe payment processor has the following method to create the error object, which is used within other methods:\n\n"
					},
					{
						"kind": "code",
						"text": "```ts\nabstract class StripeBase extends AbstractPaymentProcessor {\n  // ...\n  protected buildError(\n    message: string,\n    e: Stripe.StripeRawError | PaymentProcessorError | Error\n  ): PaymentProcessorError {\n    return {\n      error: message,\n      code: \"code\" in e ? e.code : \"\",\n      detail: isPaymentProcessorError(e)\n        ? `${e.error}${EOL}${e.detail ?? \"\"}`\n        : \"detail\" in e\n        ? e.detail\n        : e.message ?? \"\",\n    }\n  }\n\n  // used in other methods\n  async retrievePayment(\n    paymentSessionData: Record<string, unknown>\n  ): Promise<\n    PaymentProcessorError |\n    PaymentProcessorSessionResponse[\"session_data\"]\n  > {\n    try {\n      // ...\n    } catch (e) {\n      return this.buildError(\n        \"An error occurred in retrievePayment\",\n        e\n      )\n    }\n  }\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---"
					}
				]
			},
			"children": [
				{
					"id": 3311,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3312,
							"name": "new AbstractPaymentProcessor",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "You can use the "
									},
									{
										"kind": "code",
										"text": "`constructor`"
									},
									{
										"kind": "text",
										"text": " of your Payment Processor to have access to different services in Medusa through [dependency injection](https://docs.medusajs.com/development/fundamentals/dependency-injection).\n\nYou can also use the constructor to initialize your integration with the third-party provider. For example, if you use a client to connect to the third-party provider’s APIs,\nyou can initialize it in the constructor and use it in other methods in the service.\n\nAdditionally, if you’re creating your Payment Processor as an external plugin to be installed on any Medusa backend and you want to access the options added for the plugin,\nyou can access it in the constructor. The options are passed as a second parameter."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  constructor(container, options) {\n    super(container)\n    // you can access options here\n\n    // you can also initialize a client that\n    // communicates with a third-party service.\n    this.client = new Client(options)\n  }\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3313,
									"name": "container",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An instance of "
											},
											{
												"kind": "code",
												"text": "`MedusaContainer`"
											},
											{
												"kind": "text",
												"text": " that allows you to access other resources, such as services, in your Medusa backend through [dependency injection](https://docs.medusajs.com/development/fundamentals/dependency-injection)"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4895,
										"name": "MedusaContainer",
										"package": "medusa-core-utils"
									}
								},
								{
									"id": 3314,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this fulfillment provider is created in a plugin, the plugin's options are passed in this parameter."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 3305,
								"name": "AbstractPaymentProcessor",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 3315,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of "
							},
							{
								"kind": "code",
								"text": "`MedusaContainer`"
							},
							{
								"kind": "text",
								"text": " that allows you to access other resources, such as services, in your Medusa backend through [dependency injection](https://docs.medusajs.com/development/fundamentals/dependency-injection)"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4895,
						"name": "MedusaContainer",
						"package": "medusa-core-utils"
					}
				},
				{
					"id": 3316,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If this fulfillment provider is created in a plugin, the plugin's options are passed in this parameter."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 3306,
					"name": "_isPaymentProcessor",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 3307,
					"name": "isPaymentProcessor",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"signatures": [
						{
							"id": 3308,
							"name": "isPaymentProcessor",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3309,
									"name": "object",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 3310,
					"name": "identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`PaymentProvider`"
							},
							{
								"kind": "text",
								"text": " entity has 2 properties: "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`is_installed`"
							},
							{
								"kind": "text",
								"text": ". The "
							},
							{
								"kind": "code",
								"text": "`identifier`"
							},
							{
								"kind": "text",
								"text": " property in the payment processor service is used when the payment processor is added to the database.\n\nThe value of this property is also used to reference the payment processor throughout Medusa.\nFor example, it is used to [add a payment processor](https://docs.medusajs.com/api/admin#regions_postregionsregionpaymentproviders) to a region.\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nclass MyPaymentService extends AbstractPaymentProcessor {\n  static identifier = \"my-payment\"\n  // ...\n}\n```"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3319,
					"name": "capturePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3320,
							"name": "capturePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to capture the payment amount of an order. This is typically triggered manually by the store operator from the admin.\n\nThis method is also used for capturing payments of a swap of an order, or when a request is sent to the [Capture Payment API Route](https://docs.medusajs.com/api/admin#payments_postpaymentspaymentcapture).\n\nYou can utilize this method to interact with the third-party provider and perform any actions necessary to capture the payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either an error object or a value that's stored in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async capturePayment(\n    paymentSessionData: Record<string, unknown>\n  ): Promise<Record<string, unknown> | PaymentProcessorError> {\n    const paymentId = paymentSessionData.id\n\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    const captureData = this.client.catch(paymentId)\n\n    return {\n      id: paymentId,\n      ...captureData\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3321,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment for its first parameter."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3287,
								"name": "PaymentProcessor.capturePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3286,
						"name": "PaymentProcessor.capturePayment"
					}
				},
				{
					"id": 3322,
					"name": "authorizePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3323,
							"name": "authorizePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to authorize payment using the Payment Session of an order. This is called when the\n[cart is completed](https://docs.medusajs.com/api/store#carts_postcartscartcomplete) and before the order is created.\n\nThis method is also used for authorizing payments of a swap of an order and when authorizing sessions in a payment collection.\nYou can interact with a third-party provider and perform any actions necessary to authorize the payment.\n\nThe payment authorization might require additional action from the customer before it is declared authorized. Once that additional action is performed,\nthe "
									},
									{
										"kind": "code",
										"text": "`authorizePayment`"
									},
									{
										"kind": "text",
										"text": " method will be called again to validate that the payment is now fully authorized. So, make sure to implement it for this case as well, if necessary.\n\nOnce the payment is authorized successfully and the Payment Session status is set to "
									},
									{
										"kind": "code",
										"text": "`authorized`"
									},
									{
										"kind": "text",
										"text": ", the associated order or swap can then be placed or created.\nIf the payment authorization fails, then an error will be thrown and the order will not be created.\n\n:::note\n\nThe payment authorization status is determined using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getPaymentStatus",
										"target": 3298,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method. If the status is "
									},
									{
										"kind": "code",
										"text": "`requires_more`"
									},
									{
										"kind": "text",
										"text": ", then it means additional actions are required\nfrom the customer. If you try to create the order with a status that isn't "
									},
									{
										"kind": "code",
										"text": "`authorized`"
									},
									{
										"kind": "text",
										"text": ", the process will fail.\n\n:::"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The authorization details or an error object."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError,\n  PaymentSessionStatus,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async authorizePayment(\n    paymentSessionData: Record<string, unknown>,\n    context: Record<string, unknown>\n  ): Promise<\n    PaymentProcessorError |\n    {\n      status: PaymentSessionStatus;\n      data: Record<string, unknown>;\n    }\n  > {\n    try {\n      await this.client.authorize(paymentSessionData.id)\n\n      return {\n        status: PaymentSessionStatus.AUTHORIZED,\n        data: {\n          id: paymentSessionData.id\n        }\n      }\n    } catch (e) {\n      return {\n        error: e.message\n      }\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3324,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 3325,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context of the authorization. It may include some of the following fields:\n\n- "
											},
											{
												"kind": "code",
												"text": "`ip`"
											},
											{
												"kind": "text",
												"text": ": The customer’s IP.\n- "
											},
											{
												"kind": "code",
												"text": "`idempotency_key`"
											},
											{
												"kind": "text",
												"text": ": The [Idempotency Key](https://docs.medusajs.com/modules/carts-and-checkout/payment#idempotency-key) that is associated with the current cart. It is useful when retrying payments, retrying checkout at a failed point, or for payments that require additional actions from the customer.\n- "
											},
											{
												"kind": "code",
												"text": "`cart_id`"
											},
											{
												"kind": "text",
												"text": ": The ID of a cart. This is only during operations like placing an order or creating a swap."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3326,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3327,
															"name": "status",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
																	"qualifiedName": "PaymentSessionStatus"
																},
																"name": "PaymentSessionStatus",
																"package": "@medusajs/medusa"
															}
														},
														{
															"id": 3328,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3327,
																3328
															]
														}
													]
												}
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3280,
								"name": "PaymentProcessor.authorizePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3279,
						"name": "PaymentProcessor.authorizePayment"
					}
				},
				{
					"id": 3329,
					"name": "cancelPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3330,
							"name": "cancelPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to cancel an order’s payment. This method is typically triggered by one of the following situations:\n\n1. Before an order is placed and after the payment is authorized, an inventory check is done on products to ensure that products are still available for purchase. If the inventory check fails for any of the products, the payment is canceled.\n2. If the store operator cancels the order from the admin.\n3. When the payment of an order's swap is canceled.\n\nYou can utilize this method to interact with the third-party provider and perform any actions necessary to cancel the payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either an error object or a value that's stored in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async cancelPayment(\n    paymentSessionData: Record<string, unknown>\n  ): Promise<Record<string, unknown> | PaymentProcessorError> {\n    const paymentId = paymentSessionData.id\n\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    const cancelData = this.client.cancel(paymentId)\n\n    return {\n      id: paymentId,\n      ...cancelData\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3331,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3296,
								"name": "PaymentProcessor.cancelPayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3295,
						"name": "PaymentProcessor.cancelPayment"
					}
				},
				{
					"id": 3332,
					"name": "initiatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3333,
							"name": "initiatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is called either if a region has only one payment provider enabled or when [a Payment Session is selected](https://docs.medusajs.com/api/store#carts_postcartscartpaymentsession),\nwhich occurs when the customer selects their preferred payment method during checkout.\n\nIt is used to allow you to make any necessary calls to the third-party provider to initialize the payment. For example, in Stripe this method is used to create a Payment Intent for the customer."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either the payment's data or an error object."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentContext,\n  PaymentSessionResponse,\n  // ...\n} from \"@medusajs/medusa\"\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async initiatePayment(\n    context: PaymentProcessorContext\n  ): Promise<\n    PaymentProcessorError | PaymentProcessorSessionResponse\n  > {\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    const clientPayment = await this.client.initiate(context)\n\n    return {\n      session_data: {\n        id: clientPayment.id\n      },\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3334,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context of the payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3248,
										"name": "PaymentProcessorContext",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											},
											{
												"type": "reference",
												"target": 3257,
												"name": "PaymentProcessorSessionResponse",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3270,
								"name": "PaymentProcessor.initiatePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3269,
						"name": "PaymentProcessor.initiatePayment"
					}
				},
				{
					"id": 3335,
					"name": "deletePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3336,
							"name": "deletePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to perform any actions necessary before a Payment Session is deleted. The Payment Session is deleted in one of the following cases:\n\n1. When a request is sent to [delete the Payment Session](https://docs.medusajs.com/api/store#carts_deletecartscartpaymentsessionssession).\n2. When the [Payment Session is refreshed](https://docs.medusajs.com/api/store#carts_postcartscartpaymentsessionssession). The Payment Session is deleted so that a newer one is initialized instead.\n3. When the Payment Processor is no longer available. This generally happens when the store operator removes it from the available Payment Processor in the admin.\n4. When the region of the store is changed based on the cart information and the Payment Processor is not available in the new region."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either an error object or an empty object."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async deletePayment(\n    paymentSessionData: Record<string, unknown>\n  ): Promise<Record<string, unknown> | PaymentProcessorError> {\n    const paymentId = paymentSessionData.id\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    this.client.delete(paymentId)\n\n    return {}\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3337,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment Session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3290,
								"name": "PaymentProcessor.deletePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3289,
						"name": "PaymentProcessor.deletePayment"
					}
				},
				{
					"id": 3338,
					"name": "getPaymentStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3339,
							"name": "getPaymentStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to get the status of a Payment or a Payment Session. Its main usage is within the place order and create swap flows.\nIf the status returned is not "
									},
									{
										"kind": "code",
										"text": "`authorized`"
									},
									{
										"kind": "text",
										"text": " within these flows, then the payment is considered failed and an error will be thrown, stopping the flow from completion."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The status of the Payment or Payment Session."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentSessionStatus\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async getPaymentStatus(\n    paymentSessionData: Record<string, unknown>\n  ): Promise<PaymentSessionStatus> {\n    const paymentId = paymentSessionData.id\n\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    return await this.client.getStatus(paymentId) as PaymentSessionStatus\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3340,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of a Payment as a parameter. You can use this data to interact with the third-party provider to check the status of the payment if necessary."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
											"qualifiedName": "PaymentSessionStatus"
										},
										"name": "PaymentSessionStatus",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3299,
								"name": "PaymentProcessor.getPaymentStatus"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3298,
						"name": "PaymentProcessor.getPaymentStatus"
					}
				},
				{
					"id": 3341,
					"name": "refundPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3342,
							"name": "refundPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to refund an order’s payment. This is typically triggered manually by the store operator from the admin. The refund amount might be the total order amount or part of it.\n\nThis method is also used for refunding payments of a swap or a claim of an order, or when a request is sent to the [Refund Payment API Route](https://docs.medusajs.com/api/admin#payments_postpaymentspaymentrefunds).\n\nYou can utilize this method to interact with the third-party provider and perform any actions necessary to refund the payment."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either an error object or a value that's stored in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the Payment."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async refundPayment(\n    paymentSessionData: Record<string, unknown>,\n    refundAmount: number\n  ): Promise<Record<string, unknown> | PaymentProcessorError> {\n    const paymentId = paymentSessionData.id\n\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    const refundData = this.client.refund(paymentId, refundAmount)\n\n    return {\n      id: paymentId,\n      ...refundData\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3343,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of a Payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 3344,
									"name": "refundAmount",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the amount to refund."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3276,
								"name": "PaymentProcessor.refundPayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3275,
						"name": "PaymentProcessor.refundPayment"
					}
				},
				{
					"id": 3345,
					"name": "retrievePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3346,
							"name": "retrievePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to provide a uniform way of retrieving the payment information from the third-party provider.\nFor example, in Stripe’s Payment Processor this method is used to retrieve the payment intent details from Stripe."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The payment's data, typically retrieved from a third-party provider."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async retrievePayment(\n    paymentSessionData: Record<string, unknown>\n  ): Promise<Record<string, unknown> | PaymentProcessorError> {\n    const paymentId = paymentSessionData.id\n\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    return await this.client.retrieve(paymentId)\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3347,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of a Payment Session. Make sure to store in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field any necessary data that would allow you to retrieve the payment data from the third-party provider."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3293,
								"name": "PaymentProcessor.retrievePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3292,
						"name": "PaymentProcessor.retrievePayment"
					}
				},
				{
					"id": 3348,
					"name": "updatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3349,
							"name": "updatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update the payment session when the payment amount changes. It's called whenever the cart or any of its related data is updated.\nFor example, when a [line item is added to the cart](https://docs.medusajs.com/api/store#carts_postcartscartlineitems) or when a\n[shipping method is selected](https://docs.medusajs.com/api/store#carts_postcartscartshippingmethod)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either the payment's data or an error object."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorContext,\n  PaymentProcessorError,\n  PaymentProcessorSessionResponse,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  // ...\n  async updatePayment(\n    context: PaymentProcessorContext\n  ): Promise<\n    void |\n    PaymentProcessorError |\n    PaymentProcessorSessionResponse\n  > {\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    const paymentId = context.paymentSessionData.id\n\n    await this.client.update(paymentId, context)\n\n    return {\n      session_data: context.paymentSessionData\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3350,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context of the payment."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3248,
										"name": "PaymentProcessorContext",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											},
											{
												"type": "reference",
												"target": 3257,
												"name": "PaymentProcessorSessionResponse",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3273,
								"name": "PaymentProcessor.updatePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3272,
						"name": "PaymentProcessor.updatePayment"
					}
				},
				{
					"id": 3351,
					"name": "updatePaymentData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3352,
							"name": "updatePaymentData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update the "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " field of a payment session. It's called when a request is sent to the\n[Update Payment Session API Route](https://docs.medusajs.com/api/store#carts_postcartscartpaymentsessionupdate), or when the "
									},
									{
										"kind": "code",
										"text": "`CartService`"
									},
									{
										"kind": "text",
										"text": "'s "
									},
									{
										"kind": "code",
										"text": "`updatePaymentSession`"
									},
									{
										"kind": "text",
										"text": " is used.\n\nThis method can also be used to update the data in the third-party payment provider, if necessary."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the data to store in the "
											},
											{
												"kind": "code",
												"text": "`data`"
											},
											{
												"kind": "text",
												"text": " field of the payment session.\nYou can keep the data as-is, or make changes to it by communicating with the third-party provider."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  PaymentProcessorError,\n  PaymentProviderService,\n  // ...\n} from \"@medusajs/medusa\"\n// ...\n\nclass MyPaymentService extends AbstractPaymentProcessor {\n  protected paymentProviderService: PaymentProviderService\n  // ...\n  constructor(container, options) {\n    super(container)\n    this.paymentProviderService = container.paymentProviderService\n    // ...\n  }\n  // ...\n  async updatePaymentData(\n    sessionId: string,\n    data: Record<string, unknown>\n  ): Promise<\n    Record<string, unknown> |\n    PaymentProcessorError\n  > {\n    const paymentSession = await this.paymentProviderService.retrieveSession(sessionId)\n    // assuming client is an initialized client\n    // communicating with a third-party service.\n    const clientPayment = await this.client.update(paymentSession.data.id, data)\n\n    return {\n      id: clientPayment.id\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3353,
									"name": "sessionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the payment session."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 3354,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data to be updated in the payment session."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 3262,
												"name": "PaymentProcessorError",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3302,
								"name": "PaymentProcessor.updatePaymentData"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3301,
						"name": "PaymentProcessor.updatePaymentData"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3311
					]
				},
				{
					"title": "Properties",
					"children": [
						3315,
						3316,
						3306,
						3310
					]
				},
				{
					"title": "Methods",
					"children": [
						3307,
						3319,
						3322,
						3329,
						3332,
						3335,
						3338,
						3341,
						3345,
						3348,
						3351
					]
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 3266,
					"name": "PaymentProcessor",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 3245,
			"name": "isPaymentProcessorError",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 3246,
					"name": "isPaymentProcessorError",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 3247,
							"name": "obj",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "obj",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": 3262,
							"name": "PaymentProcessorError",
							"package": "@medusajs/medusa"
						}
					}
				}
			]
		},
		{
			"id": 3355,
			"name": "Data",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "unknown"
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 3356,
			"name": "PaymentData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 3355,
				"name": "Data",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 3357,
			"name": "PaymentSessionData",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 3355,
				"name": "Data",
				"package": "@medusajs/medusa"
			}
		},
		{
			"id": 3358,
			"name": "PaymentContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3359,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3360,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3361,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3362,
											"name": "context",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 3363,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3364,
											"name": "email",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 3365,
											"name": "shipping_address",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/src/models/address.ts",
															"qualifiedName": "Address"
														},
														"name": "Address",
														"package": "@medusajs/medusa"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										},
										{
											"id": 3366,
											"name": "shipping_methods",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
														"qualifiedName": "ShippingMethod"
													},
													"name": "ShippingMethod",
													"package": "@medusajs/medusa"
												}
											}
										},
										{
											"id": 3367,
											"name": "billing_address",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/src/models/address.ts",
															"qualifiedName": "Address"
														},
														"name": "Address",
														"package": "@medusajs/medusa"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3362,
												3363,
												3364,
												3365,
												3366,
												3367
											]
										}
									]
								}
							}
						},
						{
							"id": 3368,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3369,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3370,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3371,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A customer can make purchases in your store and manage their profile."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
									"qualifiedName": "Customer"
								},
								"name": "Customer",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 3372,
							"name": "paymentSessionData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3360,
								3368,
								3369,
								3370,
								3371,
								3372
							]
						}
					]
				}
			}
		},
		{
			"id": 3373,
			"name": "PaymentSessionResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3374,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3375,
							"name": "update_requests",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3376,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3377,
											"name": "customer_metadata",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3377
											]
										}
									]
								}
							}
						},
						{
							"id": 3378,
							"name": "session_data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3375,
								3378
							]
						}
					]
				}
			}
		},
		{
			"id": 3379,
			"name": "PaymentService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This will be"
					}
				],
				"blockTags": [
					{
						"tag": "@deprecated",
						"content": [
							{
								"kind": "text",
								"text": "in the near future use the new PaymentProcessor interface instead"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 3380,
					"name": "getIdentifier",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3381,
							"name": "getIdentifier",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 3382,
					"name": "getPaymentData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3383,
							"name": "getPaymentData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use PaymentProcessor.retrievePayment instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3384,
									"name": "paymentSession",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
											"qualifiedName": "PaymentSession"
										},
										"name": "PaymentSession",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3385,
					"name": "updatePaymentData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3386,
							"name": "updatePaymentData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use PaymentProcessor.updatePayment instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3387,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3388,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3389,
					"name": "createPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3390,
							"name": "createPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use PaymentProcessor.initiatePayment instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3391,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of this argument is meant to be temporary and once the previous method signature\nwill be removed, the type will only be PaymentContext instead of Cart & PaymentContext"
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
													"qualifiedName": "Cart"
												},
												"name": "Cart",
												"package": "@medusajs/medusa"
											},
											{
												"type": "reference",
												"target": 3358,
												"name": "PaymentContext",
												"package": "@medusajs/medusa"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3373,
										"name": "PaymentSessionResponse",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 3392,
							"name": "createPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use createPayment(context: "
											},
											{
												"kind": "code",
												"text": "`Cart & PaymentContext): Promise<PaymentSessionResponse>`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3393,
									"name": "cart",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3394,
					"name": "retrievePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3395,
							"name": "retrievePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use PaymentProcessor.retrievePayment instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3396,
									"name": "paymentData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3397,
					"name": "updatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3398,
							"name": "updatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3399,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3400,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
													"qualifiedName": "Cart"
												},
												"name": "Cart",
												"package": "@medusajs/medusa"
											},
											{
												"type": "reference",
												"target": 3358,
												"name": "PaymentContext",
												"package": "@medusajs/medusa"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 3373,
												"name": "PaymentSessionResponse",
												"package": "@medusajs/medusa"
											},
											{
												"type": "reference",
												"target": 3355,
												"name": "Data",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 3401,
							"name": "updatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use PaymentProcessor.updatePayment instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3402,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3403,
									"name": "cart",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3404,
					"name": "authorizePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3405,
							"name": "authorizePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use PaymentProcessor.authorizePayment instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3406,
									"name": "paymentSession",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
											"qualifiedName": "PaymentSession"
										},
										"name": "PaymentSession",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3407,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3408,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 3409,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 3355,
														"name": "Data",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 3410,
													"name": "status",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
															"qualifiedName": "PaymentSessionStatus"
														},
														"name": "PaymentSessionStatus",
														"package": "@medusajs/medusa"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														3409,
														3410
													]
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3411,
					"name": "capturePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3412,
							"name": "capturePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use PaymentProcessor.capturePayment instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3413,
									"name": "payment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
											"qualifiedName": "Payment"
										},
										"name": "Payment",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3414,
					"name": "refundPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3415,
							"name": "refundPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use PaymentProcessor.refundPayment instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3416,
									"name": "payment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
											"qualifiedName": "Payment"
										},
										"name": "Payment",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3417,
									"name": "refundAmount",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3418,
					"name": "cancelPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3419,
							"name": "cancelPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use PaymentProcessor.cancelPayment instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3420,
									"name": "payment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
											"qualifiedName": "Payment"
										},
										"name": "Payment",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3421,
					"name": "deletePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3422,
							"name": "deletePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use PaymentProcessor.cancelPayment instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3423,
									"name": "paymentSession",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
											"qualifiedName": "PaymentSession"
										},
										"name": "PaymentSession",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3424,
					"name": "retrieveSavedMethods",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3425,
							"name": "retrieveSavedMethods",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use PaymentProcessor.getSavedMethods instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3426,
									"name": "customer",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
											"qualifiedName": "Customer"
										},
										"name": "Customer",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3355,
											"name": "Data",
											"package": "@medusajs/medusa"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3427,
					"name": "getStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3428,
							"name": "getStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use PaymentProcessor.getPaymentStatus instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3429,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
											"qualifiedName": "PaymentSessionStatus"
										},
										"name": "PaymentSessionStatus",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3430,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					}
				},
				{
					"id": 3431,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					}
				},
				{
					"id": 3432,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 3433,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					}
				},
				{
					"id": 3434,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					}
				},
				{
					"id": 3435,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					}
				},
				{
					"id": 3436,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					}
				},
				{
					"id": 3437,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3438,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3439,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					}
				},
				{
					"id": 3440,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3441,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3442,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3443,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3444,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3444
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					}
				},
				{
					"id": 3445,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3446,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 3447,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 3448,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3449,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3450,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3451,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3452,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 3453,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3454,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 3455,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 3456,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 3457,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3458,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3459,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3460,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3430,
						3431,
						3434,
						3435,
						3436
					]
				},
				{
					"title": "Accessors",
					"children": [
						3432
					]
				},
				{
					"title": "Methods",
					"children": [
						3380,
						3382,
						3385,
						3389,
						3394,
						3397,
						3404,
						3411,
						3414,
						3418,
						3421,
						3424,
						3427,
						3437,
						3440,
						3445
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 3461,
			"name": "AbstractPaymentService",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This will be"
					}
				],
				"blockTags": [
					{
						"tag": "@deprecated",
						"content": [
							{
								"kind": "text",
								"text": "in the near future use the AbstractPaymentProcessor instead"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 3462,
					"name": "_isPaymentService",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "true"
				},
				{
					"id": 3467,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3468,
							"name": "new AbstractPaymentService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 3469,
									"name": "container",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 3470,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 3461,
								"name": "AbstractPaymentService",
								"package": "@medusajs/medusa"
							},
							"overwrites": {
								"type": "reference",
								"target": 3768,
								"name": "TransactionBaseService.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 3767,
						"name": "TransactionBaseService.constructor"
					}
				},
				{
					"id": 3466,
					"name": "identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3471,
					"name": "getIdentifier",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"signatures": [
						{
							"id": 3472,
							"name": "getIdentifier",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.getIdentifier"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.getIdentifier"
					}
				},
				{
					"id": 3473,
					"name": "getPaymentData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3474,
							"name": "getPaymentData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"parameters": [
								{
									"id": 3475,
									"name": "paymentSession",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A Payment Session is created when a Customer initilizes the checkout flow, and can be used to hold the state of a payment flow. Each Payment Session is controlled by a Payment Provider, which is responsible for the communication with external payment services. Authorized Payment Sessions will eventually get promoted to Payments to indicate that they are authorized for payment processing such as capture or refund. Payment sessions can also be used as part of payment collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
											"qualifiedName": "PaymentSession"
										},
										"name": "PaymentSession",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.getPaymentData"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.getPaymentData"
					}
				},
				{
					"id": 3476,
					"name": "updatePaymentData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3477,
							"name": "updatePaymentData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"parameters": [
								{
									"id": 3478,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3479,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.updatePaymentData"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.updatePaymentData"
					}
				},
				{
					"id": 3480,
					"name": "createPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3481,
							"name": "createPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3482,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of this argument is meant to be temporary and once the previous method signature\nwill be removed, the type will only be PaymentContext instead of Cart & PaymentContext"
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
													"qualifiedName": "Cart"
												},
												"name": "Cart",
												"package": "@medusajs/medusa"
											},
											{
												"type": "reference",
												"target": 3358,
												"name": "PaymentContext",
												"package": "@medusajs/medusa"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3373,
										"name": "PaymentSessionResponse",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.createPayment"
							}
						},
						{
							"id": 3483,
							"name": "createPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use "
											},
											{
												"kind": "code",
												"text": "`createPayment(context: Cart & PaymentContext): Promise<PaymentSessionResponse>`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3484,
									"name": "cart",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.createPayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.createPayment"
					}
				},
				{
					"id": 3485,
					"name": "retrievePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3486,
							"name": "retrievePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"parameters": [
								{
									"id": 3487,
									"name": "paymentData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.retrievePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.retrievePayment"
					}
				},
				{
					"id": 3488,
					"name": "updatePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3489,
							"name": "updatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "it return either a PaymentSessionResponse or PaymentSessionResponse[\"session_data\"] to maintain backward compatibility"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3490,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3491,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of this argument is meant to be temporary and once the previous method signature\nwill be removed, the type will only be PaymentContext instead of Cart & PaymentContext"
											}
										]
									},
									"type": {
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
													"qualifiedName": "Cart"
												},
												"name": "Cart",
												"package": "@medusajs/medusa"
											},
											{
												"type": "reference",
												"target": 3358,
												"name": "PaymentContext",
												"package": "@medusajs/medusa"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reference",
												"target": 3373,
												"name": "PaymentSessionResponse",
												"package": "@medusajs/medusa"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.updatePayment"
							}
						},
						{
							"id": 3492,
							"name": "updatePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future use "
											},
											{
												"kind": "code",
												"text": "`updatePayment(paymentSessionData: PaymentSessionData, context: Cart & PaymentContext): Promise<PaymentSessionResponse>`"
											},
											{
												"kind": "text",
												"text": " instead"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3493,
									"name": "paymentSessionData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3494,
									"name": "cart",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/cart.ts",
											"qualifiedName": "Cart"
										},
										"name": "Cart",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.updatePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.updatePayment"
					}
				},
				{
					"id": 3495,
					"name": "authorizePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3496,
							"name": "authorizePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": []
									}
								]
							},
							"parameters": [
								{
									"id": 3497,
									"name": "paymentSession",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A Payment Session is created when a Customer initilizes the checkout flow, and can be used to hold the state of a payment flow. Each Payment Session is controlled by a Payment Provider, which is responsible for the communication with external payment services. Authorized Payment Sessions will eventually get promoted to Payments to indicate that they are authorized for payment processing such as capture or refund. Payment sessions can also be used as part of payment collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
											"qualifiedName": "PaymentSession"
										},
										"name": "PaymentSession",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3498,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 3499,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 3500,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 3355,
														"name": "Data",
														"package": "@medusajs/medusa"
													}
												},
												{
													"id": 3501,
													"name": "status",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
															"qualifiedName": "PaymentSessionStatus"
														},
														"name": "PaymentSessionStatus",
														"package": "@medusajs/medusa"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														3500,
														3501
													]
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.authorizePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.authorizePayment"
					}
				},
				{
					"id": 3502,
					"name": "capturePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3503,
							"name": "capturePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3504,
									"name": "payment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A payment is originally created from a payment session. Once a payment session is authorized, the payment is created to represent the authorized amount with a given payment method. Payments can be captured, canceled or refunded. Payments can be made towards orders, swaps, order edits, or other resources."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
											"qualifiedName": "Payment"
										},
										"name": "Payment",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.capturePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.capturePayment"
					}
				},
				{
					"id": 3505,
					"name": "refundPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3506,
							"name": "refundPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3507,
									"name": "payment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A payment is originally created from a payment session. Once a payment session is authorized, the payment is created to represent the authorized amount with a given payment method. Payments can be captured, canceled or refunded. Payments can be made towards orders, swaps, order edits, or other resources."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
											"qualifiedName": "Payment"
										},
										"name": "Payment",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 3508,
									"name": "refundAmount",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.refundPayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.refundPayment"
					}
				},
				{
					"id": 3509,
					"name": "cancelPayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3510,
							"name": "cancelPayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3511,
									"name": "payment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A payment is originally created from a payment session. Once a payment session is authorized, the payment is created to represent the authorized amount with a given payment method. Payments can be captured, canceled or refunded. Payments can be made towards orders, swaps, order edits, or other resources."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment.ts",
											"qualifiedName": "Payment"
										},
										"name": "Payment",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.cancelPayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.cancelPayment"
					}
				},
				{
					"id": 3512,
					"name": "deletePayment",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3513,
							"name": "deletePayment",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3514,
									"name": "paymentSession",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A Payment Session is created when a Customer initilizes the checkout flow, and can be used to hold the state of a payment flow. Each Payment Session is controlled by a Payment Provider, which is responsible for the communication with external payment services. Authorized Payment Sessions will eventually get promoted to Payments to indicate that they are authorized for payment processing such as capture or refund. Payment sessions can also be used as part of payment collections."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
											"qualifiedName": "PaymentSession"
										},
										"name": "PaymentSession",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.deletePayment"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.deletePayment"
					}
				},
				{
					"id": 3515,
					"name": "retrieveSavedMethods",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"signatures": [
						{
							"id": 3516,
							"name": "retrieveSavedMethods",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3517,
									"name": "customer",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A customer can make purchases in your store and manage their profile."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
											"qualifiedName": "Customer"
										},
										"name": "Customer",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3355,
											"name": "Data",
											"package": "@medusajs/medusa"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.retrieveSavedMethods"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.retrieveSavedMethods"
					}
				},
				{
					"id": 3518,
					"name": "getStatus",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3519,
							"name": "getStatus",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This will be"
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "in the near future"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3520,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3355,
										"name": "Data",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/payment-session.ts",
											"qualifiedName": "PaymentSessionStatus"
										},
										"name": "PaymentSessionStatus",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.getStatus"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.getStatus"
					}
				},
				{
					"id": 3521,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.manager_"
					}
				},
				{
					"id": 3522,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.transactionManager_"
					}
				},
				{
					"id": 3523,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 3524,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						},
						"implementationOf": {
							"type": "reference",
							"target": -1,
							"name": "PaymentService.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.activeManager_"
					}
				},
				{
					"id": 3525,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.__container__"
					}
				},
				{
					"id": 3526,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.__configModule__"
					}
				},
				{
					"id": 3527,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.__moduleDeclaration__"
					}
				},
				{
					"id": 3528,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3529,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3530,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.withTransaction"
					}
				},
				{
					"id": 3531,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3532,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3533,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3534,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3535,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3535
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.shouldRetryTransaction_"
					}
				},
				{
					"id": 3536,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3537,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 3538,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 3539,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3540,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3541,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3542,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3543,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 3544,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3545,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 3546,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 3547,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 3548,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3549,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3550,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3551,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "PaymentService.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					},
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "PaymentService.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3467
					]
				},
				{
					"title": "Properties",
					"children": [
						3462,
						3466,
						3521,
						3522,
						3525,
						3526,
						3527
					]
				},
				{
					"title": "Accessors",
					"children": [
						3523
					]
				},
				{
					"title": "Methods",
					"children": [
						3471,
						3473,
						3476,
						3480,
						3485,
						3488,
						3495,
						3502,
						3505,
						3509,
						3512,
						3515,
						3518,
						3528,
						3531,
						3536
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 4906,
					"name": "\"medusa-interfaces\"",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 3552,
			"name": "IPriceSelectionStrategy",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "## Overview\n\nThe price selection strategy retrieves the best price for a product variant for a specific context such as selected region, taxes applied,\nthe quantity in cart, and more.\n\nMedusa provides a default price selection strategy, but you can override it. A price selecion strategy is a TypeScript or JavaScript file in the "
					},
					{
						"kind": "code",
						"text": "`src/strategies`"
					},
					{
						"kind": "text",
						"text": " directory of your Medusa backend project. It exports a class that extends the "
					},
					{
						"kind": "code",
						"text": "`AbstractPriceSelectionStrategy`"
					},
					{
						"kind": "text",
						"text": " class.\n\nFor example:\n\n"
					},
					{
						"kind": "code",
						"text": "```ts title=\"src/strategies/price.ts\"\nimport {\n  AbstractPriceSelectionStrategy,\n  PriceSelectionContext,\n  PriceSelectionResult,\n} from \"@medusajs/medusa\"\n\nexport default class MyStrategy extends\n  AbstractPriceSelectionStrategy {\n\n  async calculateVariantPrice(\n    data: {\n      variantId: string;\n      quantity?: number\n    }[],\n    context: PriceSelectionContext\n  ): Promise<Map<string, PriceSelectionResult>> {\n    throw new Error(\"Method not implemented.\")\n  }\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---"
					}
				]
			},
			"children": [
				{
					"id": 3553,
					"name": "calculateVariantPrice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3554,
							"name": "calculateVariantPrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves one or more product variants' prices. It's used when retrieving product variants or their associated line items.\nIt's also used when retrieving other entities that product variants and line items belong to, such as products and carts respectively."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A map, each key is an ID of a variant, and its value is an object holding the price selection result."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, here's a snippet of how the price selection strategy is implemented in the Medusa backend:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport {\n  AbstractPriceSelectionStrategy,\n  CustomerService,\n  PriceSelectionContext,\n  PriceSelectionResult,\n} from \"@medusajs/medusa\"\n\ntype InjectedDependencies = {\n  customerService: CustomerService\n}\n\nexport default class MyStrategy extends\n  AbstractPriceSelectionStrategy {\n\n  async calculateVariantPrice(\n    data: {\n      variantId: string\n      quantity?: number\n    }[],\n    context: PriceSelectionContext\n  ): Promise<Map<string, PriceSelectionResult>> {\n    const dataMap = new Map(data.map((d) => [d.variantId, d]))\n\n    const cacheKeysMap = new Map(\n      data.map(({ variantId, quantity }) => [\n        variantId,\n        this.getCacheKey(variantId, { ...context, quantity }),\n      ])\n    )\n\n    const nonCachedData: {\n      variantId: string\n      quantity?: number\n    }[] = []\n\n    const variantPricesMap = new Map<string, PriceSelectionResult>()\n\n    if (!context.ignore_cache) {\n      const cacheHits = await promiseAll(\n        [...cacheKeysMap].map(async ([, cacheKey]) => {\n          return await this.cacheService_.get<PriceSelectionResult>(cacheKey)\n        })\n      )\n\n      if (!cacheHits.length) {\n        nonCachedData.push(...dataMap.values())\n      }\n\n      for (const [index, cacheHit] of cacheHits.entries()) {\n        const variantId = data[index].variantId\n        if (cacheHit) {\n          variantPricesMap.set(variantId, cacheHit)\n          continue\n        }\n\n        nonCachedData.push(dataMap.get(variantId)!)\n      }\n    } else {\n      nonCachedData.push(...dataMap.values())\n    }\n\n    let results: Map<string, PriceSelectionResult> = new Map()\n\n    if (\n      this.featureFlagRouter_.isFeatureEnabled(\n        TaxInclusivePricingFeatureFlag.key\n      )\n    ) {\n      results = await this.calculateVariantPrice_new(nonCachedData, context)\n    } else {\n      results = await this.calculateVariantPrice_old(nonCachedData, context)\n    }\n\n    await promiseAll(\n      [...results].map(async ([variantId, prices]) => {\n        variantPricesMap.set(variantId, prices)\n        if (!context.ignore_cache) {\n          await this.cacheService_.set(cacheKeysMap.get(variantId)!, prices)\n        }\n      })\n    )\n\n    return variantPricesMap\n  }\n\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3555,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The necessary data to perform the price selection for each variant ID."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 3556,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 3557,
														"name": "variantId",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The ID of the variant to retrieve its prices."
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 3558,
														"name": "quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The variant's quantity in the cart, if available."
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															3557,
															3558
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 3559,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context of the price selection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3619,
										"name": "PriceSelectionContext",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 3634,
												"name": "PriceSelectionResult",
												"package": "@medusajs/medusa"
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3560,
					"name": "onVariantsPricesUpdate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3561,
							"name": "onVariantsPricesUpdate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is called when prices of product variants have changed.\nYou can use it to invalidate prices stored in the cache."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves after any necessary actions are performed."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, this is how this method is implemented in the Medusa backend's default\nprice selection strategy:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport {\n  AbstractPriceSelectionStrategy,\n  CustomerService,\n} from \"@medusajs/medusa\"\nimport { promiseAll } from \"@medusajs/utils\"\n\ntype InjectedDependencies = {\n  customerService: CustomerService\n}\n\nexport default class MyStrategy extends\n  AbstractPriceSelectionStrategy {\n\n  public async onVariantsPricesUpdate(variantIds: string[]): Promise<void> {\n    await promiseAll(\n      variantIds.map(\n        async (id: string) => await this.cacheService_.invalidate(`ps:${id}:*`)\n      )\n    )\n  }\n\n  // ...\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\n:::note\n\nLearn more about the cache service in [this documentation](https://docs.medusajs.com/development/cache/overview).\n\n:::"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3562,
									"name": "variantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the updated variants."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 3563,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3564,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3565,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4909,
								"name": "ITransactionBaseService.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4908,
						"name": "ITransactionBaseService.withTransaction"
					}
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						3553,
						3560,
						3563
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4907,
					"name": "ITransactionBaseService",
					"package": "@medusajs/types"
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 3566,
					"name": "AbstractPriceSelectionStrategy"
				}
			]
		},
		{
			"id": 3566,
			"name": "AbstractPriceSelectionStrategy",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 3571,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3572,
							"name": "new AbstractPriceSelectionStrategy",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "You can use the "
									},
									{
										"kind": "code",
										"text": "`constructor`"
									},
									{
										"kind": "text",
										"text": " of your price-selection strategy to access the different services in Medusa through dependency injection."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// ...\nimport {\n  AbstractPriceSelectionStrategy,\n  CustomerService,\n} from \"@medusajs/medusa\"\ntype InjectedDependencies = {\n  customerService: CustomerService\n}\n\nclass MyStrategy extends\n  AbstractPriceSelectionStrategy {\n\n  protected customerService_: CustomerService\n\n  constructor(container: InjectedDependencies) {\n    super(container)\n    this.customerService_ = container.customerService\n  }\n\n  // ...\n}\n\nexport default  MyStrategy\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3573,
									"name": "container",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An instance of "
											},
											{
												"kind": "code",
												"text": "`MedusaContainer`"
											},
											{
												"kind": "text",
												"text": " that allows you to access other resources, such as services, in your Medusa backend."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4884,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3574,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this price-selection strategy is created in a plugin, the plugin's options are passed in this parameter."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 3566,
								"name": "AbstractPriceSelectionStrategy",
								"package": "@medusajs/medusa"
							},
							"overwrites": {
								"type": "reference",
								"target": 3768,
								"name": "TransactionBaseService.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 3767,
						"name": "TransactionBaseService.constructor"
					}
				},
				{
					"id": 3575,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of "
							},
							{
								"kind": "code",
								"text": "`MedusaContainer`"
							},
							{
								"kind": "text",
								"text": " that allows you to access other resources, such as services, in your Medusa backend."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4884,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3576,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If this price-selection strategy is created in a plugin, the plugin's options are passed in this parameter."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 3577,
					"name": "calculateVariantPrice",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3578,
							"name": "calculateVariantPrice",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves one or more product variants' prices. It's used when retrieving product variants or their associated line items.\nIt's also used when retrieving other entities that product variants and line items belong to, such as products and carts respectively."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A map, each key is an ID of a variant, and its value is an object holding the price selection result."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, here's a snippet of how the price selection strategy is implemented in the Medusa backend:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport {\n  AbstractPriceSelectionStrategy,\n  CustomerService,\n  PriceSelectionContext,\n  PriceSelectionResult,\n} from \"@medusajs/medusa\"\n\ntype InjectedDependencies = {\n  customerService: CustomerService\n}\n\nexport default class MyStrategy extends\n  AbstractPriceSelectionStrategy {\n\n  async calculateVariantPrice(\n    data: {\n      variantId: string\n      quantity?: number\n    }[],\n    context: PriceSelectionContext\n  ): Promise<Map<string, PriceSelectionResult>> {\n    const dataMap = new Map(data.map((d) => [d.variantId, d]))\n\n    const cacheKeysMap = new Map(\n      data.map(({ variantId, quantity }) => [\n        variantId,\n        this.getCacheKey(variantId, { ...context, quantity }),\n      ])\n    )\n\n    const nonCachedData: {\n      variantId: string\n      quantity?: number\n    }[] = []\n\n    const variantPricesMap = new Map<string, PriceSelectionResult>()\n\n    if (!context.ignore_cache) {\n      const cacheHits = await promiseAll(\n        [...cacheKeysMap].map(async ([, cacheKey]) => {\n          return await this.cacheService_.get<PriceSelectionResult>(cacheKey)\n        })\n      )\n\n      if (!cacheHits.length) {\n        nonCachedData.push(...dataMap.values())\n      }\n\n      for (const [index, cacheHit] of cacheHits.entries()) {\n        const variantId = data[index].variantId\n        if (cacheHit) {\n          variantPricesMap.set(variantId, cacheHit)\n          continue\n        }\n\n        nonCachedData.push(dataMap.get(variantId)!)\n      }\n    } else {\n      nonCachedData.push(...dataMap.values())\n    }\n\n    let results: Map<string, PriceSelectionResult> = new Map()\n\n    if (\n      this.featureFlagRouter_.isFeatureEnabled(\n        TaxInclusivePricingFeatureFlag.key\n      )\n    ) {\n      results = await this.calculateVariantPrice_new(nonCachedData, context)\n    } else {\n      results = await this.calculateVariantPrice_old(nonCachedData, context)\n    }\n\n    await promiseAll(\n      [...results].map(async ([variantId, prices]) => {\n        variantPricesMap.set(variantId, prices)\n        if (!context.ignore_cache) {\n          await this.cacheService_.set(cacheKeysMap.get(variantId)!, prices)\n        }\n      })\n    )\n\n    return variantPricesMap\n  }\n\n  // ...\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3579,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The necessary data to perform the price selection for each variant ID."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 3580,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 3581,
														"name": "variantId",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 3583,
														"name": "quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															3581,
															3583
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 3584,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The context of the price selection."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3619,
										"name": "PriceSelectionContext",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 3634,
												"name": "PriceSelectionResult",
												"package": "@medusajs/medusa"
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3554,
								"name": "IPriceSelectionStrategy.calculateVariantPrice"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3553,
						"name": "IPriceSelectionStrategy.calculateVariantPrice"
					}
				},
				{
					"id": 3585,
					"name": "onVariantsPricesUpdate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"signatures": [
						{
							"id": 3586,
							"name": "onVariantsPricesUpdate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is called when prices of product variants have changed.\nYou can use it to invalidate prices stored in the cache."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves after any necessary actions are performed."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, this is how this method is implemented in the Medusa backend's default\nprice selection strategy:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport {\n  AbstractPriceSelectionStrategy,\n  CustomerService,\n} from \"@medusajs/medusa\"\nimport { promiseAll } from \"@medusajs/utils\"\n\ntype InjectedDependencies = {\n  customerService: CustomerService\n}\n\nexport default class MyStrategy extends\n  AbstractPriceSelectionStrategy {\n\n  public async onVariantsPricesUpdate(variantIds: string[]): Promise<void> {\n    await promiseAll(\n      variantIds.map(\n        async (id: string) => await this.cacheService_.invalidate(`ps:${id}:*`)\n      )\n    )\n  }\n\n  // ...\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\n:::note\n\nLearn more about the cache service in [this documentation](https://docs.medusajs.com/development/cache/overview).\n\n:::"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3587,
									"name": "variantIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the updated variants."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3561,
								"name": "IPriceSelectionStrategy.onVariantsPricesUpdate"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3560,
						"name": "IPriceSelectionStrategy.onVariantsPricesUpdate"
					}
				},
				{
					"id": 3588,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					}
				},
				{
					"id": 3589,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					}
				},
				{
					"id": 3590,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 3591,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					}
				},
				{
					"id": 3592,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					}
				},
				{
					"id": 3593,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					}
				},
				{
					"id": 3594,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					}
				},
				{
					"id": 3595,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3596,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3597,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3564,
								"name": "IPriceSelectionStrategy.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					},
					"implementationOf": {
						"type": "reference",
						"target": 3563,
						"name": "IPriceSelectionStrategy.withTransaction"
					}
				},
				{
					"id": 3598,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3599,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3600,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3601,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3602,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3602
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					}
				},
				{
					"id": 3603,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3604,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 3605,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 3606,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3607,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3608,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3609,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3610,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 3611,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3612,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 3613,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 3614,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 3615,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3616,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3617,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3618,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3571
					]
				},
				{
					"title": "Properties",
					"children": [
						3575,
						3576,
						3588,
						3589,
						3592,
						3593,
						3594
					]
				},
				{
					"title": "Accessors",
					"children": [
						3590
					]
				},
				{
					"title": "Methods",
					"children": [
						3577,
						3585,
						3595,
						3598,
						3603
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 3552,
					"name": "IPriceSelectionStrategy",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 3619,
			"name": "PriceSelectionContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context of the price selection."
					}
				]
			},
			"children": [
				{
					"id": 3620,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The cart's ID. This is used when the prices are being retrieved for the variant of a line item,\nas it is used to determine the current region and currency code of the context."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3621,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the customer viewing the variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3622,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3623,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the item in the cart. This is used to filter out price lists that have\n"
							},
							{
								"kind": "code",
								"text": "`min_quantity`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`max_quantity`"
							},
							{
								"kind": "text",
								"text": " conditions set."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3624,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The currency code the customer is using."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3625,
					"name": "include_discount_prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the price list's prices should be retrieved or not."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 3626,
					"name": "tax_rates",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tax rates to be applied. This is only used for\n[Tax-Inclusive Pricing](https://docs.medusajs.com/modules/taxes/inclusive-pricing)."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4911,
							"name": "TaxServiceRate",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 3627,
					"name": "ignore_cache",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to calculate the prices even if the value of an earlier price calculation\nis available in the cache."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3620,
						3621,
						3622,
						3623,
						3624,
						3625,
						3626,
						3627
					]
				}
			]
		},
		{
			"id": 4917,
			"name": "DefaultPriceType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of default price type."
					}
				]
			}
		},
		{
			"id": 4916,
			"name": "DEFAULT",
			"variant": "declaration",
			"kind": 16,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`calculatedPrice`"
					},
					{
						"kind": "text",
						"text": " is the original price."
					}
				]
			},
			"type": {
				"type": "literal",
				"value": "default"
			}
		},
		{
			"id": 3628,
			"name": "PriceType",
			"variant": "declaration",
			"kind": 32,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3629,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3632,
							"name": "DEFAULT",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4916,
								"name": "DEFAULT",
								"package": "@medusajs/medusa",
								"qualifiedName": "DefaultPriceType.DEFAULT"
							},
							"defaultValue": "\"default\""
						},
						{
							"id": 3630,
							"name": "SALE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4068,
								"name": "SALE",
								"package": "@medusajs/medusa",
								"qualifiedName": "PriceListType.SALE"
							},
							"defaultValue": "\"sale\""
						},
						{
							"id": 3631,
							"name": "OVERRIDE",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4069,
								"name": "OVERRIDE",
								"package": "@medusajs/medusa",
								"qualifiedName": "PriceListType.OVERRIDE"
							},
							"defaultValue": "\"override\""
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3632,
								3630,
								3631
							]
						}
					]
				}
			}
		},
		{
			"id": 3633,
			"name": "PriceType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 4917,
						"name": "DefaultPriceType",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reference",
						"target": 4067,
						"name": "PriceListType",
						"package": "@medusajs/medusa"
					}
				]
			}
		},
		{
			"id": 3634,
			"name": "PriceSelectionResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The price selection result of a variant."
					}
				]
			},
			"children": [
				{
					"id": 3635,
					"name": "originalPrice",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The original price of the variant which depends on the selected region or currency code in the context object.\nIf both region ID and currency code are available in the context object, the region has higher precedence."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 3636,
					"name": "originalPriceIncludesTax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the original price includes taxes or not. This is only available\nfor [Tax-Inclusive Pricing](https://docs.medusajs.com/modules/taxes/inclusive-pricing)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 3637,
					"name": "calculatedPrice",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The lowest price among the prices of the product variant retrieved using the context object."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 3638,
					"name": "calculatedPriceIncludesTax",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the calculated price includes taxes or not.\nThis is only available for [Tax-Inclusive Pricing](https://docs.medusajs.com/modules/taxes/inclusive-pricing)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						]
					}
				},
				{
					"id": 3639,
					"name": "calculatedPriceType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of price applied in "
							},
							{
								"kind": "code",
								"text": "`calculatedPrice`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3633,
						"name": "PriceType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 3640,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "All possible prices of the variant that are retrieved using the "
							},
							{
								"kind": "code",
								"text": "`context`"
							},
							{
								"kind": "text",
								"text": " object.\nIt can include its original price and its price lists if there are any."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
								"qualifiedName": "MoneyAmount"
							},
							"name": "MoneyAmount",
							"package": "@medusajs/medusa"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3635,
						3636,
						3637,
						3638,
						3639,
						3640
					]
				}
			]
		},
		{
			"id": 3641,
			"name": "ITaxCalculationStrategy",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "## Overview\n\nA tax calculation strategy is used to calculate taxes when calculating a cart's totals. The Medusa\nbackend provides a tax calculation strategy that handles calculating the taxes, taking into account the\ndefined tax rates and settings such as whether tax-inclusive pricing is enabled.\n\nYou can override the tax calculation strategy to implement different calculation logic or to\nintegrate a third-party service that handles the tax calculation. You can override it either\nin a Medusa backend setup or in a plugin.\n\nA tax calculation strategy should be defined in a TypeScript or JavaScript file created under the "
					},
					{
						"kind": "code",
						"text": "`src/strategies`"
					},
					{
						"kind": "text",
						"text": " directory.\nThe class must also implement the "
					},
					{
						"kind": "code",
						"text": "`ITaxCalculationStrategy`"
					},
					{
						"kind": "text",
						"text": " interface imported from the "
					},
					{
						"kind": "code",
						"text": "`@medusajs/medusa`"
					},
					{
						"kind": "text",
						"text": " package.\n\nFor example, you can create the file "
					},
					{
						"kind": "code",
						"text": "`src/strategies/tax-calculation.ts`"
					},
					{
						"kind": "text",
						"text": " with the following content:\n\n"
					},
					{
						"kind": "code",
						"text": "```ts title=\"src/strategies/tax-calculation.ts\"\nimport {\n  ITaxCalculationStrategy,\n  LineItem,\n  LineItemTaxLine,\n  ShippingMethodTaxLine,\n  TaxCalculationContext,\n} from \"@medusajs/medusa\"\n\nclass TaxCalculationStrategy\n  implements ITaxCalculationStrategy {\n\n  async calculate(\n    items: LineItem[],\n    taxLines: (ShippingMethodTaxLine | LineItemTaxLine)[],\n    calculationContext: TaxCalculationContext\n  ): Promise<number> {\n    throw new Error(\"Method not implemented.\")\n  }\n\n}\n\nexport default TaxCalculationStrategy\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---"
					}
				]
			},
			"children": [
				{
					"id": 3642,
					"name": "calculate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3643,
							"name": "calculate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method calculates the tax amount for a given set of line items under applicable\ntax conditions and calculation contexts.\n\nThis method is used whenever taxes are calculated. If automatic tax calculation is disabled in a region,\nthen it's only triggered when taxes are calculated manually as explained in\n[this guide](https://docs.medusajs.com/modules/taxes/storefront/manual-calculation)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The calculated tax total"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "An example of the general implementation of this method in the Medusa backend's tax calculation strategy:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nasync calculate(\n  items: LineItem[],\n  taxLines: (ShippingMethodTaxLine | LineItemTaxLine)[],\n  calculationContext: TaxCalculationContext\n): Promise<number> {\n  const lineItemsTaxLines = taxLines.filter(\n    (tl) => \"item_id\" in tl\n  ) as LineItemTaxLine[]\n  const shippingMethodsTaxLines = taxLines.filter(\n    (tl) => \"shipping_method_id\" in tl\n  ) as ShippingMethodTaxLine[]\n\n  const lineItemsTax = this.calculateLineItemsTax(\n    items,\n    lineItemsTaxLines,\n    calculationContext\n  )\n\n  const shippingMethodsTax = this.calculateShippingMethodsTax(\n    calculationContext.shipping_methods,\n    shippingMethodsTaxLines\n  )\n\n  return Math.round(lineItemsTax + shippingMethodsTax)\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3644,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line items to calculate the tax total for."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
												"qualifiedName": "LineItem"
											},
											"name": "LineItem",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 3645,
									"name": "taxLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax lines used for the calculation"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/models/line-item-tax-line.ts",
														"qualifiedName": "LineItemTaxLine"
													},
													"name": "LineItemTaxLine",
													"package": "@medusajs/medusa"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/models/shipping-method-tax-line.ts",
														"qualifiedName": "ShippingMethodTaxLine"
													},
													"name": "ShippingMethodTaxLine",
													"package": "@medusajs/medusa"
												}
											]
										}
									}
								},
								{
									"id": 3646,
									"name": "calculationContext",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Other details relevant for the calculation"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3702,
										"name": "TaxCalculationContext",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						3642
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 3647,
					"name": "AbstractTaxCalculationStrategy"
				}
			]
		},
		{
			"id": 3647,
			"name": "AbstractTaxCalculationStrategy",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 3652,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3653,
							"name": "new AbstractTaxCalculationStrategy",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "You can use the "
									},
									{
										"kind": "code",
										"text": "`constructor`"
									},
									{
										"kind": "text",
										"text": " of your tax calculation strategy to access the different services in Medusa through dependency injection.\n\nYou can also use the constructor to initialize your integration with the third-party provider. For example, if you use a client to connect to the third-party provider’s APIs, you can initialize it in the constructor and use it in other methods in the service.\nAdditionally, if you’re creating your tax calculation strategy as an external plugin to be installed on any Medusa backend and you want to access the options added for the plugin, you can access it in the constructor."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  ITaxCalculationStrategy,\n  LineItemService,\n} from \"@medusajs/medusa\"\n\ntype InjectedDependencies = {\n  lineItemService: LineItemService\n}\n\nclass TaxCalculationStrategy\n  implements ITaxCalculationStrategy {\n\n  protected readonly lineItemService_: LineItemService\n\n  constructor({ lineItemService }: InjectedDependencies) {\n    this.lineItemService_ = lineItemService\n  }\n\n  // ...\n}\n\nexport default TaxCalculationStrategy\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3654,
									"name": "container",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An instance of "
											},
											{
												"kind": "code",
												"text": "`MedusaContainer`"
											},
											{
												"kind": "text",
												"text": " that allows you to access other resources, such as services, in your Medusa backend."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4884,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3655,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this tax calculation strategy is created in a plugin, the plugin's options are passed in this parameter."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 3647,
								"name": "AbstractTaxCalculationStrategy",
								"package": "@medusajs/medusa"
							},
							"overwrites": {
								"type": "reference",
								"target": 3768,
								"name": "TransactionBaseService.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 3767,
						"name": "TransactionBaseService.constructor"
					}
				},
				{
					"id": 3656,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of "
							},
							{
								"kind": "code",
								"text": "`MedusaContainer`"
							},
							{
								"kind": "text",
								"text": " that allows you to access other resources, such as services, in your Medusa backend."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4884,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3657,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If this tax calculation strategy is created in a plugin, the plugin's options are passed in this parameter."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 3658,
					"name": "calculate",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3659,
							"name": "calculate",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method calculates the tax amount for a given set of line items under applicable\ntax conditions and calculation contexts.\n\nThis method is used whenever taxes are calculated. If automatic tax calculation is disabled in a region,\nthen it's only triggered when taxes are calculated manually as explained in\n[this guide](https://docs.medusajs.com/modules/taxes/storefront/manual-calculation)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The calculated tax total"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "An example of the general implementation of this method in the Medusa backend's tax calculation strategy:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nasync calculate(\n  items: LineItem[],\n  taxLines: (ShippingMethodTaxLine | LineItemTaxLine)[],\n  calculationContext: TaxCalculationContext\n): Promise<number> {\n  const lineItemsTaxLines = taxLines.filter(\n    (tl) => \"item_id\" in tl\n  ) as LineItemTaxLine[]\n  const shippingMethodsTaxLines = taxLines.filter(\n    (tl) => \"shipping_method_id\" in tl\n  ) as ShippingMethodTaxLine[]\n\n  const lineItemsTax = this.calculateLineItemsTax(\n    items,\n    lineItemsTaxLines,\n    calculationContext\n  )\n\n  const shippingMethodsTax = this.calculateShippingMethodsTax(\n    calculationContext.shipping_methods,\n    shippingMethodsTaxLines\n  )\n\n  return Math.round(lineItemsTax + shippingMethodsTax)\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3660,
									"name": "items",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line items to calculate the tax total for."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
												"qualifiedName": "LineItem"
											},
											"name": "LineItem",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 3661,
									"name": "taxLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The tax lines used for the calculation"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/models/line-item-tax-line.ts",
														"qualifiedName": "LineItemTaxLine"
													},
													"name": "LineItemTaxLine",
													"package": "@medusajs/medusa"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/models/shipping-method-tax-line.ts",
														"qualifiedName": "ShippingMethodTaxLine"
													},
													"name": "ShippingMethodTaxLine",
													"package": "@medusajs/medusa"
												}
											]
										}
									}
								},
								{
									"id": 3662,
									"name": "calculationContext",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Other details relevant for the calculation"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3702,
										"name": "TaxCalculationContext",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3643,
								"name": "ITaxCalculationStrategy.calculate"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3642,
						"name": "ITaxCalculationStrategy.calculate"
					}
				},
				{
					"id": 3663,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					}
				},
				{
					"id": 3664,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					}
				},
				{
					"id": 3665,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 3666,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					}
				},
				{
					"id": 3667,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					}
				},
				{
					"id": 3668,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					}
				},
				{
					"id": 3669,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					}
				},
				{
					"id": 3670,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3671,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3672,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					}
				},
				{
					"id": 3673,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3674,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3675,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3676,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3677,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3677
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					}
				},
				{
					"id": 3678,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3679,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 3680,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 3681,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3682,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3683,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3684,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3685,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 3686,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3687,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 3688,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 3689,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 3690,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3691,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3692,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3693,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3652
					]
				},
				{
					"title": "Properties",
					"children": [
						3656,
						3657,
						3663,
						3664,
						3667,
						3668,
						3669
					]
				},
				{
					"title": "Accessors",
					"children": [
						3665
					]
				},
				{
					"title": "Methods",
					"children": [
						3658,
						3670,
						3673,
						3678
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 3641,
					"name": "ITaxCalculationStrategy",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 3694,
			"name": "ShippingTaxCalculationLine",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A shipping method and the tax rates configured to apply to the\nshipping method."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3695,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3696,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping method to calculate taxes for."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
									"qualifiedName": "ShippingMethod"
								},
								"name": "ShippingMethod",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 3697,
							"name": "rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The rates applicable on the shipping method."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4911,
									"name": "TaxServiceRate",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3696,
								3697
							]
						}
					]
				}
			}
		},
		{
			"id": 3698,
			"name": "ItemTaxCalculationLine",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A line item and the tax rates configured to apply to the\nproduct contained in the line item."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3699,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3700,
							"name": "item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The line item to calculate taxes for."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/line-item.ts",
									"qualifiedName": "LineItem"
								},
								"name": "LineItem",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 3701,
							"name": "rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The rates applicable on the item."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4911,
									"name": "TaxServiceRate",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3700,
								3701
							]
						}
					]
				}
			}
		},
		{
			"id": 3702,
			"name": "TaxCalculationContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Information relevant to a tax calculation, such as the shipping address where\nthe items are going."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3703,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3704,
							"name": "shipping_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping address used in the cart."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/address.ts",
											"qualifiedName": "Address"
										},
										"name": "Address",
										"package": "@medusajs/medusa"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 3705,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer that the cart belongs to."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/customer.ts",
									"qualifiedName": "Customer"
								},
								"name": "Customer",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 3706,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The cart's region."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/region.ts",
									"qualifiedName": "Region"
								},
								"name": "Region",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 3707,
							"name": "is_return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the cart is used in a return flow."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 3708,
							"name": "shipping_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping methods used in the cart."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/shipping-method.ts",
										"qualifiedName": "ShippingMethod"
									},
									"name": "ShippingMethod",
									"package": "@medusajs/medusa"
								}
							}
						},
						{
							"id": 3709,
							"name": "allocation_map",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The gift cards and discounts applied on line items.\nEach object key or property is an ID of a line item"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4918,
								"name": "LineAllocationsMap",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3704,
								3705,
								3706,
								3707,
								3708,
								3709
							]
						}
					]
				}
			}
		},
		{
			"id": 3710,
			"name": "ITaxService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "## Overview\n\nA tax provider is used to retrieve the tax lines in a cart. The Medusa backend provides a default "
					},
					{
						"kind": "code",
						"text": "`system`"
					},
					{
						"kind": "text",
						"text": " provider. You can create your own tax provider,\neither in a plugin or directly in your Medusa backend, then use it in any region.\n\nA tax provider class is defined in a TypeScript or JavaScript file under the "
					},
					{
						"kind": "code",
						"text": "`src/services`"
					},
					{
						"kind": "text",
						"text": " directory and the class must extend the\n"
					},
					{
						"kind": "code",
						"text": "`AbstractTaxService`"
					},
					{
						"kind": "text",
						"text": " class imported from "
					},
					{
						"kind": "code",
						"text": "`@medusajs/medusa`"
					},
					{
						"kind": "text",
						"text": ". The file's name is the tax provider's class name as a slug and without the word "
					},
					{
						"kind": "code",
						"text": "`Service`"
					},
					{
						"kind": "text",
						"text": ".\n\nFor example, you can create the file "
					},
					{
						"kind": "code",
						"text": "`src/services/my-tax.ts`"
					},
					{
						"kind": "text",
						"text": " with the following content:\n\n"
					},
					{
						"kind": "code",
						"text": "```ts title=\"src/services/my-tax.ts\"\nimport {\n  AbstractTaxService,\n  ItemTaxCalculationLine,\n  ShippingTaxCalculationLine,\n  TaxCalculationContext,\n} from \"@medusajs/medusa\"\nimport {\n  ProviderTaxLine,\n} from \"@medusajs/medusa/dist/types/tax-service\"\n\nclass MyTaxService extends AbstractTaxService {\n  async getTaxLines(\n    itemLines: ItemTaxCalculationLine[],\n    shippingLines: ShippingTaxCalculationLine[],\n    context: TaxCalculationContext):\n    Promise<ProviderTaxLine[]> {\n    throw new Error(\"Method not implemented.\")\n  }\n}\n\nexport default MyTaxService\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---\n\n## Identifier Property\n\nThe "
					},
					{
						"kind": "code",
						"text": "`TaxProvider`"
					},
					{
						"kind": "text",
						"text": " entity has 2 properties: "
					},
					{
						"kind": "code",
						"text": "`identifier`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`is_installed`"
					},
					{
						"kind": "text",
						"text": ". The "
					},
					{
						"kind": "code",
						"text": "`identifier`"
					},
					{
						"kind": "text",
						"text": " property in the tax provider service is used when the tax provider is added to the database.\n\nThe value of this property is also used to reference the tax provider throughout Medusa. For example, it is used to [change the tax provider](https://docs.medusajs.com/modules/taxes/admin/manage-tax-settings#change-tax-provider-of-a-region) to a region.\n\n"
					},
					{
						"kind": "code",
						"text": "```ts title=\"src/services/my-tax.ts\"\nclass MyTaxService extends AbstractTaxService {\n  static identifier = \"my-tax\"\n  // ...\n}\n```"
					},
					{
						"kind": "text",
						"text": "\n\n---"
					}
				]
			},
			"children": [
				{
					"id": 3711,
					"name": "getTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3712,
							"name": "getTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used when retrieving the tax lines for line items and shipping methods.\nThis occurs during checkout or when calculating totals for orders, swaps, or returns."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of calculated line item and shipping method tax lines.\nIf an item in the array has the "
											},
											{
												"kind": "code",
												"text": "`shipping_method_id`"
											},
											{
												"kind": "text",
												"text": " property, then it's a shipping method tax line. Otherwise, if it has\nthe "
											},
											{
												"kind": "code",
												"text": "`item_id`"
											},
											{
												"kind": "text",
												"text": " property, then it's a line item tax line."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "An example of how this method is implemented in the "
											},
											{
												"kind": "code",
												"text": "`system`"
											},
											{
												"kind": "text",
												"text": " provider implemented in the Medusa backend:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n// ...\n\nclass SystemTaxService extends AbstractTaxService {\n  // ...\n\n  async getTaxLines(\n    itemLines: ItemTaxCalculationLine[],\n    shippingLines: ShippingTaxCalculationLine[],\n    context: TaxCalculationContext\n  ): Promise<ProviderTaxLine[]> {\n    let taxLines: ProviderTaxLine[] = itemLines.flatMap((l) => {\n      return l.rates.map((r) => ({\n        rate: r.rate || 0,\n        name: r.name,\n        code: r.code,\n        item_id: l.item.id,\n      }))\n    })\n\n    taxLines = taxLines.concat(\n      shippingLines.flatMap((l) => {\n        return l.rates.map((r) => ({\n          rate: r.rate || 0,\n          name: r.name,\n          code: r.code,\n          shipping_method_id: l.shipping_method.id,\n        }))\n      })\n    )\n\n    return taxLines\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3713,
									"name": "itemLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item lines to calculate taxes for."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3698,
											"name": "ItemTaxCalculationLine",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 3714,
									"name": "shippingLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping method lines to calculate taxes for."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3694,
											"name": "ShippingTaxCalculationLine",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 3715,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Context relevant and useful for the taxes calculation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3702,
										"name": "TaxCalculationContext",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4925,
											"name": "ProviderTaxLine",
											"package": "@medusajs/medusa"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						3711
					]
				}
			],
			"implementedBy": [
				{
					"type": "reference",
					"target": 3716,
					"name": "AbstractTaxService"
				}
			]
		},
		{
			"id": 3716,
			"name": "AbstractTaxService",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 3718,
					"name": "identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isStatic": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3722,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3723,
							"name": "new AbstractTaxService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "You can use the "
									},
									{
										"kind": "code",
										"text": "`constructor`"
									},
									{
										"kind": "text",
										"text": " of your tax provider to access the different services in Medusa through dependency injection.\n\nYou can also use the constructor to initialize your integration with the third-party provider. For example, if you use a client to connect to the third-party provider’s APIs, you can initialize it in the constructor and use it in other methods in the service.\nAdditionally, if you’re creating your tax provider as an external plugin to be installed on any Medusa backend and you want to access the options added for the plugin, you can access it in the constructor."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// ...\nimport { LineItemService } from \"@medusajs/medusa\"\n\ntype InjectedDependencies = {\n  lineItemService: LineItemService\n}\n\nclass MyTaxService extends AbstractTaxService {\n  protected readonly lineItemService_: LineItemService\n\n  constructor({ lineItemService }: InjectedDependencies) {\n    super(arguments[0])\n    this.lineItemService_ = lineItemService\n\n    // you can also initialize a client that\n    // communicates with a third-party service.\n    this.client = new Client(options)\n  }\n\n  // ...\n}\n\nexport default MyTaxService\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3724,
									"name": "container",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An instance of "
											},
											{
												"kind": "code",
												"text": "`MedusaContainer`"
											},
											{
												"kind": "text",
												"text": " that allows you to access other resources, such as services, in your Medusa backend."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4884,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 3725,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If this tax provider is created in a plugin, the plugin's options are passed in this parameter."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 3716,
								"name": "AbstractTaxService",
								"package": "@medusajs/medusa"
							},
							"overwrites": {
								"type": "reference",
								"target": 3768,
								"name": "TransactionBaseService.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 3767,
						"name": "TransactionBaseService.constructor"
					}
				},
				{
					"id": 3726,
					"name": "container",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of "
							},
							{
								"kind": "code",
								"text": "`MedusaContainer`"
							},
							{
								"kind": "text",
								"text": " that allows you to access other resources, such as services, in your Medusa backend."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4884,
						"name": "MedusaContainer",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 3727,
					"name": "config",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If this tax provider is created in a plugin, the plugin's options are passed in this parameter."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 3730,
					"name": "getTaxLines",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isAbstract": true
					},
					"signatures": [
						{
							"id": 3731,
							"name": "getTaxLines",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used when retrieving the tax lines for line items and shipping methods.\nThis occurs during checkout or when calculating totals for orders, swaps, or returns."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of calculated line item and shipping method tax lines.\nIf an item in the array has the "
											},
											{
												"kind": "code",
												"text": "`shipping_method_id`"
											},
											{
												"kind": "text",
												"text": " property, then it's a shipping method tax line. Otherwise, if it has\nthe "
											},
											{
												"kind": "code",
												"text": "`item_id`"
											},
											{
												"kind": "text",
												"text": " property, then it's a line item tax line."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "An example of how this method is implemented in the "
											},
											{
												"kind": "code",
												"text": "`system`"
											},
											{
												"kind": "text",
												"text": " provider implemented in the Medusa backend:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n// ...\n\nclass SystemTaxService extends AbstractTaxService {\n  // ...\n\n  async getTaxLines(\n    itemLines: ItemTaxCalculationLine[],\n    shippingLines: ShippingTaxCalculationLine[],\n    context: TaxCalculationContext\n  ): Promise<ProviderTaxLine[]> {\n    let taxLines: ProviderTaxLine[] = itemLines.flatMap((l) => {\n      return l.rates.map((r) => ({\n        rate: r.rate || 0,\n        name: r.name,\n        code: r.code,\n        item_id: l.item.id,\n      }))\n    })\n\n    taxLines = taxLines.concat(\n      shippingLines.flatMap((l) => {\n        return l.rates.map((r) => ({\n          rate: r.rate || 0,\n          name: r.name,\n          code: r.code,\n          shipping_method_id: l.shipping_method.id,\n        }))\n      })\n    )\n\n    return taxLines\n  }\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 3732,
									"name": "itemLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item lines to calculate taxes for."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3698,
											"name": "ItemTaxCalculationLine",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 3733,
									"name": "shippingLines",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The shipping method lines to calculate taxes for."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 3694,
											"name": "ShippingTaxCalculationLine",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 3734,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Context relevant and useful for the taxes calculation."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 3702,
										"name": "TaxCalculationContext",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4925,
											"name": "ProviderTaxLine",
											"package": "@medusajs/medusa"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": 3712,
								"name": "ITaxService.getTaxLines"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": 3711,
						"name": "ITaxService.getTaxLines"
					}
				},
				{
					"id": 3735,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3772,
						"name": "TransactionBaseService.manager_"
					}
				},
				{
					"id": 3736,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3773,
						"name": "TransactionBaseService.transactionManager_"
					}
				},
				{
					"id": 3737,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 3738,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						},
						"inheritedFrom": {
							"type": "reference",
							"target": -1,
							"name": "TransactionBaseService.activeManager_"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3774,
						"name": "TransactionBaseService.activeManager_"
					}
				},
				{
					"id": 3739,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3776,
						"name": "TransactionBaseService.__container__"
					}
				},
				{
					"id": 3740,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3777,
						"name": "TransactionBaseService.__configModule__"
					}
				},
				{
					"id": 3741,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3778,
						"name": "TransactionBaseService.__moduleDeclaration__"
					}
				},
				{
					"id": 3742,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3743,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3744,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3780,
								"name": "TransactionBaseService.withTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3779,
						"name": "TransactionBaseService.withTransaction"
					}
				},
				{
					"id": 3745,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3746,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3747,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3748,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3749,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3749
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3783,
								"name": "TransactionBaseService.shouldRetryTransaction_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3782,
						"name": "TransactionBaseService.shouldRetryTransaction_"
					}
				},
				{
					"id": 3750,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3751,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 3752,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 3753,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3754,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3755,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3756,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3757,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 3758,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3759,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 3760,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 3761,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 3762,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3763,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3764,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3765,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3788,
								"name": "TransactionBaseService.atomicPhase_"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3787,
						"name": "TransactionBaseService.atomicPhase_"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3722
					]
				},
				{
					"title": "Properties",
					"children": [
						3718,
						3726,
						3727,
						3735,
						3736,
						3739,
						3740,
						3741
					]
				},
				{
					"title": "Accessors",
					"children": [
						3737
					]
				},
				{
					"title": "Methods",
					"children": [
						3730,
						3742,
						3745,
						3750
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3766,
					"name": "TransactionBaseService",
					"package": "@medusajs/medusa"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": 3710,
					"name": "ITaxService",
					"package": "@medusajs/medusa"
				}
			]
		},
		{
			"id": 3766,
			"name": "TransactionBaseService",
			"variant": "declaration",
			"kind": 128,
			"flags": {
				"isAbstract": true
			},
			"children": [
				{
					"id": 3772,
					"name": "manager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					}
				},
				{
					"id": 3773,
					"name": "transactionManager_",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
									"qualifiedName": "EntityManager"
								},
								"name": "EntityManager",
								"package": "typeorm"
							}
						]
					}
				},
				{
					"id": 3774,
					"name": "activeManager_",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isProtected": true
					},
					"getSignature": {
						"id": 3775,
						"name": "activeManager_",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
								"qualifiedName": "EntityManager"
							},
							"name": "EntityManager",
							"package": "typeorm"
						}
					}
				},
				{
					"id": 3767,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3768,
							"name": "new TransactionBaseService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 3769,
									"name": "__container__",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 3770,
									"name": "__configModule__",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 3771,
									"name": "__moduleDeclaration__",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 3766,
								"name": "TransactionBaseService",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 3776,
					"name": "__container__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isReadonly": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 3777,
					"name": "__configModule__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 3778,
					"name": "__moduleDeclaration__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true,
						"isOptional": true,
						"isReadonly": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 3779,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 3780,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3781,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				},
				{
					"id": 3782,
					"name": "shouldRetryTransaction_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3783,
							"name": "shouldRetryTransaction_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 3784,
									"name": "err",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3785,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 3786,
															"name": "code",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																3786
															]
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 3787,
					"name": "atomicPhase_",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isProtected": true
					},
					"signatures": [
						{
							"id": 3788,
							"name": "atomicPhase_",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Wraps some work within a transactional block. If the service already has\na transaction manager attached this will be reused, otherwise a new\ntransaction manager is created."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "the result of the transactional work"
											}
										]
									}
								]
							},
							"typeParameter": [
								{
									"id": 3789,
									"name": "TResult",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 3790,
									"name": "TError",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 3791,
									"name": "work",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the transactional work to be done"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3792,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3793,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3794,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
																	"qualifiedName": "EntityManager"
																},
																"name": "EntityManager",
																"package": "typeorm"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 2734,
																"name": "TResult",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 3795,
									"name": "isolationOrErrorHandler",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the isolation level to be used for the work."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/driver/types/IsolationLevel.d.ts",
													"qualifiedName": "IsolationLevel"
												},
												"name": "IsolationLevel",
												"package": "typeorm"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 3796,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 3797,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 3798,
																	"name": "error",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 2735,
																		"name": "TError",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "void"
																			},
																			{
																				"type": "reference",
																				"target": 2734,
																				"name": "TResult",
																				"package": "@medusajs/medusa",
																				"refersToTypeParameter": true
																			}
																		]
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 3799,
									"name": "maybeErrorHandlerOrDontFail",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Potential error handler"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 3800,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 3801,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 3802,
															"name": "error",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 2735,
																"name": "TError",
																"package": "@medusajs/medusa",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "void"
																	},
																	{
																		"type": "reference",
																		"target": 2734,
																		"name": "TResult",
																		"package": "@medusajs/medusa",
																		"refersToTypeParameter": true
																	}
																]
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 2734,
										"name": "TResult",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3767
					]
				},
				{
					"title": "Properties",
					"children": [
						3772,
						3773,
						3776,
						3777,
						3778
					]
				},
				{
					"title": "Accessors",
					"children": [
						3774
					]
				},
				{
					"title": "Methods",
					"children": [
						3779,
						3782,
						3787
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 2704,
					"name": "IBatchJobStrategy"
				},
				{
					"type": "reference",
					"target": 2748,
					"name": "AbstractBatchJobStrategy"
				},
				{
					"type": "reference",
					"target": 2824,
					"name": "AbstractCartCompletionStrategy"
				},
				{
					"type": "reference",
					"target": 2870,
					"name": "IFileService"
				},
				{
					"type": "reference",
					"target": 2920,
					"name": "AbstractFileService"
				},
				{
					"type": "reference",
					"target": 2979,
					"name": "FulfillmentService"
				},
				{
					"type": "reference",
					"target": 3056,
					"name": "AbstractFulfillmentService"
				},
				{
					"type": "reference",
					"target": 3148,
					"name": "INotificationService"
				},
				{
					"type": "reference",
					"target": 3190,
					"name": "AbstractNotificationService"
				},
				{
					"type": "reference",
					"target": 3379,
					"name": "PaymentService"
				},
				{
					"type": "reference",
					"target": 3461,
					"name": "AbstractPaymentService"
				},
				{
					"type": "reference",
					"target": 3566,
					"name": "AbstractPriceSelectionStrategy"
				},
				{
					"type": "reference",
					"target": 3647,
					"name": "AbstractTaxCalculationStrategy"
				},
				{
					"type": "reference",
					"target": 3716,
					"name": "AbstractTaxService"
				}
			]
		},
		{
			"id": 3803,
			"name": "joinerConfig",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "reference",
					"target": 4926,
					"name": "ModuleJoinerConfig",
					"package": "@medusajs/types"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 5236,
			"name": "HTTP_METHODS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "List of all the supported HTTP methods"
					}
				]
			},
			"type": {
				"type": "typeOperator",
				"operator": "readonly",
				"target": {
					"type": "tuple",
					"elements": [
						{
							"type": "literal",
							"value": "GET"
						},
						{
							"type": "literal",
							"value": "POST"
						},
						{
							"type": "literal",
							"value": "PUT"
						},
						{
							"type": "literal",
							"value": "PATCH"
						},
						{
							"type": "literal",
							"value": "DELETE"
						},
						{
							"type": "literal",
							"value": "OPTIONS"
						},
						{
							"type": "literal",
							"value": "HEAD"
						}
					]
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 5143,
			"name": "RouteVerb",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "intrinsic",
					"name": "number"
				},
				"objectType": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"target": 5236,
						"name": "HTTP_METHODS",
						"package": "@medusajs/medusa"
					}
				}
			}
		},
		{
			"id": 4964,
			"name": "MiddlewareVerb",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "USE"
					},
					{
						"type": "literal",
						"value": "ALL"
					},
					{
						"type": "reference",
						"target": 5143,
						"name": "RouteVerb",
						"package": "@medusajs/medusa"
					}
				]
			}
		},
		{
			"id": 4053,
			"name": "MiddlewareFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 4161,
						"name": "MedusaRequestHandler",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 4054,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 4055,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4056,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 4968,
			"name": "MedusaErrorHandlerFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4969,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 4970,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 4971,
									"name": "error",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 4972,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4148,
										"name": "MedusaRequest",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 4973,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4159,
										"name": "MedusaResponse",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 4974,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4160,
										"name": "MedusaNextFunction",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 4965,
			"name": "ParserConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": false
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 4966,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4967,
									"name": "sizeLimit",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4967
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 4057,
			"name": "MiddlewareRoute",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4058,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4059,
							"name": "method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 4964,
										"name": "MiddlewareVerb",
										"package": "@medusajs/medusa"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4964,
											"name": "MiddlewareVerb",
											"package": "@medusajs/medusa"
										}
									}
								]
							}
						},
						{
							"id": 4060,
							"name": "matcher",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "RegExp"
										},
										"name": "RegExp",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4061,
							"name": "bodyParser",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4965,
								"name": "ParserConfig",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 4062,
							"name": "middlewares",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4053,
									"name": "MiddlewareFunction",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4059,
								4060,
								4061,
								4062
							]
						}
					]
				}
			}
		},
		{
			"id": 4063,
			"name": "MiddlewaresConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4064,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4065,
							"name": "errorHandler",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": false
									},
									{
										"type": "reference",
										"target": 4968,
										"name": "MedusaErrorHandlerFunction",
										"package": "@medusajs/medusa"
									}
								]
							}
						},
						{
							"id": 4066,
							"name": "routes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4057,
									"name": "MiddlewareRoute",
									"package": "@medusajs/medusa"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4065,
								4066
							]
						}
					]
				}
			}
		},
		{
			"id": 3804,
			"name": "BatchJobStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 3805,
					"name": "CREATED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "created"
					}
				},
				{
					"id": 3806,
					"name": "PRE_PROCESSED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "pre_processed"
					}
				},
				{
					"id": 3807,
					"name": "CONFIRMED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "confirmed"
					}
				},
				{
					"id": 3808,
					"name": "PROCESSING",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "processing"
					}
				},
				{
					"id": 3809,
					"name": "COMPLETED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "completed"
					}
				},
				{
					"id": 3810,
					"name": "CANCELED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "canceled"
					}
				},
				{
					"id": 3811,
					"name": "FAILED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "failed"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						3805,
						3806,
						3807,
						3808,
						3809,
						3810,
						3811
					]
				}
			]
		},
		{
			"id": 3812,
			"name": "BatchJobUpdateProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Partial"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Pick"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
									"qualifiedName": "BatchJob"
								},
								"name": "BatchJob",
								"package": "@medusajs/medusa"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "context"
									},
									{
										"type": "literal",
										"value": "result"
									}
								]
							}
						],
						"name": "Pick",
						"package": "typescript"
					}
				],
				"name": "Partial",
				"package": "typescript"
			}
		},
		{
			"id": 3813,
			"name": "CreateBatchJobInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3814,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3815,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3816,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "context"
								},
								"objectType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
										"qualifiedName": "BatchJob"
									},
									"name": "BatchJob",
									"package": "@medusajs/medusa"
								}
							}
						},
						{
							"id": 3817,
							"name": "dry_run",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3815,
								3816,
								3817
							]
						}
					]
				}
			}
		},
		{
			"id": 3818,
			"name": "BatchJobResultError",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3819,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3820,
							"name": "message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3821,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3820,
								3821
							]
						}
					],
					"indexSignature": {
						"id": 3822,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 3823,
								"name": "key",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 3824,
			"name": "BatchJobResultStatDescriptor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3825,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3826,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3827,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 3828,
							"name": "message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3826,
								3827,
								3828
							]
						}
					]
				}
			}
		},
		{
			"id": 3829,
			"name": "FilterableBatchJobProps",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 3830,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 3831,
							"name": "new FilterableBatchJobProps",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3829,
								"name": "FilterableBatchJobProps",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 3832,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 3833,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 3804,
							"name": "BatchJobStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 3834,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 3835,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 3836,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 3837,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3830
					]
				},
				{
					"title": "Properties",
					"children": [
						3832,
						3833,
						3834,
						3835,
						3836,
						3837
					]
				}
			]
		},
		{
			"id": 3838,
			"name": "BatchJobCreateProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Pick"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/batch-job.ts",
							"qualifiedName": "BatchJob"
						},
						"name": "BatchJob",
						"package": "@medusajs/medusa"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "context"
							},
							{
								"type": "literal",
								"value": "type"
							},
							{
								"type": "literal",
								"value": "created_by"
							},
							{
								"type": "literal",
								"value": "dry_run"
							}
						]
					}
				],
				"name": "Pick",
				"package": "typescript"
			}
		},
		{
			"id": 3845,
			"name": "WithRequiredProperty",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Utility type used to remove some optional attributes (coming from K) from a type T"
					}
				]
			},
			"typeParameters": [
				{
					"id": 3846,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 3847,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 3846,
							"name": "T",
							"package": "@medusajs/medusa",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3846,
						"name": "T",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					},
					{
						"type": "mapped",
						"parameter": "Property",
						"parameterType": {
							"type": "reference",
							"target": 3847,
							"name": "K",
							"package": "@medusajs/medusa",
							"refersToTypeParameter": true
						},
						"templateType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/types/common.ts",
									"qualifiedName": "Property"
								},
								"name": "Property",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 3846,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						"optionalModifier": "-"
					}
				]
			}
		},
		{
			"id": 3848,
			"name": "PartialPick",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3849,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 3850,
					"name": "K",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 3849,
							"name": "T",
							"package": "@medusajs/medusa",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "P",
				"parameterType": {
					"type": "reference",
					"target": 3850,
					"name": "K",
					"package": "@medusajs/medusa",
					"refersToTypeParameter": true
				},
				"templateType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/types/common.ts",
							"qualifiedName": "P"
						},
						"name": "P",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					},
					"objectType": {
						"type": "reference",
						"target": 3849,
						"name": "T",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 3851,
			"name": "Writable",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3852,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 3852,
						"name": "T",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/types/common.ts",
									"qualifiedName": "key"
								},
								"name": "key",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 3852,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
								"qualifiedName": "FindOperator"
							},
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/types/common.ts",
											"qualifiedName": "key"
										},
										"name": "key",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 3852,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								}
							],
							"name": "FindOperator",
							"package": "typeorm"
						},
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
								"qualifiedName": "FindOperator"
							},
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/types/common.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/medusa",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 3852,
											"name": "T",
											"package": "@medusajs/medusa",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"name": "FindOperator",
							"package": "typeorm"
						},
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
								"qualifiedName": "FindOperator"
							},
							"typeArguments": [
								{
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"name": "FindOperator",
							"package": "typeorm"
						}
					]
				},
				"readonlyModifier": "-"
			}
		},
		{
			"id": 3853,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 3854,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 3862,
								"name": "Entity",
								"package": "@medusajs/medusa",
								"qualifiedName": "FindConfig.Entity",
								"refersToTypeParameter": true
							}
						}
					}
				},
				{
					"id": 3855,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3856,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3857,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 3858,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 3859,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignature": {
								"id": 3860,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"parameters": [
									{
										"id": 3861,
										"name": "K",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "ASC"
										},
										{
											"type": "literal",
											"value": "DESC"
										}
									]
								}
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3854,
						3855,
						3856,
						3857,
						3858
					]
				}
			],
			"typeParameters": [
				{
					"id": 3862,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 3863,
			"name": "ExtendedFindConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3871,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOneOptions.d.ts",
											"qualifiedName": "FindOneOptions"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3871,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOneOptions",
										"package": "typeorm"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "where"
											},
											{
												"type": "literal",
												"value": "relations"
											},
											{
												"type": "literal",
												"value": "select"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindManyOptions.d.ts",
											"qualifiedName": "FindManyOptions"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3871,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindManyOptions",
										"package": "typeorm"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "where"
											},
											{
												"type": "literal",
												"value": "relations"
											},
											{
												"type": "literal",
												"value": "select"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						]
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 3864,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3865,
									"name": "select",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
											"qualifiedName": "FindOptionsSelect"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3871,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsSelect",
										"package": "typeorm"
									}
								},
								{
									"id": 3866,
									"name": "relations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsRelations.d.ts",
											"qualifiedName": "FindOptionsRelations"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3871,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsRelations",
										"package": "typeorm"
									}
								},
								{
									"id": 3867,
									"name": "where",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
													"qualifiedName": "FindOptionsWhere"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": 3871,
														"name": "TEntity",
														"package": "@medusajs/medusa",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptionsWhere",
												"package": "typeorm"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
														"qualifiedName": "FindOptionsWhere"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": 3871,
															"name": "TEntity",
															"package": "@medusajs/medusa",
															"refersToTypeParameter": true
														}
													],
													"name": "FindOptionsWhere",
													"package": "typeorm"
												}
											}
										]
									}
								},
								{
									"id": 3868,
									"name": "order",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsOrder.d.ts",
											"qualifiedName": "FindOptionsOrder"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3871,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsOrder",
										"package": "typeorm"
									}
								},
								{
									"id": 3869,
									"name": "skip",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 3870,
									"name": "take",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3865,
										3866,
										3867,
										3868,
										3869,
										3870
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 3872,
			"name": "QuerySelector",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3875,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3880,
						"typeArguments": [
							{
								"type": "reference",
								"target": 3875,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						],
						"name": "Selector",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 3873,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3874,
									"name": "q",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3874
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 3876,
			"name": "TreeQuerySelector",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3879,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 3872,
						"typeArguments": [
							{
								"type": "reference",
								"target": 3879,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						],
						"name": "QuerySelector",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 3877,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3878,
									"name": "include_descendants_tree",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3878
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 4953,
			"name": "InnerSelector",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 4954,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 4954,
						"name": "TEntity",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/types/common.ts",
									"qualifiedName": "key"
								},
								"name": "key",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 4954,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"type": "array",
							"elementType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../packages/medusa/src/types/common.ts",
										"qualifiedName": "key"
									},
									"name": "key",
									"package": "@medusajs/medusa",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 4954,
									"name": "TEntity",
									"package": "@medusajs/medusa",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"type": "reference",
							"target": 3917,
							"name": "DateComparisonOperator",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3924,
							"name": "StringComparisonOperator",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": 3934,
							"name": "NumericalComparisonOperator",
							"package": "@medusajs/medusa"
						},
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
								"qualifiedName": "FindOperator"
							},
							"typeArguments": [
								{
									"type": "union",
									"types": [
										{
											"type": "array",
											"elementType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/types/common.ts",
														"qualifiedName": "key"
													},
													"name": "key",
													"package": "@medusajs/medusa",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 4954,
													"name": "TEntity",
													"package": "@medusajs/medusa",
													"refersToTypeParameter": true
												}
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"name": "FindOperator",
							"package": "typeorm"
						}
					]
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 3880,
			"name": "Selector",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3881,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 4953,
						"typeArguments": [
							{
								"type": "reference",
								"target": 3881,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						],
						"name": "InnerSelector",
						"package": "@medusajs/medusa"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4953,
							"typeArguments": [
								{
									"type": "reference",
									"target": 3881,
									"name": "TEntity",
									"package": "@medusajs/medusa",
									"refersToTypeParameter": true
								}
							],
							"name": "InnerSelector",
							"package": "@medusajs/medusa"
						}
					}
				]
			}
		},
		{
			"id": 3882,
			"name": "TotalField",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "shipping_total"
					},
					{
						"type": "literal",
						"value": "discount_total"
					},
					{
						"type": "literal",
						"value": "tax_total"
					},
					{
						"type": "literal",
						"value": "refunded_total"
					},
					{
						"type": "literal",
						"value": "total"
					},
					{
						"type": "literal",
						"value": "subtotal"
					},
					{
						"type": "literal",
						"value": "refundable_amount"
					},
					{
						"type": "literal",
						"value": "gift_card_total"
					},
					{
						"type": "literal",
						"value": "gift_card_tax_total"
					}
				]
			}
		},
		{
			"id": 3883,
			"name": "CustomFindOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 3884,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
									"qualifiedName": "FindOptionsSelect"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3889,
										"name": "TModel",
										"package": "@medusajs/medusa",
										"qualifiedName": "CustomFindOptions.TModel",
										"refersToTypeParameter": true
									}
								],
								"name": "FindOptionsSelect",
								"package": "typeorm"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
									"qualifiedName": "FindOptionsSelectByString"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 3889,
										"name": "TModel",
										"package": "@medusajs/medusa",
										"qualifiedName": "CustomFindOptions.TModel",
										"refersToTypeParameter": true
									}
								],
								"name": "FindOptionsSelectByString",
								"package": "typeorm"
							}
						]
					}
				},
				{
					"id": 3885,
					"name": "where",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
											"qualifiedName": "FindOptionsWhere"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 3889,
												"name": "TModel",
												"package": "@medusajs/medusa",
												"qualifiedName": "CustomFindOptions.TModel",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsWhere",
										"package": "typeorm"
									},
									{
										"type": "mapped",
										"parameter": "P",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "array",
											"elementType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/types/common.ts",
														"qualifiedName": "P"
													},
													"name": "P",
													"package": "@medusajs/medusa",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 3889,
													"name": "TModel",
													"package": "@medusajs/medusa",
													"qualifiedName": "CustomFindOptions.TModel",
													"refersToTypeParameter": true
												}
											}
										},
										"optionalModifier": "+"
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
												"qualifiedName": "FindOptionsWhere"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": 3889,
													"name": "TModel",
													"package": "@medusajs/medusa",
													"qualifiedName": "CustomFindOptions.TModel",
													"refersToTypeParameter": true
												}
											],
											"name": "FindOptionsWhere",
											"package": "typeorm"
										}
									},
									{
										"type": "mapped",
										"parameter": "P",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "array",
											"elementType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../packages/medusa/src/types/common.ts",
														"qualifiedName": "P"
													},
													"name": "P",
													"package": "@medusajs/medusa",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 3889,
													"name": "TModel",
													"package": "@medusajs/medusa",
													"qualifiedName": "CustomFindOptions.TModel",
													"refersToTypeParameter": true
												}
											}
										},
										"optionalModifier": "+"
									}
								]
							}
						]
					}
				},
				{
					"id": 3886,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/find-options/OrderByCondition.d.ts",
							"qualifiedName": "OrderByCondition"
						},
						"name": "OrderByCondition",
						"package": "typeorm"
					}
				},
				{
					"id": 3887,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3888,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3884,
						3885,
						3886,
						3887,
						3888
					]
				}
			],
			"typeParameters": [
				{
					"id": 3889,
					"name": "TModel",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 3890,
					"name": "InKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 3889,
							"name": "TModel",
							"package": "@medusajs/medusa",
							"qualifiedName": "CustomFindOptions.TModel",
							"refersToTypeParameter": true
						}
					}
				}
			]
		},
		{
			"id": 3891,
			"name": "QueryConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3899,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/interfaces/models/base-entity.ts",
							"qualifiedName": "BaseEntity"
						},
						"name": "BaseEntity",
						"package": "@medusajs/medusa"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3892,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3893,
							"name": "defaultFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 3899,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						},
						{
							"id": 3894,
							"name": "defaultRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3895,
							"name": "allowedFields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3896,
							"name": "allowedRelations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 3897,
							"name": "defaultLimit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 3898,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3893,
								3894,
								3895,
								3896,
								3897,
								3898
							]
						}
					]
				}
			}
		},
		{
			"id": 3900,
			"name": "RequestQueryFields",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Request parameters used to configure and paginate retrieved data."
					}
				]
			},
			"children": [
				{
					"id": 3901,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3902,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3903,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3904,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3905,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
							},
							{
								"kind": "code",
								"text": "`-`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3901,
						3902,
						3903,
						3904,
						3905
					]
				}
			]
		},
		{
			"id": 3906,
			"name": "PaginatedResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Pagination fields returned in the response of an API route."
					}
				]
			},
			"children": [
				{
					"id": 3907,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of items that can be returned in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3908,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items skipped before the returned items in the list."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3909,
					"name": "count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total number of items available."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3907,
						3908,
						3909
					]
				}
			]
		},
		{
			"id": 3910,
			"name": "DeleteResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The response returned for a "
					},
					{
						"kind": "code",
						"text": "`DELETE`"
					},
					{
						"kind": "text",
						"text": " request."
					}
				]
			},
			"children": [
				{
					"id": 3911,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the deleted item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3912,
					"name": "object",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the deleted item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "product-collection"
				},
				{
					"id": 3913,
					"name": "deleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the item was deleted successfully."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": true
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						3911,
						3912,
						3913
					]
				}
			]
		},
		{
			"id": 3914,
			"name": "EmptyQueryParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 3915,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 3916,
							"name": "new EmptyQueryParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3914,
								"name": "EmptyQueryParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3915
					]
				}
			]
		},
		{
			"id": 3917,
			"name": "DateComparisonOperator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields used to apply flexible filters on dates."
					}
				]
			},
			"children": [
				{
					"id": 3918,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 3919,
							"name": "new DateComparisonOperator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3917,
								"name": "DateComparisonOperator",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 3920,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered date must be less than this value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3921,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered date must be greater than this value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3922,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered date must be greater than or equal to this value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				},
				{
					"id": 3923,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered date must be less than or equal to this value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3918
					]
				},
				{
					"title": "Properties",
					"children": [
						3920,
						3921,
						3922,
						3923
					]
				}
			]
		},
		{
			"id": 3924,
			"name": "StringComparisonOperator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields used to apply flexible filters on strings."
					}
				]
			},
			"children": [
				{
					"id": 3925,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 3926,
							"name": "new StringComparisonOperator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3924,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 3927,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be less than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3928,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be greater than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3929,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be greater than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3930,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be less than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3931,
					"name": "contains",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must contain this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3932,
					"name": "starts_with",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must start with this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3933,
					"name": "ends_with",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must end with this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3925
					]
				},
				{
					"title": "Properties",
					"children": [
						3927,
						3928,
						3929,
						3930,
						3931,
						3932,
						3933
					]
				}
			]
		},
		{
			"id": 3934,
			"name": "NumericalComparisonOperator",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields used to apply flexible filters on numbers."
					}
				]
			},
			"children": [
				{
					"id": 3935,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 3936,
							"name": "new NumericalComparisonOperator",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3934,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 3937,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be less than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3938,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be greater than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3939,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be greater than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 3940,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be less than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3935
					]
				},
				{
					"title": "Properties",
					"children": [
						3937,
						3938,
						3939,
						3940
					]
				}
			]
		},
		{
			"id": 3941,
			"name": "AddressPayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Address fields used when creating/updating an address."
					}
				]
			},
			"children": [
				{
					"id": 3942,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 3943,
							"name": "new AddressPayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address fields used when creating/updating an address."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 3941,
								"name": "AddressPayload",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 3944,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "First name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3945,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Last name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3946,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Phone Number"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3947,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 3948,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Company"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3949,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 1"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3950,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 2"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3951,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "City"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3952,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code of the country in lower case"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3953,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Province"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3954,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal Code"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3942
					]
				},
				{
					"title": "Properties",
					"children": [
						3944,
						3945,
						3946,
						3947,
						3948,
						3949,
						3950,
						3951,
						3952,
						3953,
						3954
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 2276,
					"name": "StorePostCustomersCustomerAddressesAddressReq"
				}
			]
		},
		{
			"id": 3955,
			"name": "AddressCreatePayload",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Address fields used when creating an address."
					}
				]
			},
			"children": [
				{
					"id": 3956,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 3957,
							"name": "new AddressCreatePayload",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Address fields used when creating an address."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 3955,
								"name": "AddressCreatePayload",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 3958,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "First name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3959,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Last name"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3960,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Phone Number"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3961,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional key-value map with additional details"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 3962,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3963,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 1"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3964,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Address line 2"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3965,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "City"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3966,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 2 character ISO code of the country in lower case"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3967,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Province"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3968,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Postal Code"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3956
					]
				},
				{
					"title": "Properties",
					"children": [
						3958,
						3959,
						3960,
						3961,
						3962,
						3963,
						3964,
						3965,
						3966,
						3967,
						3968
					]
				}
			]
		},
		{
			"id": 3969,
			"name": "FindParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how data is retrieved."
					}
				]
			},
			"children": [
				{
					"id": 3970,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 3971,
							"name": "new FindParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3969,
								"name": "FindParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 3972,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 3973,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3970
					]
				},
				{
					"title": "Properties",
					"children": [
						3972,
						3973
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 154,
					"name": "AdminGetCustomerGroupsGroupParams"
				},
				{
					"type": "reference",
					"target": 238,
					"name": "AdminPostDiscountsDiscountConditionsParams"
				},
				{
					"type": "reference",
					"target": 273,
					"name": "AdminPostDiscountsParams"
				},
				{
					"type": "reference",
					"target": 284,
					"name": "AdminDeleteDiscountsDiscountConditionsConditionParams"
				},
				{
					"type": "reference",
					"target": 289,
					"name": "AdminGetDiscountsDiscountConditionsConditionParams"
				},
				{
					"type": "reference",
					"target": 294,
					"name": "AdminGetDiscountParams"
				},
				{
					"type": "reference",
					"target": 299,
					"name": "AdminGetDiscountsDiscountCodeParams"
				},
				{
					"type": "reference",
					"target": 324,
					"name": "AdminPostDiscountsDiscountConditionsConditionParams"
				},
				{
					"type": "reference",
					"target": 359,
					"name": "AdminPostDiscountsDiscountParams"
				},
				{
					"type": "reference",
					"target": 370,
					"name": "AdminPostDiscountsDiscountConditionsConditionBatchParams"
				},
				{
					"type": "reference",
					"target": 375,
					"name": "AdminDeleteDiscountsDiscountConditionsConditionBatchParams"
				},
				{
					"type": "reference",
					"target": 526,
					"name": "AdminPostInventoryItemsParams"
				},
				{
					"type": "reference",
					"target": 537,
					"name": "AdminPostInventoryItemsItemLocationLevelsParams"
				},
				{
					"type": "reference",
					"target": 542,
					"name": "AdminGetInventoryItemsItemParams"
				},
				{
					"type": "reference",
					"target": 568,
					"name": "AdminGetInventoryItemsItemLocationLevelsParams"
				},
				{
					"type": "reference",
					"target": 590,
					"name": "AdminPostInventoryItemsInventoryItemParams"
				},
				{
					"type": "reference",
					"target": 600,
					"name": "AdminPostInventoryItemsItemLocationLevelsLevelParams"
				},
				{
					"type": "reference",
					"target": 699,
					"name": "GetOrderEditsOrderEditParams"
				},
				{
					"type": "reference",
					"target": 743,
					"name": "AdminPostOrdersOrderShippingMethodsParams"
				},
				{
					"type": "reference",
					"target": 748,
					"name": "AdminPostOrdersOrderArchiveParams"
				},
				{
					"type": "reference",
					"target": 753,
					"name": "AdminPostOrdersClaimCancel"
				},
				{
					"type": "reference",
					"target": 764,
					"name": "AdminPostOrdersOrderFulfillementsCancelParams"
				},
				{
					"type": "reference",
					"target": 769,
					"name": "AdminPostOrdersClaimFulfillmentsCancelParams"
				},
				{
					"type": "reference",
					"target": 774,
					"name": "AdminPostOrdersOrderSwapFulfillementsCancelParams"
				},
				{
					"type": "reference",
					"target": 779,
					"name": "AdminPostOrdersOrderCancel"
				},
				{
					"type": "reference",
					"target": 784,
					"name": "AdminPostOrdersSwapCancelParams"
				},
				{
					"type": "reference",
					"target": 789,
					"name": "AdminPostOrdersOrderCaptureParams"
				},
				{
					"type": "reference",
					"target": 794,
					"name": "AdminPostOrdersOrderCompleteParams"
				},
				{
					"type": "reference",
					"target": 812,
					"name": "AdminPostOrdersOrderClaimsParams"
				},
				{
					"type": "reference",
					"target": 822,
					"name": "AdminPostOrdersOrderClaimsClaimShipmentsParams"
				},
				{
					"type": "reference",
					"target": 841,
					"name": "AdminPostOrdersOrderFulfillmentsParams"
				},
				{
					"type": "reference",
					"target": 852,
					"name": "AdminPostOrdersOrderShipmentParams"
				},
				{
					"type": "reference",
					"target": 868,
					"name": "AdminPostOrdersOrderSwapsParams"
				},
				{
					"type": "reference",
					"target": 879,
					"name": "AdminPostOrdersOrderSwapsSwapShipmentsParams"
				},
				{
					"type": "reference",
					"target": 890,
					"name": "AdminPostOrdersOrderClaimsClaimFulfillmentsParams"
				},
				{
					"type": "reference",
					"target": 901,
					"name": "AdminPostOrdersOrderSwapsSwapFulfillmentsParams"
				},
				{
					"type": "reference",
					"target": 906,
					"name": "AdminGetOrdersOrderParams"
				},
				{
					"type": "reference",
					"target": 934,
					"name": "AdminPostOrdersOrderSwapsSwapProcessPaymentParams"
				},
				{
					"type": "reference",
					"target": 946,
					"name": "AdminPostOrdersOrderRefundsParams"
				},
				{
					"type": "reference",
					"target": 961,
					"name": "AdminPostOrdersOrderReturnsParams"
				},
				{
					"type": "reference",
					"target": 973,
					"name": "AdminPostOrdersOrderClaimsClaimParams"
				},
				{
					"type": "reference",
					"target": 991,
					"name": "AdminPostOrdersOrderParams"
				},
				{
					"type": "reference",
					"target": 1006,
					"name": "AdminGetPaymentCollectionsParams"
				},
				{
					"type": "reference",
					"target": 1023,
					"name": "GetPaymentsParams"
				},
				{
					"type": "reference",
					"target": 1168,
					"name": "AdminGetProductCategoryParams"
				},
				{
					"type": "reference",
					"target": 1197,
					"name": "AdminPostProductCategoriesParams"
				},
				{
					"type": "reference",
					"target": 1213,
					"name": "AdminPostProductCategoriesCategoryParams"
				},
				{
					"type": "reference",
					"target": 1222,
					"name": "AdminPostProductCategoriesCategoryProductsBatchParams"
				},
				{
					"type": "reference",
					"target": 1231,
					"name": "AdminDeleteProductCategoriesCategoryProductsBatchParams"
				},
				{
					"type": "reference",
					"target": 1402,
					"name": "AdminGetProductParams"
				},
				{
					"type": "reference",
					"target": 1826,
					"name": "AdminPostStockLocationsParams"
				},
				{
					"type": "reference",
					"target": 1831,
					"name": "AdminGetStockLocationsLocationParams"
				},
				{
					"type": "reference",
					"target": 1855,
					"name": "AdminPostStockLocationsLocationParams"
				},
				{
					"type": "reference",
					"target": 2089,
					"name": "AdminGetVariantParams"
				},
				{
					"type": "reference",
					"target": 2329,
					"name": "StoreGetOrdersParams"
				},
				{
					"type": "reference",
					"target": 2352,
					"name": "StoreGetPaymentCollectionsParams"
				},
				{
					"type": "reference",
					"target": 2384,
					"name": "StoreGetProductCategoriesCategoryParams"
				},
				{
					"type": "reference",
					"target": 2534,
					"name": "StoreGetRegionsRegionParams"
				},
				{
					"type": "reference",
					"target": 4787,
					"name": "PriceSelectionParams"
				}
			]
		},
		{
			"id": 3974,
			"name": "FindPaginationParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Parameters that can be used to configure how a list of data is paginated."
					}
				]
			},
			"children": [
				{
					"id": 3975,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 3976,
							"name": "new FindPaginationParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 3974,
								"name": "FindPaginationParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 3977,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip when retrieving a list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n0\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 3978,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Limit the number of items returned in the list."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n20\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "20"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						3975
					]
				},
				{
					"title": "Properties",
					"children": [
						3977,
						3978
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 121,
					"name": "AdminGetCurrenciesParams"
				},
				{
					"type": "reference",
					"target": 1263,
					"name": "AdminGetProductTypesParams"
				},
				{
					"type": "reference",
					"target": 2407,
					"name": "StoreGetProductTagsParams"
				},
				{
					"type": "reference",
					"target": 2425,
					"name": "StoreGetProductTypesParams"
				}
			]
		},
		{
			"id": 3839,
			"name": "extendedFindParamsMixin",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 3840,
					"name": "extendedFindParamsMixin",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 3841,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3842,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 3843,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 3844,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												3843,
												3844
											]
										}
									]
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": 3983,
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 3969,
										"name": "FindParams",
										"package": "@medusajs/medusa"
									},
									{
										"type": "reference",
										"target": 3974,
										"name": "FindPaginationParams",
										"package": "@medusajs/medusa"
									}
								]
							}
						],
						"name": "ClassConstructor",
						"package": "@medusajs/medusa"
					}
				}
			]
		},
		{
			"id": 4338,
			"name": "FilterableCustomerGroupProps",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the retrieved customer groups."
					}
				]
			},
			"children": [
				{
					"id": 4339,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4340,
							"name": "new FilterableCustomerGroupProps",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4338,
								"name": "FilterableCustomerGroupProps",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4341,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter customer groups by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 3924,
								"name": "StringComparisonOperator",
								"package": "@medusajs/medusa"
							}
						]
					}
				},
				{
					"id": 4342,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search customer groups by their name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4343,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Names to filter customer groups by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4344,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer groups' "
							},
							{
								"kind": "code",
								"text": "`update_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 4345,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the customer groups' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 4346,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customer groups by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4339
					]
				},
				{
					"title": "Properties",
					"children": [
						4341,
						4342,
						4343,
						4344,
						4345,
						4346
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 159,
					"name": "AdminGetCustomerGroupsParams"
				}
			]
		},
		{
			"id": 4334,
			"name": "CustomerGroupsBatchCustomer",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4335,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4336,
							"name": "new CustomerGroupsBatchCustomer",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4334,
								"name": "CustomerGroupsBatchCustomer",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4337,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the customer"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4335
					]
				},
				{
					"title": "Properties",
					"children": [
						4337
					]
				}
			]
		},
		{
			"id": 4347,
			"name": "AdminListCustomerSelector",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters used to filter retrieved customers."
					}
				]
			},
			"children": [
				{
					"id": 4348,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4349,
							"name": "new AdminListCustomerSelector",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4347,
								"name": "AdminListCustomerSelector",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4350,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term used to search customers' email, first name, last name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4351,
					"name": "has_account",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customers by whether they have an account."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4352,
					"name": "groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter customers by the customer's customer groups."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4348
					]
				},
				{
					"title": "Properties",
					"children": [
						4350,
						4351,
						4352
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 193,
					"name": "AdminGetCustomersParams"
				}
			]
		},
		{
			"id": 4365,
			"name": "AdminGetDiscountsDiscountRuleParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on discounts' rules."
					}
				]
			},
			"children": [
				{
					"id": 4366,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4367,
							"name": "new AdminGetDiscountsDiscountRuleParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4365,
								"name": "AdminGetDiscountsDiscountRuleParams",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4368,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Type to filter discount rules by."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "DiscountRuleType"
						},
						"name": "DiscountRuleType",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 4369,
					"name": "allocation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allocation to filter discount rules by."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/discount-rule.ts",
							"qualifiedName": "AllocationType"
						},
						"name": "AllocationType",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4366
					]
				},
				{
					"title": "Properties",
					"children": [
						4368,
						4369
					]
				}
			]
		},
		{
			"id": 4357,
			"name": "AdminUpsertConditionsReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields to create or update a discount condition."
					}
				]
			},
			"children": [
				{
					"id": 4358,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4359,
							"name": "new AdminUpsertConditionsReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4357,
								"name": "AdminUpsertConditionsReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4360,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The products associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`products`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4361,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product collections associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_collections`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4362,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product types associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_types`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4363,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The product tags associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`product_tags`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4364,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer groups associated with the discount condition, if the discount condition's type is "
							},
							{
								"kind": "code",
								"text": "`customer_groups`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4358
					]
				},
				{
					"title": "Properties",
					"children": [
						4360,
						4361,
						4362,
						4363,
						4364
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 229,
					"name": "AdminPostDiscountsDiscountConditions"
				},
				{
					"type": "reference",
					"target": 264,
					"name": "AdminCreateCondition"
				},
				{
					"type": "reference",
					"target": 316,
					"name": "AdminPostDiscountsDiscountConditionsCondition"
				},
				{
					"type": "reference",
					"target": 349,
					"name": "AdminUpsertCondition"
				}
			]
		},
		{
			"id": 5042,
			"name": "FeatureFlagsResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "array",
				"elementType": {
					"type": "reflection",
					"declaration": {
						"id": 5043,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 5044,
								"name": "key",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"id": 5045,
								"name": "value",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "boolean"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "boolean"
												}
											],
											"name": "Record",
											"package": "typescript"
										}
									]
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									5044,
									5045
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 4883,
			"name": "CreateReturnType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Omit"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/return.ts",
							"qualifiedName": "Return"
						},
						"name": "Return",
						"package": "@medusajs/medusa"
					},
					{
						"type": "literal",
						"value": "beforeInsert"
					}
				],
				"name": "Omit",
				"package": "typescript"
			}
		},
		{
			"id": 3979,
			"name": "ExtendedRequest",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3982,
					"name": "TEntity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
							"qualifiedName": "e.Request"
						},
						"name": "Request",
						"package": "@types/express",
						"qualifiedName": "e.Request"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 3980,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 3981,
									"name": "resource",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 3982,
										"name": "TEntity",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										3981
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 3983,
			"name": "ClassConstructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 3987,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3984,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 3985,
							"name": "new ClassConstructor",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 3986,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 3987,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 3988,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 4895,
				"name": "coreMedusaContainer",
				"package": "medusa-core-utils",
				"qualifiedName": "MedusaContainer"
			}
		},
		{
			"id": 3989,
			"name": "Logger",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3990,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 3991,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3992,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 3993,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 3994,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 3995,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 3996,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 3997,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 3998,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 3999,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4000,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 4001,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 4002,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4003,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4004,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 4005,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4006,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4007,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 4008,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 4009,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4010,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4011,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4012,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 4013,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 4014,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 4015,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4016,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4017,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 4018,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 4019,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 4020,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4021,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4022,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 4023,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 4024,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 4025,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4026,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4027,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 4028,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 4029,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 4030,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4031,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4032,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 4033,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 4034,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4035,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4036,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 4037,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 4038,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4039,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4040,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 4041,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 4042,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 4043,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4044,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 4045,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 4046,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								3991,
								3995,
								3999,
								4003,
								4006,
								4011,
								4016,
								4021,
								4026,
								4031,
								4035,
								4039,
								4043
							]
						}
					]
				}
			}
		},
		{
			"id": 4047,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 4051,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4048,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4049,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 4050,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 4051,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 4052,
			"name": "ConfigModule",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": 4955,
				"name": "CommonTypes.ConfigModule",
				"package": "@medusajs/types",
				"qualifiedName": "ConfigModule"
			}
		},
		{
			"id": 4482,
			"name": "AdminListOrdersSelector",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the retrieved orders."
					}
				]
			},
			"children": [
				{
					"id": 4483,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4484,
							"name": "new AdminListOrdersSelector",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4482,
								"name": "AdminListOrdersSelector",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4485,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search orders' shipping address, first name, email, and display ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4486,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4487,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4488,
					"name": "fulfillment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fulfillment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4489,
					"name": "payment_status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Payment statuses to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4490,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Display ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4491,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cart ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4492,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Customer ID to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4493,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Email to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4494,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Regions to filter orders by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 4495,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Currency code to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4496,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tax rate to filter orders by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4497,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sales channel IDs to filter orders by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4498,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`canceled_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 4499,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 4500,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the orders' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4483
					]
				},
				{
					"title": "Properties",
					"children": [
						4485,
						4486,
						4487,
						4488,
						4489,
						4490,
						4491,
						4492,
						4493,
						4494,
						4495,
						4496,
						4497,
						4498,
						4499,
						4500
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 911,
					"name": "AdminGetOrdersParams"
				}
			]
		},
		{
			"id": 4501,
			"name": "OrdersReturnItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4502,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4503,
							"name": "new OrdersReturnItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4501,
								"name": "OrdersReturnItem",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4504,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4505,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the Line Item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4506,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Return Reason to use."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4507,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An optional note with information about the Return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4502
					]
				},
				{
					"title": "Properties",
					"children": [
						4504,
						4505,
						4506,
						4507
					]
				}
			]
		},
		{
			"id": 4067,
			"name": "PriceListType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The type of price list."
					}
				]
			},
			"children": [
				{
					"id": 4068,
					"name": "SALE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is used for a sale."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "sale"
					}
				},
				{
					"id": 4069,
					"name": "OVERRIDE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is used to override original prices for specific conditions."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "override"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						4068,
						4069
					]
				}
			]
		},
		{
			"id": 4070,
			"name": "PriceListStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The status of a price list."
					}
				]
			},
			"children": [
				{
					"id": 4071,
					"name": "ACTIVE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is active, meaning its prices are applied to customers."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "active"
					}
				},
				{
					"id": 4072,
					"name": "DRAFT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price list is a draft, meaning its not yet applied to customers."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "draft"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						4071,
						4072
					]
				}
			]
		},
		{
			"id": 4073,
			"name": "FilterablePriceListProps",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on the retrieved price lists."
					}
				]
			},
			"children": [
				{
					"id": 4074,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4075,
							"name": "new FilterablePriceListProps",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4073,
								"name": "FilterablePriceListProps",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4076,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4077,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search terms to search price lists' description, name, and customer group's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4078,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4070,
							"name": "PriceListStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 4079,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Name to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4080,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter price lists by their associated customer groups."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4081,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter price lists by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4082,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Types to filter price lists by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4067,
							"name": "PriceListType",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 4083,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 4084,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 4085,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the price lists' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4074
					]
				},
				{
					"title": "Properties",
					"children": [
						4076,
						4077,
						4078,
						4079,
						4080,
						4081,
						4082,
						4083,
						4084,
						4085
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1129,
					"name": "AdminGetPriceListPaginationParams"
				}
			]
		},
		{
			"id": 4086,
			"name": "AdminPriceListPricesUpdateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4087,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4088,
							"name": "new AdminPriceListPricesUpdateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4086,
								"name": "AdminPriceListPricesUpdateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4089,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the price."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4090,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region for which the price is used. This is only required if `currecny_code` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4091,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code for which the price will be used. This is only required if `region_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4092,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Variant for which the price is used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4093,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4094,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity for which the price will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4095,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity for which the price will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4087
					]
				},
				{
					"title": "Properties",
					"children": [
						4089,
						4090,
						4091,
						4092,
						4093,
						4094,
						4095
					]
				}
			]
		},
		{
			"id": 4096,
			"name": "AdminPriceListPricesCreateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4097,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4098,
							"name": "new AdminPriceListPricesCreateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4096,
								"name": "AdminPriceListPricesCreateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4099,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region for which the price is used. This is only required if `currecny_code` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4100,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code for which the price will be used. This is only required if `region_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4101,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to charge for the Product Variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4102,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Variant for which the price is used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4103,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity for which the price will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4104,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity for which the price will be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4097
					]
				},
				{
					"title": "Properties",
					"children": [
						4099,
						4100,
						4101,
						4102,
						4103,
						4104
					]
				}
			]
		},
		{
			"id": 4105,
			"name": "CreatePriceListInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4106,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4107,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4108,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4109,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4067,
								"name": "PriceListType",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 4110,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4070,
								"name": "PriceListStatus",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 4111,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4096,
									"name": "AdminPriceListPricesCreateReq",
									"package": "@medusajs/medusa"
								}
							}
						},
						{
							"id": 4112,
							"name": "customer_groups",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 4113,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 4114,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													4114
												]
											}
										]
									}
								}
							}
						},
						{
							"id": 4115,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 4116,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 4117,
							"name": "includes_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4107,
								4108,
								4109,
								4110,
								4111,
								4112,
								4115,
								4116,
								4117
							]
						}
					]
				}
			}
		},
		{
			"id": 4118,
			"name": "UpdatePriceListInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/price-list.ts",
											"qualifiedName": "PriceList"
										},
										"name": "PriceList",
										"package": "@medusajs/medusa"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "name"
											},
											{
												"type": "literal",
												"value": "description"
											},
											{
												"type": "literal",
												"value": "starts_at"
											},
											{
												"type": "literal",
												"value": "ends_at"
											},
											{
												"type": "literal",
												"value": "status"
											},
											{
												"type": "literal",
												"value": "type"
											},
											{
												"type": "literal",
												"value": "includes_tax"
											}
										]
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 4119,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4120,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4086,
											"name": "AdminPriceListPricesUpdateReq",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 4121,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 4122,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 4123,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															4123
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4120,
										4121
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 4124,
			"name": "PriceListPriceUpdateInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4125,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4126,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4127,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4128,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4129,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4130,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4131,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4132,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4126,
								4127,
								4128,
								4129,
								4130,
								4131,
								4132
							]
						}
					]
				}
			}
		},
		{
			"id": 4133,
			"name": "PriceListPriceCreateInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4134,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4135,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4136,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4137,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4138,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4139,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4140,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4135,
								4136,
								4137,
								4138,
								4139,
								4140
							]
						}
					]
				}
			}
		},
		{
			"id": 4141,
			"name": "PriceListLoadConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4142,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4143,
							"name": "include_discount_prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4144,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4145,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4146,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4147,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4143,
								4144,
								4145,
								4146,
								4147
							]
						}
					]
				}
			}
		},
		{
			"id": 4787,
			"name": "PriceSelectionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to apply on retrieved prices."
					}
				]
			},
			"children": [
				{
					"id": 4788,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4789,
							"name": "new PriceSelectionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4787,
								"name": "PriceSelectionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 3971,
								"name": "FindParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 3970,
						"name": "FindParams.constructor"
					}
				},
				{
					"id": 4793,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3972,
						"name": "FindParams.expand"
					}
				},
				{
					"id": 4794,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 3973,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 4790,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4791,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4792,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4788
					]
				},
				{
					"title": "Properties",
					"children": [
						4793,
						4794,
						4790,
						4791,
						4792
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 3969,
					"name": "FindParams",
					"package": "@medusajs/medusa"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 2483,
					"name": "StoreGetProductsPaginationParams"
				},
				{
					"type": "reference",
					"target": 2598,
					"name": "StoreGetVariantsVariantParams"
				},
				{
					"type": "reference",
					"target": 2607,
					"name": "StoreGetVariantsParams"
				},
				{
					"type": "reference",
					"target": 4770,
					"name": "AdminPriceSelectionParams"
				}
			]
		},
		{
			"id": 4770,
			"name": "AdminPriceSelectionParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The context to apply on retrieved prices by a user admin."
					}
				]
			},
			"children": [
				{
					"id": 4771,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4772,
							"name": "new AdminPriceSelectionParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4770,
								"name": "AdminPriceSelectionParams",
								"package": "@medusajs/medusa"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 4789,
								"name": "PriceSelectionParams.constructor"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": 4788,
						"name": "PriceSelectionParams.constructor"
					}
				},
				{
					"id": 4777,
					"name": "expand",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated relations that should be expanded in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4793,
						"name": "PriceSelectionParams.expand"
					}
				},
				{
					"id": 4778,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Comma-separated fields that should be included in the returned data."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4794,
						"name": "PriceSelectionParams.fields"
					}
				},
				{
					"id": 4774,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a cart ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4790,
						"name": "PriceSelectionParams.cart_id"
					}
				},
				{
					"id": 4775,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a region ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4791,
						"name": "PriceSelectionParams.region_id"
					}
				},
				{
					"id": 4776,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a currency code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4792,
						"name": "PriceSelectionParams.currency_code"
					}
				},
				{
					"id": 4773,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve prices for a customer ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4771
					]
				},
				{
					"title": "Properties",
					"children": [
						4777,
						4778,
						4774,
						4775,
						4776,
						4773
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4787,
					"name": "PriceSelectionParams",
					"package": "@medusajs/medusa"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 2074,
					"name": "AdminGetVariantsParams"
				}
			]
		},
		{
			"id": 5047,
			"name": "ProductVariantPricing",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Pricing fields for product variants."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 5048,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 5049,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/money-amount.ts",
												"qualifiedName": "MoneyAmount"
											},
											"name": "MoneyAmount",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 5050,
									"name": "original_price",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The original price of the variant."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 5051,
									"name": "calculated_price",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The lowest price among the retrieved prices."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 5052,
									"name": "original_price_includes_tax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the "
											},
											{
												"kind": "code",
												"text": "`original_price`"
											},
											{
												"kind": "text",
												"text": " field includes taxes."
											}
										],
										"blockTags": [
											{
												"tag": "@featureFlag",
												"content": [
													{
														"kind": "text",
														"text": "tax_inclusive_pricing"
													}
												]
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 5053,
									"name": "calculated_price_includes_tax",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the "
											},
											{
												"kind": "code",
												"text": "`calculated_price`"
											},
											{
												"kind": "text",
												"text": " field includes taxes."
											}
										],
										"blockTags": [
											{
												"tag": "@featureFlag",
												"content": [
													{
														"kind": "text",
														"text": "tax_inclusive_pricing"
													}
												]
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 5054,
									"name": "calculated_price_type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Either "
											},
											{
												"kind": "code",
												"text": "`default`"
											},
											{
												"kind": "text",
												"text": " if the "
											},
											{
												"kind": "code",
												"text": "`calculated_price`"
											},
											{
												"kind": "text",
												"text": " is the original price, or the type of the price list applied, if any."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5049,
										5050,
										5051,
										5052,
										5053,
										5054
									]
								}
							]
						}
					},
					{
						"type": "reference",
						"target": 5185,
						"name": "TaxedPricing",
						"package": "@medusajs/medusa"
					}
				]
			}
		},
		{
			"id": 5185,
			"name": "TaxedPricing",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Pricing fields related to taxes."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5186,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5187,
							"name": "original_price_incl_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The price after applying the tax amount on the original price."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5188,
							"name": "calculated_price_incl_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The price after applying the tax amount on the calculated price."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5189,
							"name": "original_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax amount applied to the original price."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5190,
							"name": "calculated_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax amount applied to the calculated price."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5191,
							"name": "tax_rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of tax rates."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4911,
											"name": "TaxServiceRate",
											"package": "@medusajs/medusa"
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5187,
								5188,
								5189,
								5190,
								5191
							]
						}
					]
				}
			}
		},
		{
			"id": 5055,
			"name": "ShippingOptionPricing",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5056,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5057,
							"name": "price_incl_tax",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Price including taxes"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5058,
							"name": "tax_rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of applied tax rates"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4911,
											"name": "TaxServiceRate",
											"package": "@medusajs/medusa"
										}
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5059,
							"name": "tax_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The taxes applied."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5057,
								5058,
								5059
							]
						}
					]
				}
			}
		},
		{
			"id": 4806,
			"name": "PricedShippingOption",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/shipping-option.ts",
									"qualifiedName": "ShippingOption"
								},
								"name": "ShippingOption",
								"package": "@medusajs/medusa"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": 5055,
						"name": "ShippingOptionPricing",
						"package": "@medusajs/medusa"
					}
				]
			}
		},
		{
			"id": 4769,
			"name": "PricedVariant",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-variant.ts",
									"qualifiedName": "ProductVariant"
								},
								"name": "ProductVariant",
								"package": "@medusajs/medusa"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": 5047,
						"name": "ProductVariantPricing",
						"package": "@medusajs/medusa"
					}
				]
			}
		},
		{
			"id": 4568,
			"name": "PricedProduct",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/product.ts",
											"qualifiedName": "Product"
										},
										"name": "Product",
										"package": "@medusajs/medusa"
									}
								],
								"name": "Partial",
								"package": "typescript"
							},
							{
								"type": "literal",
								"value": "variants"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 4569,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4570,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The product variants and their prices."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4769,
											"name": "PricedVariant",
											"package": "@medusajs/medusa"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4570
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 4556,
			"name": "AdminProductCategoriesReqBase",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4557,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4558,
							"name": "new AdminProductCategoriesReqBase",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4556,
								"name": "AdminProductCategoriesReqBase",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4559,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4560,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4561,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4562,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4563,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4557
					]
				},
				{
					"title": "Properties",
					"children": [
						4559,
						4560,
						4561,
						4562,
						4563
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1187,
					"name": "AdminPostProductCategoriesReq"
				},
				{
					"type": "reference",
					"target": 1202,
					"name": "AdminPostProductCategoriesCategoryReq"
				}
			]
		},
		{
			"id": 4564,
			"name": "ProductBatchProductCategory",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4565,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4566,
							"name": "new ProductBatchProductCategory",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4564,
								"name": "ProductBatchProductCategory",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4567,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4565
					]
				},
				{
					"title": "Properties",
					"children": [
						4567
					]
				}
			]
		},
		{
			"id": 4672,
			"name": "ProductVariantPricesUpdateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4673,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4674,
							"name": "new ProductVariantPricesUpdateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4672,
								"name": "ProductVariantPricesUpdateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4675,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Price. If provided, the existing price will be updated. Otherwise, a new price will be created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4676,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region the price will be used in. This is only required if `currency_code` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4677,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code the price will be used in. This is only required if `region_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4678,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4679,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be added to the cart for the price to be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4680,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be added to the cart for the price to be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4673
					]
				},
				{
					"title": "Properties",
					"children": [
						4675,
						4676,
						4677,
						4678,
						4679,
						4680
					]
				}
			]
		},
		{
			"id": 4615,
			"name": "ProductVariantPricesCreateReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4616,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4617,
							"name": "new ProductVariantPricesCreateReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4615,
								"name": "ProductVariantPricesCreateReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4618,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the Region the price will be used in. This is only required if `currency_code` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4619,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The 3 character ISO currency code the price will be used in. This is only required if `region_id` is not provided."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4620,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The price amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4621,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The minimum quantity required to be added to the cart for the price to be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4622,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum quantity required to be added to the cart for the price to be used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4616
					]
				},
				{
					"title": "Properties",
					"children": [
						4618,
						4619,
						4620,
						4621,
						4622
					]
				}
			]
		},
		{
			"id": 4628,
			"name": "FilterableProductProps",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Filters to apply on retrieved products."
					}
				]
			},
			"children": [
				{
					"id": 4629,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4630,
							"name": "new FilterableProductProps",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4628,
								"name": "FilterableProductProps",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4631,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "IDs to filter products by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 4632,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search products' title, description, variants' title and sku, and collections' title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4633,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Statuses to filter products by."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../packages/medusa/src/models/product.ts",
								"qualifiedName": "ProductStatus"
							},
							"name": "ProductStatus",
							"package": "@medusajs/medusa"
						}
					}
				},
				{
					"id": 4634,
					"name": "price_list_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated price lists' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4635,
					"name": "collection_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product collection's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4636,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated tags' value."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4637,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Title to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4638,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4639,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Handle to filter products by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4640,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by whether they're gift cards."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4641,
					"name": "type_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product type's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4642,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated sales channels' ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4643,
					"name": "discount_condition_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated discount condition's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4644,
					"name": "category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter products by their associated product category's ID."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4645,
					"name": "include_category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to include product category children in the response."
							}
						],
						"blockTags": [
							{
								"tag": "@featureFlag",
								"content": [
									{
										"kind": "text",
										"text": "product_categories"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4646,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`created_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 4647,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`updated_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				},
				{
					"id": 4648,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Date filters to apply on the products' "
							},
							{
								"kind": "code",
								"text": "`deleted_at`"
							},
							{
								"kind": "text",
								"text": " date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 3917,
						"name": "DateComparisonOperator",
						"package": "@medusajs/medusa"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4629
					]
				},
				{
					"title": "Properties",
					"children": [
						4631,
						4632,
						4633,
						4634,
						4635,
						4636,
						4637,
						4638,
						4639,
						4640,
						4641,
						4642,
						4643,
						4644,
						4645,
						4646,
						4647,
						4648
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 1407,
					"name": "AdminGetProductsParams"
				}
			]
		},
		{
			"id": 4581,
			"name": "ProductSalesChannelReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4582,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4583,
							"name": "new ProductSalesChannelReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4581,
								"name": "ProductSalesChannelReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4584,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing Sales channel."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4582
					]
				},
				{
					"title": "Properties",
					"children": [
						4584
					]
				}
			]
		},
		{
			"id": 4585,
			"name": "ProductProductCategoryReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4586,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4587,
							"name": "new ProductProductCategoryReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4585,
								"name": "ProductProductCategoryReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4588,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of a Product Category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4586
					]
				},
				{
					"title": "Properties",
					"children": [
						4588
					]
				}
			]
		},
		{
			"id": 4576,
			"name": "ProductTagReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4577,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4578,
							"name": "new ProductTagReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4576,
								"name": "ProductTagReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4579,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of an existing Product Tag. If not provided, a new product tag will be created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4580,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the Tag. If the `id` is provided, the value of the existing tag will be updated."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4577
					]
				},
				{
					"title": "Properties",
					"children": [
						4579,
						4580
					]
				}
			]
		},
		{
			"id": 4571,
			"name": "ProductTypeReq",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a product type, used to create or update an existing product type."
					}
				]
			},
			"children": [
				{
					"id": 4572,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4573,
							"name": "new ProductTypeReq",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4571,
								"name": "ProductTypeReq",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4574,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product type. It's only required when referring to an existing product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4575,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4572
					]
				},
				{
					"title": "Properties",
					"children": [
						4574,
						4575
					]
				}
			]
		},
		{
			"id": 4851,
			"name": "RequestContext",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4852,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4853,
							"name": "ip",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4853
							]
						}
					]
				}
			}
		},
		{
			"id": 4148,
			"name": "MedusaRequest",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 4151,
					"name": "validatedQuery",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 3900,
								"name": "RequestQueryFields",
								"package": "@medusajs/medusa"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedQuery"
					}
				},
				{
					"id": 4152,
					"name": "validatedBody",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "unknown"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.validatedBody"
					}
				},
				{
					"id": 4153,
					"name": "listConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 3853,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.listConfig"
					}
				},
				{
					"id": 4154,
					"name": "retrieveConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 3853,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "FindConfig",
						"package": "@medusajs/medusa"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.retrieveConfig"
					}
				},
				{
					"id": 4155,
					"name": "filterableFields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.filterableFields"
					}
				},
				{
					"id": 4156,
					"name": "allowedProperties",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.allowedProperties"
					}
				},
				{
					"id": 4157,
					"name": "includes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.includes"
					}
				},
				{
					"id": 4158,
					"name": "errors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Request.errors"
					}
				},
				{
					"id": 4149,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "unknown",
						"name": "(User | Customer) & { customer_id?: string | undefined; userId?: string | undefined; }"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.user"
					}
				},
				{
					"id": 4150,
					"name": "scope",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 4895,
						"name": "MedusaContainer",
						"package": "medusa-core-utils"
					},
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Request.scope"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4151,
						4152,
						4153,
						4154,
						4155,
						4156,
						4157,
						4158,
						4149,
						4150
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
						"qualifiedName": "e.Request"
					},
					"name": "Request",
					"package": "@types/express",
					"qualifiedName": "e.Request"
				}
			]
		},
		{
			"id": 4159,
			"name": "MedusaResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.Response"
				},
				"name": "Response",
				"package": "@types/express",
				"qualifiedName": "e.Response"
			}
		},
		{
			"id": 4160,
			"name": "MedusaNextFunction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../../node_modules/@types/express/index.d.ts",
					"qualifiedName": "e.NextFunction"
				},
				"name": "NextFunction",
				"package": "@types/express",
				"qualifiedName": "e.NextFunction"
			}
		},
		{
			"id": 4161,
			"name": "MedusaRequestHandler",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4162,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"signatures": [
						{
							"id": 4163,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 4164,
									"name": "req",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4148,
										"name": "MedusaRequest",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 4165,
									"name": "res",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4159,
										"name": "MedusaResponse",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 4166,
									"name": "next",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4160,
										"name": "MedusaNextFunction",
										"package": "@medusajs/medusa"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 4686,
			"name": "ProductBatchSalesChannel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 4687,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4688,
							"name": "new ProductBatchSalesChannel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4686,
								"name": "ProductBatchSalesChannel",
								"package": "@medusajs/medusa"
							}
						}
					]
				},
				{
					"id": 4689,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sales channel"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						4687
					]
				},
				{
					"title": "Properties",
					"children": [
						4689
					]
				}
			]
		},
		{
			"id": 4167,
			"name": "ScheduledJobConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 4172,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4168,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4169,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the job"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4170,
							"name": "schedule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The cron schedule of the job, e.g. "
									},
									{
										"kind": "code",
										"text": "`0 0 * * *`"
									},
									{
										"kind": "text",
										"text": " for running every day at midnight."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4171,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional data object to pass to the job handler"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4172,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4169,
								4170,
								4171
							]
						}
					]
				}
			}
		},
		{
			"id": 4173,
			"name": "ScheduledJobArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 4178,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4174,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4175,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4884,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4176,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4178,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 4177,
							"name": "pluginOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4175,
								4176,
								4177
							]
						}
					]
				}
			}
		},
		{
			"id": 5046,
			"name": "ModulesResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reference",
				"target": 5181,
				"name": "sdkModulesResponse",
				"package": "@medusajs/types",
				"qualifiedName": "ModulesResponse"
			}
		},
		{
			"id": 4759,
			"name": "ExtendedStoreDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../packages/medusa/src/models/store.ts",
							"qualifiedName": "Store"
						},
						"name": "Store",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 4760,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4761,
									"name": "payment_providers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The store's payment providers."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/payment-provider.ts",
												"qualifiedName": "PaymentProvider"
											},
											"name": "PaymentProvider",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 4762,
									"name": "fulfillment_providers",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The store's fulfillment providers."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../packages/medusa/src/models/fulfillment-provider.ts",
												"qualifiedName": "FulfillmentProvider"
											},
											"name": "FulfillmentProvider",
											"package": "@medusajs/medusa"
										}
									}
								},
								{
									"id": 4763,
									"name": "feature_flags",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The feature flags enabled in the store's backend."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5042,
										"name": "FeatureFlagsResponse",
										"package": "@medusajs/medusa"
									}
								},
								{
									"id": 4764,
									"name": "modules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The modules installed in the store's backend."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 5046,
										"name": "ModulesResponse",
										"package": "@medusajs/medusa"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4761,
										4762,
										4763,
										4764
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 4975,
			"name": "SubscriberContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 4976,
					"name": "subscriberId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4976
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Record"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "unknown"
						}
					],
					"name": "Record",
					"package": "typescript"
				}
			]
		},
		{
			"id": 4179,
			"name": "SubscriberConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4180,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4181,
							"name": "event",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 4182,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4975,
								"name": "SubscriberContext",
								"package": "@medusajs/medusa"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4181,
								4182
							]
						}
					]
				}
			}
		},
		{
			"id": 4183,
			"name": "SubscriberArgs",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 4189,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4184,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4185,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4189,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 4186,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4187,
							"name": "container",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4884,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4188,
							"name": "pluginOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4185,
								4186,
								4187,
								4188
							]
						}
					]
				}
			}
		},
		{
			"id": 4911,
			"name": "TaxServiceRate",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax rate object as configured in Medusa. These may have an unspecified\nnumerical rate as they may be used for lookup purposes in the tax provider\nplugin."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4912,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4913,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4914,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4915,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate's code."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4913,
								4914,
								4915
							]
						}
					]
				}
			}
		},
		{
			"id": 5075,
			"name": "ProviderShippingMethodTaxLine",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax line properties for a given shipping method."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5076,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5077,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5078,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5079,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax code."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5080,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds any necessary additional data to be added to the shipping method tax lines."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 5081,
							"name": "shipping_method_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping method's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5077,
								5078,
								5079,
								5080,
								5081
							]
						}
					]
				}
			}
		},
		{
			"id": 5068,
			"name": "ProviderLineItemTaxLine",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The tax line properties for a given line item."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5069,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5070,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5071,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax rate's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5072,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The tax code."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5073,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The line item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5074,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds any necessary additional data to be added to the line item tax lines."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5070,
								5071,
								5072,
								5073,
								5074
							]
						}
					]
				}
			}
		},
		{
			"id": 4925,
			"name": "ProviderTaxLine",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A union type of the possible provider tax lines."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 5068,
						"name": "ProviderLineItemTaxLine",
						"package": "@medusajs/medusa"
					},
					{
						"type": "reference",
						"target": 5075,
						"name": "ProviderShippingMethodTaxLine",
						"package": "@medusajs/medusa"
					}
				]
			}
		},
		{
			"id": 5060,
			"name": "GiftCardAllocation",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The amount of a gift card allocated to a line item"
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5061,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5062,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5063,
							"name": "unit_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5062,
								5063
							]
						}
					]
				}
			}
		},
		{
			"id": 5064,
			"name": "DiscountAllocation",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The amount of a discount allocated to a line item"
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5065,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5066,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5067,
							"name": "unit_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5066,
								5067
							]
						}
					]
				}
			}
		},
		{
			"id": 4918,
			"name": "LineAllocationsMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A map of line item ids and its corresponding gift card and discount\nallocations"
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4919,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignature": {
						"id": 4920,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 4921,
								"name": "K",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "reflection",
							"declaration": {
								"id": 4922,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 4923,
										"name": "gift_card",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The gift card applied on the line item."
												}
											]
										},
										"type": {
											"type": "reference",
											"target": 5060,
											"name": "GiftCardAllocation",
											"package": "@medusajs/medusa"
										}
									},
									{
										"id": 4924,
										"name": "discount",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The discount applied on the line item."
												}
											]
										},
										"type": {
											"type": "reference",
											"target": 5064,
											"name": "DiscountAllocation",
											"package": "@medusajs/medusa"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											4923,
											4924
										]
									}
								]
							}
						}
					}
				}
			}
		},
		{
			"id": 4200,
			"name": "buildQuery",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4201,
					"name": "buildQuery",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used to build TypeORM queries."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The QueryBuilderConfig"
									}
								]
							}
						]
					},
					"typeParameter": [
						{
							"id": 4202,
							"name": "TWhereKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 4203,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"parameters": [
						{
							"id": 4204,
							"name": "selector",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The selector"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4202,
								"name": "TWhereKeys",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 4205,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The config"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 3853,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4203,
										"name": "TEntity",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "FindConfig",
								"package": "@medusajs/medusa"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": 3863,
						"typeArguments": [
							{
								"type": "reference",
								"target": 4203,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						],
						"name": "ExtendedFindConfig",
						"package": "@medusajs/medusa"
					}
				}
			]
		},
		{
			"id": 4206,
			"name": "buildLegacyFieldsListFrom",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4207,
					"name": "buildLegacyFieldsListFrom",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Revert new object structure of find options to the legacy structure of previous version"
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "in favor of import { objectToStringPath } from \"@medusajs/utils\""
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ninput: {\n  test: {\n    test1: true,\n    test2: true,\n    test3: {\n      test4: true\n    },\n  },\n  test2: true\n}\noutput: ['test.test1', 'test.test2', 'test.test3.test4', 'test2']\n```"
									}
								]
							}
						]
					},
					"typeParameter": [
						{
							"id": 4208,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 4209,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
											"qualifiedName": "FindOptionsWhere"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4208,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsWhere",
										"package": "typeorm"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
											"qualifiedName": "FindOptionsSelect"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4208,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsSelect",
										"package": "typeorm"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsOrder.d.ts",
											"qualifiedName": "FindOptionsOrder"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4208,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsOrder",
										"package": "typeorm"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsRelations.d.ts",
											"qualifiedName": "FindOptionsRelations"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 4208,
												"name": "TEntity",
												"package": "@medusajs/medusa",
												"refersToTypeParameter": true
											}
										],
										"name": "FindOptionsRelations",
										"package": "typeorm"
									}
								]
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 4208,
								"name": "TEntity",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					}
				}
			]
		},
		{
			"id": 4210,
			"name": "addOrderToSelect",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4211,
					"name": "addOrderToSelect",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameter": [
						{
							"id": 4212,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 4213,
							"name": "order",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsOrder.d.ts",
									"qualifiedName": "FindOptionsOrder"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4212,
										"name": "TEntity",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "FindOptionsOrder",
								"package": "typeorm"
							}
						},
						{
							"id": 4214,
							"name": "select",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsSelect.d.ts",
									"qualifiedName": "FindOptionsSelect"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4212,
										"name": "TEntity",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "FindOptionsSelect",
								"package": "typeorm"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 4215,
			"name": "nullableValue",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4216,
					"name": "nullableValue",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4217,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/find-options/FindOperator.d.ts",
							"qualifiedName": "FindOperator"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "FindOperator",
						"package": "typeorm"
					}
				}
			]
		},
		{
			"id": 4218,
			"name": "calculatePriceTaxAmount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4219,
					"name": "calculatePriceTaxAmount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Return the tax amount that\n\n- is includes in the price if it is tax inclusive\n- will be applied on to the price if it is tax exclusive"
							}
						]
					},
					"parameters": [
						{
							"id": 4220,
							"name": "__namedParameters",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4221,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4222,
											"name": "price",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 4223,
											"name": "includesTax",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 4224,
											"name": "taxRate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4222,
												4223,
												4224
											]
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			]
		},
		{
			"id": 4225,
			"name": "cleanResponseData",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4226,
					"name": "cleanResponseData",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter response data to contain props specified in the "
							},
							{
								"kind": "code",
								"text": "`allowedProperties`"
							},
							{
								"kind": "text",
								"text": ".\nYou can read more in the transformQuery middleware utility methods."
							}
						]
					},
					"typeParameter": [
						{
							"id": 4227,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"parameters": [
						{
							"id": 4228,
							"name": "data",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "record or an array of records in the response"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 4227,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 4229,
							"name": "fields",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "record props allowed in the response"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 4227,
							"name": "T",
							"package": "@medusajs/medusa",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "tuple"
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Partial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4227,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "Partial",
								"package": "typescript"
							}
						},
						"falseType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 4227,
									"name": "T",
									"package": "@medusajs/medusa",
									"refersToTypeParameter": true
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					}
				}
			]
		},
		{
			"id": 4230,
			"name": "csvCellContentFormatter",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4231,
					"name": "csvCellContentFormatter",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4232,
							"name": "str",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 4233,
			"name": "csvRevertCellContentFormatter",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4234,
					"name": "csvRevertCellContentFormatter",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4235,
							"name": "str",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 4236,
			"name": "resolveDbType",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4237,
					"name": "resolveDbType",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4238,
							"name": "pgSqlType",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/driver/types/ColumnTypes.d.ts",
									"qualifiedName": "ColumnType"
								},
								"name": "ColumnType",
								"package": "typeorm"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/driver/types/ColumnTypes.d.ts",
							"qualifiedName": "ColumnType"
						},
						"name": "ColumnType",
						"package": "typeorm"
					}
				}
			]
		},
		{
			"id": 4239,
			"name": "resolveDbGenerationStrategy",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4240,
					"name": "resolveDbGenerationStrategy",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4241,
							"name": "pgSqlType",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "uuid"
									},
									{
										"type": "literal",
										"value": "rowid"
									},
									{
										"type": "literal",
										"value": "increment"
									}
								]
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "increment"
							},
							{
								"type": "literal",
								"value": "uuid"
							},
							{
								"type": "literal",
								"value": "rowid"
							}
						]
					}
				}
			]
		},
		{
			"id": 4242,
			"name": "DbAwareColumn",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4243,
					"name": "DbAwareColumn",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4244,
							"name": "columnOptions",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/decorator/options/ColumnOptions.d.ts",
									"qualifiedName": "ColumnOptions"
								},
								"name": "ColumnOptions",
								"package": "typeorm"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.decorators.legacy.d.ts",
							"qualifiedName": "PropertyDecorator"
						},
						"name": "PropertyDecorator",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 4245,
			"name": "PostgresError",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 4246,
					"name": "DUPLICATE_ERROR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "23505"
					}
				},
				{
					"id": 4247,
					"name": "FOREIGN_KEY_ERROR",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "23503"
					}
				},
				{
					"id": 4248,
					"name": "SERIALIZATION_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "40001"
					}
				},
				{
					"id": 4249,
					"name": "NULL_VIOLATION",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "23502"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						4246,
						4247,
						4248,
						4249
					]
				}
			]
		},
		{
			"id": 4250,
			"name": "formatException",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4251,
					"name": "formatException",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4252,
							"name": "err",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 4819,
						"name": "MedusaError",
						"package": "medusa-core-utils"
					}
				}
			]
		},
		{
			"id": 4253,
			"name": "generateEntityId",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4254,
					"name": "generateEntityId",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Generate a composed id based on the input parameters and return either the is if it exists or the generated one."
							}
						]
					},
					"parameters": [
						{
							"id": 4255,
							"name": "idProperty",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4256,
							"name": "prefix",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 4257,
			"name": "hasChanges",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4258,
					"name": "hasChanges",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Compare two objects and return true if there is changes detected from obj2 compared to obj1"
							}
						]
					},
					"typeParameter": [
						{
							"id": 4259,
							"name": "T1",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Object"
								},
								"name": "Object",
								"package": "typescript"
							}
						},
						{
							"id": 4260,
							"name": "T2",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Object"
								},
								"name": "Object",
								"package": "typescript"
							}
						}
					],
					"parameters": [
						{
							"id": 4261,
							"name": "obj1",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4259,
								"name": "T1",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 4262,
							"name": "obj2",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4260,
								"name": "T2",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 4263,
			"name": "isDate",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4264,
					"name": "isDate",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4265,
							"name": "value",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "value",
						"asserts": false,
						"targetType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Date"
							},
							"name": "Date",
							"package": "typescript"
						}
					}
				}
			]
		},
		{
			"id": 4266,
			"name": "isObject",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4267,
					"name": "isObject",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4268,
							"name": "obj",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "obj",
						"asserts": false,
						"targetType": {
							"type": "intrinsic",
							"name": "object"
						}
					}
				}
			]
		},
		{
			"id": 4269,
			"name": "isString",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4270,
					"name": "isString",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4271,
							"name": "val",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "predicate",
						"name": "val",
						"asserts": false,
						"targetType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			]
		},
		{
			"id": 4272,
			"name": "omitDeep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4273,
					"name": "omitDeep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameter": [
						{
							"id": 4274,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"parameters": [
						{
							"id": 4275,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						},
						{
							"id": 4276,
							"name": "excludes",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 4274,
						"name": "T",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 4277,
			"name": "categoryMatchesScope",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4278,
					"name": "categoryMatchesScope",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4279,
							"name": "category",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A product category can be used to categorize products into a hierarchy of categories."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
									"qualifiedName": "ProductCategory"
								},
								"name": "ProductCategory",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 4280,
							"name": "query",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
									"qualifiedName": "FindOptionsWhere"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
											"qualifiedName": "ProductCategory"
										},
										"name": "ProductCategory",
										"package": "@medusajs/medusa"
									}
								],
								"name": "FindOptionsWhere",
								"package": "typeorm"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 4281,
			"name": "fetchCategoryDescendantsIds",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4282,
					"name": "fetchCategoryDescendantsIds",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4283,
							"name": "productCategory",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A product category can be used to categorize products into a hierarchy of categories."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
									"qualifiedName": "ProductCategory"
								},
								"name": "ProductCategory",
								"package": "@medusajs/medusa"
							}
						},
						{
							"id": 4284,
							"name": "query",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/find-options/FindOptionsWhere.d.ts",
									"qualifiedName": "FindOptionsWhere"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../packages/medusa/src/models/product-category.ts",
											"qualifiedName": "ProductCategory"
										},
										"name": "ProductCategory",
										"package": "@medusajs/medusa"
									}
								],
								"name": "FindOptionsWhere",
								"package": "typeorm"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			]
		},
		{
			"id": 4285,
			"name": "getVariantsFromPriceList",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4286,
					"name": "getVariantsFromPriceList",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4287,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4884,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4288,
							"name": "priceListId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4982,
									"name": "ProductVariantDTO",
									"package": "@medusajs/types"
								}
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 4289,
			"name": "listProducts",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4290,
					"name": "listProducts",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4291,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4884,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4292,
							"name": "filterableFields",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4293,
							"name": "listConfig",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 4294,
			"name": "retrieveProduct",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4295,
					"name": "retrieveProduct",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4296,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4297,
							"name": "id",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 4298,
							"name": "remoteQueryObject",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4299,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 4300,
			"name": "remoteQueryFetchData",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4301,
					"name": "remoteQueryFetchData",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4302,
							"name": "container",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4884,
								"name": "MedusaContainer",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4303,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 4304,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4305,
											"name": "expand",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4306,
											"name": "keyField",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4307,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 4308,
											"name": "relationship",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 4309,
			"name": "removeUndefinedProperties",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4310,
					"name": "removeUndefinedProperties",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameter": [
						{
							"id": 4311,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"parameters": [
						{
							"id": 4312,
							"name": "inputObj",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4311,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 4311,
						"name": "T",
						"package": "@medusajs/medusa",
						"refersToTypeParameter": true
					}
				}
			]
		},
		{
			"id": 4313,
			"name": "setMetadata",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4314,
					"name": "setMetadata",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Dedicated method to set metadata."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "resolves to the updated result."
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 4315,
							"name": "obj",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the entity to apply metadata to."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4316,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 4317,
													"name": "metadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														4317
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 4318,
							"name": "metadata",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the metadata to set"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 4319,
			"name": "validateId",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4320,
					"name": "validateId",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4321,
							"name": "rawId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4322,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 4323,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 4324,
											"name": "prefix",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 4325,
											"name": "length",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												4324,
												4325
											]
										}
									]
								}
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 4190,
			"name": "registerOverriddenValidators",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4191,
					"name": "registerOverriddenValidators",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When overriding a validator, you can register it to be used instead of the original one.\nFor example, the place where you are overriding the core validator, you can call this function"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n// /src/api/routes/admin/products/create-product.ts\nimport { registerOverriddenValidators } from \"@medusajs/medusa\"\nimport { AdminPostProductsReq as MedusaAdminPostProductsReq } from \"@medusajs/medusa/dist/api/routes/admin/products/create-product\"\nimport { IsString } from \"class-validator\"\n\nclass AdminPostProductsReq extends MedusaAdminPostProductsReq {\n   @IsString()\n   test: string\n}\n\nregisterOverriddenValidators(AdminPostProductsReq)\n```"
									}
								]
							}
						]
					},
					"parameters": [
						{
							"id": 4192,
							"name": "extendedValidator",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4977,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Constructor",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			]
		},
		{
			"id": 4193,
			"name": "validator",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4194,
					"name": "validator",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameter": [
						{
							"id": 4195,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 4196,
							"name": "V",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 4197,
							"name": "typedClass",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/class-transformer/types/interfaces/class-constructor.type.d.ts",
									"qualifiedName": "ClassConstructor"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4195,
										"name": "T",
										"package": "@medusajs/medusa",
										"refersToTypeParameter": true
									}
								],
								"name": "ClassConstructor",
								"package": "class-transformer"
							}
						},
						{
							"id": 4198,
							"name": "plain",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4196,
								"name": "V",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 4199,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/class-validator/types/validation/ValidatorOptions.d.ts",
									"qualifiedName": "ValidatorOptions"
								},
								"name": "ValidatorOptions",
								"package": "class-validator"
							},
							"defaultValue": "{}"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 4195,
								"name": "T",
								"package": "@medusajs/medusa",
								"refersToTypeParameter": true
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				}
			]
		},
		{
			"id": 4326,
			"name": "IsType",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"signatures": [
				{
					"id": 4327,
					"name": "IsType",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 4328,
							"name": "types",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 4329,
							"name": "validationOptions",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/class-validator/types/decorator/ValidationOptions.d.ts",
									"qualifiedName": "ValidationOptions"
								},
								"name": "ValidationOptions",
								"package": "class-validator"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4330,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 4331,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 4332,
											"name": "object",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Object"
												},
												"name": "Object",
												"package": "typescript"
											}
										},
										{
											"id": 4333,
											"name": "propertyName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 4424,
			"name": "PaginatedResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4425,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4426,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of notifications per page"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4427,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of notifications skipped when retrieving the notifications."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4428,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total number of notifications"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4426,
								4427,
								4428
							]
						}
					]
				}
			}
		},
		{
			"id": 4729,
			"name": "DeleteResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The fields returned in the response of a DELETE request."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4730,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4731,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4732,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "stock_location"
						},
						{
							"id": 4733,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": true
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4731,
								4732,
								4733
							]
						}
					]
				}
			}
		},
		{
			"id": 5205,
			"name": "SessionOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5206,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5207,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5208,
							"name": "resave",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5209,
							"name": "rolling",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5210,
							"name": "saveUninitialized",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5211,
							"name": "secret",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5212,
							"name": "ttl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5207,
								5208,
								5209,
								5210,
								5211,
								5212
							]
						}
					]
				}
			}
		},
		{
			"id": 5213,
			"name": "HttpCompressionOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5214,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5215,
							"name": "enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5216,
							"name": "level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5217,
							"name": "memLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 5218,
							"name": "threshold",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5215,
								5216,
								5217,
								5218
							]
						}
					]
				}
			}
		},
		{
			"id": 5100,
			"name": "ProjectConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5101,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5102,
							"name": "redis_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5103,
							"name": "redis_prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5104,
							"name": "redis_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/ioredis/built/redis/RedisOptions.d.ts",
									"qualifiedName": "RedisOptions"
								},
								"name": "RedisOptions",
								"package": "ioredis"
							}
						},
						{
							"id": 5105,
							"name": "session_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 5205,
								"name": "SessionOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 5106,
							"name": "jwt_secret",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5107,
							"name": "cookie_secret",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5108,
							"name": "database_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5109,
							"name": "database_database",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5110,
							"name": "database_schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5111,
							"name": "database_logging",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../node_modules/typeorm/logger/LoggerOptions.d.ts",
									"qualifiedName": "LoggerOptions"
								},
								"name": "LoggerOptions",
								"package": "typeorm"
							}
						},
						{
							"id": 5112,
							"name": "database_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5113,
							"name": "http_compression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 5213,
								"name": "HttpCompressionOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 5114,
							"name": "database_extra",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5115,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5116,
													"name": "ssl",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 5117,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 5118,
																	"name": "rejectUnauthorized",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "literal",
																		"value": false
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		5118
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5116
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 5119,
							"name": "store_cors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5120,
							"name": "admin_cors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5102,
								5103,
								5104,
								5105,
								5106,
								5107,
								5108,
								5109,
								5110,
								5111,
								5112,
								5113,
								5114,
								5119,
								5120
							]
						}
					]
				}
			}
		},
		{
			"id": 4955,
			"name": "ConfigModule",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4956,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4957,
							"name": "projectConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 5100,
								"name": "ProjectConfigOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4958,
							"name": "featureFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 4959,
							"name": "modules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 5121,
																"name": "InternalModuleDeclaration",
																"package": "@medusajs/types"
															},
															{
																"type": "reference",
																"target": 5131,
																"name": "ExternalModuleDeclaration",
																"package": "@medusajs/types"
															}
														]
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 4960,
							"name": "plugins",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reflection",
											"declaration": {
												"id": 4961,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 4962,
														"name": "resolve",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 4963,
														"name": "options",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "unknown"
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															4962,
															4963
														]
													}
												]
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4957,
								4958,
								4959,
								4960
							]
						}
					]
				}
			}
		},
		{
			"id": 4884,
			"name": "MedusaContainer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
					}
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/awilix/lib/container.d.ts",
							"qualifiedName": "AwilixContainer"
						},
						"name": "AwilixContainer",
						"package": "awilix"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 4885,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {}
						}
					}
				]
			}
		},
		{
			"id": 4765,
			"name": "FileServiceUploadResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4766,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4767,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of the uploaded file."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4768,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The key of the file that is identifiable by the file service. It can be used later to retrieve or manipulate the file."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4767,
								4768
							]
						}
					]
				}
			}
		},
		{
			"id": 4866,
			"name": "FileServiceGetUploadStreamResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4867,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4868,
							"name": "writeStream",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/@types/node/stream.d.ts",
									"qualifiedName": "internal.PassThrough"
								},
								"name": "stream.PassThrough",
								"package": "@types/node",
								"qualifiedName": "internal.PassThrough"
							}
						},
						{
							"id": 4869,
							"name": "promise",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 4870,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4871,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4868,
								4869,
								4870,
								4871
							]
						}
					],
					"indexSignature": {
						"id": 4872,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 4873,
								"name": "x",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 4874,
			"name": "GetUploadedFileType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4875,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4876,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4877,
							"name": "isPrivate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4876,
								4877
							]
						}
					],
					"indexSignature": {
						"id": 4878,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 4879,
								"name": "x",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 4854,
			"name": "DeleteFileType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4855,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4856,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4856
							]
						}
					],
					"indexSignature": {
						"id": 4857,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 4858,
								"name": "x",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 4859,
			"name": "UploadStreamDescriptorType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4860,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4861,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4862,
							"name": "ext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4863,
							"name": "isPrivate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4861,
								4862,
								4863
							]
						}
					],
					"indexSignature": {
						"id": 4864,
						"name": "__index",
						"variant": "signature",
						"kind": 8192,
						"flags": {},
						"parameters": [
							{
								"id": 4865,
								"name": "x",
								"variant": "param",
								"kind": 32768,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "unknown"
						}
					}
				}
			}
		},
		{
			"id": 4392,
			"name": "InventoryItemDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4393,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4394,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4395,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Stock Keeping Unit (SKU) code of the Inventory Item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4396,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The country in which the Inventory Item was produced. May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4397,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Harmonized System code of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4398,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 4399,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Manufacturers Identification code that identifies the manufacturer of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4400,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material and composition that the Inventory Item is made of, May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4401,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4402,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4403,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4404,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4405,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Title of the inventory item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4406,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Description of the inventory item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4407,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Thumbnail for the inventory item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4408,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4409,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4410,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4411,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4394,
								4395,
								4396,
								4397,
								4398,
								4399,
								4400,
								4401,
								4402,
								4403,
								4404,
								4405,
								4406,
								4407,
								4408,
								4409,
								4410,
								4411
							]
						}
					]
				}
			}
		},
		{
			"id": 4695,
			"name": "ReservationItemDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a reservation of an inventory item at a stock location"
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4696,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4697,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the reservation item"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4698,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the location of the reservation"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4699,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the inventory item the reservation relates to"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4700,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the reservation item"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4701,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4702,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Description of the reservation item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4703,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "UserId of user who created the reservation item"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4704,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4705,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4706,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4707,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4697,
								4698,
								4699,
								4700,
								4701,
								4702,
								4703,
								4704,
								4705,
								4706,
								4707
							]
						}
					]
				}
			}
		},
		{
			"id": 4412,
			"name": "InventoryLevelDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4413,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4414,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4415,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4416,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the item location ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4417,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the total stock quantity of an inventory item at the given location ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4418,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the reserved stock quantity of an inventory item at the given location ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4419,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the incoming stock quantity of an inventory item at the given location ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 4420,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4421,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4422,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4423,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4414,
								4415,
								4416,
								4417,
								4418,
								4419,
								4420,
								4421,
								4422,
								4423
							]
						}
					]
				}
			}
		},
		{
			"id": 5195,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5196,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5197,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5198,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5199,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5200,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5201,
							"name": "isInternalService",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the relationship is an internal service from the medusa core\nTODO: Remove when there are no more \"internal\" services"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5202,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5203,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5204,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5197,
								5198,
								5199,
								5200,
								5201,
								5202,
								5203,
								5204
							]
						}
					]
				}
			}
		},
		{
			"id": 5192,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 5193,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 5194,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5193,
						5194
					]
				}
			]
		},
		{
			"id": 5082,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 5083,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5084,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 5192,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 5192,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 5085,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 5086,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 5087,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 5088,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														5087,
														5088
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 5089,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 5090,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5195,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5091,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 5092,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 5093,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 5094,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 5195,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											5093,
											5094
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 5095,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5083,
						5084,
						5085,
						5089,
						5090,
						5091,
						5095
					]
				}
			]
		},
		{
			"id": 4977,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 4981,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4978,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 4979,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 4980,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 4981,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 5219,
			"name": "INTERNAL",
			"variant": "declaration",
			"kind": 16,
			"flags": {},
			"type": {
				"type": "literal",
				"value": "internal"
			}
		},
		{
			"id": 5235,
			"name": "EXTERNAL",
			"variant": "declaration",
			"kind": 16,
			"flags": {},
			"type": {
				"type": "literal",
				"value": "external"
			}
		},
		{
			"id": 5220,
			"name": "MODULE_RESOURCE_TYPE",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 5221,
					"name": "SHARED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "shared"
					}
				},
				{
					"id": 5222,
					"name": "ISOLATED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "isolated"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						5221,
						5222
					]
				}
			]
		},
		{
			"id": 5121,
			"name": "InternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5122,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5123,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 5219,
								"name": "MODULE_SCOPE.INTERNAL",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 5124,
							"name": "resources",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 5220,
								"name": "MODULE_RESOURCE_TYPE",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 5125,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 5126,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 5223,
								"name": "ModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 5127,
							"name": "resolve",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5128,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 5129,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5130,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5123,
								5124,
								5125,
								5126,
								5127,
								5128,
								5129,
								5130
							]
						}
					]
				}
			}
		},
		{
			"id": 5131,
			"name": "ExternalModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5132,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5133,
							"name": "scope",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 5235,
								"name": "MODULE_SCOPE.EXTERNAL",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 5134,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 5223,
								"name": "ModuleDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 5135,
							"name": "server",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 5136,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 5137,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "literal",
												"value": "http"
											}
										},
										{
											"id": 5138,
											"name": "url",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 5139,
											"name": "keepAlive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												5137,
												5138,
												5139
											]
										}
									]
								}
							}
						},
						{
							"id": 5140,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 5141,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5142,
							"name": "main",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the module is the main module for the key when multiple ones are registered"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5133,
								5134,
								5135,
								5140,
								5141,
								5142
							]
						}
					]
				}
			}
		},
		{
			"id": 5223,
			"name": "ModuleDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5224,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5225,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5226,
							"name": "registrationName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5227,
							"name": "defaultPackage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": false
									}
								]
							}
						},
						{
							"id": 5228,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5229,
							"name": "canOverride",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "property will be removed in future versions"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5230,
							"name": "isRequired",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "property will be removed in future versions"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5231,
							"name": "isQueryable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5232,
							"name": "isLegacy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5233,
							"name": "dependencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 5234,
							"name": "defaultModuleDeclaration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 5121,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 5131,
										"name": "ExternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5225,
								5226,
								5227,
								5228,
								5229,
								5230,
								5231,
								5232,
								5233,
								5234
							]
						}
					]
				}
			}
		},
		{
			"id": 5181,
			"name": "ModulesResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "array",
				"elementType": {
					"type": "reflection",
					"declaration": {
						"id": 5182,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 5183,
								"name": "module",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"id": 5184,
								"name": "resolution",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "literal",
											"value": false
										}
									]
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									5183,
									5184
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 4926,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 5082,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 4927,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4928,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4929,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 5096,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 4930,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 4931,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 4932,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 4933,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 4934,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 4935,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 4936,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							4935,
																							4936
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 4937,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 5096,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															4932,
															4933,
															4937
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 4938,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4939,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4940,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4941,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 4942,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4943,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4944,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 4945,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4946,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4947,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 4948,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 4949,
																			"name": "type",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "date"
																					},
																					{
																						"type": "literal",
																						"value": "time"
																					},
																					{
																						"type": "literal",
																						"value": "datetime"
																					},
																					{
																						"type": "literal",
																						"value": "bigint"
																					},
																					{
																						"type": "literal",
																						"value": "blob"
																					},
																					{
																						"type": "literal",
																						"value": "uint8array"
																					},
																					{
																						"type": "literal",
																						"value": "array"
																					},
																					{
																						"type": "literal",
																						"value": "enumArray"
																					},
																					{
																						"type": "literal",
																						"value": "enum"
																					},
																					{
																						"type": "literal",
																						"value": "json"
																					},
																					{
																						"type": "literal",
																						"value": "integer"
																					},
																					{
																						"type": "literal",
																						"value": "smallint"
																					},
																					{
																						"type": "literal",
																						"value": "tinyint"
																					},
																					{
																						"type": "literal",
																						"value": "mediumint"
																					},
																					{
																						"type": "literal",
																						"value": "float"
																					},
																					{
																						"type": "literal",
																						"value": "double"
																					},
																					{
																						"type": "literal",
																						"value": "boolean"
																					},
																					{
																						"type": "literal",
																						"value": "decimal"
																					},
																					{
																						"type": "literal",
																						"value": "string"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "text"
																					}
																				]
																			}
																		},
																		{
																			"id": 4950,
																			"name": "defaultValue",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 4951,
																			"name": "nullable",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 4952,
																			"name": "options",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Mikro-orm options for the column"
																					}
																				]
																			},
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Record"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				],
																				"name": "Record",
																				"package": "typescript"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				4949,
																				4950,
																				4951,
																				4952
																			]
																		}
																	]
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														4945,
														4946,
														4947
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4928,
										4929,
										4930,
										4938,
										4939,
										4940,
										4941,
										4942,
										4943
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 5096,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 5195,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 5097,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 5098,
									"name": "isInternalService",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the relationship is an internal service from the medusa core TODO: Remove when there are no more \"internal\" services"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 5099,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5098,
										5099
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 5244,
			"name": "ProductStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 5245,
					"name": "DRAFT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "draft"
					}
				},
				{
					"id": 5246,
					"name": "PROPOSED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "proposed"
					}
				},
				{
					"id": 5247,
					"name": "PUBLISHED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "published"
					}
				},
				{
					"id": 5248,
					"name": "REJECTED",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "rejected"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						5245,
						5246,
						5247,
						5248
					]
				}
			]
		},
		{
			"id": 5151,
			"name": "ProductDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product's data."
					}
				]
			},
			"children": [
				{
					"id": 5152,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5153,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5154,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product. The handle can be used to create slug URL paths."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 5155,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subttle of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 5156,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 5157,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product is a gift card."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 5158,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The status of the product."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 5244,
						"name": "ProductStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5159,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product's thumbnail."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 5160,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 5161,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 5162,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 5163,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 5164,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 5165,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 5166,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 5167,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 5168,
					"name": "collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product collection."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 5249,
						"name": "ProductCollectionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5169,
					"name": "categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product categories."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 5256,
									"name": "ProductCategoryDTO",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 5170,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product type."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5268,
							"name": "ProductTypeDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5171,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product tags."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5273,
							"name": "ProductTagDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5172,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product variants."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4982,
							"name": "ProductVariantDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5173,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product options."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5237,
							"name": "ProductOptionDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5174,
					"name": "images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product images."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5278,
							"name": "ProductImageDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5175,
					"name": "discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product can be discounted."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 5176,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product in an external system. This is useful if you're integrating the product with a third-party service and want to maintain\na reference to the ID in the integrated service."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 5177,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5178,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5179,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5180,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5152,
						5153,
						5154,
						5155,
						5156,
						5157,
						5158,
						5159,
						5160,
						5161,
						5162,
						5163,
						5164,
						5165,
						5166,
						5167,
						5168,
						5169,
						5170,
						5171,
						5172,
						5173,
						5174,
						5175,
						5176,
						5177,
						5178,
						5179,
						5180
					]
				}
			]
		},
		{
			"id": 4982,
			"name": "ProductVariantDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product variant's data."
					}
				]
			},
			"children": [
				{
					"id": 4983,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4984,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tile of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4985,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4986,
					"name": "barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The barcode of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4987,
					"name": "ean",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The EAN of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4988,
					"name": "upc",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The UPC of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4989,
					"name": "inventory_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory quantiy of the product variant."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4990,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant can be ordered when it's out of stock."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4991,
					"name": "manage_inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product variant's inventory should be managed by the core system."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4992,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4993,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4994,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID Code of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4995,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4996,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 4997,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 4998,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 4999,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the product variant."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 5000,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product options."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5144,
							"name": "ProductOptionValueDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5001,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5002,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 5151,
						"name": "ProductDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5003,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated product."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5004,
					"name": "variant_rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "he ranking of the variant among other variants associated with the product."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 5005,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5006,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5007,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product variant was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4983,
						4984,
						4985,
						4986,
						4987,
						4988,
						4989,
						4990,
						4991,
						4992,
						4993,
						4994,
						4995,
						4996,
						4997,
						4998,
						4999,
						5000,
						5001,
						5002,
						5003,
						5004,
						5005,
						5006,
						5007
					]
				}
			]
		},
		{
			"id": 5256,
			"name": "ProductCategoryDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product category's data."
					}
				]
			},
			"children": [
				{
					"id": 5257,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5258,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5259,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the product category."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5260,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product category. The handle can be used to create slug URL paths."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5261,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 5262,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the product category is internal. This can be used to only show the product category to admins and hide it from customers."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 5263,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ranking of the product category among sibling categories."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 5264,
					"name": "parent_category",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated parent category."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 5256,
						"name": "ProductCategoryDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5265,
					"name": "category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated child categories."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5256,
							"name": "ProductCategoryDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5266,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product category was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5267,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product category was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5257,
						5258,
						5259,
						5260,
						5261,
						5262,
						5263,
						5264,
						5265,
						5266,
						5267
					]
				}
			]
		},
		{
			"id": 5273,
			"name": "ProductTagDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product tag's data."
					}
				]
			},
			"children": [
				{
					"id": 5274,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5275,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product tag."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5276,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5277,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated products."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5151,
							"name": "ProductDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5274,
						5275,
						5276,
						5277
					]
				}
			]
		},
		{
			"id": 5249,
			"name": "ProductCollectionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product collection's data."
					}
				]
			},
			"children": [
				{
					"id": 5250,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5251,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product collection."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5252,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The handle of the product collection. The handle can be used to create slug URL paths."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5253,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5254,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product collection was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5255,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated products."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5151,
							"name": "ProductDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5250,
						5251,
						5252,
						5253,
						5254,
						5255
					]
				}
			]
		},
		{
			"id": 5268,
			"name": "ProductTypeDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product type's data."
					}
				]
			},
			"children": [
				{
					"id": 5269,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5270,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5271,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5272,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product type was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5269,
						5270,
						5271,
						5272
					]
				}
			]
		},
		{
			"id": 5237,
			"name": "ProductOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A product option's data."
					}
				]
			},
			"children": [
				{
					"id": 5238,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5239,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the product option."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5240,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "reference",
						"target": 5151,
						"name": "ProductDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5241,
					"name": "values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option values."
							}
						],
						"modifierTags": [
							"@expandable"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5144,
							"name": "ProductOptionValueDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 5242,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5243,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5238,
						5239,
						5240,
						5241,
						5242,
						5243
					]
				}
			]
		},
		{
			"id": 5278,
			"name": "ProductImageDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product image's data."
					}
				]
			},
			"children": [
				{
					"id": 5279,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5280,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the product image."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5281,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5282,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product image was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5279,
						5280,
						5281,
						5282
					]
				}
			]
		},
		{
			"id": 5144,
			"name": "ProductOptionValueDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The product option value's data."
					}
				]
			},
			"children": [
				{
					"id": 5145,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the product option value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5146,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the product option value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 5147,
					"name": "option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product option. It may only be available if the "
							},
							{
								"kind": "code",
								"text": "`option`"
							},
							{
								"kind": "text",
								"text": " relation is expanded."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 5237,
						"name": "ProductOptionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5148,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated product variant. It may only be available if the "
							},
							{
								"kind": "code",
								"text": "`variant`"
							},
							{
								"kind": "text",
								"text": " relation is expanded."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4982,
						"name": "ProductVariantDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 5149,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 5150,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When the product option value was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						5145,
						5146,
						5147,
						5148,
						5149,
						5150
					]
				}
			]
		},
		{
			"id": 5027,
			"name": "StockLocationAddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a Stock Location Address"
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5028,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5029,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stock location address' ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5030,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stock location address"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5031,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stock location address' complement"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5032,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stock location company' name"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5033,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stock location address' country"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5034,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stock location address' city"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5035,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stock location address' phone number"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5036,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stock location address' postal code"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5037,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stock location address' province"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5038,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 5039,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 5040,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 5041,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5029,
								5030,
								5031,
								5032,
								5033,
								5034,
								5035,
								5036,
								5037,
								5038,
								5039,
								5040,
								5041
							]
						}
					]
				}
			}
		},
		{
			"id": 4719,
			"name": "StockLocationDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a Stock Location"
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4720,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4721,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stock location's ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4722,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the stock location"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4723,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 4724,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stock location address' ID"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4725,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Address of the Stock Location"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 5027,
								"name": "StockLocationAddressDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4726,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4727,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 4728,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4721,
								4722,
								4723,
								4724,
								4725,
								4726,
								4727,
								4728
							]
						}
					]
				}
			}
		},
		{
			"id": 4734,
			"name": "StockLocationExpandedDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 4719,
						"name": "StockLocationDTO",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 4735,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4736,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated sales channels."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4736
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 4907,
			"name": "ITransactionBaseService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 4908,
					"name": "withTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4909,
							"name": "withTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 4910,
									"name": "transactionManager",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
											"qualifiedName": "EntityManager"
										},
										"name": "EntityManager",
										"package": "typeorm"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "this"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						4908
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 3552,
					"name": "IPriceSelectionStrategy"
				}
			]
		},
		{
			"id": 4542,
			"name": "PriceListStatus",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 4543,
					"name": "ACTIVE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "active"
					}
				},
				{
					"id": 4544,
					"name": "DRAFT",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "draft"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						4543,
						4544
					]
				}
			]
		},
		{
			"id": 4545,
			"name": "PriceListType",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 4546,
					"name": "SALE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "sale"
					}
				},
				{
					"id": 4547,
					"name": "OVERRIDE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "override"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						4546,
						4547
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				4906
			]
		},
		{
			"title": "Enumerations",
			"children": [
				4917,
				3804,
				4067,
				4070,
				4245,
				5220,
				5244,
				4542,
				4545
			]
		},
		{
			"title": "Enumeration Members",
			"children": [
				4916,
				5219,
				5235
			]
		},
		{
			"title": "Classes",
			"children": [
				4819,
				5,
				10,
				21,
				33,
				39,
				47,
				78,
				82,
				88,
				93,
				105,
				109,
				121,
				129,
				141,
				145,
				150,
				154,
				159,
				172,
				184,
				193,
				4353,
				202,
				364,
				370,
				229,
				238,
				243,
				256,
				264,
				273,
				278,
				284,
				375,
				380,
				289,
				299,
				294,
				304,
				316,
				324,
				329,
				341,
				349,
				359,
				400,
				4382,
				4378,
				4370,
				414,
				422,
				435,
				4388,
				446,
				462,
				470,
				476,
				509,
				526,
				531,
				537,
				542,
				547,
				568,
				574,
				590,
				595,
				600,
				612,
				618,
				623,
				635,
				641,
				647,
				659,
				671,
				687,
				693,
				699,
				704,
				714,
				722,
				718,
				737,
				743,
				748,
				753,
				769,
				774,
				764,
				779,
				784,
				789,
				794,
				817,
				822,
				799,
				4438,
				4448,
				4429,
				4443,
				812,
				834,
				4455,
				841,
				846,
				852,
				873,
				879,
				857,
				4460,
				4467,
				4477,
				4472,
				868,
				884,
				890,
				895,
				901,
				906,
				911,
				934,
				939,
				946,
				951,
				4508,
				961,
				966,
				4522,
				4513,
				5008,
				5013,
				973,
				978,
				4529,
				4534,
				991,
				1006,
				1011,
				1023,
				1028,
				1082,
				4548,
				1087,
				1099,
				1103,
				1107,
				1129,
				4552,
				1146,
				1218,
				1222,
				1187,
				1197,
				1227,
				1231,
				1168,
				1173,
				1202,
				1213,
				1241,
				1246,
				1263,
				1348,
				5018,
				4589,
				4593,
				1352,
				4623,
				1380,
				1402,
				1407,
				1433,
				1440,
				1445,
				5022,
				4649,
				1449,
				4681,
				1475,
				1507,
				1511,
				1515,
				1519,
				1523,
				1532,
				1554,
				1558,
				1562,
				1566,
				1545,
				1550,
				1578,
				1589,
				1665,
				1674,
				1689,
				1613,
				1621,
				1641,
				4690,
				1646,
				1704,
				1740,
				1708,
				1714,
				1718,
				1744,
				1734,
				4708,
				1756,
				1771,
				4713,
				1777,
				1796,
				1802,
				4737,
				1819,
				1826,
				1831,
				1836,
				4748,
				1848,
				1855,
				1873,
				1891,
				1948,
				1952,
				1957,
				1961,
				1966,
				1970,
				1975,
				1985,
				1916,
				1905,
				1921,
				1925,
				1930,
				1934,
				1939,
				1943,
				1990,
				2000,
				2012,
				2017,
				2021,
				2050,
				2046,
				2040,
				2058,
				2089,
				2074,
				2121,
				2141,
				2146,
				2151,
				2159,
				2165,
				4779,
				4783,
				2169,
				2182,
				2187,
				2199,
				2226,
				2230,
				2238,
				2245,
				2272,
				2266,
				2276,
				2290,
				2310,
				2321,
				2325,
				2329,
				2337,
				2348,
				2352,
				2357,
				2363,
				2367,
				2384,
				2389,
				2407,
				2425,
				2483,
				2494,
				2519,
				2534,
				2539,
				4802,
				4795,
				2560,
				2572,
				4807,
				4814,
				2583,
				2598,
				2607,
				2748,
				2824,
				2920,
				3056,
				3190,
				3305,
				3461,
				3566,
				3647,
				3716,
				3766,
				3829,
				3914,
				3917,
				3924,
				3934,
				3941,
				3955,
				3969,
				3974,
				4338,
				4334,
				4347,
				4365,
				4357,
				4482,
				4501,
				4073,
				4086,
				4096,
				4787,
				4770,
				4556,
				4564,
				4672,
				4615,
				4628,
				4581,
				4585,
				4576,
				4571,
				4686
			]
		},
		{
			"title": "Interfaces",
			"children": [
				2704,
				2818,
				2870,
				2979,
				3144,
				3148,
				3248,
				3257,
				3262,
				3266,
				3379,
				3552,
				3619,
				3634,
				3641,
				3710,
				3853,
				3883,
				3900,
				3906,
				3910,
				4148,
				4975,
				5192,
				5082,
				5151,
				4982,
				5256,
				5273,
				5249,
				5268,
				5237,
				5278,
				5144,
				4907
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				4895,
				4846,
				1,
				4,
				15,
				18,
				26,
				29,
				66,
				69,
				70,
				75,
				115,
				118,
				133,
				136,
				137,
				177,
				180,
				216,
				219,
				222,
				223,
				226,
				390,
				393,
				396,
				397,
				455,
				458,
				459,
				487,
				490,
				491,
				494,
				500,
				503,
				608,
				609,
				628,
				631,
				632,
				653,
				656,
				675,
				678,
				681,
				682,
				726,
				729,
				998,
				1001,
				1017,
				1020,
				1065,
				1068,
				1073,
				1074,
				1075,
				1076,
				1079,
				1161,
				1164,
				1165,
				1238,
				1260,
				1314,
				1320,
				1326,
				1331,
				1334,
				1337,
				1340,
				1345,
				1497,
				1500,
				1503,
				1504,
				1538,
				1541,
				1544,
				1652,
				1655,
				1659,
				1664,
				1606,
				1609,
				1612,
				1632,
				1635,
				1638,
				1696,
				1699,
				1700,
				1701,
				1749,
				1752,
				1755,
				1789,
				1790,
				1793,
				1812,
				1813,
				1816,
				1861,
				1864,
				1867,
				1870,
				1885,
				1888,
				1898,
				1899,
				1902,
				2005,
				2008,
				2009,
				2028,
				2031,
				2034,
				2035,
				2094,
				2097,
				2100,
				2109,
				2068,
				2071,
				2112,
				2115,
				2118,
				2128,
				2131,
				2193,
				2196,
				2211,
				2214,
				2217,
				2220,
				2304,
				2307,
				2318,
				2342,
				2345,
				2378,
				2381,
				2404,
				2422,
				2474,
				2477,
				2480,
				2528,
				2531,
				2551,
				2554,
				2557,
				2566,
				2569,
				2580,
				2592,
				2595,
				2814,
				4881,
				4880,
				4882,
				3355,
				3356,
				3357,
				3358,
				3373,
				3633,
				3694,
				3698,
				3702,
				5143,
				4964,
				4053,
				4968,
				4965,
				4057,
				4063,
				3812,
				3813,
				3818,
				3824,
				3838,
				3845,
				3848,
				3851,
				3863,
				3872,
				3876,
				4953,
				3880,
				3882,
				3891,
				5042,
				4883,
				3979,
				3983,
				3988,
				3989,
				4047,
				4052,
				4105,
				4118,
				4124,
				4133,
				4141,
				5047,
				5185,
				5055,
				4806,
				4769,
				4568,
				4851,
				4159,
				4160,
				4161,
				4167,
				4173,
				5046,
				4759,
				4179,
				4183,
				4911,
				5075,
				5068,
				4925,
				5060,
				5064,
				4918,
				4424,
				4729,
				5205,
				5213,
				5100,
				4955,
				4884,
				4765,
				4866,
				4874,
				4854,
				4859,
				4392,
				4695,
				4412,
				5195,
				4977,
				5121,
				5131,
				5223,
				5181,
				4926,
				5096,
				5027,
				4719,
				4734
			]
		},
		{
			"title": "Variables",
			"children": [
				32,
				64,
				65,
				140,
				183,
				212,
				213,
				214,
				215,
				386,
				387,
				388,
				389,
				453,
				454,
				484,
				485,
				486,
				651,
				652,
				732,
				733,
				736,
				996,
				997,
				1016,
				1034,
				1063,
				1064,
				1158,
				1159,
				1160,
				1236,
				1237,
				1258,
				1259,
				1275,
				1276,
				1277,
				1278,
				1536,
				1537,
				1662,
				1663,
				1604,
				1605,
				1628,
				1629,
				1630,
				1631,
				1748,
				1787,
				1788,
				1810,
				1811,
				1860,
				1883,
				1884,
				1896,
				1897,
				2066,
				2067,
				2126,
				2127,
				2191,
				2192,
				2207,
				2208,
				2209,
				2210,
				2300,
				2301,
				2302,
				2303,
				2314,
				2315,
				2316,
				2317,
				2341,
				2371,
				2372,
				2376,
				2377,
				2401,
				2402,
				2403,
				2419,
				2420,
				2421,
				2437,
				2438,
				2439,
				2440,
				2441,
				2526,
				2527,
				2549,
				2550,
				2578,
				2579,
				2590,
				2591,
				3628,
				3803,
				5236
			]
		},
		{
			"title": "Functions",
			"children": [
				2624,
				2622,
				2634,
				2637,
				2642,
				2647,
				2626,
				2652,
				2659,
				2661,
				2671,
				2680,
				2692,
				428,
				605,
				758,
				827,
				2025,
				3245,
				3839,
				4200,
				4206,
				4210,
				4215,
				4218,
				4225,
				4230,
				4233,
				4236,
				4239,
				4242,
				4250,
				4253,
				4257,
				4263,
				4266,
				4269,
				4272,
				4277,
				4281,
				4285,
				4289,
				4294,
				4300,
				4309,
				4313,
				4319,
				4190,
				4193,
				4326
			]
		}
	],
	"packageName": "@medusajs/medusa",
	"symbolIdMap": {
		"0": {
			"sourceFileName": "../../../packages/medusa/src/index.js",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/index.ts",
			"qualifiedName": "AdminAnalyticsConfigRes"
		},
		"2": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/index.ts",
			"qualifiedName": "__type"
		},
		"3": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/index.ts",
			"qualifiedName": "__type.analytics_config"
		},
		"4": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/index.ts",
			"qualifiedName": "AdminAnalyticsConfigDeleteRes"
		},
		"5": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/create-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigReq"
		},
		"8": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/create-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigReq.opt_out"
		},
		"9": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/create-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigReq.anonymize"
		},
		"10": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/update-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigAnalyticsConfigReq"
		},
		"13": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/update-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigAnalyticsConfigReq.opt_out"
		},
		"14": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/analytics-configs/update-analytics-config.ts",
			"qualifiedName": "AdminPostAnalyticsConfigAnalyticsConfigReq.anonymize"
		},
		"15": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "AdminAuthRes"
		},
		"16": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "__type"
		},
		"17": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "__type.user"
		},
		"18": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "AdminBearerAuthRes"
		},
		"19": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "__type"
		},
		"20": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/index.ts",
			"qualifiedName": "__type.access_token"
		},
		"21": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/create-session.ts",
			"qualifiedName": "AdminPostAuthReq"
		},
		"24": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/create-session.ts",
			"qualifiedName": "AdminPostAuthReq.email"
		},
		"25": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/auth/create-session.ts",
			"qualifiedName": "AdminPostAuthReq.password"
		},
		"26": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "AdminBatchJobRes"
		},
		"27": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "__type"
		},
		"28": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "__type.batch_job"
		},
		"29": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "AdminBatchJobListRes"
		},
		"30": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "__type"
		},
		"31": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "__type.batch_jobs"
		},
		"32": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/index.ts",
			"qualifiedName": "defaultAdminBatchFields"
		},
		"33": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/create-batch-job.ts",
			"qualifiedName": "AdminPostBatchesReq"
		},
		"36": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/create-batch-job.ts",
			"qualifiedName": "AdminPostBatchesReq.type"
		},
		"37": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/create-batch-job.ts",
			"qualifiedName": "AdminPostBatchesReq.context"
		},
		"38": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/create-batch-job.ts",
			"qualifiedName": "AdminPostBatchesReq.dry_run"
		},
		"39": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams"
		},
		"42": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.limit"
		},
		"43": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.offset"
		},
		"44": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.expand"
		},
		"45": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.fields"
		},
		"46": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.order"
		},
		"47": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams"
		},
		"50": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.id"
		},
		"51": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.type"
		},
		"52": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.confirmed_at"
		},
		"53": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.pre_processed_at"
		},
		"54": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.completed_at"
		},
		"55": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.failed_at"
		},
		"56": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.canceled_at"
		},
		"57": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.created_at"
		},
		"58": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchParams.updated_at"
		},
		"59": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.limit"
		},
		"60": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.offset"
		},
		"61": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.expand"
		},
		"62": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.fields"
		},
		"63": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/batch/list-batch-jobs.ts",
			"qualifiedName": "AdminGetBatchPaginationParams.order"
		},
		"64": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "defaultAdminCollectionsFields"
		},
		"65": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "defaultAdminCollectionsRelations"
		},
		"66": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "AdminCollectionsListRes"
		},
		"67": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type"
		},
		"68": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.collections"
		},
		"69": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "AdminCollectionsDeleteRes"
		},
		"70": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "AdminDeleteProductsFromCollectionRes"
		},
		"71": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type"
		},
		"72": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.id"
		},
		"73": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.object"
		},
		"74": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.removed_products"
		},
		"75": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "AdminCollectionsRes"
		},
		"76": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type"
		},
		"77": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/index.ts",
			"qualifiedName": "__type.collection"
		},
		"78": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/add-products.ts",
			"qualifiedName": "AdminPostProductsToCollectionReq"
		},
		"81": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/add-products.ts",
			"qualifiedName": "AdminPostProductsToCollectionReq.product_ids"
		},
		"82": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/create-collection.ts",
			"qualifiedName": "AdminPostCollectionsReq"
		},
		"85": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/create-collection.ts",
			"qualifiedName": "AdminPostCollectionsReq.title"
		},
		"86": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/create-collection.ts",
			"qualifiedName": "AdminPostCollectionsReq.handle"
		},
		"87": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/create-collection.ts",
			"qualifiedName": "AdminPostCollectionsReq.metadata"
		},
		"88": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams"
		},
		"91": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams.limit"
		},
		"92": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams.offset"
		},
		"93": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams"
		},
		"96": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.title"
		},
		"97": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.handle"
		},
		"98": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.created_at"
		},
		"99": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.updated_at"
		},
		"100": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.deleted_at"
		},
		"101": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.q"
		},
		"102": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsParams.discount_condition_id"
		},
		"103": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams.limit"
		},
		"104": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/list-collections.ts",
			"qualifiedName": "AdminGetCollectionsPaginationParams.offset"
		},
		"105": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/remove-products.ts",
			"qualifiedName": "AdminDeleteProductsFromCollectionReq"
		},
		"108": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/remove-products.ts",
			"qualifiedName": "AdminDeleteProductsFromCollectionReq.product_ids"
		},
		"109": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/update-collection.ts",
			"qualifiedName": "AdminPostCollectionsCollectionReq"
		},
		"112": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/update-collection.ts",
			"qualifiedName": "AdminPostCollectionsCollectionReq.title"
		},
		"113": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/update-collection.ts",
			"qualifiedName": "AdminPostCollectionsCollectionReq.handle"
		},
		"114": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/collections/update-collection.ts",
			"qualifiedName": "AdminPostCollectionsCollectionReq.metadata"
		},
		"115": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "AdminCurrenciesListRes"
		},
		"116": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "__type"
		},
		"117": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "__type.currencies"
		},
		"118": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "AdminCurrenciesRes"
		},
		"119": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "__type"
		},
		"120": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/index.ts",
			"qualifiedName": "__type.currency"
		},
		"121": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams"
		},
		"124": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams.code"
		},
		"125": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams.includes_tax"
		},
		"126": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/list-currencies.ts",
			"qualifiedName": "AdminGetCurrenciesParams.order"
		},
		"127": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"128": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"129": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/update-currency.ts",
			"qualifiedName": "AdminPostCurrenciesCurrencyReq"
		},
		"132": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/currencies/update-currency.ts",
			"qualifiedName": "AdminPostCurrenciesCurrencyReq.includes_tax"
		},
		"133": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "AdminCustomerGroupsRes"
		},
		"134": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "__type"
		},
		"135": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "__type.customer_group"
		},
		"136": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "AdminCustomerGroupsDeleteRes"
		},
		"137": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "AdminCustomerGroupsListRes"
		},
		"138": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "__type"
		},
		"139": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"140": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/index.ts",
			"qualifiedName": "defaultAdminCustomerGroupsRelations"
		},
		"141": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/add-customers-batch.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupCustomersBatchReq"
		},
		"144": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/add-customers-batch.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupCustomersBatchReq.customer_ids"
		},
		"145": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/create-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsReq"
		},
		"148": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/create-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsReq.name"
		},
		"149": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/create-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsReq.metadata"
		},
		"150": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/delete-customers-batch.ts",
			"qualifiedName": "AdminDeleteCustomerGroupsGroupCustomerBatchReq"
		},
		"153": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/delete-customers-batch.ts",
			"qualifiedName": "AdminDeleteCustomerGroupsGroupCustomerBatchReq.customer_ids"
		},
		"154": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/get-customer-group.ts",
			"qualifiedName": "AdminGetCustomerGroupsGroupParams"
		},
		"157": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"158": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"159": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams"
		},
		"162": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.order"
		},
		"163": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.offset"
		},
		"164": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.limit"
		},
		"165": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/list-customer-groups.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.expand"
		},
		"166": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.id"
		},
		"167": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.q"
		},
		"168": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.name"
		},
		"169": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.updated_at"
		},
		"170": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.created_at"
		},
		"171": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.discount_condition_id"
		},
		"172": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/update-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupReq"
		},
		"175": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/update-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupReq.name"
		},
		"176": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customer-groups/update-customer-group.ts",
			"qualifiedName": "AdminPostCustomerGroupsGroupReq.metadata"
		},
		"177": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "AdminCustomersRes"
		},
		"178": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "__type"
		},
		"179": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "__type.customer"
		},
		"180": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "AdminCustomersListRes"
		},
		"181": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "__type"
		},
		"182": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "__type.customers"
		},
		"183": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/index.ts",
			"qualifiedName": "defaultAdminCustomersRelations"
		},
		"184": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq"
		},
		"187": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.email"
		},
		"188": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.first_name"
		},
		"189": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.last_name"
		},
		"190": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.password"
		},
		"191": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.phone"
		},
		"192": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/create-customer.ts",
			"qualifiedName": "AdminPostCustomersReq.metadata"
		},
		"193": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams"
		},
		"196": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams.limit"
		},
		"197": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams.offset"
		},
		"198": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/list-customers.ts",
			"qualifiedName": "AdminGetCustomersParams.expand"
		},
		"199": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.q"
		},
		"200": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.has_account"
		},
		"201": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.groups"
		},
		"202": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq"
		},
		"205": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.email"
		},
		"206": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.first_name"
		},
		"207": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.last_name"
		},
		"208": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.password"
		},
		"209": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.phone"
		},
		"210": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.metadata"
		},
		"211": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "AdminPostCustomersCustomerReq.groups"
		},
		"212": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "defaultAdminDiscountsFields"
		},
		"213": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "defaultAdminDiscountsRelations"
		},
		"214": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "defaultAdminDiscountConditionFields"
		},
		"215": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "defaultAdminDiscountConditionRelations"
		},
		"216": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountsRes"
		},
		"217": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type"
		},
		"218": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type.discount"
		},
		"219": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountConditionsRes"
		},
		"220": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type"
		},
		"221": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type.discount_condition"
		},
		"222": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountsDeleteRes"
		},
		"223": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountConditionsDeleteRes"
		},
		"224": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type"
		},
		"225": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type.discount"
		},
		"226": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "AdminDiscountsListRes"
		},
		"227": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type"
		},
		"228": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/index.ts",
			"qualifiedName": "__type.discounts"
		},
		"229": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditions"
		},
		"232": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditions.operator"
		},
		"233": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"234": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"235": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"236": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"237": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"238": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsParams"
		},
		"241": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"242": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"243": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq"
		},
		"246": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.code"
		},
		"247": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.rule"
		},
		"248": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.is_dynamic"
		},
		"249": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.is_disabled"
		},
		"250": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.starts_at"
		},
		"251": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.ends_at"
		},
		"252": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.valid_duration"
		},
		"253": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.usage_limit"
		},
		"254": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.regions"
		},
		"255": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsReq.metadata"
		},
		"256": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule"
		},
		"259": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.description"
		},
		"260": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.type"
		},
		"261": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.value"
		},
		"262": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.allocation"
		},
		"263": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountRule.conditions"
		},
		"264": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminCreateCondition"
		},
		"267": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminCreateCondition.operator"
		},
		"268": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"269": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"270": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"271": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"272": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"273": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-discount.ts",
			"qualifiedName": "AdminPostDiscountsParams"
		},
		"276": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"277": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"278": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-dynamic-code.ts",
			"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq"
		},
		"281": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-dynamic-code.ts",
			"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq.code"
		},
		"282": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-dynamic-code.ts",
			"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq.usage_limit"
		},
		"283": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/create-dynamic-code.ts",
			"qualifiedName": "AdminPostDiscountsDiscountDynamicCodesReq.metadata"
		},
		"284": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-condition.ts",
			"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionParams"
		},
		"287": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"288": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"289": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/get-condition.ts",
			"qualifiedName": "AdminGetDiscountsDiscountConditionsConditionParams"
		},
		"292": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"293": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"294": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/get-discount.ts",
			"qualifiedName": "AdminGetDiscountParams"
		},
		"297": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"298": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"299": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/get-discount-by-code.ts",
			"qualifiedName": "AdminGetDiscountsDiscountCodeParams"
		},
		"302": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"303": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"304": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams"
		},
		"305": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"306": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetDiscountsParams"
		},
		"307": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"308": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.rule"
		},
		"309": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.q"
		},
		"310": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.is_dynamic"
		},
		"311": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/list-discounts.ts",
			"qualifiedName": "AdminGetDiscountsParams.is_disabled"
		},
		"312": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"313": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"314": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"315": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"316": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsCondition"
		},
		"319": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"320": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"321": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"322": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"323": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"324": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-condition.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionParams"
		},
		"327": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"328": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"329": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq"
		},
		"332": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.code"
		},
		"333": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.rule"
		},
		"334": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.is_disabled"
		},
		"335": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.starts_at"
		},
		"336": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.ends_at"
		},
		"337": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.valid_duration"
		},
		"338": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.usage_limit"
		},
		"339": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.regions"
		},
		"340": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountReq.metadata"
		},
		"341": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule"
		},
		"344": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.id"
		},
		"345": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.description"
		},
		"346": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.value"
		},
		"347": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.allocation"
		},
		"348": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpdateDiscountRule.conditions"
		},
		"349": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpsertCondition"
		},
		"352": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpsertCondition.id"
		},
		"353": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminUpsertCondition.operator"
		},
		"354": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"355": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"356": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"357": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"358": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"359": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/update-discount.ts",
			"qualifiedName": "AdminPostDiscountsDiscountParams"
		},
		"362": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"363": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"364": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchReq"
		},
		"367": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchReq.resources"
		},
		"368": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "__type"
		},
		"369": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "__type.id"
		},
		"370": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/add-resources-to-condition-batch.ts",
			"qualifiedName": "AdminPostDiscountsDiscountConditionsConditionBatchParams"
		},
		"373": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"374": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"375": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchParams"
		},
		"378": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"379": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"380": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq"
		},
		"383": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "AdminDeleteDiscountsDiscountConditionsConditionBatchReq.resources"
		},
		"384": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "__type"
		},
		"385": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/discounts/delete-resources-from-condition-batch.ts",
			"qualifiedName": "__type.id"
		},
		"386": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "defaultAdminDraftOrdersRelations"
		},
		"387": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "defaultAdminDraftOrdersCartRelations"
		},
		"388": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "defaultAdminDraftOrdersCartFields"
		},
		"389": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "defaultAdminDraftOrdersFields"
		},
		"390": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderRegisterPaymentRes"
		},
		"391": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type"
		},
		"392": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type.order"
		},
		"393": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "AdminDraftOrdersRes"
		},
		"394": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type"
		},
		"395": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type.draft_order"
		},
		"396": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "AdminDraftOrdersDeleteRes"
		},
		"397": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "AdminDraftOrdersListRes"
		},
		"398": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type"
		},
		"399": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/index.ts",
			"qualifiedName": "__type.draft_orders"
		},
		"400": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq"
		},
		"403": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.status"
		},
		"404": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.email"
		},
		"405": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.billing_address"
		},
		"406": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.shipping_address"
		},
		"407": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.items"
		},
		"408": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.region_id"
		},
		"409": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.discounts"
		},
		"410": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.customer_id"
		},
		"411": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.no_notification_order"
		},
		"412": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.shipping_methods"
		},
		"413": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersReq.metadata"
		},
		"414": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq"
		},
		"417": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.title"
		},
		"418": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.unit_price"
		},
		"419": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.variant_id"
		},
		"420": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.quantity"
		},
		"421": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsReq.metadata"
		},
		"422": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams"
		},
		"425": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.q"
		},
		"426": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.limit"
		},
		"427": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/list-draft-orders.ts",
			"qualifiedName": "AdminGetDraftOrdersParams.offset"
		},
		"428": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "reserveQuantityForDraftOrder"
		},
		"429": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "reserveQuantityForDraftOrder"
		},
		"430": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "order"
		},
		"431": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "context"
		},
		"432": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "__type"
		},
		"433": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "__type.productVariantInventoryService"
		},
		"434": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/register-payment.ts",
			"qualifiedName": "__type.locationId"
		},
		"435": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq"
		},
		"438": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.region_id"
		},
		"439": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.country_code"
		},
		"440": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.email"
		},
		"441": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.billing_address"
		},
		"442": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.shipping_address"
		},
		"443": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.discounts"
		},
		"444": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.customer_id"
		},
		"445": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderReq.no_notification_order"
		},
		"446": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq"
		},
		"449": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq.title"
		},
		"450": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq.unit_price"
		},
		"451": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq.quantity"
		},
		"452": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-line-item.ts",
			"qualifiedName": "AdminPostDraftOrdersDraftOrderLineItemsItemReq.metadata"
		},
		"453": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "defaultAdminGiftCardFields"
		},
		"454": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "defaultAdminGiftCardRelations"
		},
		"455": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "AdminGiftCardsRes"
		},
		"456": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "__type"
		},
		"457": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "__type.gift_card"
		},
		"458": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "AdminGiftCardsDeleteRes"
		},
		"459": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "AdminGiftCardsListRes"
		},
		"460": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "__type"
		},
		"461": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/index.ts",
			"qualifiedName": "__type.gift_cards"
		},
		"462": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq"
		},
		"465": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.value"
		},
		"466": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.ends_at"
		},
		"467": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.is_disabled"
		},
		"468": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.region_id"
		},
		"469": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/create-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsReq.metadata"
		},
		"470": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams"
		},
		"473": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams.limit"
		},
		"474": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams.offset"
		},
		"475": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/list-gift-cards.ts",
			"qualifiedName": "AdminGetGiftCardsParams.q"
		},
		"476": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq"
		},
		"479": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.balance"
		},
		"480": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.is_disabled"
		},
		"481": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.ends_at"
		},
		"482": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.region_id"
		},
		"483": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/gift-cards/update-gift-card.ts",
			"qualifiedName": "AdminPostGiftCardsGiftCardReq.metadata"
		},
		"484": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "defaultAdminInventoryItemFields"
		},
		"485": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "defaultAdminLocationLevelFields"
		},
		"486": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "defaultAdminInventoryItemRelations"
		},
		"487": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsRes"
		},
		"488": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"489": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.inventory_item"
		},
		"490": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsDeleteRes"
		},
		"491": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsListRes"
		},
		"492": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"493": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.inventory_items"
		},
		"494": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "DecoratedInventoryItemDTO"
		},
		"495": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"496": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.location_levels"
		},
		"497": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.variants"
		},
		"498": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.stocked_quantity"
		},
		"499": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.reserved_quantity"
		},
		"500": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsListWithVariantsAndLocationLevelsRes"
		},
		"501": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"502": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.inventory_items"
		},
		"503": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "AdminInventoryItemsLocationLevelsRes"
		},
		"504": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"505": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.inventory_item"
		},
		"506": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type"
		},
		"507": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.id"
		},
		"508": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/index.ts",
			"qualifiedName": "__type.location_levels"
		},
		"509": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq"
		},
		"512": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.variant_id"
		},
		"513": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.sku"
		},
		"514": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.hs_code"
		},
		"515": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.weight"
		},
		"516": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.length"
		},
		"517": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.height"
		},
		"518": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.width"
		},
		"519": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.origin_country"
		},
		"520": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.mid_code"
		},
		"521": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.material"
		},
		"522": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.title"
		},
		"523": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.description"
		},
		"524": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.thumbnail"
		},
		"525": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsReq.metadata"
		},
		"526": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsParams"
		},
		"529": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"530": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"531": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq"
		},
		"534": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq.location_id"
		},
		"535": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq.stocked_quantity"
		},
		"536": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsReq.incoming_quantity"
		},
		"537": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/create-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsParams"
		},
		"540": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"541": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"542": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/get-inventory-item.ts",
			"qualifiedName": "AdminGetInventoryItemsItemParams"
		},
		"545": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"546": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"547": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams"
		},
		"548": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"549": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetInventoryItemsParams"
		},
		"550": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"551": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.id"
		},
		"552": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.q"
		},
		"553": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.location_id"
		},
		"554": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.sku"
		},
		"555": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.origin_country"
		},
		"556": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.mid_code"
		},
		"557": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.material"
		},
		"558": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.hs_code"
		},
		"559": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.weight"
		},
		"560": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.length"
		},
		"561": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.height"
		},
		"562": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.width"
		},
		"563": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-inventory-items.ts",
			"qualifiedName": "AdminGetInventoryItemsParams.requires_shipping"
		},
		"564": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"565": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"566": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"567": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"568": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-location-levels.ts",
			"qualifiedName": "AdminGetInventoryItemsItemLocationLevelsParams"
		},
		"571": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/list-location-levels.ts",
			"qualifiedName": "AdminGetInventoryItemsItemLocationLevelsParams.location_id"
		},
		"572": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"573": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"574": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq"
		},
		"577": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.sku"
		},
		"578": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.origin_country"
		},
		"579": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.hs_code"
		},
		"580": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.mid_code"
		},
		"581": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.material"
		},
		"582": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.weight"
		},
		"583": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.height"
		},
		"584": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.length"
		},
		"585": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.width"
		},
		"586": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.title"
		},
		"587": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.description"
		},
		"588": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.thumbnail"
		},
		"589": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemReq.requires_shipping"
		},
		"590": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-inventory-item.ts",
			"qualifiedName": "AdminPostInventoryItemsInventoryItemParams"
		},
		"593": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"594": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"595": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelReq"
		},
		"598": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelReq.incoming_quantity"
		},
		"599": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelReq.stocked_quantity"
		},
		"600": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/inventory-items/update-location-level.ts",
			"qualifiedName": "AdminPostInventoryItemsItemLocationLevelsLevelParams"
		},
		"603": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"604": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"605": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "unauthenticatedInviteRoutes"
		},
		"606": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "unauthenticatedInviteRoutes"
		},
		"607": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "app"
		},
		"608": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "AdminInviteDeleteRes"
		},
		"609": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "AdminListInvitesRes"
		},
		"610": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "__type"
		},
		"611": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/index.ts",
			"qualifiedName": "__type.invites"
		},
		"612": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptUserReq"
		},
		"615": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptUserReq.first_name"
		},
		"616": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptUserReq.last_name"
		},
		"617": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptUserReq.password"
		},
		"618": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptReq"
		},
		"621": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptReq.token"
		},
		"622": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/accept-invite.ts",
			"qualifiedName": "AdminPostInvitesInviteAcceptReq.user"
		},
		"623": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/create-invite.ts",
			"qualifiedName": "AdminPostInvitesReq"
		},
		"626": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/create-invite.ts",
			"qualifiedName": "AdminPostInvitesReq.user"
		},
		"627": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/invites/create-invite.ts",
			"qualifiedName": "AdminPostInvitesReq.role"
		},
		"628": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "AdminNotesRes"
		},
		"629": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "__type"
		},
		"630": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "__type.note"
		},
		"631": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "AdminNotesDeleteRes"
		},
		"632": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "AdminNotesListRes"
		},
		"633": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "__type"
		},
		"634": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/index.ts",
			"qualifiedName": "__type.notes"
		},
		"635": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/create-note.ts",
			"qualifiedName": "AdminPostNotesReq"
		},
		"638": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/create-note.ts",
			"qualifiedName": "AdminPostNotesReq.resource_id"
		},
		"639": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/create-note.ts",
			"qualifiedName": "AdminPostNotesReq.resource_type"
		},
		"640": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/create-note.ts",
			"qualifiedName": "AdminPostNotesReq.value"
		},
		"641": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/list-notes.ts",
			"qualifiedName": "AdminGetNotesParams"
		},
		"644": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/list-notes.ts",
			"qualifiedName": "AdminGetNotesParams.resource_id"
		},
		"645": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/list-notes.ts",
			"qualifiedName": "AdminGetNotesParams.limit"
		},
		"646": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/list-notes.ts",
			"qualifiedName": "AdminGetNotesParams.offset"
		},
		"647": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/update-note.ts",
			"qualifiedName": "AdminPostNotesNoteReq"
		},
		"650": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notes/update-note.ts",
			"qualifiedName": "AdminPostNotesNoteReq.value"
		},
		"651": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "defaultAdminNotificationsRelations"
		},
		"652": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "defaultAdminNotificationsFields"
		},
		"653": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "AdminNotificationsListRes"
		},
		"654": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "__type"
		},
		"655": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "__type.notifications"
		},
		"656": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "AdminNotificationsRes"
		},
		"657": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "__type"
		},
		"658": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/index.ts",
			"qualifiedName": "__type.notification"
		},
		"659": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams"
		},
		"662": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.limit"
		},
		"663": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.offset"
		},
		"664": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.fields"
		},
		"665": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.expand"
		},
		"666": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.event_name"
		},
		"667": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.resource_type"
		},
		"668": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.resource_id"
		},
		"669": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.to"
		},
		"670": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/list-notifications.ts",
			"qualifiedName": "AdminGetNotificationsParams.include_resends"
		},
		"671": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/resend-notification.ts",
			"qualifiedName": "AdminPostNotificationsNotificationResendReq"
		},
		"674": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/notifications/resend-notification.ts",
			"qualifiedName": "AdminPostNotificationsNotificationResendReq.to"
		},
		"675": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "AdminOrderEditsRes"
		},
		"676": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type"
		},
		"677": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.order_edit"
		},
		"678": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "AdminOrderEditsListRes"
		},
		"679": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type"
		},
		"680": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.order_edits"
		},
		"681": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "AdminOrderEditDeleteRes"
		},
		"682": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "AdminOrderEditItemChangeDeleteRes"
		},
		"683": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type"
		},
		"684": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.id"
		},
		"685": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.object"
		},
		"686": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"687": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/add-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsReq"
		},
		"690": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/add-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsReq.variant_id"
		},
		"691": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/add-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsReq.quantity"
		},
		"692": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/add-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsReq.metadata"
		},
		"693": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/create-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsReq"
		},
		"696": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/create-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsReq.order_id"
		},
		"697": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/create-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsReq.internal_note"
		},
		"698": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/create-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsReq.created_by"
		},
		"699": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/get-order-edit.ts",
			"qualifiedName": "GetOrderEditsOrderEditParams"
		},
		"702": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"703": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"704": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/list-order-edit.ts",
			"qualifiedName": "GetOrderEditsParams"
		},
		"705": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"706": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "GetOrderEditsParams"
		},
		"707": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"708": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/list-order-edit.ts",
			"qualifiedName": "GetOrderEditsParams.q"
		},
		"709": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/list-order-edit.ts",
			"qualifiedName": "GetOrderEditsParams.order_id"
		},
		"710": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"711": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"712": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"713": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"714": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/request-confirmation.ts",
			"qualifiedName": "AdminPostOrderEditsRequestConfirmationReq"
		},
		"717": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/request-confirmation.ts",
			"qualifiedName": "AdminPostOrderEditsRequestConfirmationReq.payment_collection_description"
		},
		"718": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/update-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsOrderEditReq"
		},
		"721": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/update-order-edit.ts",
			"qualifiedName": "AdminPostOrderEditsOrderEditReq.internal_note"
		},
		"722": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/update-order-edit-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsLineItemReq"
		},
		"725": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/order-edits/update-order-edit-line-item.ts",
			"qualifiedName": "AdminPostOrderEditsEditLineItemsLineItemReq.quantity"
		},
		"726": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "AdminOrdersRes"
		},
		"727": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__type"
		},
		"728": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__type.order"
		},
		"729": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "AdminOrdersListRes"
		},
		"730": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__type"
		},
		"731": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__type.orders"
		},
		"732": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "filterableAdminOrdersFields"
		},
		"733": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "AvailableOrderIncludes"
		},
		"734": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__object"
		},
		"735": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "__object.RETURNABLE_ITEMS"
		},
		"736": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/index.ts",
			"qualifiedName": "allowedOrderIncludes"
		},
		"737": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq"
		},
		"740": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq.price"
		},
		"741": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq.option_id"
		},
		"742": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsReq.data"
		},
		"743": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/add-shipping-method.ts",
			"qualifiedName": "AdminPostOrdersOrderShippingMethodsParams"
		},
		"746": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"747": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"748": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/archive-order.ts",
			"qualifiedName": "AdminPostOrdersOrderArchiveParams"
		},
		"751": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"752": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"753": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-claim.ts",
			"qualifiedName": "AdminPostOrdersClaimCancel"
		},
		"756": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"757": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"758": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "adjustInventoryForCancelledFulfillment"
		},
		"759": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "adjustInventoryForCancelledFulfillment"
		},
		"760": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "fulfillment"
		},
		"761": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "context"
		},
		"762": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "__type"
		},
		"763": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "__type.productVariantInventoryService"
		},
		"764": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillementsCancelParams"
		},
		"767": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"768": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"769": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment-claim.ts",
			"qualifiedName": "AdminPostOrdersClaimFulfillmentsCancelParams"
		},
		"772": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"773": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"774": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-fulfillment-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapFulfillementsCancelParams"
		},
		"777": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"778": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"779": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-order.ts",
			"qualifiedName": "AdminPostOrdersOrderCancel"
		},
		"782": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"783": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"784": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/cancel-swap.ts",
			"qualifiedName": "AdminPostOrdersSwapCancelParams"
		},
		"787": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"788": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"789": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/capture-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderCaptureParams"
		},
		"792": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"793": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"794": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/complete-order.ts",
			"qualifiedName": "AdminPostOrdersOrderCompleteParams"
		},
		"797": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"798": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"799": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq"
		},
		"802": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.type"
		},
		"803": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.claim_items"
		},
		"804": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.return_shipping"
		},
		"805": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.additional_items"
		},
		"806": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.shipping_methods"
		},
		"807": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.refund_amount"
		},
		"808": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.shipping_address"
		},
		"809": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.no_notification"
		},
		"810": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.return_location_id"
		},
		"811": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsReq.metadata"
		},
		"812": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsParams"
		},
		"815": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"816": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"817": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq"
		},
		"820": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq.fulfillment_id"
		},
		"821": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsReq.tracking_numbers"
		},
		"822": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimShipmentsParams"
		},
		"825": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"826": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"827": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "updateInventoryAndReservations"
		},
		"828": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "updateInventoryAndReservations"
		},
		"829": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "fulfillments"
		},
		"830": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "context"
		},
		"831": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "__type"
		},
		"832": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "__type.inventoryService"
		},
		"833": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "__type.locationId"
		},
		"834": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq"
		},
		"837": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq.items"
		},
		"838": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq.location_id"
		},
		"839": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq.no_notification"
		},
		"840": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsReq.metadata"
		},
		"841": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "AdminPostOrdersOrderFulfillmentsParams"
		},
		"844": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"845": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"846": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentReq"
		},
		"849": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentReq.fulfillment_id"
		},
		"850": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentReq.tracking_numbers"
		},
		"851": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentReq.no_notification"
		},
		"852": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderShipmentParams"
		},
		"855": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"856": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"857": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq"
		},
		"860": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.return_items"
		},
		"861": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.return_shipping"
		},
		"862": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.sales_channel_id"
		},
		"863": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.additional_items"
		},
		"864": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.custom_shipping_options"
		},
		"865": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.no_notification"
		},
		"866": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.return_location_id"
		},
		"867": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsReq.allow_backorder"
		},
		"868": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsParams"
		},
		"871": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"872": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"873": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq"
		},
		"876": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq.fulfillment_id"
		},
		"877": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq.tracking_numbers"
		},
		"878": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsReq.no_notification"
		},
		"879": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap-shipment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapShipmentsParams"
		},
		"882": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"883": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"884": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq"
		},
		"887": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq.metadata"
		},
		"888": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq.no_notification"
		},
		"889": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsReq.location_id"
		},
		"890": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimFulfillmentsParams"
		},
		"893": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"894": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"895": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq"
		},
		"898": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq.metadata"
		},
		"899": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq.no_notification"
		},
		"900": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsReq.location_id"
		},
		"901": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/fulfill-swap.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapFulfillmentsParams"
		},
		"904": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"905": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"906": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/get-order.ts",
			"qualifiedName": "AdminGetOrdersOrderParams"
		},
		"909": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"910": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"911": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams"
		},
		"914": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.offset"
		},
		"915": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.limit"
		},
		"916": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.expand"
		},
		"917": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/list-orders.ts",
			"qualifiedName": "AdminGetOrdersParams.fields"
		},
		"918": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.q"
		},
		"919": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.id"
		},
		"920": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.status"
		},
		"921": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.fulfillment_status"
		},
		"922": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.payment_status"
		},
		"923": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.display_id"
		},
		"924": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.cart_id"
		},
		"925": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.customer_id"
		},
		"926": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.email"
		},
		"927": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.region_id"
		},
		"928": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.currency_code"
		},
		"929": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.tax_rate"
		},
		"930": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.sales_channel_id"
		},
		"931": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.canceled_at"
		},
		"932": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.created_at"
		},
		"933": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.updated_at"
		},
		"934": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/process-swap-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderSwapsSwapProcessPaymentParams"
		},
		"937": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"938": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"939": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq"
		},
		"942": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq.amount"
		},
		"943": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq.reason"
		},
		"944": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq.note"
		},
		"945": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsReq.no_notification"
		},
		"946": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/refund-payment.ts",
			"qualifiedName": "AdminPostOrdersOrderRefundsParams"
		},
		"949": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"950": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"951": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq"
		},
		"954": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.items"
		},
		"955": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.return_shipping"
		},
		"956": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.note"
		},
		"957": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.receive_now"
		},
		"958": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.no_notification"
		},
		"959": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.refund"
		},
		"960": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsReq.location_id"
		},
		"961": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "AdminPostOrdersOrderReturnsParams"
		},
		"964": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"965": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"966": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq"
		},
		"969": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq.claim_items"
		},
		"970": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq.shipping_methods"
		},
		"971": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq.no_notification"
		},
		"972": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimReq.metadata"
		},
		"973": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "AdminPostOrdersOrderClaimsClaimParams"
		},
		"976": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"977": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"978": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq"
		},
		"981": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.email"
		},
		"982": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.billing_address"
		},
		"983": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.shipping_address"
		},
		"984": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.items"
		},
		"985": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.region"
		},
		"986": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.discounts"
		},
		"987": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.customer_id"
		},
		"988": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.payment_method"
		},
		"989": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.shipping_method"
		},
		"990": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderReq.no_notification"
		},
		"991": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "AdminPostOrdersOrderParams"
		},
		"994": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"995": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"996": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "defaultPaymentCollectionFields"
		},
		"997": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "defaulPaymentCollectionRelations"
		},
		"998": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "AdminPaymentCollectionsRes"
		},
		"999": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type"
		},
		"1000": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type.payment_collection"
		},
		"1001": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "AdminPaymentCollectionDeleteRes"
		},
		"1002": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type"
		},
		"1003": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type.id"
		},
		"1004": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type.object"
		},
		"1005": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"1006": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/get-payment-collection.ts",
			"qualifiedName": "AdminGetPaymentCollectionsParams"
		},
		"1009": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1010": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1011": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/update-payment-collection.ts",
			"qualifiedName": "AdminUpdatePaymentCollectionsReq"
		},
		"1014": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/update-payment-collection.ts",
			"qualifiedName": "AdminUpdatePaymentCollectionsReq.description"
		},
		"1015": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payment-collections/update-payment-collection.ts",
			"qualifiedName": "AdminUpdatePaymentCollectionsReq.metadata"
		},
		"1016": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "defaultPaymentFields"
		},
		"1017": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "AdminPaymentRes"
		},
		"1018": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "__type"
		},
		"1019": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "__type.payment"
		},
		"1020": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "AdminRefundRes"
		},
		"1021": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "__type"
		},
		"1022": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/index.ts",
			"qualifiedName": "__type.refund"
		},
		"1023": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/get-payment.ts",
			"qualifiedName": "GetPaymentsParams"
		},
		"1026": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1027": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1028": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/refund-payment.ts",
			"qualifiedName": "AdminPostPaymentRefundsReq"
		},
		"1031": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/refund-payment.ts",
			"qualifiedName": "AdminPostPaymentRefundsReq.amount"
		},
		"1032": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/refund-payment.ts",
			"qualifiedName": "AdminPostPaymentRefundsReq.reason"
		},
		"1033": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/payments/refund-payment.ts",
			"qualifiedName": "AdminPostPaymentRefundsReq.note"
		},
		"1034": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "defaultAdminPriceListRemoteQueryObject"
		},
		"1035": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object"
		},
		"1036": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1037": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.price_list_rules"
		},
		"1038": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object"
		},
		"1039": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.price_list_rule_values"
		},
		"1040": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object"
		},
		"1041": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1042": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.rule_type"
		},
		"1043": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object"
		},
		"1044": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1045": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.price_set_money_amounts"
		},
		"1046": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object"
		},
		"1047": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.money_amount"
		},
		"1048": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object"
		},
		"1049": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1050": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.price_rules"
		},
		"1051": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object"
		},
		"1052": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1053": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.rule_type"
		},
		"1054": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object"
		},
		"1055": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1056": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.price_set"
		},
		"1057": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object"
		},
		"1058": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.variant_link"
		},
		"1059": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object"
		},
		"1060": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.variant"
		},
		"1061": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object"
		},
		"1062": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1063": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "defaultAdminPriceListFields"
		},
		"1064": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "defaultAdminPriceListRelations"
		},
		"1065": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListRes"
		},
		"1066": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type"
		},
		"1067": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.price_list"
		},
		"1068": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListDeleteBatchRes"
		},
		"1069": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type"
		},
		"1070": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.ids"
		},
		"1071": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"1072": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.object"
		},
		"1073": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListDeleteProductPricesRes"
		},
		"1074": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListDeleteVariantPricesRes"
		},
		"1075": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListDeleteRes"
		},
		"1076": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListsListRes"
		},
		"1077": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type"
		},
		"1078": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.price_lists"
		},
		"1079": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "AdminPriceListsProductsListRes"
		},
		"1080": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type"
		},
		"1081": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/index.ts",
			"qualifiedName": "__type.products"
		},
		"1082": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/add-prices-batch.ts",
			"qualifiedName": "AdminPostPriceListPricesPricesReq"
		},
		"1085": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/add-prices-batch.ts",
			"qualifiedName": "AdminPostPriceListPricesPricesReq.prices"
		},
		"1086": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/add-prices-batch.ts",
			"qualifiedName": "AdminPostPriceListPricesPricesReq.override"
		},
		"1087": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq"
		},
		"1090": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.name"
		},
		"1091": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.description"
		},
		"1092": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.starts_at"
		},
		"1093": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.ends_at"
		},
		"1094": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.status"
		},
		"1095": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.type"
		},
		"1096": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.prices"
		},
		"1097": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.customer_groups"
		},
		"1098": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListReq.includes_tax"
		},
		"1099": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/delete-prices-batch.ts",
			"qualifiedName": "AdminDeletePriceListPricesPricesReq"
		},
		"1102": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/delete-prices-batch.ts",
			"qualifiedName": "AdminDeletePriceListPricesPricesReq.price_ids"
		},
		"1103": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/delete-products-prices-batch.ts",
			"qualifiedName": "AdminDeletePriceListsPriceListProductsPricesBatchReq"
		},
		"1106": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/delete-products-prices-batch.ts",
			"qualifiedName": "AdminDeletePriceListsPriceListProductsPricesBatchReq.product_ids"
		},
		"1107": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams"
		},
		"1108": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"1109": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams"
		},
		"1110": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"1111": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.id"
		},
		"1112": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.q"
		},
		"1113": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.status"
		},
		"1114": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.collection_id"
		},
		"1115": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.tags"
		},
		"1116": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.title"
		},
		"1117": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.description"
		},
		"1118": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.handle"
		},
		"1119": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.is_giftcard"
		},
		"1120": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.type"
		},
		"1121": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.order"
		},
		"1122": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.created_at"
		},
		"1123": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.updated_at"
		},
		"1124": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-list-products.ts",
			"qualifiedName": "AdminGetPriceListsPriceListProductsParams.deleted_at"
		},
		"1125": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1126": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1127": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"1128": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"1129": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams"
		},
		"1132": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams.offset"
		},
		"1133": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams.limit"
		},
		"1134": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams.expand"
		},
		"1135": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/list-price-lists.ts",
			"qualifiedName": "AdminGetPriceListPaginationParams.order"
		},
		"1136": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.id"
		},
		"1137": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.q"
		},
		"1138": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.status"
		},
		"1139": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.name"
		},
		"1140": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.customer_groups"
		},
		"1141": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.description"
		},
		"1142": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.type"
		},
		"1143": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.created_at"
		},
		"1144": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.updated_at"
		},
		"1145": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.deleted_at"
		},
		"1146": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq"
		},
		"1149": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.name"
		},
		"1150": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.description"
		},
		"1151": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.starts_at"
		},
		"1152": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.ends_at"
		},
		"1153": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.status"
		},
		"1154": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.type"
		},
		"1155": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.prices"
		},
		"1156": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.customer_groups"
		},
		"1157": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "AdminPostPriceListsPriceListPriceListReq.includes_tax"
		},
		"1158": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "defaultAdminProductCategoryRelations"
		},
		"1159": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "allowedAdminProductCategoryRelations"
		},
		"1160": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "defaultProductCategoryFields"
		},
		"1161": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "AdminProductCategoriesCategoryRes"
		},
		"1162": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "__type"
		},
		"1163": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "__type.product_category"
		},
		"1164": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "AdminProductCategoriesCategoryDeleteRes"
		},
		"1165": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "AdminProductCategoriesListRes"
		},
		"1166": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "__type"
		},
		"1167": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/index.ts",
			"qualifiedName": "__type.product_categories"
		},
		"1168": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/get-product-category.ts",
			"qualifiedName": "AdminGetProductCategoryParams"
		},
		"1171": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1172": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1173": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams"
		},
		"1174": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"1175": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetProductCategoriesParams"
		},
		"1176": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"1177": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.q"
		},
		"1178": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.handle"
		},
		"1179": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.include_descendants_tree"
		},
		"1180": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.is_internal"
		},
		"1181": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.is_active"
		},
		"1182": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/list-product-categories.ts",
			"qualifiedName": "AdminGetProductCategoriesParams.parent_category_id"
		},
		"1183": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1184": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1185": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"1186": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"1187": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/create-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesReq"
		},
		"1190": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/create-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesReq.name"
		},
		"1191": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/create-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesReq.metadata"
		},
		"1192": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.description"
		},
		"1193": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.handle"
		},
		"1194": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_internal"
		},
		"1195": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_active"
		},
		"1196": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.parent_category_id"
		},
		"1197": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/create-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesParams"
		},
		"1200": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1201": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1202": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq"
		},
		"1205": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq.name"
		},
		"1206": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq.handle"
		},
		"1207": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq.rank"
		},
		"1208": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryReq.metadata"
		},
		"1209": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.description"
		},
		"1210": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_internal"
		},
		"1211": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_active"
		},
		"1212": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.parent_category_id"
		},
		"1213": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/update-product-category.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryParams"
		},
		"1216": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1217": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1218": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/add-products-batch.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchReq"
		},
		"1221": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/add-products-batch.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchReq.product_ids"
		},
		"1222": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/add-products-batch.ts",
			"qualifiedName": "AdminPostProductCategoriesCategoryProductsBatchParams"
		},
		"1225": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1226": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1227": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchReq"
		},
		"1230": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchReq.product_ids"
		},
		"1231": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-categories/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteProductCategoriesCategoryProductsBatchParams"
		},
		"1234": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1235": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1236": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "defaultAdminProductTagsFields"
		},
		"1237": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "defaultAdminProductTagsRelations"
		},
		"1238": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "AdminProductTagsListRes"
		},
		"1239": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "__type"
		},
		"1240": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/index.ts",
			"qualifiedName": "__type.product_tags"
		},
		"1241": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams"
		},
		"1244": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams.limit"
		},
		"1245": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams.offset"
		},
		"1246": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams"
		},
		"1249": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.id"
		},
		"1250": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.q"
		},
		"1251": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.value"
		},
		"1252": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.created_at"
		},
		"1253": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.updated_at"
		},
		"1254": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.order"
		},
		"1255": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsParams.discount_condition_id"
		},
		"1256": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams.limit"
		},
		"1257": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-tags/list-product-tags.ts",
			"qualifiedName": "AdminGetProductTagsPaginationParams.offset"
		},
		"1258": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "defaultAdminProductTypeFields"
		},
		"1259": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "defaultAdminProductTypeRelations"
		},
		"1260": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "AdminProductTypesListRes"
		},
		"1261": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "__type"
		},
		"1262": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/index.ts",
			"qualifiedName": "__type.product_types"
		},
		"1263": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams"
		},
		"1266": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.id"
		},
		"1267": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.q"
		},
		"1268": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.value"
		},
		"1269": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.created_at"
		},
		"1270": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.updated_at"
		},
		"1271": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.order"
		},
		"1272": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/product-types/list-product-types.ts",
			"qualifiedName": "AdminGetProductTypesParams.discount_condition_id"
		},
		"1273": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"1274": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"1275": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminProductRelations"
		},
		"1276": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminProductFields"
		},
		"1277": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminGetProductsVariantsFields"
		},
		"1278": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "defaultAdminProductRemoteQueryObject"
		},
		"1279": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"1280": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1281": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.images"
		},
		"1282": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"1283": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1284": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.tags"
		},
		"1285": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"1286": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1287": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.type"
		},
		"1288": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"1289": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1290": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.collection"
		},
		"1291": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"1292": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1293": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.categories"
		},
		"1294": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"1295": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1296": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.options"
		},
		"1297": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"1298": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1299": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.values"
		},
		"1300": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"1301": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1302": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.variants"
		},
		"1303": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"1304": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1305": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.options"
		},
		"1306": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"1307": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1308": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.profile"
		},
		"1309": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"1310": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1311": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.sales_channels"
		},
		"1312": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object"
		},
		"1313": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"1314": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsDeleteOptionRes"
		},
		"1315": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"1316": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.option_id"
		},
		"1317": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.object"
		},
		"1318": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"1319": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.product"
		},
		"1320": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsDeleteVariantRes"
		},
		"1321": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"1322": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.variant_id"
		},
		"1323": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.object"
		},
		"1324": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"1325": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.product"
		},
		"1326": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsDeleteRes"
		},
		"1327": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"1328": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.id"
		},
		"1329": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.object"
		},
		"1330": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.deleted"
		},
		"1331": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsListRes"
		},
		"1332": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"1333": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.products"
		},
		"1334": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsListVariantsRes"
		},
		"1335": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"1336": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.variants"
		},
		"1337": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsListTypesRes"
		},
		"1338": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"1339": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.types"
		},
		"1340": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsListTagsRes"
		},
		"1341": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"1342": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.tags"
		},
		"1343": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"1344": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.usage_count"
		},
		"1345": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "AdminProductsRes"
		},
		"1346": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type"
		},
		"1347": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/index.ts",
			"qualifiedName": "__type.product"
		},
		"1348": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/add-option.ts",
			"qualifiedName": "AdminPostProductsProductOptionsReq"
		},
		"1351": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/add-option.ts",
			"qualifiedName": "AdminPostProductsProductOptionsReq.title"
		},
		"1352": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq"
		},
		"1355": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.title"
		},
		"1356": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.subtitle"
		},
		"1357": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.description"
		},
		"1358": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.is_giftcard"
		},
		"1359": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.discountable"
		},
		"1360": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.images"
		},
		"1361": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.thumbnail"
		},
		"1362": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.handle"
		},
		"1363": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.status"
		},
		"1364": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.type"
		},
		"1365": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.collection_id"
		},
		"1366": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.tags"
		},
		"1367": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.sales_channels"
		},
		"1368": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.categories"
		},
		"1369": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.options"
		},
		"1370": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.variants"
		},
		"1371": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.weight"
		},
		"1372": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.length"
		},
		"1373": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.height"
		},
		"1374": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.width"
		},
		"1375": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.hs_code"
		},
		"1376": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.origin_country"
		},
		"1377": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.mid_code"
		},
		"1378": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.material"
		},
		"1379": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "AdminPostProductsReq.metadata"
		},
		"1380": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq"
		},
		"1383": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.title"
		},
		"1384": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.sku"
		},
		"1385": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.ean"
		},
		"1386": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.upc"
		},
		"1387": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.barcode"
		},
		"1388": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.hs_code"
		},
		"1389": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.inventory_quantity"
		},
		"1390": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.allow_backorder"
		},
		"1391": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.manage_inventory"
		},
		"1392": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.weight"
		},
		"1393": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.length"
		},
		"1394": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.height"
		},
		"1395": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.width"
		},
		"1396": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.origin_country"
		},
		"1397": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.mid_code"
		},
		"1398": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.material"
		},
		"1399": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.metadata"
		},
		"1400": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.prices"
		},
		"1401": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsReq.options"
		},
		"1402": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/get-product.ts",
			"qualifiedName": "AdminGetProductParams"
		},
		"1405": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1406": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1407": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams"
		},
		"1410": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.offset"
		},
		"1411": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.limit"
		},
		"1412": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.expand"
		},
		"1413": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.fields"
		},
		"1414": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-products.ts",
			"qualifiedName": "AdminGetProductsParams.order"
		},
		"1415": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.id"
		},
		"1416": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.q"
		},
		"1417": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.status"
		},
		"1418": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.price_list_id"
		},
		"1419": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.collection_id"
		},
		"1420": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.tags"
		},
		"1421": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.title"
		},
		"1422": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.description"
		},
		"1423": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.handle"
		},
		"1424": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.is_giftcard"
		},
		"1425": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.type_id"
		},
		"1426": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.sales_channel_id"
		},
		"1427": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.discount_condition_id"
		},
		"1428": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.category_id"
		},
		"1429": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.include_category_children"
		},
		"1430": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.created_at"
		},
		"1431": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.updated_at"
		},
		"1432": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.deleted_at"
		},
		"1433": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams"
		},
		"1436": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.fields"
		},
		"1437": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.expand"
		},
		"1438": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.offset"
		},
		"1439": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/list-variants.ts",
			"qualifiedName": "AdminGetProductsVariantsParams.limit"
		},
		"1440": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/set-metadata.ts",
			"qualifiedName": "AdminPostProductsProductMetadataReq"
		},
		"1443": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/set-metadata.ts",
			"qualifiedName": "AdminPostProductsProductMetadataReq.key"
		},
		"1444": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/set-metadata.ts",
			"qualifiedName": "AdminPostProductsProductMetadataReq.value"
		},
		"1445": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-option.ts",
			"qualifiedName": "AdminPostProductsProductOptionsOption"
		},
		"1448": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-option.ts",
			"qualifiedName": "AdminPostProductsProductOptionsOption.title"
		},
		"1449": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq"
		},
		"1452": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.title"
		},
		"1453": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.subtitle"
		},
		"1454": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.description"
		},
		"1455": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.discountable"
		},
		"1456": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.images"
		},
		"1457": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.thumbnail"
		},
		"1458": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.handle"
		},
		"1459": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.status"
		},
		"1460": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.type"
		},
		"1461": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.collection_id"
		},
		"1462": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.tags"
		},
		"1463": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.sales_channels"
		},
		"1464": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.categories"
		},
		"1465": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.variants"
		},
		"1466": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.weight"
		},
		"1467": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.length"
		},
		"1468": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.height"
		},
		"1469": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.width"
		},
		"1470": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.hs_code"
		},
		"1471": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.origin_country"
		},
		"1472": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.mid_code"
		},
		"1473": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.material"
		},
		"1474": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "AdminPostProductsProductReq.metadata"
		},
		"1475": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq"
		},
		"1478": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.title"
		},
		"1479": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.sku"
		},
		"1480": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.ean"
		},
		"1481": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.upc"
		},
		"1482": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.barcode"
		},
		"1483": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.hs_code"
		},
		"1484": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.inventory_quantity"
		},
		"1485": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.allow_backorder"
		},
		"1486": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.manage_inventory"
		},
		"1487": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.weight"
		},
		"1488": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.length"
		},
		"1489": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.height"
		},
		"1490": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.width"
		},
		"1491": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.origin_country"
		},
		"1492": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.mid_code"
		},
		"1493": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.material"
		},
		"1494": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.metadata"
		},
		"1495": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.prices"
		},
		"1496": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "AdminPostProductsProductVariantsVariantReq.options"
		},
		"1497": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "AdminPublishableApiKeysRes"
		},
		"1498": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type"
		},
		"1499": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type.publishable_api_key"
		},
		"1500": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "AdminPublishableApiKeysListRes"
		},
		"1501": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type"
		},
		"1502": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type.publishable_api_keys"
		},
		"1503": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "AdminPublishableApiKeyDeleteRes"
		},
		"1504": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "AdminPublishableApiKeysListSalesChannelsRes"
		},
		"1505": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type"
		},
		"1506": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/index.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"1507": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/add-channels-batch.ts",
			"qualifiedName": "AdminPostPublishableApiKeySalesChannelsBatchReq"
		},
		"1510": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/add-channels-batch.ts",
			"qualifiedName": "AdminPostPublishableApiKeySalesChannelsBatchReq.sales_channel_ids"
		},
		"1511": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/create-publishable-api-key.ts",
			"qualifiedName": "AdminPostPublishableApiKeysReq"
		},
		"1514": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/create-publishable-api-key.ts",
			"qualifiedName": "AdminPostPublishableApiKeysReq.title"
		},
		"1515": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/delete-channels-batch.ts",
			"qualifiedName": "AdminDeletePublishableApiKeySalesChannelsBatchReq"
		},
		"1518": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/delete-channels-batch.ts",
			"qualifiedName": "AdminDeletePublishableApiKeySalesChannelsBatchReq.sales_channel_ids"
		},
		"1519": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-key-sales-channels.ts",
			"qualifiedName": "GetPublishableApiKeySalesChannelsParams"
		},
		"1522": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-key-sales-channels.ts",
			"qualifiedName": "GetPublishableApiKeySalesChannelsParams.q"
		},
		"1523": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams"
		},
		"1524": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"1525": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "GetPublishableApiKeysParams"
		},
		"1526": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"1527": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/list-publishable-api-keys.ts",
			"qualifiedName": "GetPublishableApiKeysParams.q"
		},
		"1528": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1529": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1530": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"1531": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"1532": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/update-publishable-api-key.ts",
			"qualifiedName": "AdminPostPublishableApiKeysPublishableApiKeyReq"
		},
		"1535": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/publishable-api-keys/update-publishable-api-key.ts",
			"qualifiedName": "AdminPostPublishableApiKeysPublishableApiKeyReq.title"
		},
		"1536": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "defaultAdminRegionFields"
		},
		"1537": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "defaultAdminRegionRelations"
		},
		"1538": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminRegionsRes"
		},
		"1539": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "__type"
		},
		"1540": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "__type.region"
		},
		"1541": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminRegionsListRes"
		},
		"1542": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "__type"
		},
		"1543": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "__type.regions"
		},
		"1544": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminRegionsDeleteRes"
		},
		"1545": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "FulfillmentOption"
		},
		"1548": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "FulfillmentOption.provider_id"
		},
		"1549": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "FulfillmentOption.options"
		},
		"1550": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminGetRegionsRegionFulfillmentOptionsRes"
		},
		"1553": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/index.ts",
			"qualifiedName": "AdminGetRegionsRegionFulfillmentOptionsRes.fulfillment_options"
		},
		"1554": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-country.ts",
			"qualifiedName": "AdminPostRegionsRegionCountriesReq"
		},
		"1557": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-country.ts",
			"qualifiedName": "AdminPostRegionsRegionCountriesReq.country_code"
		},
		"1558": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-fulfillment-provider.ts",
			"qualifiedName": "AdminPostRegionsRegionFulfillmentProvidersReq"
		},
		"1561": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-fulfillment-provider.ts",
			"qualifiedName": "AdminPostRegionsRegionFulfillmentProvidersReq.provider_id"
		},
		"1562": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-payment-provider.ts",
			"qualifiedName": "AdminPostRegionsRegionPaymentProvidersReq"
		},
		"1565": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/add-payment-provider.ts",
			"qualifiedName": "AdminPostRegionsRegionPaymentProvidersReq.provider_id"
		},
		"1566": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq"
		},
		"1569": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.name"
		},
		"1570": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.currency_code"
		},
		"1571": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.tax_code"
		},
		"1572": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.tax_rate"
		},
		"1573": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.payment_providers"
		},
		"1574": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.fulfillment_providers"
		},
		"1575": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.countries"
		},
		"1576": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.includes_tax"
		},
		"1577": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/create-region.ts",
			"qualifiedName": "AdminPostRegionsReq.metadata"
		},
		"1578": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams"
		},
		"1579": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"1580": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetRegionsParams"
		},
		"1581": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"1582": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams.created_at"
		},
		"1583": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams.updated_at"
		},
		"1584": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/list-regions.ts",
			"qualifiedName": "AdminGetRegionsParams.deleted_at"
		},
		"1585": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1586": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1587": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"1588": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"1589": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq"
		},
		"1592": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.name"
		},
		"1593": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.currency_code"
		},
		"1594": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.tax_code"
		},
		"1595": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.tax_rate"
		},
		"1596": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.gift_cards_taxable"
		},
		"1597": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.automatic_taxes"
		},
		"1598": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.tax_provider_id"
		},
		"1599": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.payment_providers"
		},
		"1600": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.fulfillment_providers"
		},
		"1601": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.countries"
		},
		"1602": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.includes_tax"
		},
		"1603": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/regions/update-region.ts",
			"qualifiedName": "AdminPostRegionsRegionReq.metadata"
		},
		"1604": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "defaultAdminReturnReasonsFields"
		},
		"1605": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "defaultAdminReturnReasonsRelations"
		},
		"1606": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "AdminReturnReasonsRes"
		},
		"1607": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "__type"
		},
		"1608": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "__type.return_reason"
		},
		"1609": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "AdminReturnReasonsListRes"
		},
		"1610": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "__type"
		},
		"1611": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "__type.return_reasons"
		},
		"1612": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/index.ts",
			"qualifiedName": "AdminReturnReasonsDeleteRes"
		},
		"1613": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq"
		},
		"1616": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.value"
		},
		"1617": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.label"
		},
		"1618": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.parent_return_reason_id"
		},
		"1619": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.description"
		},
		"1620": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/create-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReq.metadata"
		},
		"1621": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq"
		},
		"1624": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq.label"
		},
		"1625": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq.value"
		},
		"1626": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq.description"
		},
		"1627": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/return-reasons/update-reason.ts",
			"qualifiedName": "AdminPostReturnReasonsReasonReq.metadata"
		},
		"1628": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "defaultRelations"
		},
		"1629": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "defaultRelationsList"
		},
		"1630": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "defaultReturnCancelRelations"
		},
		"1631": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "defaultReturnCancelFields"
		},
		"1632": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "AdminReturnsCancelRes"
		},
		"1633": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type"
		},
		"1634": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type.order"
		},
		"1635": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "AdminReturnsListRes"
		},
		"1636": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type"
		},
		"1637": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type.returns"
		},
		"1638": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "AdminReturnsRes"
		},
		"1639": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type"
		},
		"1640": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/index.ts",
			"qualifiedName": "__type.return"
		},
		"1641": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/list-returns.ts",
			"qualifiedName": "AdminGetReturnsParams"
		},
		"1644": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/list-returns.ts",
			"qualifiedName": "AdminGetReturnsParams.limit"
		},
		"1645": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/list-returns.ts",
			"qualifiedName": "AdminGetReturnsParams.offset"
		},
		"1646": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "AdminPostReturnsReturnReceiveReq"
		},
		"1649": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "AdminPostReturnsReturnReceiveReq.items"
		},
		"1650": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "AdminPostReturnsReturnReceiveReq.refund"
		},
		"1651": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "AdminPostReturnsReturnReceiveReq.location_id"
		},
		"1652": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "AdminReservationsRes"
		},
		"1653": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type"
		},
		"1654": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type.reservation"
		},
		"1655": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "ExtendedReservationItem"
		},
		"1656": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type"
		},
		"1657": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type.line_item"
		},
		"1658": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type.inventory_item"
		},
		"1659": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "AdminReservationsListRes"
		},
		"1660": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type"
		},
		"1661": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "__type.reservations"
		},
		"1662": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "defaultAdminReservationRelations"
		},
		"1663": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "defaultReservationFields"
		},
		"1664": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/index.ts",
			"qualifiedName": "AdminReservationsDeleteRes"
		},
		"1665": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq"
		},
		"1668": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.line_item_id"
		},
		"1669": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.location_id"
		},
		"1670": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.inventory_item_id"
		},
		"1671": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.quantity"
		},
		"1672": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.description"
		},
		"1673": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/create-reservation.ts",
			"qualifiedName": "AdminPostReservationsReq.metadata"
		},
		"1674": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams"
		},
		"1675": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"1676": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetReservationsParams"
		},
		"1677": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"1678": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.location_id"
		},
		"1679": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.inventory_item_id"
		},
		"1680": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.line_item_id"
		},
		"1681": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.created_by"
		},
		"1682": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.quantity"
		},
		"1683": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.created_at"
		},
		"1684": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/list-reservations.ts",
			"qualifiedName": "AdminGetReservationsParams.description"
		},
		"1685": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1686": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1687": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"1688": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"1689": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq"
		},
		"1692": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq.quantity"
		},
		"1693": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq.location_id"
		},
		"1694": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq.description"
		},
		"1695": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/reservations/update-reservation.ts",
			"qualifiedName": "AdminPostReservationsReservationReq.metadata"
		},
		"1696": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "AdminSalesChannelsRes"
		},
		"1697": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "__type"
		},
		"1698": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "__type.sales_channel"
		},
		"1699": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "AdminSalesChannelsDeleteRes"
		},
		"1700": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "AdminSalesChannelsDeleteLocationRes"
		},
		"1701": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "AdminSalesChannelsListRes"
		},
		"1702": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "__type"
		},
		"1703": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/index.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"1704": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/add-product-batch.ts",
			"qualifiedName": "AdminPostSalesChannelsChannelProductsBatchReq"
		},
		"1707": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/add-product-batch.ts",
			"qualifiedName": "AdminPostSalesChannelsChannelProductsBatchReq.product_ids"
		},
		"1708": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/create-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsReq"
		},
		"1711": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/create-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsReq.name"
		},
		"1712": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/create-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsReq.description"
		},
		"1713": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/create-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsReq.is_disabled"
		},
		"1714": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteSalesChannelsChannelProductsBatchReq"
		},
		"1717": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/delete-products-batch.ts",
			"qualifiedName": "AdminDeleteSalesChannelsChannelProductsBatchReq.product_ids"
		},
		"1718": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams"
		},
		"1719": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"1720": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetSalesChannelsParams"
		},
		"1721": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"1722": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.id"
		},
		"1723": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.q"
		},
		"1724": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.name"
		},
		"1725": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.description"
		},
		"1726": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.created_at"
		},
		"1727": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.updated_at"
		},
		"1728": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.deleted_at"
		},
		"1729": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/list-sales-channels.ts",
			"qualifiedName": "AdminGetSalesChannelsParams.order"
		},
		"1730": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1731": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1732": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"1733": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"1734": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/update-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsSalesChannelReq"
		},
		"1737": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/update-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsSalesChannelReq.name"
		},
		"1738": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/update-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsSalesChannelReq.description"
		},
		"1739": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/update-sales-channel.ts",
			"qualifiedName": "AdminPostSalesChannelsSalesChannelReq.is_disabled"
		},
		"1740": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/associate-stock-location.ts",
			"qualifiedName": "AdminPostSalesChannelsChannelStockLocationsReq"
		},
		"1743": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/associate-stock-location.ts",
			"qualifiedName": "AdminPostSalesChannelsChannelStockLocationsReq.location_id"
		},
		"1744": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/remove-stock-location.ts",
			"qualifiedName": "AdminDeleteSalesChannelsChannelStockLocationsReq"
		},
		"1747": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/sales-channels/remove-stock-location.ts",
			"qualifiedName": "AdminDeleteSalesChannelsChannelStockLocationsReq.location_id"
		},
		"1748": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "defaultFields"
		},
		"1749": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "AdminShippingOptionsListRes"
		},
		"1750": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "__type"
		},
		"1751": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"1752": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "AdminShippingOptionsRes"
		},
		"1753": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "__type"
		},
		"1754": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "__type.shipping_option"
		},
		"1755": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/index.ts",
			"qualifiedName": "AdminShippingOptionsDeleteRes"
		},
		"1756": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq"
		},
		"1759": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.name"
		},
		"1760": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.region_id"
		},
		"1761": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.provider_id"
		},
		"1762": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.profile_id"
		},
		"1763": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.data"
		},
		"1764": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.price_type"
		},
		"1765": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.amount"
		},
		"1766": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.requirements"
		},
		"1767": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.admin_only"
		},
		"1768": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.is_return"
		},
		"1769": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.metadata"
		},
		"1770": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsReq.includes_tax"
		},
		"1771": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams"
		},
		"1774": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.region_id"
		},
		"1775": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.is_return"
		},
		"1776": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/list-shipping-options.ts",
			"qualifiedName": "AdminGetShippingOptionsParams.admin_only"
		},
		"1777": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq"
		},
		"1780": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.name"
		},
		"1781": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.amount"
		},
		"1782": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.price_type"
		},
		"1783": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.requirements"
		},
		"1784": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.admin_only"
		},
		"1785": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.metadata"
		},
		"1786": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "AdminPostShippingOptionsOptionReq.includes_tax"
		},
		"1787": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "defaultAdminShippingProfilesFields"
		},
		"1788": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "defaultAdminShippingProfilesRelations"
		},
		"1789": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "AdminDeleteShippingProfileRes"
		},
		"1790": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "AdminShippingProfilesRes"
		},
		"1791": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "__type"
		},
		"1792": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "__type.shipping_profile"
		},
		"1793": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "AdminShippingProfilesListRes"
		},
		"1794": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "__type"
		},
		"1795": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/index.ts",
			"qualifiedName": "__type.shipping_profiles"
		},
		"1796": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/create-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesReq"
		},
		"1799": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/create-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesReq.name"
		},
		"1800": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/create-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesReq.type"
		},
		"1801": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/create-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesReq.metadata"
		},
		"1802": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq"
		},
		"1805": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.name"
		},
		"1806": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.metadata"
		},
		"1807": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.type"
		},
		"1808": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.products"
		},
		"1809": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-profiles/update-shipping-profile.ts",
			"qualifiedName": "AdminPostShippingProfilesProfileReq.shipping_options"
		},
		"1810": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "defaultAdminStockLocationFields"
		},
		"1811": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "defaultAdminStockLocationRelations"
		},
		"1812": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "AdminStockLocationsDeleteRes"
		},
		"1813": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "AdminStockLocationsRes"
		},
		"1814": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "__type"
		},
		"1815": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "__type.stock_location"
		},
		"1816": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "AdminStockLocationsListRes"
		},
		"1817": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "__type"
		},
		"1818": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/index.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"1819": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq"
		},
		"1822": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq.name"
		},
		"1823": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq.address"
		},
		"1824": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq.address_id"
		},
		"1825": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsReq.metadata"
		},
		"1826": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsParams"
		},
		"1829": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1830": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1831": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/get-stock-location.ts",
			"qualifiedName": "AdminGetStockLocationsLocationParams"
		},
		"1834": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1835": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1836": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams"
		},
		"1837": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"1838": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "AdminGetStockLocationsParams"
		},
		"1839": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"1840": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.id"
		},
		"1841": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.name"
		},
		"1842": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.address_id"
		},
		"1843": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/list-stock-locations.ts",
			"qualifiedName": "AdminGetStockLocationsParams.sales_channel_id"
		},
		"1844": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1845": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1846": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"1847": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"1848": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq"
		},
		"1851": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq.name"
		},
		"1852": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq.address"
		},
		"1853": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq.address_id"
		},
		"1854": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationReq.metadata"
		},
		"1855": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "AdminPostStockLocationsLocationParams"
		},
		"1858": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"1859": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"1860": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "defaultRelationsExtended"
		},
		"1861": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "AdminExtendedStoresRes"
		},
		"1862": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type"
		},
		"1863": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type.store"
		},
		"1864": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "AdminStoresRes"
		},
		"1865": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type"
		},
		"1866": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type.store"
		},
		"1867": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "AdminTaxProvidersList"
		},
		"1868": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type"
		},
		"1869": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type.tax_providers"
		},
		"1870": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "AdminPaymentProvidersList"
		},
		"1871": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type"
		},
		"1872": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/index.ts",
			"qualifiedName": "__type.payment_providers"
		},
		"1873": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq"
		},
		"1876": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.name"
		},
		"1877": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.swap_link_template"
		},
		"1878": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.payment_link_template"
		},
		"1879": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.invite_link_template"
		},
		"1880": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.default_currency_code"
		},
		"1881": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.currencies"
		},
		"1882": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/store/update-store.ts",
			"qualifiedName": "AdminPostStoreReq.metadata"
		},
		"1883": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "defaultAdminSwapRelations"
		},
		"1884": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "defaultAdminSwapFields"
		},
		"1885": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "AdminSwapsListRes"
		},
		"1886": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "__type"
		},
		"1887": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "__type.swaps"
		},
		"1888": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "AdminSwapsRes"
		},
		"1889": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "__type"
		},
		"1890": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/index.ts",
			"qualifiedName": "__type.swap"
		},
		"1891": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/list-swaps.ts",
			"qualifiedName": "AdminGetSwapsParams"
		},
		"1894": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/list-swaps.ts",
			"qualifiedName": "AdminGetSwapsParams.limit"
		},
		"1895": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/swaps/list-swaps.ts",
			"qualifiedName": "AdminGetSwapsParams.offset"
		},
		"1896": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "defaultAdminTaxRatesRelations"
		},
		"1897": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "defaultAdminTaxRatesFields"
		},
		"1898": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "AdminTaxRatesDeleteRes"
		},
		"1899": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "AdminTaxRatesListRes"
		},
		"1900": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "__type"
		},
		"1901": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"1902": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "AdminTaxRatesRes"
		},
		"1903": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "__type"
		},
		"1904": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/index.ts",
			"qualifiedName": "__type.tax_rate"
		},
		"1905": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams"
		},
		"1908": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.region_id"
		},
		"1909": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.name"
		},
		"1910": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.code"
		},
		"1911": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.rate"
		},
		"1912": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.offset"
		},
		"1913": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.limit"
		},
		"1914": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.expand"
		},
		"1915": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/list-tax-rates.ts",
			"qualifiedName": "AdminGetTaxRatesParams.fields"
		},
		"1916": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/get-tax-rate.ts",
			"qualifiedName": "AdminGetTaxRatesTaxRateParams"
		},
		"1919": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/get-tax-rate.ts",
			"qualifiedName": "AdminGetTaxRatesTaxRateParams.expand"
		},
		"1920": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/get-tax-rate.ts",
			"qualifiedName": "AdminGetTaxRatesTaxRateParams.fields"
		},
		"1921": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesReq"
		},
		"1924": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesReq.product_types"
		},
		"1925": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesParams"
		},
		"1928": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesParams.expand"
		},
		"1929": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-product-types.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductTypesParams.fields"
		},
		"1930": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsReq"
		},
		"1933": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsReq.products"
		},
		"1934": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsParams"
		},
		"1937": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsParams.expand"
		},
		"1938": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-products.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateProductsParams.fields"
		},
		"1939": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsReq"
		},
		"1942": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsReq.shipping_options"
		},
		"1943": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsParams"
		},
		"1946": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsParams.expand"
		},
		"1947": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/remove-from-shipping-options.ts",
			"qualifiedName": "AdminDeleteTaxRatesTaxRateShippingOptionsParams.fields"
		},
		"1948": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesReq"
		},
		"1951": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesReq.product_types"
		},
		"1952": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesParams"
		},
		"1955": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesParams.expand"
		},
		"1956": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-product-types.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductTypesParams.fields"
		},
		"1957": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsReq"
		},
		"1960": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsReq.products"
		},
		"1961": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsParams"
		},
		"1964": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsParams.expand"
		},
		"1965": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-products.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateProductsParams.fields"
		},
		"1966": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsReq"
		},
		"1969": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsReq.shipping_options"
		},
		"1970": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsParams"
		},
		"1973": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsParams.expand"
		},
		"1974": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/add-to-shipping-options.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateShippingOptionsParams.fields"
		},
		"1975": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq"
		},
		"1978": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.code"
		},
		"1979": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.name"
		},
		"1980": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.region_id"
		},
		"1981": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.rate"
		},
		"1982": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.products"
		},
		"1983": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.shipping_options"
		},
		"1984": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesReq.product_types"
		},
		"1985": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesParams"
		},
		"1988": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesParams.expand"
		},
		"1989": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/create-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesParams.fields"
		},
		"1990": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq"
		},
		"1993": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.code"
		},
		"1994": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.name"
		},
		"1995": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.region_id"
		},
		"1996": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.rate"
		},
		"1997": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.products"
		},
		"1998": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.shipping_options"
		},
		"1999": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateReq.product_types"
		},
		"2000": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateParams"
		},
		"2003": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateParams.expand"
		},
		"2004": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/tax-rates/update-tax-rate.ts",
			"qualifiedName": "AdminPostTaxRatesTaxRateParams.fields"
		},
		"2005": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "AdminUploadsRes"
		},
		"2006": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "__type"
		},
		"2007": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "__type.uploads"
		},
		"2008": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "AdminDeleteUploadsRes"
		},
		"2009": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "AdminUploadsDownloadUrlRes"
		},
		"2010": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "__type"
		},
		"2011": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/index.ts",
			"qualifiedName": "__type.download_url"
		},
		"2012": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/create-upload.ts",
			"qualifiedName": "IAdminPostUploadsFileReq"
		},
		"2015": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/create-upload.ts",
			"qualifiedName": "IAdminPostUploadsFileReq.originalName"
		},
		"2016": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/create-upload.ts",
			"qualifiedName": "IAdminPostUploadsFileReq.path"
		},
		"2017": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/delete-upload.ts",
			"qualifiedName": "AdminDeleteUploadsReq"
		},
		"2020": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/delete-upload.ts",
			"qualifiedName": "AdminDeleteUploadsReq.file_key"
		},
		"2021": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/get-download-url.ts",
			"qualifiedName": "AdminPostUploadsDownloadUrlReq"
		},
		"2024": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/uploads/get-download-url.ts",
			"qualifiedName": "AdminPostUploadsDownloadUrlReq.file_key"
		},
		"2025": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "unauthenticatedUserRoutes"
		},
		"2026": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "unauthenticatedUserRoutes"
		},
		"2027": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "app"
		},
		"2028": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "AdminUserRes"
		},
		"2029": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "__type"
		},
		"2030": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "__type.user"
		},
		"2031": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "AdminUsersListRes"
		},
		"2032": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "__type"
		},
		"2033": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "__type.users"
		},
		"2034": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/index.ts",
			"qualifiedName": "AdminDeleteUserRes"
		},
		"2035": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "payload"
		},
		"2036": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "__type"
		},
		"2037": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "__type.email"
		},
		"2038": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "__type.user_id"
		},
		"2039": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "__type.password"
		},
		"2040": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "AdminResetPasswordRequest"
		},
		"2043": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "AdminResetPasswordRequest.email"
		},
		"2044": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "AdminResetPasswordRequest.token"
		},
		"2045": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password.ts",
			"qualifiedName": "AdminResetPasswordRequest.password"
		},
		"2046": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password-token.ts",
			"qualifiedName": "AdminResetPasswordTokenRequest"
		},
		"2049": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/reset-password-token.ts",
			"qualifiedName": "AdminResetPasswordTokenRequest.email"
		},
		"2050": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest"
		},
		"2053": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.email"
		},
		"2054": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.first_name"
		},
		"2055": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.last_name"
		},
		"2056": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.role"
		},
		"2057": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/create-user.ts",
			"qualifiedName": "AdminCreateUserRequest.password"
		},
		"2058": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest"
		},
		"2061": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.first_name"
		},
		"2062": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.last_name"
		},
		"2063": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.role"
		},
		"2064": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.api_token"
		},
		"2065": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/users/update-user.ts",
			"qualifiedName": "AdminUpdateUserRequest.metadata"
		},
		"2066": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "defaultAdminVariantRelations"
		},
		"2067": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "defaultAdminVariantFields"
		},
		"2068": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "AdminVariantsListRes"
		},
		"2069": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "__type"
		},
		"2070": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "__type.variants"
		},
		"2071": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "AdminVariantsRes"
		},
		"2072": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "__type"
		},
		"2073": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/index.ts",
			"qualifiedName": "__type.variant"
		},
		"2074": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams"
		},
		"2077": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.q"
		},
		"2078": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.limit"
		},
		"2079": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.offset"
		},
		"2080": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.expand"
		},
		"2081": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.fields"
		},
		"2082": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.id"
		},
		"2083": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.title"
		},
		"2084": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/list-variants.ts",
			"qualifiedName": "AdminGetVariantsParams.inventory_quantity"
		},
		"2085": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "AdminPriceSelectionParams.customer_id"
		},
		"2086": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"2087": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"2088": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"2089": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-variant.ts",
			"qualifiedName": "AdminGetVariantParams"
		},
		"2092": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"2093": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"2094": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "LevelWithAvailability"
		},
		"2095": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"2096": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.available_quantity"
		},
		"2097": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "ResponseInventoryItem"
		},
		"2098": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"2099": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.location_levels"
		},
		"2100": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "VariantInventory"
		},
		"2101": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"2102": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.id"
		},
		"2103": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.inventory"
		},
		"2104": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.sales_channel_availability"
		},
		"2105": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"2106": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.channel_name"
		},
		"2107": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.channel_id"
		},
		"2108": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.available_quantity"
		},
		"2109": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "AdminGetVariantsVariantInventoryRes"
		},
		"2110": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type"
		},
		"2111": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/variants/get-inventory.ts",
			"qualifiedName": "__type.variant"
		},
		"2112": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "StoreAuthRes"
		},
		"2113": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type"
		},
		"2114": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type.customer"
		},
		"2115": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "StoreBearerAuthRes"
		},
		"2116": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type"
		},
		"2117": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type.access_token"
		},
		"2118": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "StoreGetAuthEmailRes"
		},
		"2119": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type"
		},
		"2120": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/index.ts",
			"qualifiedName": "__type.exists"
		},
		"2121": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/create-session.ts",
			"qualifiedName": "StorePostAuthReq"
		},
		"2124": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/create-session.ts",
			"qualifiedName": "StorePostAuthReq.email"
		},
		"2125": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/auth/create-session.ts",
			"qualifiedName": "StorePostAuthReq.password"
		},
		"2126": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "defaultStoreCartFields"
		},
		"2127": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "defaultStoreCartRelations"
		},
		"2128": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "StoreCartsRes"
		},
		"2129": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type"
		},
		"2130": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.cart"
		},
		"2131": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "StoreCompleteCartRes"
		},
		"2132": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type"
		},
		"2133": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.type"
		},
		"2134": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.data"
		},
		"2135": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type"
		},
		"2136": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.type"
		},
		"2137": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.data"
		},
		"2138": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type"
		},
		"2139": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.type"
		},
		"2140": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/index.ts",
			"qualifiedName": "__type.data"
		},
		"2141": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/add-shipping-method.ts",
			"qualifiedName": "StorePostCartsCartShippingMethodReq"
		},
		"2144": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/add-shipping-method.ts",
			"qualifiedName": "StorePostCartsCartShippingMethodReq.option_id"
		},
		"2145": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/add-shipping-method.ts",
			"qualifiedName": "StorePostCartsCartShippingMethodReq.data"
		},
		"2146": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "Item"
		},
		"2149": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "Item.variant_id"
		},
		"2150": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "Item.quantity"
		},
		"2151": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq"
		},
		"2154": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.region_id"
		},
		"2155": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.country_code"
		},
		"2156": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.items"
		},
		"2157": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.context"
		},
		"2158": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-cart.ts",
			"qualifiedName": "StorePostCartReq.sales_channel_id"
		},
		"2159": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-line-item/index.ts",
			"qualifiedName": "StorePostCartsCartLineItemsReq"
		},
		"2162": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-line-item/index.ts",
			"qualifiedName": "StorePostCartsCartLineItemsReq.variant_id"
		},
		"2163": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-line-item/index.ts",
			"qualifiedName": "StorePostCartsCartLineItemsReq.quantity"
		},
		"2164": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/create-line-item/index.ts",
			"qualifiedName": "StorePostCartsCartLineItemsReq.metadata"
		},
		"2165": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/set-payment-session.ts",
			"qualifiedName": "StorePostCartsCartPaymentSessionReq"
		},
		"2168": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/set-payment-session.ts",
			"qualifiedName": "StorePostCartsCartPaymentSessionReq.provider_id"
		},
		"2169": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq"
		},
		"2172": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.region_id"
		},
		"2173": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.country_code"
		},
		"2174": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.email"
		},
		"2175": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.billing_address"
		},
		"2176": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.shipping_address"
		},
		"2177": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.gift_cards"
		},
		"2178": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.discounts"
		},
		"2179": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.customer_id"
		},
		"2180": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.context"
		},
		"2181": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "StorePostCartsCartReq.sales_channel_id"
		},
		"2182": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-line-item.ts",
			"qualifiedName": "StorePostCartsCartLineItemsItemReq"
		},
		"2185": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-line-item.ts",
			"qualifiedName": "StorePostCartsCartLineItemsItemReq.quantity"
		},
		"2186": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-line-item.ts",
			"qualifiedName": "StorePostCartsCartLineItemsItemReq.metadata"
		},
		"2187": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-payment-session.ts",
			"qualifiedName": "StorePostCartsCartPaymentSessionUpdateReq"
		},
		"2190": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-payment-session.ts",
			"qualifiedName": "StorePostCartsCartPaymentSessionUpdateReq.data"
		},
		"2191": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "defaultStoreCollectionRelations"
		},
		"2192": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "allowedFields"
		},
		"2193": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "StoreCollectionsListRes"
		},
		"2194": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "__type"
		},
		"2195": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "__type.collections"
		},
		"2196": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "StoreCollectionsRes"
		},
		"2197": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "__type"
		},
		"2198": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/index.ts",
			"qualifiedName": "__type.collection"
		},
		"2199": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams"
		},
		"2202": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.handle"
		},
		"2203": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.limit"
		},
		"2204": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.offset"
		},
		"2205": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.created_at"
		},
		"2206": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/collections/list-collections.ts",
			"qualifiedName": "StoreGetCollectionsParams.updated_at"
		},
		"2207": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "defaultStoreCustomersRelations"
		},
		"2208": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "defaultStoreCustomersFields"
		},
		"2209": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "allowedStoreCustomersRelations"
		},
		"2210": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "allowedStoreCustomersFields"
		},
		"2211": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "StoreCustomersRes"
		},
		"2212": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"2213": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.customer"
		},
		"2214": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "StoreCustomersResetPasswordRes"
		},
		"2215": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"2216": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.customer"
		},
		"2217": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "StoreCustomersListOrdersRes"
		},
		"2218": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"2219": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.orders"
		},
		"2220": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "StoreCustomersListPaymentMethodsRes"
		},
		"2221": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"2222": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.payment_methods"
		},
		"2223": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type"
		},
		"2224": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.provider_id"
		},
		"2225": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/index.ts",
			"qualifiedName": "__type.data"
		},
		"2226": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-address.ts",
			"qualifiedName": "StorePostCustomersCustomerAddressesReq"
		},
		"2229": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-address.ts",
			"qualifiedName": "StorePostCustomersCustomerAddressesReq.address"
		},
		"2230": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq"
		},
		"2233": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.first_name"
		},
		"2234": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.last_name"
		},
		"2235": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.email"
		},
		"2236": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.password"
		},
		"2237": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/create-customer.ts",
			"qualifiedName": "StorePostCustomersReq.phone"
		},
		"2238": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams"
		},
		"2241": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.limit"
		},
		"2242": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.offset"
		},
		"2243": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.fields"
		},
		"2244": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.expand"
		},
		"2245": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams"
		},
		"2248": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.id"
		},
		"2249": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.q"
		},
		"2250": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.status"
		},
		"2251": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.fulfillment_status"
		},
		"2252": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.payment_status"
		},
		"2253": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.display_id"
		},
		"2254": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.cart_id"
		},
		"2255": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.email"
		},
		"2256": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.region_id"
		},
		"2257": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.currency_code"
		},
		"2258": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.tax_rate"
		},
		"2259": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.created_at"
		},
		"2260": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.updated_at"
		},
		"2261": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersParams.canceled_at"
		},
		"2262": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.limit"
		},
		"2263": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.offset"
		},
		"2264": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.fields"
		},
		"2265": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/list-orders.ts",
			"qualifiedName": "StoreGetCustomersCustomerOrdersPaginationParams.expand"
		},
		"2266": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password.ts",
			"qualifiedName": "StorePostCustomersResetPasswordReq"
		},
		"2269": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password.ts",
			"qualifiedName": "StorePostCustomersResetPasswordReq.email"
		},
		"2270": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password.ts",
			"qualifiedName": "StorePostCustomersResetPasswordReq.token"
		},
		"2271": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password.ts",
			"qualifiedName": "StorePostCustomersResetPasswordReq.password"
		},
		"2272": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password-token.ts",
			"qualifiedName": "StorePostCustomersCustomerPasswordTokenReq"
		},
		"2275": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/reset-password-token.ts",
			"qualifiedName": "StorePostCustomersCustomerPasswordTokenReq.email"
		},
		"2276": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-address.ts",
			"qualifiedName": "StorePostCustomersCustomerAddressesAddressReq"
		},
		"2279": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.first_name"
		},
		"2280": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.last_name"
		},
		"2281": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.phone"
		},
		"2282": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.metadata"
		},
		"2283": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.company"
		},
		"2284": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.address_1"
		},
		"2285": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.address_2"
		},
		"2286": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.city"
		},
		"2287": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.country_code"
		},
		"2288": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.province"
		},
		"2289": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.postal_code"
		},
		"2290": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq"
		},
		"2293": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.billing_address"
		},
		"2294": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.first_name"
		},
		"2295": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.last_name"
		},
		"2296": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.password"
		},
		"2297": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.phone"
		},
		"2298": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.email"
		},
		"2299": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/customers/update-customer.ts",
			"qualifiedName": "StorePostCustomersCustomerReq.metadata"
		},
		"2300": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "defaultStoreGiftCardRelations"
		},
		"2301": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "defaultStoreGiftCardFields"
		},
		"2302": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "allowedStoreGiftCardRelations"
		},
		"2303": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "allowedStoreGiftCardFields"
		},
		"2304": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "StoreGiftCardsRes"
		},
		"2305": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "__type"
		},
		"2306": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/gift-cards/index.ts",
			"qualifiedName": "__type.gift_card"
		},
		"2307": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/index.ts",
			"qualifiedName": "StoreOrderEditsRes"
		},
		"2308": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/index.ts",
			"qualifiedName": "__type"
		},
		"2309": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/index.ts",
			"qualifiedName": "__type.order_edit"
		},
		"2310": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/decline-order-edit.ts",
			"qualifiedName": "StorePostOrderEditsOrderEditDecline"
		},
		"2313": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/order-edits/decline-order-edit.ts",
			"qualifiedName": "StorePostOrderEditsOrderEditDecline.declined_reason"
		},
		"2314": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "defaultStoreOrdersRelations"
		},
		"2315": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "allowedStoreOrdersRelations"
		},
		"2316": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "defaultStoreOrdersFields"
		},
		"2317": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "allowedStoreOrdersFields"
		},
		"2318": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "StoreOrdersRes"
		},
		"2319": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "__type"
		},
		"2320": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/index.ts",
			"qualifiedName": "__type.order"
		},
		"2321": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/confirm-order-request.ts",
			"qualifiedName": "StorePostCustomersCustomerAcceptClaimReq"
		},
		"2324": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/confirm-order-request.ts",
			"qualifiedName": "StorePostCustomersCustomerAcceptClaimReq.token"
		},
		"2325": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "ShippingAddressPayload"
		},
		"2328": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "ShippingAddressPayload.postal_code"
		},
		"2329": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "StoreGetOrdersParams"
		},
		"2332": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "StoreGetOrdersParams.display_id"
		},
		"2333": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "StoreGetOrdersParams.email"
		},
		"2334": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/lookup-order.ts",
			"qualifiedName": "StoreGetOrdersParams.shipping_address"
		},
		"2335": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"2336": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"2337": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/request-order.ts",
			"qualifiedName": "StorePostCustomersCustomerOrderClaimReq"
		},
		"2340": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/orders/request-order.ts",
			"qualifiedName": "StorePostCustomersCustomerOrderClaimReq.order_ids"
		},
		"2341": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "defaultPaymentCollectionRelations"
		},
		"2342": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "StorePaymentCollectionsRes"
		},
		"2343": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "__type"
		},
		"2344": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "__type.payment_collection"
		},
		"2345": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "StorePaymentCollectionsSessionRes"
		},
		"2346": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "__type"
		},
		"2347": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/index.ts",
			"qualifiedName": "__type.payment_session"
		},
		"2348": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/authorize-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq"
		},
		"2351": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/authorize-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsBatchSessionsAuthorizeReq.session_ids"
		},
		"2352": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/get-payment-collection.ts",
			"qualifiedName": "StoreGetPaymentCollectionsParams"
		},
		"2355": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"2356": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"2357": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsSessionsReq"
		},
		"2360": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsSessionsReq.provider_id"
		},
		"2361": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsSessionsReq.amount"
		},
		"2362": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsSessionsReq.session_id"
		},
		"2363": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsBatchSessionsReq"
		},
		"2366": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-batch-payment-sessions.ts",
			"qualifiedName": "StorePostPaymentCollectionsBatchSessionsReq.sessions"
		},
		"2367": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-payment-session.ts",
			"qualifiedName": "StorePaymentCollectionSessionsReq"
		},
		"2370": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/payment-collections/manage-payment-session.ts",
			"qualifiedName": "StorePaymentCollectionSessionsReq.provider_id"
		},
		"2371": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "defaultStoreProductCategoryRelations"
		},
		"2372": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "defaultStoreCategoryScope"
		},
		"2373": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__object"
		},
		"2374": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__object.is_internal"
		},
		"2375": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__object.is_active"
		},
		"2376": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "defaultStoreProductCategoryFields"
		},
		"2377": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "allowedStoreProductCategoryFields"
		},
		"2378": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "StoreGetProductCategoriesCategoryRes"
		},
		"2379": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__type"
		},
		"2380": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__type.product_category"
		},
		"2381": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "StoreGetProductCategoriesRes"
		},
		"2382": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__type"
		},
		"2383": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/index.ts",
			"qualifiedName": "__type.product_categories"
		},
		"2384": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/get-product-category.ts",
			"qualifiedName": "StoreGetProductCategoriesCategoryParams"
		},
		"2387": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"2388": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"2389": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams"
		},
		"2390": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"2391": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "StoreGetProductCategoriesParams"
		},
		"2392": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"2393": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams.q"
		},
		"2394": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams.handle"
		},
		"2395": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams.parent_category_id"
		},
		"2396": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-categories/list-product-categories.ts",
			"qualifiedName": "StoreGetProductCategoriesParams.include_descendants_tree"
		},
		"2397": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"2398": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"2399": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"2400": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"2401": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "defaultStoreProductTagFields"
		},
		"2402": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "allowedStoreProductTagFields"
		},
		"2403": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "defaultStoreProductTagRelations"
		},
		"2404": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "StoreProductTagsListRes"
		},
		"2405": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "__type"
		},
		"2406": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/index.ts",
			"qualifiedName": "__type.product_tags"
		},
		"2407": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams"
		},
		"2410": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.id"
		},
		"2411": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.q"
		},
		"2412": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.value"
		},
		"2413": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.created_at"
		},
		"2414": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.updated_at"
		},
		"2415": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.order"
		},
		"2416": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-tags/list-product-tags.ts",
			"qualifiedName": "StoreGetProductTagsParams.discount_condition_id"
		},
		"2417": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"2418": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"2419": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "allowedStoreProductTypeFields"
		},
		"2420": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "defaultStoreProductTypeFields"
		},
		"2421": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "defaultStoreProductTypeRelations"
		},
		"2422": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "StoreProductTypesListRes"
		},
		"2423": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "__type"
		},
		"2424": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/index.ts",
			"qualifiedName": "__type.product_types"
		},
		"2425": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams"
		},
		"2428": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.id"
		},
		"2429": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.q"
		},
		"2430": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.value"
		},
		"2431": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.created_at"
		},
		"2432": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.updated_at"
		},
		"2433": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.order"
		},
		"2434": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/product-types/list-product-types.ts",
			"qualifiedName": "StoreGetProductTypesParams.discount_condition_id"
		},
		"2435": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"2436": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"2437": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "defaultStoreProductsRelations"
		},
		"2438": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "defaultStoreProductsFields"
		},
		"2439": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "allowedStoreProductsFields"
		},
		"2440": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "allowedStoreProductsRelations"
		},
		"2441": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "defaultStoreProductRemoteQueryObject"
		},
		"2442": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"2443": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"2444": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.images"
		},
		"2445": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"2446": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"2447": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.tags"
		},
		"2448": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"2449": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"2450": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.type"
		},
		"2451": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"2452": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"2453": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.collection"
		},
		"2454": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"2455": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"2456": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.options"
		},
		"2457": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"2458": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"2459": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.values"
		},
		"2460": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"2461": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"2462": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.variants"
		},
		"2463": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"2464": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"2465": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.options"
		},
		"2466": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"2467": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"2468": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.profile"
		},
		"2469": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"2470": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"2471": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.sales_channels"
		},
		"2472": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object"
		},
		"2473": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__object.fields"
		},
		"2474": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "StoreProductsRes"
		},
		"2475": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type"
		},
		"2476": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type.product"
		},
		"2477": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "StorePostSearchRes"
		},
		"2478": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type"
		},
		"2479": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type.hits"
		},
		"2480": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "StoreProductsListRes"
		},
		"2481": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type"
		},
		"2482": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/index.ts",
			"qualifiedName": "__type.products"
		},
		"2483": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams"
		},
		"2486": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.offset"
		},
		"2487": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.limit"
		},
		"2488": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.order"
		},
		"2489": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"2490": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"2491": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"2492": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"2493": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"2494": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams"
		},
		"2497": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.id"
		},
		"2498": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.q"
		},
		"2499": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.collection_id"
		},
		"2500": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.tags"
		},
		"2501": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.title"
		},
		"2502": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.description"
		},
		"2503": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.handle"
		},
		"2504": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.is_giftcard"
		},
		"2505": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.type_id"
		},
		"2506": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.sales_channel_id"
		},
		"2507": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.category_id"
		},
		"2508": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.include_category_children"
		},
		"2509": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.created_at"
		},
		"2510": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsParams.updated_at"
		},
		"2511": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.offset"
		},
		"2512": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.limit"
		},
		"2513": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/list-products.ts",
			"qualifiedName": "StoreGetProductsPaginationParams.order"
		},
		"2514": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"2515": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"2516": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"2517": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"2518": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"2519": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq"
		},
		"2522": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq.q"
		},
		"2523": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq.offset"
		},
		"2524": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq.limit"
		},
		"2525": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/products/search.ts",
			"qualifiedName": "StorePostSearchReq.filter"
		},
		"2526": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "defaultStoreRegionRelations"
		},
		"2527": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "defaultStoreRegionFields"
		},
		"2528": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "StoreRegionsListRes"
		},
		"2529": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "__type"
		},
		"2530": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "__type.regions"
		},
		"2531": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "StoreRegionsRes"
		},
		"2532": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "__type"
		},
		"2533": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/index.ts",
			"qualifiedName": "__type.region"
		},
		"2534": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/get-region.ts",
			"qualifiedName": "StoreGetRegionsRegionParams"
		},
		"2537": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"2538": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"2539": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/list-regions.ts",
			"qualifiedName": "StoreGetRegionsParams"
		},
		"2540": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.__new"
		},
		"2541": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "StoreGetRegionsParams"
		},
		"2542": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"2543": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/list-regions.ts",
			"qualifiedName": "StoreGetRegionsParams.created_at"
		},
		"2544": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/regions/list-regions.ts",
			"qualifiedName": "StoreGetRegionsParams.updated_at"
		},
		"2545": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"2546": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"2547": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"2548": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"2549": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "defaultStoreReturnReasonFields"
		},
		"2550": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "defaultStoreReturnReasonRelations"
		},
		"2551": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "StoreReturnReasonsListRes"
		},
		"2552": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "__type"
		},
		"2553": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "__type.return_reasons"
		},
		"2554": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "StoreReturnReasonsRes"
		},
		"2555": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "__type"
		},
		"2556": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/return-reasons/index.ts",
			"qualifiedName": "__type.return_reason"
		},
		"2557": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/index.ts",
			"qualifiedName": "StoreReturnsRes"
		},
		"2558": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/index.ts",
			"qualifiedName": "__type"
		},
		"2559": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/index.ts",
			"qualifiedName": "__type.return"
		},
		"2560": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "StorePostReturnsReq"
		},
		"2563": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "StorePostReturnsReq.order_id"
		},
		"2564": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "StorePostReturnsReq.items"
		},
		"2565": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "StorePostReturnsReq.return_shipping"
		},
		"2566": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "StoreShippingOptionsListRes"
		},
		"2567": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "__type"
		},
		"2568": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"2569": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "StoreCartShippingOptionsListRes"
		},
		"2570": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "__type"
		},
		"2571": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/index.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"2572": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/list-options.ts",
			"qualifiedName": "StoreGetShippingOptionsParams"
		},
		"2575": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/list-options.ts",
			"qualifiedName": "StoreGetShippingOptionsParams.product_ids"
		},
		"2576": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/list-options.ts",
			"qualifiedName": "StoreGetShippingOptionsParams.region_id"
		},
		"2577": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/shipping-options/list-options.ts",
			"qualifiedName": "StoreGetShippingOptionsParams.is_return"
		},
		"2578": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "defaultStoreSwapRelations"
		},
		"2579": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "defaultStoreSwapFields"
		},
		"2580": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "StoreSwapsRes"
		},
		"2581": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "__type"
		},
		"2582": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/index.ts",
			"qualifiedName": "__type.swap"
		},
		"2583": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq"
		},
		"2586": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq.order_id"
		},
		"2587": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq.return_items"
		},
		"2588": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq.additional_items"
		},
		"2589": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "StorePostSwapsReq.return_shipping_option"
		},
		"2590": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "defaultStoreVariantRelations"
		},
		"2591": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "allowedStoreVariantRelations"
		},
		"2592": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "StoreVariantsRes"
		},
		"2593": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "__type"
		},
		"2594": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "__type.variant"
		},
		"2595": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "StoreVariantsListRes"
		},
		"2596": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "__type"
		},
		"2597": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/index.ts",
			"qualifiedName": "__type.variants"
		},
		"2598": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/get-variant.ts",
			"qualifiedName": "StoreGetVariantsVariantParams"
		},
		"2601": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/get-variant.ts",
			"qualifiedName": "StoreGetVariantsVariantParams.sales_channel_id"
		},
		"2602": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"2603": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"2604": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"2605": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"2606": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"2607": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams"
		},
		"2610": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.limit"
		},
		"2611": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.offset"
		},
		"2612": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.ids"
		},
		"2613": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.sales_channel_id"
		},
		"2614": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.id"
		},
		"2615": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.title"
		},
		"2616": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/variants/list-variants.ts",
			"qualifiedName": "StoreGetVariantsParams.inventory_quantity"
		},
		"2617": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"2618": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"2619": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"2620": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"2621": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"2622": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/authenticate.ts",
			"qualifiedName": "default"
		},
		"2623": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/authenticate.ts",
			"qualifiedName": "default"
		},
		"2624": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/authenticate-customer.ts",
			"qualifiedName": "default"
		},
		"2625": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/authenticate-customer.ts",
			"qualifiedName": "default"
		},
		"2626": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "default"
		},
		"2627": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "default"
		},
		"2628": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "__function"
		},
		"2629": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "__function"
		},
		"2630": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "err"
		},
		"2631": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "req"
		},
		"2632": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "res"
		},
		"2633": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/error-handler.ts",
			"qualifiedName": "next"
		},
		"2634": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "default"
		},
		"2635": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "default"
		},
		"2636": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "fn"
		},
		"2637": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "canAccessBatchJob"
		},
		"2638": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "canAccessBatchJob"
		},
		"2639": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "req"
		},
		"2640": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "res"
		},
		"2641": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/can-access-batch-job.ts",
			"qualifiedName": "next"
		},
		"2642": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "getRequestedBatchJob"
		},
		"2643": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "getRequestedBatchJob"
		},
		"2644": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "req"
		},
		"2645": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "res"
		},
		"2646": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/batch-job/get-requested-batch-job.ts",
			"qualifiedName": "next"
		},
		"2647": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "doesConditionBelongToDiscount"
		},
		"2648": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "doesConditionBelongToDiscount"
		},
		"2649": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "req"
		},
		"2650": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "res"
		},
		"2651": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/discount/does-condition-belong-to-discount.ts",
			"qualifiedName": "next"
		},
		"2652": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "default"
		},
		"2653": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "default"
		},
		"2654": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "__type"
		},
		"2655": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "__type"
		},
		"2656": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "req"
		},
		"2657": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "res"
		},
		"2658": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/normalized-query.ts",
			"qualifiedName": "next"
		},
		"2659": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/require-customer-authentication.ts",
			"qualifiedName": "default"
		},
		"2660": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/require-customer-authentication.ts",
			"qualifiedName": "default"
		},
		"2661": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "transformBody"
		},
		"2662": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "transformBody"
		},
		"2663": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "T"
		},
		"2664": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "plainToClass"
		},
		"2665": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "config"
		},
		"2666": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "__type"
		},
		"2667": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "__type"
		},
		"2668": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "req"
		},
		"2669": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "res"
		},
		"2670": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-body.ts",
			"qualifiedName": "next"
		},
		"2671": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "transformIncludesOptions"
		},
		"2672": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "transformIncludesOptions"
		},
		"2673": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "allowedIncludes"
		},
		"2674": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "expectedIncludes"
		},
		"2675": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "__function"
		},
		"2676": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "__function"
		},
		"2677": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "req"
		},
		"2678": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "res"
		},
		"2679": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-includes-options.ts",
			"qualifiedName": "next"
		},
		"2680": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "transformQuery"
		},
		"2681": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "transformQuery"
		},
		"2682": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "T"
		},
		"2683": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "TEntity"
		},
		"2684": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "plainToClass"
		},
		"2685": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "queryConfig"
		},
		"2686": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "config"
		},
		"2687": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "__type"
		},
		"2688": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "__type"
		},
		"2689": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "req"
		},
		"2690": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "res"
		},
		"2691": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "next"
		},
		"2692": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "transformStoreQuery"
		},
		"2693": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "transformStoreQuery"
		},
		"2694": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "T"
		},
		"2695": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "TEntity"
		},
		"2696": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "plainToClass"
		},
		"2697": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "queryConfig"
		},
		"2698": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "config"
		},
		"2699": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "__type"
		},
		"2700": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "__type"
		},
		"2701": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "req"
		},
		"2702": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "res"
		},
		"2703": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/transform-query.ts",
			"qualifiedName": "next"
		},
		"2704": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "IBatchJobStrategy"
		},
		"2705": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "IBatchJobStrategy.prepareBatchJobForProcessing"
		},
		"2706": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "IBatchJobStrategy.prepareBatchJobForProcessing"
		},
		"2707": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "batchJobEntity"
		},
		"2708": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "req"
		},
		"2709": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "IBatchJobStrategy.preProcessBatchJob"
		},
		"2710": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "IBatchJobStrategy.preProcessBatchJob"
		},
		"2711": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "batchJobId"
		},
		"2712": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "IBatchJobStrategy.processJob"
		},
		"2713": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "IBatchJobStrategy.processJob"
		},
		"2714": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "batchJobId"
		},
		"2715": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "IBatchJobStrategy.buildTemplate"
		},
		"2716": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "IBatchJobStrategy.buildTemplate"
		},
		"2717": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"2718": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"2719": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"2720": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"2721": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"2722": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"2723": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"2724": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"2725": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"2726": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"2727": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"2728": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"2729": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"2730": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2731": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"2732": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"2733": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"2734": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"2735": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"2736": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"2737": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2738": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2739": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"2740": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"2741": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2742": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2743": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"2744": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"2745": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2746": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2747": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"2748": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy"
		},
		"2749": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy._isBatchJobStrategy"
		},
		"2750": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.identifier"
		},
		"2751": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.batchType"
		},
		"2752": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.isBatchJobStrategy"
		},
		"2753": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.isBatchJobStrategy"
		},
		"2754": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "object"
		},
		"2755": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__constructor"
		},
		"2756": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "AbstractBatchJobStrategy"
		},
		"2757": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__container__"
		},
		"2758": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__configModule__"
		},
		"2759": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__moduleDeclaration__"
		},
		"2760": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.batchJobService_"
		},
		"2761": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.prepareBatchJobForProcessing"
		},
		"2762": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.prepareBatchJobForProcessing"
		},
		"2763": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "batchJob"
		},
		"2764": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "req"
		},
		"2765": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.preProcessBatchJob"
		},
		"2766": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.preProcessBatchJob"
		},
		"2767": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "batchJobId"
		},
		"2768": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.processJob"
		},
		"2769": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.processJob"
		},
		"2770": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "batchJobId"
		},
		"2771": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.buildTemplate"
		},
		"2772": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.buildTemplate"
		},
		"2773": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.shouldRetryOnProcessingError"
		},
		"2774": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.shouldRetryOnProcessingError"
		},
		"2775": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "batchJob"
		},
		"2776": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "err"
		},
		"2777": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.handleProcessingError"
		},
		"2778": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "AbstractBatchJobStrategy.handleProcessingError"
		},
		"2779": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "T"
		},
		"2780": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "batchJobId"
		},
		"2781": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "err"
		},
		"2782": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/batch-job-strategy.ts",
			"qualifiedName": "result"
		},
		"2783": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"2784": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"2785": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"2786": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"2787": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"2788": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"2789": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"2790": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"2791": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"2792": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"2793": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"2794": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"2795": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"2796": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2797": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"2798": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"2799": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"2800": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"2801": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"2802": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"2803": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2804": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2805": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"2806": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"2807": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2808": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2809": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"2810": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"2811": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2812": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2813": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"2814": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "CartCompletionResponse"
		},
		"2815": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "__type"
		},
		"2816": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "__type.response_code"
		},
		"2817": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "__type.response_body"
		},
		"2818": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "ICartCompletionStrategy"
		},
		"2819": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "ICartCompletionStrategy.complete"
		},
		"2820": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "ICartCompletionStrategy.complete"
		},
		"2821": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "cartId"
		},
		"2822": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "idempotencyKey"
		},
		"2823": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "context"
		},
		"2824": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "AbstractCartCompletionStrategy"
		},
		"2825": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "AbstractCartCompletionStrategy._isCartCompletionStrategy"
		},
		"2826": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "AbstractCartCompletionStrategy.isCartCompletionStrategy"
		},
		"2827": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "AbstractCartCompletionStrategy.isCartCompletionStrategy"
		},
		"2828": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "object"
		},
		"2829": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__constructor"
		},
		"2830": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "AbstractCartCompletionStrategy"
		},
		"2831": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__container__"
		},
		"2832": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__configModule__"
		},
		"2833": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__moduleDeclaration__"
		},
		"2834": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "AbstractCartCompletionStrategy.complete"
		},
		"2835": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "AbstractCartCompletionStrategy.complete"
		},
		"2836": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "cartId"
		},
		"2837": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "idempotencyKey"
		},
		"2838": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/cart-completion-strategy.ts",
			"qualifiedName": "context"
		},
		"2839": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"2840": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"2841": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"2842": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"2843": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"2844": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"2845": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"2846": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"2847": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"2848": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"2849": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"2850": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"2851": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"2852": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2853": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"2854": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"2855": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"2856": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"2857": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"2858": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"2859": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2860": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2861": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"2862": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"2863": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2864": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2865": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"2866": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"2867": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2868": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2869": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"2870": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "IFileService"
		},
		"2871": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "IFileService.upload"
		},
		"2872": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "IFileService.upload"
		},
		"2873": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "file"
		},
		"2874": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "IFileService.uploadProtected"
		},
		"2875": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "IFileService.uploadProtected"
		},
		"2876": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "file"
		},
		"2877": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "IFileService.delete"
		},
		"2878": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "IFileService.delete"
		},
		"2879": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "fileData"
		},
		"2880": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "IFileService.getUploadStreamDescriptor"
		},
		"2881": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "IFileService.getUploadStreamDescriptor"
		},
		"2882": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "fileData"
		},
		"2883": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "IFileService.getDownloadStream"
		},
		"2884": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "IFileService.getDownloadStream"
		},
		"2885": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "fileData"
		},
		"2886": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "IFileService.getPresignedDownloadUrl"
		},
		"2887": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "IFileService.getPresignedDownloadUrl"
		},
		"2888": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "fileData"
		},
		"2889": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"2890": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"2891": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"2892": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"2893": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"2894": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"2895": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"2896": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"2897": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"2898": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"2899": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"2900": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"2901": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"2902": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2903": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"2904": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"2905": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"2906": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"2907": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"2908": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"2909": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2910": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2911": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"2912": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"2913": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2914": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2915": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"2916": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"2917": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2918": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2919": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"2920": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService"
		},
		"2921": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService._isFileService"
		},
		"2922": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.isFileService"
		},
		"2923": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.isFileService"
		},
		"2924": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "object"
		},
		"2925": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__constructor"
		},
		"2926": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "AbstractFileService"
		},
		"2927": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__container__"
		},
		"2928": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__configModule__"
		},
		"2929": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__moduleDeclaration__"
		},
		"2930": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.upload"
		},
		"2931": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.upload"
		},
		"2932": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "fileData"
		},
		"2933": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.uploadProtected"
		},
		"2934": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.uploadProtected"
		},
		"2935": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "fileData"
		},
		"2936": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.delete"
		},
		"2937": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.delete"
		},
		"2938": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "fileData"
		},
		"2939": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.getUploadStreamDescriptor"
		},
		"2940": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.getUploadStreamDescriptor"
		},
		"2941": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "fileData"
		},
		"2942": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.getDownloadStream"
		},
		"2943": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.getDownloadStream"
		},
		"2944": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "fileData"
		},
		"2945": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.getPresignedDownloadUrl"
		},
		"2946": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "AbstractFileService.getPresignedDownloadUrl"
		},
		"2947": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/file-service.ts",
			"qualifiedName": "fileData"
		},
		"2948": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"2949": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"2950": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"2951": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"2952": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"2953": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"2954": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"2955": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"2956": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"2957": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"2958": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"2959": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"2960": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"2961": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2962": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"2963": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"2964": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"2965": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"2966": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"2967": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"2968": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2969": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2970": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"2971": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"2972": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2973": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2974": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"2975": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"2976": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2977": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"2978": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"2979": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService"
		},
		"2982": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.getFulfillmentOptions"
		},
		"2983": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.getFulfillmentOptions"
		},
		"2984": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.validateFulfillmentData"
		},
		"2985": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.validateFulfillmentData"
		},
		"2986": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "optionData"
		},
		"2987": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"2988": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "cart"
		},
		"2989": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.validateOption"
		},
		"2990": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.validateOption"
		},
		"2991": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"2992": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.canCalculate"
		},
		"2993": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.canCalculate"
		},
		"2994": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"2995": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.calculatePrice"
		},
		"2996": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.calculatePrice"
		},
		"2997": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "optionData"
		},
		"2998": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"2999": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "cart"
		},
		"3000": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.createFulfillment"
		},
		"3001": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.createFulfillment"
		},
		"3002": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"3003": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "items"
		},
		"3004": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "order"
		},
		"3005": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "fulfillment"
		},
		"3006": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.cancelFulfillment"
		},
		"3007": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.cancelFulfillment"
		},
		"3008": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "fulfillmentData"
		},
		"3009": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.createReturn"
		},
		"3010": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.createReturn"
		},
		"3011": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "returnOrder"
		},
		"3012": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.getFulfillmentDocuments"
		},
		"3013": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.getFulfillmentDocuments"
		},
		"3014": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"3015": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.getReturnDocuments"
		},
		"3016": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.getReturnDocuments"
		},
		"3017": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"3018": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.getShipmentDocuments"
		},
		"3019": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.getShipmentDocuments"
		},
		"3020": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"3021": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.retrieveDocuments"
		},
		"3022": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentService.retrieveDocuments"
		},
		"3023": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "fulfillmentData"
		},
		"3024": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "documentType"
		},
		"3025": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"3026": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"3027": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3028": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3029": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"3030": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"3031": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"3032": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3033": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3034": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3035": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3036": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3037": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"3038": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3039": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"3040": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3041": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3042": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"3043": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"3044": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"3045": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3046": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3047": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3048": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"3049": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3050": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3051": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3052": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"3053": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3054": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3055": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3056": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService"
		},
		"3061": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.identifier"
		},
		"3062": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.__constructor"
		},
		"3063": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService"
		},
		"3064": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "container"
		},
		"3065": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "config"
		},
		"3066": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.container"
		},
		"3067": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.config"
		},
		"3070": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.getFulfillmentOptions"
		},
		"3071": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.getFulfillmentOptions"
		},
		"3072": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.validateFulfillmentData"
		},
		"3073": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.validateFulfillmentData"
		},
		"3074": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "optionData"
		},
		"3075": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"3076": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "cart"
		},
		"3077": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.validateOption"
		},
		"3078": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.validateOption"
		},
		"3079": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"3080": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.canCalculate"
		},
		"3081": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.canCalculate"
		},
		"3082": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"3083": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.calculatePrice"
		},
		"3084": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.calculatePrice"
		},
		"3085": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "optionData"
		},
		"3086": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"3087": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "cart"
		},
		"3088": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.createFulfillment"
		},
		"3089": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.createFulfillment"
		},
		"3090": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"3091": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "items"
		},
		"3092": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "order"
		},
		"3093": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "fulfillment"
		},
		"3094": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.cancelFulfillment"
		},
		"3095": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.cancelFulfillment"
		},
		"3096": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "fulfillment"
		},
		"3097": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.createReturn"
		},
		"3098": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.createReturn"
		},
		"3099": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "returnOrder"
		},
		"3100": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.getFulfillmentDocuments"
		},
		"3101": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.getFulfillmentDocuments"
		},
		"3102": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"3103": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.getReturnDocuments"
		},
		"3104": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.getReturnDocuments"
		},
		"3105": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"3106": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.getShipmentDocuments"
		},
		"3107": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.getShipmentDocuments"
		},
		"3108": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "data"
		},
		"3109": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.retrieveDocuments"
		},
		"3110": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "AbstractFulfillmentService.retrieveDocuments"
		},
		"3111": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "fulfillmentData"
		},
		"3112": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "documentType"
		},
		"3113": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"3114": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"3115": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3116": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3117": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"3118": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"3119": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"3120": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3121": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3122": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3123": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3124": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3125": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"3126": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3127": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"3128": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3129": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3130": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"3131": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"3132": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"3133": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3134": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3135": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3136": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"3137": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3138": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3139": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3140": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"3141": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3142": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3143": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3144": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "ReturnedData"
		},
		"3145": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "__type.to"
		},
		"3146": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "__type.status"
		},
		"3147": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "__type.data"
		},
		"3148": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "INotificationService"
		},
		"3149": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "INotificationService.sendNotification"
		},
		"3150": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "INotificationService.sendNotification"
		},
		"3151": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "event"
		},
		"3152": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "data"
		},
		"3153": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "attachmentGenerator"
		},
		"3154": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "INotificationService.resendNotification"
		},
		"3155": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "INotificationService.resendNotification"
		},
		"3156": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "notification"
		},
		"3157": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "config"
		},
		"3158": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "attachmentGenerator"
		},
		"3159": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"3160": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"3161": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3162": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3163": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"3164": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"3165": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"3166": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3167": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3168": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3169": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3170": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3171": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"3172": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3173": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"3174": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3175": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3176": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"3177": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"3178": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"3179": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3180": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3181": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3182": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"3183": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3184": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3185": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3186": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"3187": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3188": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3189": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3190": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "AbstractNotificationService"
		},
		"3192": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "AbstractNotificationService.identifier"
		},
		"3196": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "AbstractNotificationService.__constructor"
		},
		"3197": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "AbstractNotificationService"
		},
		"3198": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "container"
		},
		"3199": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "config"
		},
		"3202": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "AbstractNotificationService.container"
		},
		"3203": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "AbstractNotificationService.config"
		},
		"3204": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "AbstractNotificationService.sendNotification"
		},
		"3205": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "AbstractNotificationService.sendNotification"
		},
		"3206": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "event"
		},
		"3207": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "data"
		},
		"3208": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "attachmentGenerator"
		},
		"3209": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "AbstractNotificationService.resendNotification"
		},
		"3210": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "AbstractNotificationService.resendNotification"
		},
		"3211": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "notification"
		},
		"3212": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "config"
		},
		"3213": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/notification-service.ts",
			"qualifiedName": "attachmentGenerator"
		},
		"3214": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"3215": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"3216": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3217": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3218": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"3219": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"3220": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"3221": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3222": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3223": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3224": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3225": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3226": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"3227": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3228": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"3229": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3230": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3231": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"3232": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"3233": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"3234": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3235": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3236": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3237": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"3238": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3239": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3240": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3241": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"3242": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3243": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3244": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3245": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "isPaymentProcessorError"
		},
		"3246": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "isPaymentProcessorError"
		},
		"3247": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "obj"
		},
		"3248": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessorContext"
		},
		"3249": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.billing_address"
		},
		"3250": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.email"
		},
		"3251": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.currency_code"
		},
		"3252": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.amount"
		},
		"3253": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.resource_id"
		},
		"3254": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.customer"
		},
		"3255": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.context"
		},
		"3256": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.paymentSessionData"
		},
		"3257": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessorSessionResponse"
		},
		"3258": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.update_requests"
		},
		"3259": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type"
		},
		"3260": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.customer_metadata"
		},
		"3261": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.session_data"
		},
		"3262": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessorError"
		},
		"3263": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessorError.error"
		},
		"3264": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessorError.code"
		},
		"3265": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessorError.detail"
		},
		"3266": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor"
		},
		"3269": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.initiatePayment"
		},
		"3270": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.initiatePayment"
		},
		"3271": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "context"
		},
		"3272": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.updatePayment"
		},
		"3273": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.updatePayment"
		},
		"3274": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "context"
		},
		"3275": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.refundPayment"
		},
		"3276": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.refundPayment"
		},
		"3277": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3278": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "refundAmount"
		},
		"3279": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.authorizePayment"
		},
		"3280": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.authorizePayment"
		},
		"3281": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3282": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "context"
		},
		"3283": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type"
		},
		"3284": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.status"
		},
		"3285": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.data"
		},
		"3286": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.capturePayment"
		},
		"3287": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.capturePayment"
		},
		"3288": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3289": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.deletePayment"
		},
		"3290": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.deletePayment"
		},
		"3291": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3292": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.retrievePayment"
		},
		"3293": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.retrievePayment"
		},
		"3294": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3295": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.cancelPayment"
		},
		"3296": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.cancelPayment"
		},
		"3297": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3298": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.getPaymentStatus"
		},
		"3299": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.getPaymentStatus"
		},
		"3300": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3301": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.updatePaymentData"
		},
		"3302": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "PaymentProcessor.updatePaymentData"
		},
		"3303": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "sessionId"
		},
		"3304": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "data"
		},
		"3305": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor"
		},
		"3306": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor._isPaymentProcessor"
		},
		"3307": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.isPaymentProcessor"
		},
		"3308": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.isPaymentProcessor"
		},
		"3309": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "object"
		},
		"3310": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.identifier"
		},
		"3311": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.__constructor"
		},
		"3312": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor"
		},
		"3313": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "container"
		},
		"3314": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "config"
		},
		"3315": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.container"
		},
		"3316": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.config"
		},
		"3319": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.capturePayment"
		},
		"3320": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.capturePayment"
		},
		"3321": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3322": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.authorizePayment"
		},
		"3323": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.authorizePayment"
		},
		"3324": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3325": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "context"
		},
		"3326": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type"
		},
		"3327": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.status"
		},
		"3328": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "__type.data"
		},
		"3329": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.cancelPayment"
		},
		"3330": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.cancelPayment"
		},
		"3331": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3332": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.initiatePayment"
		},
		"3333": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.initiatePayment"
		},
		"3334": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "context"
		},
		"3335": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.deletePayment"
		},
		"3336": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.deletePayment"
		},
		"3337": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3338": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.getPaymentStatus"
		},
		"3339": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.getPaymentStatus"
		},
		"3340": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3341": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.refundPayment"
		},
		"3342": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.refundPayment"
		},
		"3343": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3344": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "refundAmount"
		},
		"3345": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.retrievePayment"
		},
		"3346": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.retrievePayment"
		},
		"3347": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3348": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.updatePayment"
		},
		"3349": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.updatePayment"
		},
		"3350": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "context"
		},
		"3351": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.updatePaymentData"
		},
		"3352": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "AbstractPaymentProcessor.updatePaymentData"
		},
		"3353": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "sessionId"
		},
		"3354": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-processor.ts",
			"qualifiedName": "data"
		},
		"3355": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "Data"
		},
		"3356": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentData"
		},
		"3357": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentSessionData"
		},
		"3358": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentContext"
		},
		"3359": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type"
		},
		"3360": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.cart"
		},
		"3361": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type"
		},
		"3362": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.context"
		},
		"3363": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.id"
		},
		"3364": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.email"
		},
		"3365": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.shipping_address"
		},
		"3366": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.shipping_methods"
		},
		"3367": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.billing_address"
		},
		"3368": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.currency_code"
		},
		"3369": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.amount"
		},
		"3370": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.resource_id"
		},
		"3371": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.customer"
		},
		"3372": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.paymentSessionData"
		},
		"3373": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentSessionResponse"
		},
		"3374": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type"
		},
		"3375": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.update_requests"
		},
		"3376": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type"
		},
		"3377": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.customer_metadata"
		},
		"3378": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.session_data"
		},
		"3379": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService"
		},
		"3380": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.getIdentifier"
		},
		"3381": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.getIdentifier"
		},
		"3382": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.getPaymentData"
		},
		"3383": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.getPaymentData"
		},
		"3384": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentSession"
		},
		"3385": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.updatePaymentData"
		},
		"3386": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.updatePaymentData"
		},
		"3387": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3388": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "data"
		},
		"3389": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.createPayment"
		},
		"3390": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.createPayment"
		},
		"3391": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "context"
		},
		"3392": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.createPayment"
		},
		"3393": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "cart"
		},
		"3394": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.retrievePayment"
		},
		"3395": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.retrievePayment"
		},
		"3396": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentData"
		},
		"3397": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.updatePayment"
		},
		"3398": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.updatePayment"
		},
		"3399": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3400": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "context"
		},
		"3401": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.updatePayment"
		},
		"3402": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3403": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "cart"
		},
		"3404": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.authorizePayment"
		},
		"3405": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.authorizePayment"
		},
		"3406": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentSession"
		},
		"3407": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "context"
		},
		"3408": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type"
		},
		"3409": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.data"
		},
		"3410": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.status"
		},
		"3411": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.capturePayment"
		},
		"3412": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.capturePayment"
		},
		"3413": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "payment"
		},
		"3414": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.refundPayment"
		},
		"3415": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.refundPayment"
		},
		"3416": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "payment"
		},
		"3417": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "refundAmount"
		},
		"3418": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.cancelPayment"
		},
		"3419": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.cancelPayment"
		},
		"3420": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "payment"
		},
		"3421": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.deletePayment"
		},
		"3422": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.deletePayment"
		},
		"3423": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentSession"
		},
		"3424": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.retrieveSavedMethods"
		},
		"3425": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.retrieveSavedMethods"
		},
		"3426": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "customer"
		},
		"3427": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.getStatus"
		},
		"3428": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "PaymentService.getStatus"
		},
		"3429": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "data"
		},
		"3430": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"3431": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"3432": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3433": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3434": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"3435": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"3436": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"3437": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3438": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3439": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3440": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3441": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3442": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"3443": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3444": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"3445": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3446": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3447": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"3448": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"3449": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"3450": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3451": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3452": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3453": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"3454": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3455": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3456": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3457": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"3458": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3459": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3460": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3461": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService"
		},
		"3462": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService._isPaymentService"
		},
		"3466": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.identifier"
		},
		"3467": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.__constructor"
		},
		"3468": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService"
		},
		"3469": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "container"
		},
		"3470": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "config"
		},
		"3471": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.getIdentifier"
		},
		"3472": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.getIdentifier"
		},
		"3473": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.getPaymentData"
		},
		"3474": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.getPaymentData"
		},
		"3475": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentSession"
		},
		"3476": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.updatePaymentData"
		},
		"3477": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.updatePaymentData"
		},
		"3478": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3479": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "data"
		},
		"3480": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.createPayment"
		},
		"3481": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.createPayment"
		},
		"3482": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "context"
		},
		"3483": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.createPayment"
		},
		"3484": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "cart"
		},
		"3485": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.retrievePayment"
		},
		"3486": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.retrievePayment"
		},
		"3487": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentData"
		},
		"3488": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.updatePayment"
		},
		"3489": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.updatePayment"
		},
		"3490": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3491": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "context"
		},
		"3492": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.updatePayment"
		},
		"3493": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentSessionData"
		},
		"3494": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "cart"
		},
		"3495": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.authorizePayment"
		},
		"3496": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.authorizePayment"
		},
		"3497": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentSession"
		},
		"3498": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "context"
		},
		"3499": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type"
		},
		"3500": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.data"
		},
		"3501": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "__type.status"
		},
		"3502": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.capturePayment"
		},
		"3503": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.capturePayment"
		},
		"3504": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "payment"
		},
		"3505": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.refundPayment"
		},
		"3506": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.refundPayment"
		},
		"3507": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "payment"
		},
		"3508": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "refundAmount"
		},
		"3509": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.cancelPayment"
		},
		"3510": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.cancelPayment"
		},
		"3511": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "payment"
		},
		"3512": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.deletePayment"
		},
		"3513": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.deletePayment"
		},
		"3514": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "paymentSession"
		},
		"3515": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.retrieveSavedMethods"
		},
		"3516": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.retrieveSavedMethods"
		},
		"3517": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "customer"
		},
		"3518": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.getStatus"
		},
		"3519": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "AbstractPaymentService.getStatus"
		},
		"3520": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/payment-service.ts",
			"qualifiedName": "data"
		},
		"3521": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"3522": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"3523": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3524": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3525": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"3526": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"3527": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"3528": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3529": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3530": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3531": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3532": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3533": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"3534": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3535": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"3536": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3537": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3538": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"3539": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"3540": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"3541": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3542": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3543": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3544": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"3545": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3546": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3547": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3548": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"3549": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3550": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3551": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3552": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "IPriceSelectionStrategy"
		},
		"3553": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "IPriceSelectionStrategy.calculateVariantPrice"
		},
		"3554": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "IPriceSelectionStrategy.calculateVariantPrice"
		},
		"3555": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "data"
		},
		"3556": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type"
		},
		"3557": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.variantId"
		},
		"3558": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.quantity"
		},
		"3559": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "context"
		},
		"3560": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "IPriceSelectionStrategy.onVariantsPricesUpdate"
		},
		"3561": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "IPriceSelectionStrategy.onVariantsPricesUpdate"
		},
		"3562": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "variantIds"
		},
		"3563": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"3564": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"3565": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"3566": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "AbstractPriceSelectionStrategy"
		},
		"3571": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "AbstractPriceSelectionStrategy.__constructor"
		},
		"3572": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "AbstractPriceSelectionStrategy"
		},
		"3573": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "container"
		},
		"3574": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "config"
		},
		"3575": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "AbstractPriceSelectionStrategy.container"
		},
		"3576": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "AbstractPriceSelectionStrategy.config"
		},
		"3577": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "AbstractPriceSelectionStrategy.calculateVariantPrice"
		},
		"3578": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "AbstractPriceSelectionStrategy.calculateVariantPrice"
		},
		"3579": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "data"
		},
		"3580": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type"
		},
		"3581": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.variantId"
		},
		"3583": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.quantity"
		},
		"3584": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "context"
		},
		"3585": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "AbstractPriceSelectionStrategy.onVariantsPricesUpdate"
		},
		"3586": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "AbstractPriceSelectionStrategy.onVariantsPricesUpdate"
		},
		"3587": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "variantIds"
		},
		"3588": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"3589": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"3590": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3591": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3592": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"3593": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"3594": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"3595": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3596": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3597": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3598": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3599": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3600": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"3601": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3602": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"3603": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3604": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3605": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"3606": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"3607": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"3608": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3609": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3610": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3611": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"3612": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3613": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3614": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3615": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"3616": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3617": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3618": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3619": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "PriceSelectionContext"
		},
		"3620": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.cart_id"
		},
		"3621": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.customer_id"
		},
		"3622": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.region_id"
		},
		"3623": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.quantity"
		},
		"3624": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.currency_code"
		},
		"3625": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.include_discount_prices"
		},
		"3626": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"3627": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.ignore_cache"
		},
		"3628": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "PriceType"
		},
		"3629": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__object"
		},
		"3630": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "SALE"
		},
		"3631": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "OVERRIDE"
		},
		"3632": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "DEFAULT"
		},
		"3633": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "PriceType"
		},
		"3634": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "PriceSelectionResult"
		},
		"3635": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.originalPrice"
		},
		"3636": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.originalPriceIncludesTax"
		},
		"3637": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.calculatedPrice"
		},
		"3638": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.calculatedPriceIncludesTax"
		},
		"3639": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.calculatedPriceType"
		},
		"3640": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "__type.prices"
		},
		"3641": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "ITaxCalculationStrategy"
		},
		"3642": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "ITaxCalculationStrategy.calculate"
		},
		"3643": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "ITaxCalculationStrategy.calculate"
		},
		"3644": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "items"
		},
		"3645": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "taxLines"
		},
		"3646": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "calculationContext"
		},
		"3647": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "AbstractTaxCalculationStrategy"
		},
		"3652": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "AbstractTaxCalculationStrategy.__constructor"
		},
		"3653": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "AbstractTaxCalculationStrategy"
		},
		"3654": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "container"
		},
		"3655": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "config"
		},
		"3656": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "AbstractTaxCalculationStrategy.container"
		},
		"3657": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "AbstractTaxCalculationStrategy.config"
		},
		"3658": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "AbstractTaxCalculationStrategy.calculate"
		},
		"3659": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "AbstractTaxCalculationStrategy.calculate"
		},
		"3660": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "items"
		},
		"3661": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "taxLines"
		},
		"3662": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-calculation-strategy.ts",
			"qualifiedName": "calculationContext"
		},
		"3663": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"3664": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"3665": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3666": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3667": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"3668": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"3669": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"3670": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3671": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3672": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3673": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3674": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3675": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"3676": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3677": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"3678": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3679": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3680": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"3681": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"3682": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"3683": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3684": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3685": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3686": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"3687": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3688": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3689": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3690": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"3691": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3692": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3693": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3694": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "ShippingTaxCalculationLine"
		},
		"3695": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "__type"
		},
		"3696": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "__type.shipping_method"
		},
		"3697": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "__type.rates"
		},
		"3698": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "ItemTaxCalculationLine"
		},
		"3699": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "__type"
		},
		"3700": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "__type.item"
		},
		"3701": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "__type.rates"
		},
		"3702": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "TaxCalculationContext"
		},
		"3703": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "__type"
		},
		"3704": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "__type.shipping_address"
		},
		"3705": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "__type.customer"
		},
		"3706": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "__type.region"
		},
		"3707": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "__type.is_return"
		},
		"3708": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "__type.shipping_methods"
		},
		"3709": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "__type.allocation_map"
		},
		"3710": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "ITaxService"
		},
		"3711": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "ITaxService.getTaxLines"
		},
		"3712": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "ITaxService.getTaxLines"
		},
		"3713": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "itemLines"
		},
		"3714": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "shippingLines"
		},
		"3715": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "context"
		},
		"3716": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "AbstractTaxService"
		},
		"3718": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "AbstractTaxService.identifier"
		},
		"3722": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "AbstractTaxService.__constructor"
		},
		"3723": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "AbstractTaxService"
		},
		"3724": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "container"
		},
		"3725": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "config"
		},
		"3726": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "AbstractTaxService.container"
		},
		"3727": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "AbstractTaxService.config"
		},
		"3730": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "AbstractTaxService.getTaxLines"
		},
		"3731": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "AbstractTaxService.getTaxLines"
		},
		"3732": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "itemLines"
		},
		"3733": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "shippingLines"
		},
		"3734": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/tax-service.ts",
			"qualifiedName": "context"
		},
		"3735": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"3736": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"3737": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3738": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3739": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"3740": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"3741": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"3742": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3743": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3744": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3745": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3746": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3747": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"3748": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3749": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"3750": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3751": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3752": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"3753": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"3754": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"3755": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3756": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3757": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3758": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"3759": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3760": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3761": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3762": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"3763": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3764": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3765": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3766": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService"
		},
		"3767": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__constructor"
		},
		"3768": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService"
		},
		"3769": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__container__"
		},
		"3770": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__configModule__"
		},
		"3771": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__moduleDeclaration__"
		},
		"3772": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.manager_"
		},
		"3773": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.transactionManager_"
		},
		"3774": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3775": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.activeManager_"
		},
		"3776": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__container__"
		},
		"3777": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__configModule__"
		},
		"3778": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.__moduleDeclaration__"
		},
		"3779": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3780": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.withTransaction"
		},
		"3781": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3782": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3783": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.shouldRetryTransaction_"
		},
		"3784": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "err"
		},
		"3785": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3786": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type.code"
		},
		"3787": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3788": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TransactionBaseService.atomicPhase_"
		},
		"3789": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TResult"
		},
		"3790": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "TError"
		},
		"3791": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "work"
		},
		"3792": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3793": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3794": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "transactionManager"
		},
		"3795": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "isolationOrErrorHandler"
		},
		"3796": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3797": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3798": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3799": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "maybeErrorHandlerOrDontFail"
		},
		"3800": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3801": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "__type"
		},
		"3802": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/transaction-base-service.ts",
			"qualifiedName": "error"
		},
		"3803": {
			"sourceFileName": "../../../packages/medusa/src/joiner-config.ts",
			"qualifiedName": "joinerConfig"
		},
		"3804": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus"
		},
		"3805": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.CREATED"
		},
		"3806": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.PRE_PROCESSED"
		},
		"3807": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.CONFIRMED"
		},
		"3808": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.PROCESSING"
		},
		"3809": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.COMPLETED"
		},
		"3810": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.CANCELED"
		},
		"3811": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobStatus.FAILED"
		},
		"3812": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobUpdateProps"
		},
		"3813": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "CreateBatchJobInput"
		},
		"3814": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type"
		},
		"3815": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.type"
		},
		"3816": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.context"
		},
		"3817": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.dry_run"
		},
		"3818": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobResultError"
		},
		"3819": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type"
		},
		"3820": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.message"
		},
		"3821": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.code"
		},
		"3822": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.__index"
		},
		"3824": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobResultStatDescriptor"
		},
		"3825": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type"
		},
		"3826": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.key"
		},
		"3827": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.name"
		},
		"3828": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "__type.message"
		},
		"3829": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps"
		},
		"3832": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.id"
		},
		"3833": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.status"
		},
		"3834": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.type"
		},
		"3835": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.created_by"
		},
		"3836": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.created_at"
		},
		"3837": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "FilterableBatchJobProps.updated_at"
		},
		"3838": {
			"sourceFileName": "../../../packages/medusa/src/types/batch-job.ts",
			"qualifiedName": "BatchJobCreateProps"
		},
		"3839": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "extendedFindParamsMixin"
		},
		"3840": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "extendedFindParamsMixin"
		},
		"3841": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__0"
		},
		"3842": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"3843": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.limit"
		},
		"3844": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.offset"
		},
		"3845": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "WithRequiredProperty"
		},
		"3846": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "T"
		},
		"3847": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "K"
		},
		"3848": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "PartialPick"
		},
		"3849": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "T"
		},
		"3850": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "K"
		},
		"3851": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "Writable"
		},
		"3852": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "T"
		},
		"3853": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig"
		},
		"3854": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"3855": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"3856": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"3857": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"3858": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"3859": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"3860": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.__index"
		},
		"3862": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"3863": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "ExtendedFindConfig"
		},
		"3864": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"3865": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.select"
		},
		"3866": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.relations"
		},
		"3867": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.where"
		},
		"3868": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.order"
		},
		"3869": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.skip"
		},
		"3870": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.take"
		},
		"3871": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"3872": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "QuerySelector"
		},
		"3873": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"3874": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.q"
		},
		"3875": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"3876": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TreeQuerySelector"
		},
		"3877": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"3878": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.include_descendants_tree"
		},
		"3879": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"3880": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "Selector"
		},
		"3881": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"3882": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TotalField"
		},
		"3883": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions"
		},
		"3884": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.select"
		},
		"3885": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.where"
		},
		"3886": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.order"
		},
		"3887": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.skip"
		},
		"3888": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.take"
		},
		"3889": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.TModel"
		},
		"3890": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "CustomFindOptions.InKeys"
		},
		"3891": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "QueryConfig"
		},
		"3892": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type"
		},
		"3893": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultFields"
		},
		"3894": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultRelations"
		},
		"3895": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedFields"
		},
		"3896": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.allowedRelations"
		},
		"3897": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.defaultLimit"
		},
		"3898": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.isList"
		},
		"3899": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"3900": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"3901": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.expand"
		},
		"3902": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.fields"
		},
		"3903": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.offset"
		},
		"3904": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.limit"
		},
		"3905": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.order"
		},
		"3906": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"3907": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.limit"
		},
		"3908": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.offset"
		},
		"3909": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.count"
		},
		"3910": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DeleteResponse"
		},
		"3911": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.id"
		},
		"3912": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.object"
		},
		"3913": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "__type.deleted"
		},
		"3914": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "EmptyQueryParams"
		},
		"3917": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator"
		},
		"3920": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator.lt"
		},
		"3921": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator.gt"
		},
		"3922": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator.gte"
		},
		"3923": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "DateComparisonOperator.lte"
		},
		"3924": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"3927": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"3928": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"3929": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"3930": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"3931": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"3932": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"3933": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"3934": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"3937": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"3938": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"3939": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"3940": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"3941": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload"
		},
		"3944": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.first_name"
		},
		"3945": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.last_name"
		},
		"3946": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.phone"
		},
		"3947": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.metadata"
		},
		"3948": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.company"
		},
		"3949": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.address_1"
		},
		"3950": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.address_2"
		},
		"3951": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.city"
		},
		"3952": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.country_code"
		},
		"3953": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.province"
		},
		"3954": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressPayload.postal_code"
		},
		"3955": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload"
		},
		"3958": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.first_name"
		},
		"3959": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.last_name"
		},
		"3960": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.phone"
		},
		"3961": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.metadata"
		},
		"3962": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.company"
		},
		"3963": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.address_1"
		},
		"3964": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.address_2"
		},
		"3965": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.city"
		},
		"3966": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.country_code"
		},
		"3967": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.province"
		},
		"3968": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "AddressCreatePayload.postal_code"
		},
		"3969": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams"
		},
		"3972": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"3973": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"3974": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams"
		},
		"3977": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.offset"
		},
		"3978": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindPaginationParams.limit"
		},
		"3979": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ExtendedRequest"
		},
		"3980": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"3981": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.resource"
		},
		"3982": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "TEntity"
		},
		"3983": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ClassConstructor"
		},
		"3984": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"3985": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"3986": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"3987": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"3988": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "MedusaContainer"
		},
		"3989": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Logger"
		},
		"3990": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"3991": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.panic"
		},
		"3992": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"3993": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"3994": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "data"
		},
		"3995": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.shouldLog"
		},
		"3996": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"3997": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"3998": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"3999": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.setLogLevel"
		},
		"4000": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4001": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4002": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "level"
		},
		"4003": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.unsetLogLevel"
		},
		"4004": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4005": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4006": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.activity"
		},
		"4007": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4008": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4009": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"4010": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "config"
		},
		"4011": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.progress"
		},
		"4012": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4013": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4014": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"4015": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"4016": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.error"
		},
		"4017": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4018": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4019": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "messageOrError"
		},
		"4020": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "error"
		},
		"4021": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.failure"
		},
		"4022": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4023": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4024": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"4025": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"4026": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.success"
		},
		"4027": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4028": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4029": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "activityId"
		},
		"4030": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"4031": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.debug"
		},
		"4032": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4033": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4034": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"4035": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.info"
		},
		"4036": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4037": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4038": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"4039": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.warn"
		},
		"4040": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4041": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4042": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "message"
		},
		"4043": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type.log"
		},
		"4044": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4045": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4046": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"4047": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "Constructor"
		},
		"4048": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4049": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__type"
		},
		"4050": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "args"
		},
		"4051": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "T"
		},
		"4052": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "ConfigModule"
		},
		"4053": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "MiddlewareFunction"
		},
		"4054": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type"
		},
		"4055": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type"
		},
		"4056": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "args"
		},
		"4057": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "MiddlewareRoute"
		},
		"4058": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type"
		},
		"4059": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type.method"
		},
		"4060": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type.matcher"
		},
		"4061": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type.bodyParser"
		},
		"4062": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type.middlewares"
		},
		"4063": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "MiddlewaresConfig"
		},
		"4064": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type"
		},
		"4065": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type.errorHandler"
		},
		"4066": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type.routes"
		},
		"4067": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListType"
		},
		"4068": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListType.SALE"
		},
		"4069": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListType.OVERRIDE"
		},
		"4070": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListStatus"
		},
		"4071": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListStatus.ACTIVE"
		},
		"4072": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListStatus.DRAFT"
		},
		"4073": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps"
		},
		"4076": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.id"
		},
		"4077": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.q"
		},
		"4078": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.status"
		},
		"4079": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.name"
		},
		"4080": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.customer_groups"
		},
		"4081": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.description"
		},
		"4082": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.type"
		},
		"4083": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.created_at"
		},
		"4084": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.updated_at"
		},
		"4085": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "FilterablePriceListProps.deleted_at"
		},
		"4086": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq"
		},
		"4089": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.id"
		},
		"4090": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.region_id"
		},
		"4091": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.currency_code"
		},
		"4092": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.variant_id"
		},
		"4093": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.amount"
		},
		"4094": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.min_quantity"
		},
		"4095": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesUpdateReq.max_quantity"
		},
		"4096": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq"
		},
		"4099": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.region_id"
		},
		"4100": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.currency_code"
		},
		"4101": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.amount"
		},
		"4102": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.variant_id"
		},
		"4103": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.min_quantity"
		},
		"4104": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "AdminPriceListPricesCreateReq.max_quantity"
		},
		"4105": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "CreatePriceListInput"
		},
		"4106": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"4107": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.name"
		},
		"4108": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.description"
		},
		"4109": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.type"
		},
		"4110": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.status"
		},
		"4111": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.prices"
		},
		"4112": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"4113": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"4114": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.id"
		},
		"4115": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.starts_at"
		},
		"4116": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.ends_at"
		},
		"4117": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.includes_tax"
		},
		"4118": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "UpdatePriceListInput"
		},
		"4119": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"4120": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.prices"
		},
		"4121": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"4122": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"4123": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.id"
		},
		"4124": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListPriceUpdateInput"
		},
		"4125": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"4126": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.id"
		},
		"4127": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.variant_id"
		},
		"4128": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"4129": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"4130": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"4131": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"4132": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"4133": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListPriceCreateInput"
		},
		"4134": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"4135": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"4136": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"4137": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.variant_id"
		},
		"4138": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"4139": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"4140": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"4141": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "PriceListLoadConfig"
		},
		"4142": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type"
		},
		"4143": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.include_discount_prices"
		},
		"4144": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.customer_id"
		},
		"4145": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.cart_id"
		},
		"4146": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"4147": {
			"sourceFileName": "../../../packages/medusa/src/types/price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"4148": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest"
		},
		"4149": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.user"
		},
		"4150": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequest.scope"
		},
		"4151": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.validatedQuery"
		},
		"4152": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.validatedBody"
		},
		"4153": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.listConfig"
		},
		"4154": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.retrieveConfig"
		},
		"4155": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.filterableFields"
		},
		"4156": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.allowedProperties"
		},
		"4157": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.includes"
		},
		"4158": {
			"sourceFileName": "../../../packages/medusa/src/types/global.ts",
			"qualifiedName": "__global.Express.Request.errors"
		},
		"4159": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaResponse"
		},
		"4160": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaNextFunction"
		},
		"4161": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "MedusaRequestHandler"
		},
		"4162": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"4163": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "__type"
		},
		"4164": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "req"
		},
		"4165": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "res"
		},
		"4166": {
			"sourceFileName": "../../../packages/medusa/src/types/routing.ts",
			"qualifiedName": "next"
		},
		"4167": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "ScheduledJobConfig"
		},
		"4168": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type"
		},
		"4169": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.name"
		},
		"4170": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.schedule"
		},
		"4171": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.data"
		},
		"4172": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "T"
		},
		"4173": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "ScheduledJobArgs"
		},
		"4174": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type"
		},
		"4175": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.container"
		},
		"4176": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.data"
		},
		"4177": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "__type.pluginOptions"
		},
		"4178": {
			"sourceFileName": "../../../packages/medusa/src/types/scheduled-jobs.ts",
			"qualifiedName": "T"
		},
		"4179": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberConfig"
		},
		"4180": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"4181": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.event"
		},
		"4182": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.context"
		},
		"4183": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberArgs"
		},
		"4184": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type"
		},
		"4185": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.data"
		},
		"4186": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.eventName"
		},
		"4187": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.container"
		},
		"4188": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "__type.pluginOptions"
		},
		"4189": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "T"
		},
		"4190": {
			"sourceFileName": "../../../packages/medusa/src/utils/validator.ts",
			"qualifiedName": "registerOverriddenValidators"
		},
		"4191": {
			"sourceFileName": "../../../packages/medusa/src/utils/validator.ts",
			"qualifiedName": "registerOverriddenValidators"
		},
		"4192": {
			"sourceFileName": "../../../packages/medusa/src/utils/validator.ts",
			"qualifiedName": "extendedValidator"
		},
		"4193": {
			"sourceFileName": "../../../packages/medusa/src/utils/validator.ts",
			"qualifiedName": "validator"
		},
		"4194": {
			"sourceFileName": "../../../packages/medusa/src/utils/validator.ts",
			"qualifiedName": "validator"
		},
		"4195": {
			"sourceFileName": "../../../packages/medusa/src/utils/validator.ts",
			"qualifiedName": "T"
		},
		"4196": {
			"sourceFileName": "../../../packages/medusa/src/utils/validator.ts",
			"qualifiedName": "V"
		},
		"4197": {
			"sourceFileName": "../../../packages/medusa/src/utils/validator.ts",
			"qualifiedName": "typedClass"
		},
		"4198": {
			"sourceFileName": "../../../packages/medusa/src/utils/validator.ts",
			"qualifiedName": "plain"
		},
		"4199": {
			"sourceFileName": "../../../packages/medusa/src/utils/validator.ts",
			"qualifiedName": "config"
		},
		"4200": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "buildQuery"
		},
		"4201": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "buildQuery"
		},
		"4202": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "TWhereKeys"
		},
		"4203": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "TEntity"
		},
		"4204": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "selector"
		},
		"4205": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "config"
		},
		"4206": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "buildLegacyFieldsListFrom"
		},
		"4207": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "buildLegacyFieldsListFrom"
		},
		"4208": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "TEntity"
		},
		"4209": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "input"
		},
		"4210": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "addOrderToSelect"
		},
		"4211": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "addOrderToSelect"
		},
		"4212": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "TEntity"
		},
		"4213": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "order"
		},
		"4214": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "select"
		},
		"4215": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "nullableValue"
		},
		"4216": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "nullableValue"
		},
		"4217": {
			"sourceFileName": "../../../packages/medusa/src/utils/build-query.ts",
			"qualifiedName": "value"
		},
		"4218": {
			"sourceFileName": "../../../packages/medusa/src/utils/calculate-price-tax-amount.ts",
			"qualifiedName": "calculatePriceTaxAmount"
		},
		"4219": {
			"sourceFileName": "../../../packages/medusa/src/utils/calculate-price-tax-amount.ts",
			"qualifiedName": "calculatePriceTaxAmount"
		},
		"4220": {
			"sourceFileName": "../../../packages/medusa/src/utils/calculate-price-tax-amount.ts",
			"qualifiedName": "__0"
		},
		"4221": {
			"sourceFileName": "../../../packages/medusa/src/utils/calculate-price-tax-amount.ts",
			"qualifiedName": "__type"
		},
		"4222": {
			"sourceFileName": "../../../packages/medusa/src/utils/calculate-price-tax-amount.ts",
			"qualifiedName": "__type.price"
		},
		"4223": {
			"sourceFileName": "../../../packages/medusa/src/utils/calculate-price-tax-amount.ts",
			"qualifiedName": "__type.includesTax"
		},
		"4224": {
			"sourceFileName": "../../../packages/medusa/src/utils/calculate-price-tax-amount.ts",
			"qualifiedName": "__type.taxRate"
		},
		"4225": {
			"sourceFileName": "../../../packages/medusa/src/utils/clean-response-data.ts",
			"qualifiedName": "cleanResponseData"
		},
		"4226": {
			"sourceFileName": "../../../packages/medusa/src/utils/clean-response-data.ts",
			"qualifiedName": "cleanResponseData"
		},
		"4227": {
			"sourceFileName": "../../../packages/medusa/src/utils/clean-response-data.ts",
			"qualifiedName": "T"
		},
		"4228": {
			"sourceFileName": "../../../packages/medusa/src/utils/clean-response-data.ts",
			"qualifiedName": "data"
		},
		"4229": {
			"sourceFileName": "../../../packages/medusa/src/utils/clean-response-data.ts",
			"qualifiedName": "fields"
		},
		"4230": {
			"sourceFileName": "../../../packages/medusa/src/utils/csv-cell-content-formatter.ts",
			"qualifiedName": "csvCellContentFormatter"
		},
		"4231": {
			"sourceFileName": "../../../packages/medusa/src/utils/csv-cell-content-formatter.ts",
			"qualifiedName": "csvCellContentFormatter"
		},
		"4232": {
			"sourceFileName": "../../../packages/medusa/src/utils/csv-cell-content-formatter.ts",
			"qualifiedName": "str"
		},
		"4233": {
			"sourceFileName": "../../../packages/medusa/src/utils/csv-cell-content-formatter.ts",
			"qualifiedName": "csvRevertCellContentFormatter"
		},
		"4234": {
			"sourceFileName": "../../../packages/medusa/src/utils/csv-cell-content-formatter.ts",
			"qualifiedName": "csvRevertCellContentFormatter"
		},
		"4235": {
			"sourceFileName": "../../../packages/medusa/src/utils/csv-cell-content-formatter.ts",
			"qualifiedName": "str"
		},
		"4236": {
			"sourceFileName": "../../../packages/medusa/src/utils/db-aware-column.ts",
			"qualifiedName": "resolveDbType"
		},
		"4237": {
			"sourceFileName": "../../../packages/medusa/src/utils/db-aware-column.ts",
			"qualifiedName": "resolveDbType"
		},
		"4238": {
			"sourceFileName": "../../../packages/medusa/src/utils/db-aware-column.ts",
			"qualifiedName": "pgSqlType"
		},
		"4239": {
			"sourceFileName": "../../../packages/medusa/src/utils/db-aware-column.ts",
			"qualifiedName": "resolveDbGenerationStrategy"
		},
		"4240": {
			"sourceFileName": "../../../packages/medusa/src/utils/db-aware-column.ts",
			"qualifiedName": "resolveDbGenerationStrategy"
		},
		"4241": {
			"sourceFileName": "../../../packages/medusa/src/utils/db-aware-column.ts",
			"qualifiedName": "pgSqlType"
		},
		"4242": {
			"sourceFileName": "../../../packages/medusa/src/utils/db-aware-column.ts",
			"qualifiedName": "DbAwareColumn"
		},
		"4243": {
			"sourceFileName": "../../../packages/medusa/src/utils/db-aware-column.ts",
			"qualifiedName": "DbAwareColumn"
		},
		"4244": {
			"sourceFileName": "../../../packages/medusa/src/utils/db-aware-column.ts",
			"qualifiedName": "columnOptions"
		},
		"4245": {
			"sourceFileName": "../../../packages/medusa/src/utils/exception-formatter.ts",
			"qualifiedName": "PostgresError"
		},
		"4246": {
			"sourceFileName": "../../../packages/medusa/src/utils/exception-formatter.ts",
			"qualifiedName": "PostgresError.DUPLICATE_ERROR"
		},
		"4247": {
			"sourceFileName": "../../../packages/medusa/src/utils/exception-formatter.ts",
			"qualifiedName": "PostgresError.FOREIGN_KEY_ERROR"
		},
		"4248": {
			"sourceFileName": "../../../packages/medusa/src/utils/exception-formatter.ts",
			"qualifiedName": "PostgresError.SERIALIZATION_FAILURE"
		},
		"4249": {
			"sourceFileName": "../../../packages/medusa/src/utils/exception-formatter.ts",
			"qualifiedName": "PostgresError.NULL_VIOLATION"
		},
		"4250": {
			"sourceFileName": "../../../packages/medusa/src/utils/exception-formatter.ts",
			"qualifiedName": "formatException"
		},
		"4251": {
			"sourceFileName": "../../../packages/medusa/src/utils/exception-formatter.ts",
			"qualifiedName": "formatException"
		},
		"4252": {
			"sourceFileName": "../../../packages/medusa/src/utils/exception-formatter.ts",
			"qualifiedName": "err"
		},
		"4253": {
			"sourceFileName": "../../../packages/medusa/src/utils/generate-entity-id.ts",
			"qualifiedName": "generateEntityId"
		},
		"4254": {
			"sourceFileName": "../../../packages/medusa/src/utils/generate-entity-id.ts",
			"qualifiedName": "generateEntityId"
		},
		"4255": {
			"sourceFileName": "../../../packages/medusa/src/utils/generate-entity-id.ts",
			"qualifiedName": "idProperty"
		},
		"4256": {
			"sourceFileName": "../../../packages/medusa/src/utils/generate-entity-id.ts",
			"qualifiedName": "prefix"
		},
		"4257": {
			"sourceFileName": "../../../packages/medusa/src/utils/has-changes.ts",
			"qualifiedName": "hasChanges"
		},
		"4258": {
			"sourceFileName": "../../../packages/medusa/src/utils/has-changes.ts",
			"qualifiedName": "hasChanges"
		},
		"4259": {
			"sourceFileName": "../../../packages/medusa/src/utils/has-changes.ts",
			"qualifiedName": "T1"
		},
		"4260": {
			"sourceFileName": "../../../packages/medusa/src/utils/has-changes.ts",
			"qualifiedName": "T2"
		},
		"4261": {
			"sourceFileName": "../../../packages/medusa/src/utils/has-changes.ts",
			"qualifiedName": "obj1"
		},
		"4262": {
			"sourceFileName": "../../../packages/medusa/src/utils/has-changes.ts",
			"qualifiedName": "obj2"
		},
		"4263": {
			"sourceFileName": "../../../packages/medusa/src/utils/is-date.ts",
			"qualifiedName": "isDate"
		},
		"4264": {
			"sourceFileName": "../../../packages/medusa/src/utils/is-date.ts",
			"qualifiedName": "isDate"
		},
		"4265": {
			"sourceFileName": "../../../packages/medusa/src/utils/is-date.ts",
			"qualifiedName": "value"
		},
		"4266": {
			"sourceFileName": "../../../packages/medusa/src/utils/is-object.ts",
			"qualifiedName": "isObject"
		},
		"4267": {
			"sourceFileName": "../../../packages/medusa/src/utils/is-object.ts",
			"qualifiedName": "isObject"
		},
		"4268": {
			"sourceFileName": "../../../packages/medusa/src/utils/is-object.ts",
			"qualifiedName": "obj"
		},
		"4269": {
			"sourceFileName": "../../../packages/medusa/src/utils/is-string.ts",
			"qualifiedName": "isString"
		},
		"4270": {
			"sourceFileName": "../../../packages/medusa/src/utils/is-string.ts",
			"qualifiedName": "isString"
		},
		"4271": {
			"sourceFileName": "../../../packages/medusa/src/utils/is-string.ts",
			"qualifiedName": "val"
		},
		"4272": {
			"sourceFileName": "../../../packages/medusa/src/utils/omit-deep.ts",
			"qualifiedName": "omitDeep"
		},
		"4273": {
			"sourceFileName": "../../../packages/medusa/src/utils/omit-deep.ts",
			"qualifiedName": "omitDeep"
		},
		"4274": {
			"sourceFileName": "../../../packages/medusa/src/utils/omit-deep.ts",
			"qualifiedName": "T"
		},
		"4275": {
			"sourceFileName": "../../../packages/medusa/src/utils/omit-deep.ts",
			"qualifiedName": "input"
		},
		"4276": {
			"sourceFileName": "../../../packages/medusa/src/utils/omit-deep.ts",
			"qualifiedName": "excludes"
		},
		"4277": {
			"sourceFileName": "../../../packages/medusa/src/utils/product-category/index.ts",
			"qualifiedName": "categoryMatchesScope"
		},
		"4278": {
			"sourceFileName": "../../../packages/medusa/src/utils/product-category/index.ts",
			"qualifiedName": "categoryMatchesScope"
		},
		"4279": {
			"sourceFileName": "../../../packages/medusa/src/utils/product-category/index.ts",
			"qualifiedName": "category"
		},
		"4280": {
			"sourceFileName": "../../../packages/medusa/src/utils/product-category/index.ts",
			"qualifiedName": "query"
		},
		"4281": {
			"sourceFileName": "../../../packages/medusa/src/utils/product-category/index.ts",
			"qualifiedName": "fetchCategoryDescendantsIds"
		},
		"4282": {
			"sourceFileName": "../../../packages/medusa/src/utils/product-category/index.ts",
			"qualifiedName": "fetchCategoryDescendantsIds"
		},
		"4283": {
			"sourceFileName": "../../../packages/medusa/src/utils/product-category/index.ts",
			"qualifiedName": "productCategory"
		},
		"4284": {
			"sourceFileName": "../../../packages/medusa/src/utils/product-category/index.ts",
			"qualifiedName": "query"
		},
		"4285": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/get-variants-from-price-list.ts",
			"qualifiedName": "getVariantsFromPriceList"
		},
		"4286": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/get-variants-from-price-list.ts",
			"qualifiedName": "getVariantsFromPriceList"
		},
		"4287": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/get-variants-from-price-list.ts",
			"qualifiedName": "container"
		},
		"4288": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/get-variants-from-price-list.ts",
			"qualifiedName": "priceListId"
		},
		"4289": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/list-products.ts",
			"qualifiedName": "listProducts"
		},
		"4290": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/list-products.ts",
			"qualifiedName": "listProducts"
		},
		"4291": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/list-products.ts",
			"qualifiedName": "container"
		},
		"4292": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/list-products.ts",
			"qualifiedName": "filterableFields"
		},
		"4293": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/list-products.ts",
			"qualifiedName": "listConfig"
		},
		"4294": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/retrieve-product.ts",
			"qualifiedName": "retrieveProduct"
		},
		"4295": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/retrieve-product.ts",
			"qualifiedName": "retrieveProduct"
		},
		"4296": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/retrieve-product.ts",
			"qualifiedName": "container"
		},
		"4297": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/retrieve-product.ts",
			"qualifiedName": "id"
		},
		"4298": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/retrieve-product.ts",
			"qualifiedName": "remoteQueryObject"
		},
		"4299": {
			"sourceFileName": "../../../packages/medusa/src/utils/queries/products/retrieve-product.ts",
			"qualifiedName": "__object"
		},
		"4300": {
			"sourceFileName": "../../../packages/medusa/src/utils/remote-query-fetch-data.ts",
			"qualifiedName": "remoteQueryFetchData"
		},
		"4301": {
			"sourceFileName": "../../../packages/medusa/src/utils/remote-query-fetch-data.ts",
			"qualifiedName": "remoteQueryFetchData"
		},
		"4302": {
			"sourceFileName": "../../../packages/medusa/src/utils/remote-query-fetch-data.ts",
			"qualifiedName": "container"
		},
		"4303": {
			"sourceFileName": "../../../packages/medusa/src/utils/remote-query-fetch-data.ts",
			"qualifiedName": "__function"
		},
		"4304": {
			"sourceFileName": "../../../packages/medusa/src/utils/remote-query-fetch-data.ts",
			"qualifiedName": "__function"
		},
		"4305": {
			"sourceFileName": "../../../packages/medusa/src/utils/remote-query-fetch-data.ts",
			"qualifiedName": "expand"
		},
		"4306": {
			"sourceFileName": "../../../packages/medusa/src/utils/remote-query-fetch-data.ts",
			"qualifiedName": "keyField"
		},
		"4307": {
			"sourceFileName": "../../../packages/medusa/src/utils/remote-query-fetch-data.ts",
			"qualifiedName": "ids"
		},
		"4308": {
			"sourceFileName": "../../../packages/medusa/src/utils/remote-query-fetch-data.ts",
			"qualifiedName": "relationship"
		},
		"4309": {
			"sourceFileName": "../../../packages/medusa/src/utils/remove-undefined-properties.ts",
			"qualifiedName": "removeUndefinedProperties"
		},
		"4310": {
			"sourceFileName": "../../../packages/medusa/src/utils/remove-undefined-properties.ts",
			"qualifiedName": "removeUndefinedProperties"
		},
		"4311": {
			"sourceFileName": "../../../packages/medusa/src/utils/remove-undefined-properties.ts",
			"qualifiedName": "T"
		},
		"4312": {
			"sourceFileName": "../../../packages/medusa/src/utils/remove-undefined-properties.ts",
			"qualifiedName": "inputObj"
		},
		"4313": {
			"sourceFileName": "../../../packages/medusa/src/utils/set-metadata.ts",
			"qualifiedName": "setMetadata"
		},
		"4314": {
			"sourceFileName": "../../../packages/medusa/src/utils/set-metadata.ts",
			"qualifiedName": "setMetadata"
		},
		"4315": {
			"sourceFileName": "../../../packages/medusa/src/utils/set-metadata.ts",
			"qualifiedName": "obj"
		},
		"4316": {
			"sourceFileName": "../../../packages/medusa/src/utils/set-metadata.ts",
			"qualifiedName": "__type"
		},
		"4317": {
			"sourceFileName": "../../../packages/medusa/src/utils/set-metadata.ts",
			"qualifiedName": "__type.metadata"
		},
		"4318": {
			"sourceFileName": "../../../packages/medusa/src/utils/set-metadata.ts",
			"qualifiedName": "metadata"
		},
		"4319": {
			"sourceFileName": "../../../packages/medusa/src/utils/validate-id.ts",
			"qualifiedName": "validateId"
		},
		"4320": {
			"sourceFileName": "../../../packages/medusa/src/utils/validate-id.ts",
			"qualifiedName": "validateId"
		},
		"4321": {
			"sourceFileName": "../../../packages/medusa/src/utils/validate-id.ts",
			"qualifiedName": "rawId"
		},
		"4322": {
			"sourceFileName": "../../../packages/medusa/src/utils/validate-id.ts",
			"qualifiedName": "config"
		},
		"4323": {
			"sourceFileName": "../../../packages/medusa/src/utils/validate-id.ts",
			"qualifiedName": "__type"
		},
		"4324": {
			"sourceFileName": "../../../packages/medusa/src/utils/validate-id.ts",
			"qualifiedName": "__type.prefix"
		},
		"4325": {
			"sourceFileName": "../../../packages/medusa/src/utils/validate-id.ts",
			"qualifiedName": "__type.length"
		},
		"4326": {
			"sourceFileName": "../../../packages/medusa/src/utils/validators/is-type.ts",
			"qualifiedName": "IsType"
		},
		"4327": {
			"sourceFileName": "../../../packages/medusa/src/utils/validators/is-type.ts",
			"qualifiedName": "IsType"
		},
		"4328": {
			"sourceFileName": "../../../packages/medusa/src/utils/validators/is-type.ts",
			"qualifiedName": "types"
		},
		"4329": {
			"sourceFileName": "../../../packages/medusa/src/utils/validators/is-type.ts",
			"qualifiedName": "validationOptions"
		},
		"4330": {
			"sourceFileName": "../../../packages/medusa/src/utils/validators/is-type.ts",
			"qualifiedName": "__function"
		},
		"4331": {
			"sourceFileName": "../../../packages/medusa/src/utils/validators/is-type.ts",
			"qualifiedName": "__function"
		},
		"4332": {
			"sourceFileName": "../../../packages/medusa/src/utils/validators/is-type.ts",
			"qualifiedName": "object"
		},
		"4333": {
			"sourceFileName": "../../../packages/medusa/src/utils/validators/is-type.ts",
			"qualifiedName": "propertyName"
		},
		"4334": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "CustomerGroupsBatchCustomer"
		},
		"4337": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "CustomerGroupsBatchCustomer.id"
		},
		"4338": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps"
		},
		"4341": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.id"
		},
		"4342": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.q"
		},
		"4343": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.name"
		},
		"4344": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.updated_at"
		},
		"4345": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.created_at"
		},
		"4346": {
			"sourceFileName": "../../../packages/medusa/src/types/customer-groups.ts",
			"qualifiedName": "FilterableCustomerGroupProps.discount_condition_id"
		},
		"4347": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector"
		},
		"4350": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.q"
		},
		"4351": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.has_account"
		},
		"4352": {
			"sourceFileName": "../../../packages/medusa/src/types/customers.ts",
			"qualifiedName": "AdminListCustomerSelector.groups"
		},
		"4353": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "Group"
		},
		"4356": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/customers/update-customer.ts",
			"qualifiedName": "Group.id"
		},
		"4357": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq"
		},
		"4360": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.products"
		},
		"4361": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_collections"
		},
		"4362": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_types"
		},
		"4363": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.product_tags"
		},
		"4364": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminUpsertConditionsReq.customer_groups"
		},
		"4365": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminGetDiscountsDiscountRuleParams"
		},
		"4368": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminGetDiscountsDiscountRuleParams.type"
		},
		"4369": {
			"sourceFileName": "../../../packages/medusa/src/types/discount.ts",
			"qualifiedName": "AdminGetDiscountsDiscountRuleParams.allocation"
		},
		"4370": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item"
		},
		"4373": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.title"
		},
		"4374": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.unit_price"
		},
		"4375": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.variant_id"
		},
		"4376": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.quantity"
		},
		"4377": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Item.metadata"
		},
		"4378": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Discount"
		},
		"4381": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "Discount.code"
		},
		"4382": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "ShippingMethod"
		},
		"4385": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "ShippingMethod.option_id"
		},
		"4386": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "ShippingMethod.data"
		},
		"4387": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/create-draft-order.ts",
			"qualifiedName": "ShippingMethod.price"
		},
		"4388": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "Discount"
		},
		"4391": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/draft-orders/update-draft-order.ts",
			"qualifiedName": "Discount.code"
		},
		"4392": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "InventoryItemDTO"
		},
		"4393": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type"
		},
		"4394": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"4395": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.sku"
		},
		"4396": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.origin_country"
		},
		"4397": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.hs_code"
		},
		"4398": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.requires_shipping"
		},
		"4399": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.mid_code"
		},
		"4400": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.material"
		},
		"4401": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.weight"
		},
		"4402": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.length"
		},
		"4403": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.height"
		},
		"4404": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.width"
		},
		"4405": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.title"
		},
		"4406": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.description"
		},
		"4407": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.thumbnail"
		},
		"4408": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"4409": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"4410": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"4411": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"4412": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "InventoryLevelDTO"
		},
		"4413": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type"
		},
		"4414": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"4415": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"4416": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"4417": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.stocked_quantity"
		},
		"4418": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.reserved_quantity"
		},
		"4419": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.incoming_quantity"
		},
		"4420": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"4421": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"4422": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"4423": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"4424": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"4425": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"4426": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"4427": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"4428": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.count"
		},
		"4429": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item"
		},
		"4432": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.item_id"
		},
		"4433": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.quantity"
		},
		"4434": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.note"
		},
		"4435": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.reason"
		},
		"4436": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.tags"
		},
		"4437": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "Item.images"
		},
		"4438": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ReturnShipping"
		},
		"4441": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ReturnShipping.option_id"
		},
		"4442": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ReturnShipping.price"
		},
		"4443": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdditionalItem"
		},
		"4446": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdditionalItem.variant_id"
		},
		"4447": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "AdditionalItem.quantity"
		},
		"4448": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod"
		},
		"4451": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod.id"
		},
		"4452": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod.option_id"
		},
		"4453": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod.price"
		},
		"4454": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-claim.ts",
			"qualifiedName": "ShippingMethod.data"
		},
		"4455": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "Item"
		},
		"4458": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "Item.item_id"
		},
		"4459": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-fulfillment.ts",
			"qualifiedName": "Item.quantity"
		},
		"4460": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem"
		},
		"4463": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem.item_id"
		},
		"4464": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem.quantity"
		},
		"4465": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem.reason_id"
		},
		"4466": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnItem.note"
		},
		"4467": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnShipping"
		},
		"4470": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnShipping.option_id"
		},
		"4471": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "ReturnShipping.price"
		},
		"4472": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdditionalItem"
		},
		"4475": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdditionalItem.variant_id"
		},
		"4476": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "AdditionalItem.quantity"
		},
		"4477": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "CustomShippingOption"
		},
		"4480": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "CustomShippingOption.option_id"
		},
		"4481": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/create-swap.ts",
			"qualifiedName": "CustomShippingOption.price"
		},
		"4482": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector"
		},
		"4485": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.q"
		},
		"4486": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.id"
		},
		"4487": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.status"
		},
		"4488": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.fulfillment_status"
		},
		"4489": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.payment_status"
		},
		"4490": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.display_id"
		},
		"4491": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.cart_id"
		},
		"4492": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.customer_id"
		},
		"4493": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.email"
		},
		"4494": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.region_id"
		},
		"4495": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.currency_code"
		},
		"4496": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.tax_rate"
		},
		"4497": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.sales_channel_id"
		},
		"4498": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.canceled_at"
		},
		"4499": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.created_at"
		},
		"4500": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "AdminListOrdersSelector.updated_at"
		},
		"4501": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem"
		},
		"4504": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem.item_id"
		},
		"4505": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem.quantity"
		},
		"4506": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem.reason_id"
		},
		"4507": {
			"sourceFileName": "../../../packages/medusa/src/types/orders.ts",
			"qualifiedName": "OrdersReturnItem.note"
		},
		"4508": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "ReturnShipping"
		},
		"4511": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "ReturnShipping.option_id"
		},
		"4512": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/request-return.ts",
			"qualifiedName": "ReturnShipping.price"
		},
		"4513": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item"
		},
		"4516": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.id"
		},
		"4517": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.note"
		},
		"4518": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.reason"
		},
		"4519": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.images"
		},
		"4520": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.tags"
		},
		"4521": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Item.metadata"
		},
		"4522": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod"
		},
		"4525": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod.id"
		},
		"4526": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod.option_id"
		},
		"4527": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod.price"
		},
		"4528": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "ShippingMethod.data"
		},
		"4529": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "PaymentMethod"
		},
		"4532": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "PaymentMethod.provider_id"
		},
		"4533": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "PaymentMethod.data"
		},
		"4534": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod"
		},
		"4537": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.provider_id"
		},
		"4538": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.profile_id"
		},
		"4539": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.price"
		},
		"4540": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.data"
		},
		"4541": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-order.ts",
			"qualifiedName": "ShippingMethod.items"
		},
		"4542": {
			"sourceFileName": "../../../packages/utils/dist/pricing/price-list.d.ts",
			"qualifiedName": "PriceListStatus"
		},
		"4543": {
			"sourceFileName": "../../../packages/utils/dist/pricing/price-list.d.ts",
			"qualifiedName": "PriceListStatus.ACTIVE"
		},
		"4544": {
			"sourceFileName": "../../../packages/utils/dist/pricing/price-list.d.ts",
			"qualifiedName": "PriceListStatus.DRAFT"
		},
		"4545": {
			"sourceFileName": "../../../packages/utils/dist/pricing/price-list.d.ts",
			"qualifiedName": "PriceListType"
		},
		"4546": {
			"sourceFileName": "../../../packages/utils/dist/pricing/price-list.d.ts",
			"qualifiedName": "PriceListType.SALE"
		},
		"4547": {
			"sourceFileName": "../../../packages/utils/dist/pricing/price-list.d.ts",
			"qualifiedName": "PriceListType.OVERRIDE"
		},
		"4548": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "CustomerGroup"
		},
		"4551": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/create-price-list.ts",
			"qualifiedName": "CustomerGroup.id"
		},
		"4552": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "CustomerGroup"
		},
		"4555": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/price-lists/update-price-list.ts",
			"qualifiedName": "CustomerGroup.id"
		},
		"4556": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase"
		},
		"4559": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.description"
		},
		"4560": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.handle"
		},
		"4561": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_internal"
		},
		"4562": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.is_active"
		},
		"4563": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "AdminProductCategoriesReqBase.parent_category_id"
		},
		"4564": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "ProductBatchProductCategory"
		},
		"4567": {
			"sourceFileName": "../../../packages/medusa/src/types/product-category.ts",
			"qualifiedName": "ProductBatchProductCategory.id"
		},
		"4568": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "PricedProduct"
		},
		"4569": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type"
		},
		"4570": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.variants"
		},
		"4571": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTypeReq"
		},
		"4574": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTypeReq.id"
		},
		"4575": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTypeReq.value"
		},
		"4576": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTagReq"
		},
		"4579": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTagReq.id"
		},
		"4580": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductTagReq.value"
		},
		"4581": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductSalesChannelReq"
		},
		"4584": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductSalesChannelReq.id"
		},
		"4585": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductProductCategoryReq"
		},
		"4588": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "ProductProductCategoryReq.id"
		},
		"4589": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductOptionReq"
		},
		"4592": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductOptionReq.title"
		},
		"4593": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq"
		},
		"4596": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.title"
		},
		"4597": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.sku"
		},
		"4598": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.ean"
		},
		"4599": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.upc"
		},
		"4600": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.barcode"
		},
		"4601": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.hs_code"
		},
		"4602": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.inventory_quantity"
		},
		"4603": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.allow_backorder"
		},
		"4604": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.manage_inventory"
		},
		"4605": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.weight"
		},
		"4606": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.length"
		},
		"4607": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.height"
		},
		"4608": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.width"
		},
		"4609": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.origin_country"
		},
		"4610": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.mid_code"
		},
		"4611": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.material"
		},
		"4612": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.metadata"
		},
		"4613": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.prices"
		},
		"4614": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantReq.options"
		},
		"4615": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq"
		},
		"4618": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.region_id"
		},
		"4619": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.currency_code"
		},
		"4620": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.amount"
		},
		"4621": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.min_quantity"
		},
		"4622": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesCreateReq.max_quantity"
		},
		"4623": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "ProductVariantOptionReq"
		},
		"4626": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "ProductVariantOptionReq.value"
		},
		"4627": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-variant.ts",
			"qualifiedName": "ProductVariantOptionReq.option_id"
		},
		"4628": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps"
		},
		"4631": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.id"
		},
		"4632": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.q"
		},
		"4633": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.status"
		},
		"4634": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.price_list_id"
		},
		"4635": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.collection_id"
		},
		"4636": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.tags"
		},
		"4637": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.title"
		},
		"4638": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.description"
		},
		"4639": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.handle"
		},
		"4640": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.is_giftcard"
		},
		"4641": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.type_id"
		},
		"4642": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.sales_channel_id"
		},
		"4643": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.discount_condition_id"
		},
		"4644": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.category_id"
		},
		"4645": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.include_category_children"
		},
		"4646": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.created_at"
		},
		"4647": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.updated_at"
		},
		"4648": {
			"sourceFileName": "../../../packages/medusa/src/types/product.ts",
			"qualifiedName": "FilterableProductProps.deleted_at"
		},
		"4649": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq"
		},
		"4652": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.id"
		},
		"4653": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.title"
		},
		"4654": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.sku"
		},
		"4655": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.ean"
		},
		"4656": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.upc"
		},
		"4657": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.barcode"
		},
		"4658": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.hs_code"
		},
		"4659": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.inventory_quantity"
		},
		"4660": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.allow_backorder"
		},
		"4661": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.manage_inventory"
		},
		"4662": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.weight"
		},
		"4663": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.length"
		},
		"4664": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.height"
		},
		"4665": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.width"
		},
		"4666": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.origin_country"
		},
		"4667": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.mid_code"
		},
		"4668": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.material"
		},
		"4669": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.metadata"
		},
		"4670": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.prices"
		},
		"4671": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantReq.options"
		},
		"4672": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq"
		},
		"4675": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.id"
		},
		"4676": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.region_id"
		},
		"4677": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.currency_code"
		},
		"4678": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.amount"
		},
		"4679": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.min_quantity"
		},
		"4680": {
			"sourceFileName": "../../../packages/medusa/src/types/product-variant.ts",
			"qualifiedName": "ProductVariantPricesUpdateReq.max_quantity"
		},
		"4681": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "ProductVariantOptionReq"
		},
		"4684": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "ProductVariantOptionReq.value"
		},
		"4685": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-variant.ts",
			"qualifiedName": "ProductVariantOptionReq.option_id"
		},
		"4686": {
			"sourceFileName": "../../../packages/medusa/src/types/sales-channels.ts",
			"qualifiedName": "ProductBatchSalesChannel"
		},
		"4689": {
			"sourceFileName": "../../../packages/medusa/src/types/sales-channels.ts",
			"qualifiedName": "ProductBatchSalesChannel.id"
		},
		"4690": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "Item"
		},
		"4693": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "Item.item_id"
		},
		"4694": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/returns/receive-return.ts",
			"qualifiedName": "Item.quantity"
		},
		"4695": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "ReservationItemDTO"
		},
		"4696": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type"
		},
		"4697": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"4698": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"4699": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"4700": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.quantity"
		},
		"4701": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.line_item_id"
		},
		"4702": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.description"
		},
		"4703": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_by"
		},
		"4704": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"4705": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"4706": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"4707": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"4708": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "OptionRequirement"
		},
		"4711": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "OptionRequirement.type"
		},
		"4712": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/create-shipping-option.ts",
			"qualifiedName": "OptionRequirement.amount"
		},
		"4713": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "OptionRequirement"
		},
		"4716": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "OptionRequirement.id"
		},
		"4717": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "OptionRequirement.type"
		},
		"4718": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/shipping-options/update-shipping-option.ts",
			"qualifiedName": "OptionRequirement.amount"
		},
		"4719": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationDTO"
		},
		"4720": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"4721": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"4722": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"4723": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"4724": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"4725": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"4726": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"4727": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"4728": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"4729": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "DeleteResponse"
		},
		"4730": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"4731": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.id"
		},
		"4732": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.object"
		},
		"4733": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.deleted"
		},
		"4734": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationExpandedDTO"
		},
		"4735": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"4736": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"4737": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress"
		},
		"4740": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.address_1"
		},
		"4741": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.address_2"
		},
		"4742": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.company"
		},
		"4743": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.city"
		},
		"4744": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.country_code"
		},
		"4745": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.phone"
		},
		"4746": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.postal_code"
		},
		"4747": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/create-stock-location.ts",
			"qualifiedName": "StockLocationAddress.province"
		},
		"4748": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress"
		},
		"4751": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.address_1"
		},
		"4752": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.address_2"
		},
		"4753": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.company"
		},
		"4754": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.city"
		},
		"4755": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.country_code"
		},
		"4756": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.phone"
		},
		"4757": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.postal_code"
		},
		"4758": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/stock-locations/update-stock-location.ts",
			"qualifiedName": "StockLocationAddress.province"
		},
		"4759": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "ExtendedStoreDTO"
		},
		"4760": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type"
		},
		"4761": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type.payment_providers"
		},
		"4762": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type.fulfillment_providers"
		},
		"4763": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type.feature_flags"
		},
		"4764": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "__type.modules"
		},
		"4765": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceUploadResult"
		},
		"4766": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type"
		},
		"4767": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"4768": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.key"
		},
		"4769": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "PricedVariant"
		},
		"4770": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "AdminPriceSelectionParams"
		},
		"4773": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "AdminPriceSelectionParams.customer_id"
		},
		"4774": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"4775": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"4776": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"4777": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"4778": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"4779": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "GiftCard"
		},
		"4782": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "GiftCard.code"
		},
		"4783": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "Discount"
		},
		"4786": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/carts/update-cart.ts",
			"qualifiedName": "Discount.code"
		},
		"4787": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams"
		},
		"4790": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.cart_id"
		},
		"4791": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.region_id"
		},
		"4792": {
			"sourceFileName": "../../../packages/medusa/src/types/price-selection.ts",
			"qualifiedName": "PriceSelectionParams.currency_code"
		},
		"4793": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.expand"
		},
		"4794": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "FindParams.fields"
		},
		"4795": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item"
		},
		"4798": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item.item_id"
		},
		"4799": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item.quantity"
		},
		"4800": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item.reason_id"
		},
		"4801": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "Item.note"
		},
		"4802": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "ReturnShipping"
		},
		"4805": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/returns/create-return.ts",
			"qualifiedName": "ReturnShipping.option_id"
		},
		"4806": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "PricedShippingOption"
		},
		"4807": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item"
		},
		"4810": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item.item_id"
		},
		"4811": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item.quantity"
		},
		"4812": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item.reason_id"
		},
		"4813": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "Item.note"
		},
		"4814": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "AdditionalItem"
		},
		"4817": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "AdditionalItem.variant_id"
		},
		"4818": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/store/swaps/create-swap.ts",
			"qualifiedName": "AdditionalItem.quantity"
		},
		"4819": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError"
		},
		"4820": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.Types"
		},
		"4821": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type"
		},
		"4822": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.DB_ERROR"
		},
		"4823": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.DUPLICATE_ERROR"
		},
		"4824": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.INVALID_ARGUMENT"
		},
		"4825": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.INVALID_DATA"
		},
		"4826": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.UNAUTHORIZED"
		},
		"4827": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.NOT_FOUND"
		},
		"4828": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.NOT_ALLOWED"
		},
		"4829": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.UNEXPECTED_STATE"
		},
		"4830": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.CONFLICT"
		},
		"4831": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.PAYMENT_AUTHORIZATION_ERROR"
		},
		"4832": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.Codes"
		},
		"4833": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type"
		},
		"4834": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.INSUFFICIENT_INVENTORY"
		},
		"4835": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "__type.CART_INCOMPATIBLE_STATE"
		},
		"4836": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.__constructor"
		},
		"4837": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError"
		},
		"4838": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "type"
		},
		"4839": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "message"
		},
		"4840": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "code"
		},
		"4841": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "params"
		},
		"4842": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.type"
		},
		"4843": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.message"
		},
		"4844": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.code"
		},
		"4845": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/errors.d.ts",
			"qualifiedName": "MedusaError.date"
		},
		"4846": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "handler"
		},
		"4847": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "__type"
		},
		"4848": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "__type"
		},
		"4849": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "req"
		},
		"4850": {
			"sourceFileName": "../../../packages/medusa/src/api/middlewares/await-middleware.ts",
			"qualifiedName": "res"
		},
		"4851": {
			"sourceFileName": "../../../packages/medusa/src/types/request.ts",
			"qualifiedName": "RequestContext"
		},
		"4852": {
			"sourceFileName": "../../../packages/medusa/src/types/request.ts",
			"qualifiedName": "__type"
		},
		"4853": {
			"sourceFileName": "../../../packages/medusa/src/types/request.ts",
			"qualifiedName": "__type.ip"
		},
		"4854": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "DeleteFileType"
		},
		"4855": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type"
		},
		"4856": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"4857": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.__index"
		},
		"4859": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "UploadStreamDescriptorType"
		},
		"4860": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type"
		},
		"4861": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.name"
		},
		"4862": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.ext"
		},
		"4863": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"4864": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.__index"
		},
		"4866": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceGetUploadStreamResult"
		},
		"4867": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type"
		},
		"4868": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.writeStream"
		},
		"4869": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.promise"
		},
		"4870": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"4871": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"4872": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.__index"
		},
		"4874": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "GetUploadedFileType"
		},
		"4875": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type"
		},
		"4876": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"4877": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"4878": {
			"sourceFileName": "../../../packages/types/src/file-service/index.ts",
			"qualifiedName": "__type.__index"
		},
		"4880": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "ShippingOptionData"
		},
		"4881": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "FulfillmentProviderData"
		},
		"4882": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/fulfillment-service.ts",
			"qualifiedName": "ShippingMethodData"
		},
		"4883": {
			"sourceFileName": "../../../packages/medusa/src/types/fulfillment-provider.ts",
			"qualifiedName": "CreateReturnType"
		},
		"4884": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"4885": {
			"sourceFileName": "../../../packages/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"4895": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "MedusaContainer"
		},
		"4896": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"4897": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type.registerAdd"
		},
		"4898": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"4899": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"4900": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "name"
		},
		"4901": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "registration"
		},
		"4902": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "T"
		},
		"4903": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type.createScope"
		},
		"4904": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"4905": {
			"sourceFileName": "../../../packages/medusa-core-utils/dist/medusa-container.d.ts",
			"qualifiedName": "__type"
		},
		"4906": {
			"sourceFileName": "../../../packages/medusa/index.d.ts",
			"qualifiedName": "\"medusa-interfaces\""
		},
		"4907": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService"
		},
		"4908": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"4909": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"4910": {
			"sourceFileName": "../../../packages/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"4911": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "TaxServiceRate"
		},
		"4912": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type"
		},
		"4913": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.rate"
		},
		"4914": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.name"
		},
		"4915": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.code"
		},
		"4916": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "DefaultPriceType.DEFAULT"
		},
		"4917": {
			"sourceFileName": "../../../packages/medusa/src/interfaces/price-selection-strategy.ts",
			"qualifiedName": "DefaultPriceType"
		},
		"4918": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "LineAllocationsMap"
		},
		"4919": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "__type"
		},
		"4920": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "__type.__index"
		},
		"4922": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "__type"
		},
		"4923": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "__type.gift_card"
		},
		"4924": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "__type.discount"
		},
		"4925": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "ProviderTaxLine"
		},
		"4926": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"4927": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"4928": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"4929": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"4930": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"4931": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"4932": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"4933": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"4934": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"4935": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"4936": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"4937": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"4938": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"4939": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"4940": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"4941": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"4942": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"4943": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"4944": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"4945": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"4946": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"4947": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"4948": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"4949": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"4950": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"4951": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"4952": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"4953": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "InnerSelector"
		},
		"4954": {
			"sourceFileName": "../../../packages/medusa/src/types/common.ts",
			"qualifiedName": "TEntity"
		},
		"4955": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ConfigModule"
		},
		"4956": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"4957": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.projectConfig"
		},
		"4958": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.featureFlags"
		},
		"4959": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.modules"
		},
		"4960": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.plugins"
		},
		"4961": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"4962": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resolve"
		},
		"4963": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.options"
		},
		"4964": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "MiddlewareVerb"
		},
		"4965": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "ParserConfig"
		},
		"4966": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type"
		},
		"4967": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type.sizeLimit"
		},
		"4968": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "MedusaErrorHandlerFunction"
		},
		"4969": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type"
		},
		"4970": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "__type"
		},
		"4971": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "error"
		},
		"4972": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "req"
		},
		"4973": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "res"
		},
		"4974": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "next"
		},
		"4975": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext"
		},
		"4976": {
			"sourceFileName": "../../../packages/medusa/src/types/subscribers.ts",
			"qualifiedName": "SubscriberContext.subscriberId"
		},
		"4977": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"4978": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"4979": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"4980": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"4981": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"4982": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO"
		},
		"4983": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.id"
		},
		"4984": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.title"
		},
		"4985": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.sku"
		},
		"4986": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.barcode"
		},
		"4987": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.ean"
		},
		"4988": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.upc"
		},
		"4989": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.inventory_quantity"
		},
		"4990": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.allow_backorder"
		},
		"4991": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.manage_inventory"
		},
		"4992": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.hs_code"
		},
		"4993": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.origin_country"
		},
		"4994": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.mid_code"
		},
		"4995": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.material"
		},
		"4996": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.weight"
		},
		"4997": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.length"
		},
		"4998": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.height"
		},
		"4999": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.width"
		},
		"5000": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.options"
		},
		"5001": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.metadata"
		},
		"5002": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product"
		},
		"5003": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.product_id"
		},
		"5004": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.variant_rank"
		},
		"5005": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.created_at"
		},
		"5006": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.updated_at"
		},
		"5007": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductVariantDTO.deleted_at"
		},
		"5008": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Image"
		},
		"5011": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Image.id"
		},
		"5012": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Image.url"
		},
		"5013": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Tag"
		},
		"5016": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Tag.id"
		},
		"5017": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/orders/update-claim.ts",
			"qualifiedName": "Tag.value"
		},
		"5018": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantOptionReq"
		},
		"5021": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/create-product.ts",
			"qualifiedName": "ProductVariantOptionReq.value"
		},
		"5022": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantOptionReq"
		},
		"5025": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantOptionReq.value"
		},
		"5026": {
			"sourceFileName": "../../../packages/medusa/src/api/routes/admin/products/update-product.ts",
			"qualifiedName": "ProductVariantOptionReq.option_id"
		},
		"5027": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationAddressDTO"
		},
		"5028": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"5029": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"5030": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"5031": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"5032": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.company"
		},
		"5033": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"5034": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.city"
		},
		"5035": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.phone"
		},
		"5036": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"5037": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.province"
		},
		"5038": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"5039": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"5040": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"5041": {
			"sourceFileName": "../../../packages/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"5042": {
			"sourceFileName": "../../../packages/medusa/src/types/feature-flags.ts",
			"qualifiedName": "FeatureFlagsResponse"
		},
		"5043": {
			"sourceFileName": "../../../packages/medusa/src/types/feature-flags.ts",
			"qualifiedName": "__type"
		},
		"5044": {
			"sourceFileName": "../../../packages/medusa/src/types/feature-flags.ts",
			"qualifiedName": "__type.key"
		},
		"5045": {
			"sourceFileName": "../../../packages/medusa/src/types/feature-flags.ts",
			"qualifiedName": "__type.value"
		},
		"5046": {
			"sourceFileName": "../../../packages/medusa/src/types/store.ts",
			"qualifiedName": "ModulesResponse"
		},
		"5047": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "ProductVariantPricing"
		},
		"5048": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type"
		},
		"5049": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.prices"
		},
		"5050": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.original_price"
		},
		"5051": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_price"
		},
		"5052": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.original_price_includes_tax"
		},
		"5053": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_price_includes_tax"
		},
		"5054": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_price_type"
		},
		"5055": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "ShippingOptionPricing"
		},
		"5056": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type"
		},
		"5057": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.price_incl_tax"
		},
		"5058": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"5059": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.tax_amount"
		},
		"5060": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "GiftCardAllocation"
		},
		"5061": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "__type"
		},
		"5062": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "__type.amount"
		},
		"5063": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "__type.unit_amount"
		},
		"5064": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "DiscountAllocation"
		},
		"5065": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "__type"
		},
		"5066": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "__type.amount"
		},
		"5067": {
			"sourceFileName": "../../../packages/medusa/src/types/totals.ts",
			"qualifiedName": "__type.unit_amount"
		},
		"5068": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "ProviderLineItemTaxLine"
		},
		"5069": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type"
		},
		"5070": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.rate"
		},
		"5071": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.name"
		},
		"5072": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.code"
		},
		"5073": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.item_id"
		},
		"5074": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.metadata"
		},
		"5075": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "ProviderShippingMethodTaxLine"
		},
		"5076": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type"
		},
		"5077": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.rate"
		},
		"5078": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.name"
		},
		"5079": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.code"
		},
		"5080": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.metadata"
		},
		"5081": {
			"sourceFileName": "../../../packages/medusa/src/types/tax-service.ts",
			"qualifiedName": "__type.shipping_method_id"
		},
		"5082": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"5083": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"5084": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"5085": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"5086": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"5087": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"5088": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"5089": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"5090": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"5091": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"5092": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"5093": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"5094": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"5095": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"5096": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"5097": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"5098": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"5099": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"5100": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "ProjectConfigOptions"
		},
		"5101": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"5102": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_url"
		},
		"5103": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_prefix"
		},
		"5104": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.redis_options"
		},
		"5105": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.session_options"
		},
		"5106": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwt_secret"
		},
		"5107": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.cookie_secret"
		},
		"5108": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_url"
		},
		"5109": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_database"
		},
		"5110": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_schema"
		},
		"5111": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_logging"
		},
		"5112": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_type"
		},
		"5113": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.http_compression"
		},
		"5114": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.database_extra"
		},
		"5115": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"5116": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"5117": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"5118": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"5119": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.store_cors"
		},
		"5120": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.admin_cors"
		},
		"5121": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"5122": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"5123": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"5124": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resources"
		},
		"5125": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"5126": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"5127": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"5128": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"5129": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"5130": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"5131": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"5132": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"5133": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"5134": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"5135": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"5136": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"5137": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"5138": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"5139": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"5140": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"5141": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"5142": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"5143": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "RouteVerb"
		},
		"5144": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO"
		},
		"5145": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.id"
		},
		"5146": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.value"
		},
		"5147": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.option"
		},
		"5148": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.variant"
		},
		"5149": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.metadata"
		},
		"5150": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionValueDTO.deleted_at"
		},
		"5151": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO"
		},
		"5152": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.id"
		},
		"5153": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.title"
		},
		"5154": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.handle"
		},
		"5155": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.subtitle"
		},
		"5156": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.description"
		},
		"5157": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.is_giftcard"
		},
		"5158": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.status"
		},
		"5159": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.thumbnail"
		},
		"5160": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.width"
		},
		"5161": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.weight"
		},
		"5162": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.length"
		},
		"5163": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.height"
		},
		"5164": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.origin_country"
		},
		"5165": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.hs_code"
		},
		"5166": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.mid_code"
		},
		"5167": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.material"
		},
		"5168": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.collection"
		},
		"5169": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.categories"
		},
		"5170": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.type"
		},
		"5171": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.tags"
		},
		"5172": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.variants"
		},
		"5173": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.options"
		},
		"5174": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.images"
		},
		"5175": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.discountable"
		},
		"5176": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.external_id"
		},
		"5177": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.created_at"
		},
		"5178": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.updated_at"
		},
		"5179": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.deleted_at"
		},
		"5180": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductDTO.metadata"
		},
		"5181": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModulesResponse"
		},
		"5182": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"5183": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"5184": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolution"
		},
		"5185": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "TaxedPricing"
		},
		"5186": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type"
		},
		"5187": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.original_price_incl_tax"
		},
		"5188": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_price_incl_tax"
		},
		"5189": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.original_tax"
		},
		"5190": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.calculated_tax"
		},
		"5191": {
			"sourceFileName": "../../../packages/medusa/src/types/pricing.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"5192": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"5193": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"5194": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"5195": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"5196": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"5197": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"5198": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"5199": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"5200": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"5201": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"5202": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"5203": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"5204": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"5205": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "SessionOptions"
		},
		"5206": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"5207": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"5208": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.resave"
		},
		"5209": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.rolling"
		},
		"5210": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.saveUninitialized"
		},
		"5211": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.secret"
		},
		"5212": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.ttl"
		},
		"5213": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "HttpCompressionOptions"
		},
		"5214": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"5215": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.enabled"
		},
		"5216": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.level"
		},
		"5217": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.memLevel"
		},
		"5218": {
			"sourceFileName": "../../../packages/types/src/common/config-module.ts",
			"qualifiedName": "__type.threshold"
		},
		"5219": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.INTERNAL"
		},
		"5220": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE"
		},
		"5221": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.SHARED"
		},
		"5222": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_RESOURCE_TYPE.ISOLATED"
		},
		"5223": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"5224": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"5225": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"5226": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"5227": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"5228": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"5229": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.canOverride"
		},
		"5230": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"5231": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"5232": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLegacy"
		},
		"5233": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"5234": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"5235": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "MODULE_SCOPE.EXTERNAL"
		},
		"5236": {
			"sourceFileName": "../../../packages/medusa/src/loaders/helpers/routing/types.ts",
			"qualifiedName": "HTTP_METHODS"
		},
		"5237": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO"
		},
		"5238": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.id"
		},
		"5239": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.title"
		},
		"5240": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.product"
		},
		"5241": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.values"
		},
		"5242": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.metadata"
		},
		"5243": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductOptionDTO.deleted_at"
		},
		"5244": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductStatus"
		},
		"5245": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductStatus.DRAFT"
		},
		"5246": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductStatus.PROPOSED"
		},
		"5247": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductStatus.PUBLISHED"
		},
		"5248": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductStatus.REJECTED"
		},
		"5249": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO"
		},
		"5250": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.id"
		},
		"5251": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.title"
		},
		"5252": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.handle"
		},
		"5253": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.metadata"
		},
		"5254": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.deleted_at"
		},
		"5255": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCollectionDTO.products"
		},
		"5256": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO"
		},
		"5257": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.id"
		},
		"5258": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.name"
		},
		"5259": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.description"
		},
		"5260": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.handle"
		},
		"5261": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.is_active"
		},
		"5262": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.is_internal"
		},
		"5263": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.rank"
		},
		"5264": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.parent_category"
		},
		"5265": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.category_children"
		},
		"5266": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.created_at"
		},
		"5267": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductCategoryDTO.updated_at"
		},
		"5268": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO"
		},
		"5269": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.id"
		},
		"5270": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.value"
		},
		"5271": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.metadata"
		},
		"5272": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTypeDTO.deleted_at"
		},
		"5273": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO"
		},
		"5274": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.id"
		},
		"5275": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.value"
		},
		"5276": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.metadata"
		},
		"5277": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductTagDTO.products"
		},
		"5278": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO"
		},
		"5279": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.id"
		},
		"5280": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.url"
		},
		"5281": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.metadata"
		},
		"5282": {
			"sourceFileName": "../../../packages/types/src/product/common.ts",
			"qualifiedName": "ProductImageDTO.deleted_at"
		}
	}
}