{
	"id": 0,
	"name": "inventory",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 272,
			"name": "BulkUpdateInventoryLevelInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
					}
				]
			},
			"children": [
				{
					"id": 276,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The incoming quantity of the associated inventory item in the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 457,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L457"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 273,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated inventory level."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 469,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L469"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 274,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 473,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L473"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 275,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The stocked quantity of the associated inventory item in the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 453,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L453"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						276,
						273,
						274,
						275
					]
				}
			],
			"sources": [
				{
					"fileName": "inventory/common.ts",
					"line": 465,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L465"
				}
			]
		},
		{
			"id": 251,
			"name": "CreateInventoryItemInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the inventory item to be created."
					}
				]
			},
			"children": [
				{
					"id": 261,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 329,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L329"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 258,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 317,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L317"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 264,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS code of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 341,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L341"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 257,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 313,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L313"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 255,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 305,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L305"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 263,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 337,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L337"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 254,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID code of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 301,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L301"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 253,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 297,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L297"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 265,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the inventory item requires shipping."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 345,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L345"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 252,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 293,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L293"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 262,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 333,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L333"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 260,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 325,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L325"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 256,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 309,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L309"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 259,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 321,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L321"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						261,
						258,
						264,
						257,
						255,
						263,
						254,
						253,
						265,
						252,
						262,
						260,
						256,
						259
					]
				}
			],
			"sources": [
				{
					"fileName": "inventory/common.ts",
					"line": 289,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L289"
				}
			]
		},
		{
			"id": 266,
			"name": "CreateInventoryLevelInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the inventory level to be created."
					}
				]
			},
			"children": [
				{
					"id": 271,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The incoming quantity of the associated inventory item in the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 441,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L441"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 267,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 425,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L425"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 268,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 429,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L429"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 270,
					"name": "reserved_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reserved quantity of the associated inventory item in the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 437,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L437"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 269,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The stocked quantity of the associated inventory item in the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 433,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L433"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						271,
						267,
						268,
						270,
						269
					]
				}
			],
			"sources": [
				{
					"fileName": "inventory/common.ts",
					"line": 421,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L421"
				}
			]
		},
		{
			"id": 242,
			"name": "CreateReservationItemInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the reservation item to be created."
					}
				]
			},
			"children": [
				{
					"id": 248,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user or system that created the reservation. Can be any form of identification string."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 377,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L377"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 247,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the reservation."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 373,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L373"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 249,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An ID associated with an external third-party system that the reservation item is connected to."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 381,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L381"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 244,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 361,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L361"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 243,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated line item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 357,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L357"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 245,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 365,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L365"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 250,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 385,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L385"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 246,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reserved quantity."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 369,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L369"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						248,
						247,
						249,
						244,
						243,
						245,
						250,
						246
					]
				}
			],
			"sources": [
				{
					"fileName": "inventory/common.ts",
					"line": 353,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L353"
				}
			]
		},
		{
			"id": 160,
			"name": "FilterableInventoryItemProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved inventory items."
					}
				]
			},
			"children": [
				{
					"id": 166,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Codes to filter inventory items by."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 277,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L277"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 303,
								"name": "StringComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 161,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter inventory items by."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 257,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L257"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 162,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory items by the ID of their associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 261,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L261"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 165,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country to filter inventory items by."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 273,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L273"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 163,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search inventory items' attributes."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 265,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L265"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 167,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory items by whether they require shipping."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 281,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L281"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 164,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKUs to filter inventory items by."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 269,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L269"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 303,
								"name": "StringComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						166,
						161,
						162,
						165,
						163,
						167,
						164
					]
				}
			],
			"sources": [
				{
					"fileName": "inventory/common.ts",
					"line": 253,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L253"
				}
			]
		},
		{
			"id": 224,
			"name": "FilterableInventoryLevelProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved inventory levels."
					}
				]
			},
			"children": [
				{
					"id": 229,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on inventory levels' "
							},
							{
								"kind": "code",
								"text": "`incoming_quantity`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 413,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L413"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 311,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 225,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory levels by the ID of their associated inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 397,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L397"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 226,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory levels by the ID of their associated inventory location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 401,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L401"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 228,
					"name": "reserved_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on inventory levels' "
							},
							{
								"kind": "code",
								"text": "`reserved_quantity`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 409,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L409"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 311,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 227,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on inventory levels' "
							},
							{
								"kind": "code",
								"text": "`stocked_quantity`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 405,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L405"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 311,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						229,
						225,
						226,
						228,
						227
					]
				}
			],
			"sources": [
				{
					"fileName": "inventory/common.ts",
					"line": 393,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L393"
				}
			]
		},
		{
			"id": 202,
			"name": "FilterableReservationItemProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved reservation items."
					}
				]
			},
			"children": [
				{
					"id": 209,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The \"created by\" values to filter reservation items by."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 241,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L241"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 208,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description filters to apply on the reservation items' "
							},
							{
								"kind": "code",
								"text": "`description`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 237,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L237"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 303,
								"name": "StringComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 203,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter reservation items by."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 214,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L214"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 206,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter reservation items by the ID of their associated inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 229,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L229"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 205,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter reservation items by the ID of their associated line item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 225,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L225"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 207,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter reservation items by the ID of their associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 233,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L233"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 210,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on the reservation items' "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 245,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L245"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 311,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						209,
						208,
						203,
						206,
						205,
						207,
						210
					]
				}
			],
			"sources": [
				{
					"fileName": "inventory/common.ts",
					"line": 210,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L210"
				}
			]
		},
		{
			"id": 168,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 173,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 70,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L70"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 174,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "common/common.ts",
									"line": 70,
									"character": 10,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L70"
								}
							],
							"indexSignature": {
								"id": 175,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"sources": [
									{
										"fileName": "common/common.ts",
										"line": 70,
										"character": 12,
										"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L70"
									}
								],
								"parameters": [
									{
										"id": 176,
										"name": "K",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "ASC"
										},
										{
											"type": "literal",
											"value": "DESC"
										}
									]
								}
							}
						}
					}
				},
				{
					"id": 172,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 65,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L65"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 169,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 53,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L53"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": -1,
										"name": "Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 170,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 57,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L57"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 171,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 61,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L61"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 177,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 75,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L75"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						173,
						172,
						169,
						170,
						171,
						177
					]
				}
			],
			"sources": [
				{
					"fileName": "common/common.ts",
					"line": 49,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L49"
				}
			],
			"typeParameters": [
				{
					"id": 178,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 1,
			"name": "IInventoryService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 106,
					"name": "adjustInventory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 911,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L911"
						}
					],
					"signatures": [
						{
							"id": 107,
							"name": "adjustInventory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to adjust the inventory level's stocked quantity. The inventory level is identified by the IDs of its associated inventory item and location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The inventory level's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function adjustInventory (\n  inventoryItemId: string,\n  locationId: string,\n  adjustment: number\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const inventoryLevel = await inventoryModule.adjustInventory(\n    inventoryItemId,\n    locationId,\n    adjustment\n  )\n\n  // do something with the inventory level or return it.\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 911,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L911"
								}
							],
							"parameters": [
								{
									"id": 108,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated inventory item."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 109,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 110,
									"name": "adjustment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A positive or negative number used to adjust the inventory level's stocked quantity."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 111,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 230,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 112,
					"name": "confirmInventory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 946,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L946"
						}
					],
					"signatures": [
						{
							"id": 113,
							"name": "confirmInventory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to confirm whether the specified quantity of an inventory item is available in the specified locations."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the specified quantity is available for the inventory item in the specified locations."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function confirmInventory (\n  inventoryItemId: string,\n  locationIds: string[],\n  quantity: number\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  return await inventoryModule.confirmInventory(\n    inventoryItemId,\n    locationIds,\n    quantity\n  )\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 946,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L946"
								}
							],
							"parameters": [
								{
									"id": 114,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the inventory item to check its availability."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 115,
									"name": "locationIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the locations to check the quantity availability in."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 116,
									"name": "quantity",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quantity to check if available for the inventory item in the specified locations."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 117,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 41,
					"name": "createInventoryItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 450,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L450"
						}
					],
					"signatures": [
						{
							"id": 42,
							"name": "createInventoryItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create an inventory item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created inventory item's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function createInventoryItem (item: {\n  sku: string,\n  requires_shipping: boolean\n}) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const inventoryItem = await inventoryModule.createInventoryItem(\n    item\n  )\n\n  // do something with the inventory item or return it\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 450,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L450"
								}
							],
							"parameters": [
								{
									"id": 43,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the inventory item to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 251,
										"name": "CreateInventoryItemInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 44,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 179,
										"name": "InventoryItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 45,
					"name": "createInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 480,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L480"
						}
					],
					"signatures": [
						{
							"id": 46,
							"name": "createInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create inventory items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created inventory items' details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function createInventoryItems (items: {\n  sku: string,\n  requires_shipping: boolean\n}[]) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const inventoryItems = await inventoryModule.createInventoryItems(\n    items\n  )\n\n  // do something with the inventory items or return them\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 480,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L480"
								}
							],
							"parameters": [
								{
									"id": 47,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the inventory items to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 251,
											"name": "CreateInventoryItemInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 48,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 179,
											"name": "InventoryItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 49,
					"name": "createInventoryLevel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 511,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L511"
						}
					],
					"signatures": [
						{
							"id": 50,
							"name": "createInventoryLevel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create inventory level."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created inventory level's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function createInventoryLevel (item: {\n  inventory_item_id: string\n  location_id: string\n  stocked_quantity: number\n}) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const inventoryLevel = await inventoryModule.createInventoryLevel(\n    item\n  )\n\n  // do something with the inventory level or return it\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 511,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L511"
								}
							],
							"parameters": [
								{
									"id": 51,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the inventory level to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 266,
										"name": "CreateInventoryLevelInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 52,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 230,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 53,
					"name": "createInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 542,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L542"
						}
					],
					"signatures": [
						{
							"id": 54,
							"name": "createInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create inventory levels."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created inventory levels' details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function createInventoryLevels (items: {\n  inventory_item_id: string\n  location_id: string\n  stocked_quantity: number\n}[]) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const inventoryLevels = await inventoryModule.createInventoryLevels(\n    items\n  )\n\n  // do something with the inventory levels or return them\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 542,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L542"
								}
							],
							"parameters": [
								{
									"id": 55,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the inventory levels to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 266,
											"name": "CreateInventoryLevelInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 56,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 230,
											"name": "InventoryLevelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 33,
					"name": "createReservationItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 389,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L389"
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "createReservationItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create a reservation item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created reservation item's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function createReservationItem (item: {\n  inventory_item_id: string,\n  location_id: string,\n  quantity: number\n}) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const reservationItem = await inventoryModule.createReservationItems(\n    item\n  )\n\n  // do something with the reservation item or return them\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 389,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L389"
								}
							],
							"parameters": [
								{
									"id": 35,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the reservation item to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 242,
										"name": "CreateReservationItemInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 36,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 211,
										"name": "ReservationItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 37,
					"name": "createReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 420,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L420"
						}
					],
					"signatures": [
						{
							"id": 38,
							"name": "createReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to create reservation items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created reservation items' details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function createReservationItems (items: {\n  inventory_item_id: string,\n  location_id: string,\n  quantity: number\n}[]) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const reservationItems = await inventoryModule.createReservationItems(\n    items\n  )\n\n  // do something with the reservation items or return them\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 420,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L420"
								}
							],
							"parameters": [
								{
									"id": 39,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the reservation items to create."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 242,
											"name": "CreateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 40,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 211,
											"name": "ReservationItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 85,
					"name": "deleteInventoryItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 764,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L764"
						}
					],
					"signatures": [
						{
							"id": 86,
							"name": "deleteInventoryItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete an inventory item or multiple inventory items. The inventory items are only soft deleted and can be restored using the\n"
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "restoreInventoryItem",
										"target": 89,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the inventory item(s) are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function deleteInventoryItem (\n  inventoryItems: string[]\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.deleteInventoryItem(\n    inventoryItems\n  )\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 764,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L764"
								}
							],
							"parameters": [
								{
									"id": 87,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID(s) of the inventory item(s) to delete."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 88,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 93,
					"name": "deleteInventoryItemLevelByLocationId",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 818,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L818"
						}
					],
					"signatures": [
						{
							"id": 94,
							"name": "deleteInventoryItemLevelByLocationId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes the inventory item level(s) for the ID(s) of associated location(s)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the inventory item level(s) are successfully restored."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function deleteInventoryItemLevelByLocationId (\n  locationIds: string[]\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.deleteInventoryItemLevelByLocationId(\n    locationIds\n  )\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 818,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L818"
								}
							],
							"parameters": [
								{
									"id": 95,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID(s) of the associated location(s)."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 96,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 101,
					"name": "deleteInventoryLevel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 875,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L875"
						}
					],
					"signatures": [
						{
							"id": 102,
							"name": "deleteInventoryLevel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the inventory level(s) are successfully restored."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function deleteInventoryLevel (\n  inventoryItemId: string,\n  locationId: string\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.deleteInventoryLevel(\n    inventoryItemId,\n    locationId\n  )\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 875,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L875"
								}
							],
							"parameters": [
								{
									"id": 103,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated inventory item."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 104,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the associated location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 105,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 81,
					"name": "deleteReservationItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 736,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L736"
						}
					],
					"signatures": [
						{
							"id": 82,
							"name": "deleteReservationItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete a reservation item or multiple reservation items by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the reservation item(s) are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function deleteReservationItems (\n  reservationItemIds: string[]\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.deleteReservationItem(\n    reservationItemIds\n  )\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 736,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L736"
								}
							],
							"parameters": [
								{
									"id": 83,
									"name": "reservationItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID(s) of the reservation item(s) to delete."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 84,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 97,
					"name": "deleteReservationItemByLocationId",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 845,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L845"
						}
					],
					"signatures": [
						{
							"id": 98,
							"name": "deleteReservationItemByLocationId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes reservation item(s) by the ID(s) of associated location(s)."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the reservation item(s) are successfully restored."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function deleteReservationItemByLocationId (\n  locationIds: string[]\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.deleteReservationItemByLocationId(\n    locationIds\n  )\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 845,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L845"
								}
							],
							"parameters": [
								{
									"id": 99,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID(s) of the associated location(s)."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 100,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 77,
					"name": "deleteReservationItemsByLineItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 709,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L709"
						}
					],
					"signatures": [
						{
							"id": 78,
							"name": "deleteReservationItemsByLineItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to delete the reservation items associated with a line item or multiple line items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the reservation items are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function deleteReservationItemsByLineItem (\n  lineItemIds: string[]\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.deleteReservationItemsByLineItem(\n    lineItemIds\n  )\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 709,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L709"
								}
							],
							"parameters": [
								{
									"id": 79,
									"name": "lineItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID(s) of the line item(s)."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 80,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share re9sources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4,
					"name": "listInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 96,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L96"
						}
					],
					"signatures": [
						{
							"id": 5,
							"name": "listInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of inventory items along with the total count of available inventory items satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of inventory items along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of inventory items using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveInventoryItems (ids: string[]) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const [inventoryItems, count] = await inventoryModule.listInventoryItems({\n    id: ids\n  })\n\n  // do something with the inventory items or return them\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveInventoryItems (ids: string[]) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const [inventoryItems, count] = await inventoryModule.listInventoryItems({\n    id: ids\n  }, {\n    relations: [\"inventory_level\"]\n  })\n\n  // do something with the inventory items or return them\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveInventoryItems (ids: string[], skip: number, take: number) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const [inventoryItems, count] = await inventoryModule.listInventoryItems({\n    id: ids\n  }, {\n    relations: [\"inventory_level\"],\n    skip,\n    take\n  })\n\n  // do something with the inventory items or return them\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 96,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L96"
								}
							],
							"parameters": [
								{
									"id": 6,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved inventory items."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 160,
										"name": "FilterableInventoryItemProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 7,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory items are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 168,
										"typeArguments": [
											{
												"type": "reference",
												"target": 179,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 8,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 179,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 14,
					"name": "listInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 248,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L248"
						}
					],
					"signatures": [
						{
							"id": 15,
							"name": "listInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of inventory levels along with the total count of available inventory levels satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of inventory levels along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of inventory levels using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveInventoryLevels (inventoryItemIds: string[]) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const [inventoryLevels, count] = await inventoryModule.listInventoryLevels({\n    inventory_item_id: inventoryItemIds\n  })\n\n  // do something with the inventory levels or return them\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveInventoryLevels (inventoryItemIds: string[]) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const [inventoryLevels, count] = await inventoryModule.listInventoryLevels({\n    inventory_item_id: inventoryItemIds\n  }, {\n    relations: [\"inventory_item\"]\n  })\n\n  // do something with the inventory levels or return them\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveInventoryLevels (inventoryItemIds: string[], skip: number, take: number) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const [inventoryLevels, count] = await inventoryModule.listInventoryLevels({\n    inventory_item_id: inventoryItemIds\n  }, {\n    relations: [\"inventory_item\"],\n    skip,\n    take\n  })\n\n  // do something with the inventory levels or return them\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 248,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L248"
								}
							],
							"parameters": [
								{
									"id": 16,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved inventory levels."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 224,
										"name": "FilterableInventoryLevelProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 17,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory levels are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory level."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 168,
										"typeArguments": [
											{
												"type": "reference",
												"target": 230,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 18,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 230,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 9,
					"name": "listReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 172,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L172"
						}
					],
					"signatures": [
						{
							"id": 10,
							"name": "listReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a paginated list of reservation items along with the total count of available reservation items satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of reservation items along with the total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of reservation items using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveReservationItems (ids: string[]) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const [reservationItems, count] = await inventoryModule.listReservationItems({\n    id: ids\n  })\n\n  // do something with the reservation items or return them\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveReservationItems (ids: string[]) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const [reservationItems, count] = await inventoryModule.listReservationItems({\n    id: ids\n  }, {\n    relations: [\"inventory_item\"]\n  })\n\n  // do something with the reservation items or return them\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveReservationItems (ids: string[], skip: number, take: number) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const [reservationItems, count] = await inventoryModule.listReservationItems({\n    id: ids\n  }, {\n    relations: [\"inventory_item\"],\n    skip,\n    take\n  })\n\n  // do something with the reservation items or return them\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 172,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L172"
								}
							],
							"parameters": [
								{
									"id": 11,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved reservation items."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 202,
										"name": "FilterableReservationItemProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 12,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the reservation items are retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a reservation item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 168,
										"typeArguments": [
											{
												"type": "reference",
												"target": 211,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 13,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 211,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 89,
					"name": "restoreInventoryItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 791,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L791"
						}
					],
					"signatures": [
						{
							"id": 90,
							"name": "restoreInventoryItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore an inventory item or multiple inventory items that were previously deleted using the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "deleteInventoryItem",
										"target": 85,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the inventory item(s) are successfully restored."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function restoreInventoryItem (\n  inventoryItems: string[]\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.restoreInventoryItem(\n    inventoryItems\n  )\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 791,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L791"
								}
							],
							"parameters": [
								{
									"id": 91,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID(s) of the inventory item(s) to restore."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 92,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 118,
					"name": "retrieveAvailableQuantity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 980,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L980"
						}
					],
					"signatures": [
						{
							"id": 119,
							"name": "retrieveAvailableQuantity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve the available quantity of an inventory item within the specified locations."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The available quantity of the inventory item in the specified locations."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveAvailableQuantity (\n  inventoryItemId: string,\n  locationIds: string[],\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const quantity = await inventoryModule.retrieveAvailableQuantity(\n    inventoryItemId,\n    locationIds,\n  )\n  \n  // do something with the quantity or return it\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 980,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L980"
								}
							],
							"parameters": [
								{
									"id": 120,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the inventory item to retrieve its quantity."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 121,
									"name": "locationIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the locations to retrieve the available quantity from."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 122,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 19,
					"name": "retrieveInventoryItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 299,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L299"
						}
					],
					"signatures": [
						{
							"id": 20,
							"name": "retrieveInventoryItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve an inventory item by its ID"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved inventory item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a inventory item by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveInventoryItem (id: string) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const inventoryItem = await inventoryModule.retrieveInventoryItem(id)\n\n  // do something with the inventory item or return it\n}\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveInventoryItem (id: string) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const inventoryItem = await inventoryModule.retrieveInventoryItem(id, {\n    relations: [\"inventory_level\"]\n  })\n\n  // do something with the inventory item or return it\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 299,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L299"
								}
							],
							"parameters": [
								{
									"id": 21,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the inventory item to retrieve."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 22,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 168,
										"typeArguments": [
											{
												"type": "reference",
												"target": 179,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 23,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 179,
										"name": "InventoryItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 24,
					"name": "retrieveInventoryLevel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 332,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L332"
						}
					],
					"signatures": [
						{
							"id": 25,
							"name": "retrieveInventoryLevel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve an inventory level for an inventory item and a location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved inventory level."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveInventoryLevel (\n  inventoryItemId: string, \n  locationId: string\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const inventoryLevel = await inventoryModule.retrieveInventoryLevel(\n    inventoryItemId,\n    locationId\n  )\n\n  // do something with the inventory level or return it\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 332,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L332"
								}
							],
							"parameters": [
								{
									"id": 26,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the inventory item."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 27,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 28,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 230,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 29,
					"name": "retrieveReservationItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 358,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L358"
						}
					],
					"signatures": [
						{
							"id": 30,
							"name": "retrieveReservationItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve a reservation item by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved reservation item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveReservationItem (id: string) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const reservationItem = await inventoryModule.retrieveReservationItem(id)\n\n  // do something with the reservation item or return it\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 358,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L358"
								}
							],
							"parameters": [
								{
									"id": 31,
									"name": "reservationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the reservation item."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 211,
										"name": "ReservationItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 128,
					"name": "retrieveReservedQuantity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 1046,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L1046"
						}
					],
					"signatures": [
						{
							"id": 129,
							"name": "retrieveReservedQuantity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve the reserved quantity of an inventory item within the specified locations."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The reserved quantity of the inventory item in the specified locations."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveReservedQuantity (\n  inventoryItemId: string,\n  locationIds: string[],\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const quantity = await inventoryModule.retrieveReservedQuantity(\n    inventoryItemId,\n    locationIds,\n  )\n  \n  // do something with the quantity or return it\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 1046,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L1046"
								}
							],
							"parameters": [
								{
									"id": 130,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the inventory item to retrieve its reserved quantity."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 131,
									"name": "locationIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the locations to retrieve the reserved quantity from."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 132,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 123,
					"name": "retrieveStockedQuantity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 1013,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L1013"
						}
					],
					"signatures": [
						{
							"id": 124,
							"name": "retrieveStockedQuantity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to retrieve the stocked quantity of an inventory item within the specified locations."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The stocked quantity of the inventory item in the specified locations."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function retrieveStockedQuantity (\n  inventoryItemId: string,\n  locationIds: string[],\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const quantity = await inventoryModule.retrieveStockedQuantity(\n    inventoryItemId,\n    locationIds,\n  )\n  \n  // do something with the quantity or return it\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 1013,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L1013"
								}
							],
							"parameters": [
								{
									"id": 125,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the inventory item to retrieve its stocked quantity."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 126,
									"name": "locationIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The IDs of the locations to retrieve the stocked quantity from."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 127,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 67,
					"name": "updateInventoryItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 646,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L646"
						}
					],
					"signatures": [
						{
							"id": 68,
							"name": "updateInventoryItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update an inventory item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory item's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function updateInventoryItem (\n  inventoryItemId: string,\n  sku: string\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const inventoryItem = await inventoryModule.updateInventoryItem(\n    inventoryItemId,\n    {\n      sku\n    }\n  )\n\n  // do something with the inventory item or return it\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 646,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L646"
								}
							],
							"parameters": [
								{
									"id": 69,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the inventory item."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 70,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the inventory item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 251,
												"name": "CreateInventoryItemInput",
												"package": "@medusajs/types"
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 71,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 179,
										"name": "InventoryItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 61,
					"name": "updateInventoryLevel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 610,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L610"
						}
					],
					"signatures": [
						{
							"id": 62,
							"name": "updateInventoryLevel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory level's details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function updateInventoryLevel (\n  inventoryItemId: string,\n  locationId: string,\n  stockedQuantity: number\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const inventoryLevel = await inventoryModule.updateInventoryLevels(\n    inventoryItemId,\n    locationId,\n    {\n      stocked_quantity: stockedQuantity\n    }\n  )\n\n  // do something with the inventory level or return it\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 610,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L610"
								}
							],
							"parameters": [
								{
									"id": 63,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the inventory item."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 64,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 65,
									"name": "update",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the location level."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 277,
										"name": "UpdateInventoryLevelInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 66,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 230,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 57,
					"name": "updateInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 573,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L573"
						}
					],
					"signatures": [
						{
							"id": 58,
							"name": "updateInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update inventory levels. Each inventory level is identified by the IDs of its associated inventory item and location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory levels' details."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function updateInventoryLevels (items: {\n  inventory_item_id: string,\n  location_id: string,\n  stocked_quantity: number\n}[]) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const inventoryLevels = await inventoryModule.updateInventoryLevels(\n    items\n  )\n\n  // do something with the inventory levels or return them\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 573,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L573"
								}
							],
							"parameters": [
								{
									"id": 59,
									"name": "updates",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in each inventory level."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 272,
											"name": "BulkUpdateInventoryLevelInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 60,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 230,
											"name": "InventoryLevelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 72,
					"name": "updateReservationItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 681,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L681"
						}
					],
					"signatures": [
						{
							"id": 73,
							"name": "updateReservationItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to update a reservation item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated reservation item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { \n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function updateReservationItem (\n  reservationItemId: string,\n  quantity: number\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  const reservationItem = await inventoryModule.updateReservationItem(\n    reservationItemId,\n    {\n      quantity\n    }\n  )\n\n  // do something with the reservation item or return it\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 681,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L681"
								}
							],
							"parameters": [
								{
									"id": 74,
									"name": "reservationItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the reservation item."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 75,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the reservation item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 280,
										"name": "UpdateReservationItemInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 76,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 199,
										"name": "SharedContext",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 211,
										"name": "ReservationItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						106,
						112,
						41,
						45,
						49,
						53,
						33,
						37,
						85,
						93,
						101,
						81,
						97,
						77,
						4,
						14,
						9,
						89,
						118,
						19,
						24,
						29,
						128,
						123,
						67,
						61,
						57,
						72
					]
				}
			],
			"sources": [
				{
					"fileName": "inventory/service.ts",
					"line": 20,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/service.ts#L20"
				}
			]
		},
		{
			"id": 285,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 287,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "joiner/index.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L38"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 316,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 316,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 298,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "joiner/index.ts",
							"line": 59,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L59"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 294,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "joiner/index.ts",
							"line": 52,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L52"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 295,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 297,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "joiner/index.ts",
												"line": 54,
												"character": 4,
												"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L54"
											}
										],
										"type": {
											"type": "reference",
											"target": 319,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									},
									{
										"id": 296,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "joiner/index.ts",
												"line": 53,
												"character": 4,
												"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L53"
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											297,
											296
										]
									}
								],
								"sources": [
									{
										"fileName": "joiner/index.ts",
										"line": 52,
										"character": 12,
										"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L52"
									}
								]
							}
						}
					}
				},
				{
					"id": 288,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "joiner/index.ts",
							"line": 42,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L42"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 289,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 291,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "joiner/index.ts",
															"line": 47,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L47"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 290,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "joiner/index.ts",
															"line": 46,
															"character": 8,
															"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L46"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														291,
														290
													]
												}
											],
											"sources": [
												{
													"fileName": "joiner/index.ts",
													"line": 45,
													"character": 6,
													"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L45"
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 292,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "joiner/index.ts",
							"line": 50,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L50"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 293,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "joiner/index.ts",
							"line": 51,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L51"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 319,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 286,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "joiner/index.ts",
							"line": 34,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L34"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						287,
						298,
						294,
						288,
						292,
						293,
						286
					]
				}
			],
			"sources": [
				{
					"fileName": "joiner/index.ts",
					"line": 33,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L33"
				}
			]
		},
		{
			"id": 316,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 318,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "joiner/index.ts",
							"line": 30,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L30"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 317,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "joiner/index.ts",
							"line": 26,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L26"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						318,
						317
					]
				}
			],
			"sources": [
				{
					"fileName": "joiner/index.ts",
					"line": 25,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L25"
				}
			]
		},
		{
			"id": 311,
			"name": "NumericalComparisonOperator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 313,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 191,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L191"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 314,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 192,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L192"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 312,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 190,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L190"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 315,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 193,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L193"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						313,
						314,
						312,
						315
					]
				}
			],
			"sources": [
				{
					"fileName": "common/common.ts",
					"line": 189,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L189"
				}
			]
		},
		{
			"id": 199,
			"name": "SharedContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A shared context object that is used to share resources between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 201,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of an entity manager."
							}
						]
					},
					"sources": [
						{
							"fileName": "shared-context.ts",
							"line": 16,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/shared-context.ts#L16"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					}
				},
				{
					"id": 200,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager."
							}
						]
					},
					"sources": [
						{
							"fileName": "shared-context.ts",
							"line": 12,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/shared-context.ts#L12"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
							"qualifiedName": "EntityManager"
						},
						"name": "EntityManager",
						"package": "typeorm"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						201,
						200
					]
				}
			],
			"sources": [
				{
					"fileName": "shared-context.ts",
					"line": 8,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/shared-context.ts#L8"
				}
			]
		},
		{
			"id": 303,
			"name": "StringComparisonOperator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 308,
					"name": "contains",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 184,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L184"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 310,
					"name": "ends_with",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 186,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L186"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 305,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 181,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L181"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 306,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 182,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L182"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 304,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 180,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L180"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 307,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 183,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L183"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 309,
					"name": "starts_with",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "common/common.ts",
							"line": 185,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L185"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						308,
						310,
						305,
						306,
						304,
						307,
						309
					]
				}
			],
			"sources": [
				{
					"fileName": "common/common.ts",
					"line": 179,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/common/common.ts#L179"
				}
			]
		},
		{
			"id": 277,
			"name": "UpdateInventoryLevelInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in an inventory level."
					}
				]
			},
			"children": [
				{
					"id": 279,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The incoming quantity of the associated inventory item in the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 457,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L457"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 278,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The stocked quantity of the associated inventory item in the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 453,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L453"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						279,
						278
					]
				}
			],
			"sources": [
				{
					"fileName": "inventory/common.ts",
					"line": 449,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L449"
				}
			]
		},
		{
			"id": 280,
			"name": "UpdateReservationItemInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a reservation item."
					}
				]
			},
			"children": [
				{
					"id": 283,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the reservation item."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 493,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L493"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 282,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 489,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L489"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 284,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 497,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L497"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 281,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reserved quantity."
							}
						]
					},
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 485,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L485"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						283,
						282,
						284,
						281
					]
				}
			],
			"sources": [
				{
					"fileName": "inventory/common.ts",
					"line": 481,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L481"
				}
			]
		},
		{
			"id": 179,
			"name": "InventoryItemDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"sources": [
				{
					"fileName": "inventory/common.ts",
					"line": 72,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L72"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 180,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 196,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 88,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L88"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 198,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 90,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L90"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 193,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Description of the inventory item"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 85,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L85"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 190,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 82,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L82"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 184,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Harmonized System code of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 76,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L76"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 181,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's ID."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 73,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L73"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 189,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 81,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L81"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 187,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material and composition that the Inventory Item is made of, May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L79"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 195,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 87,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L87"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 186,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Manufacturers Identification code that identifies the manufacturer of the Inventory Item. May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 78,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L78"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 183,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The country in which the Inventory Item was produced. May be used by Fulfillment Providers to pass customs information to shipping carriers."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 75,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L75"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 185,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item requires shipping."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 77,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L77"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 182,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The Stock Keeping Unit (SKU) code of the Inventory Item."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 74,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L74"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 194,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Thumbnail for the inventory item"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 86,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L86"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 192,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Title of the inventory item"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 84,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L84"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 197,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 89,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L89"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 188,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 80,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L80"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 191,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the Inventory Item. May be used in shipping rate calculations."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 83,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L83"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								196,
								198,
								193,
								190,
								184,
								181,
								189,
								187,
								195,
								186,
								183,
								185,
								182,
								194,
								192,
								197,
								188,
								191
							]
						}
					],
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 72,
							"character": 31,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L72"
						}
					]
				}
			}
		},
		{
			"id": 230,
			"name": "InventoryLevelDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [],
				"modifierTags": [
					"@interface"
				]
			},
			"sources": [
				{
					"fileName": "inventory/common.ts",
					"line": 192,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L192"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 231,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 239,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 200,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L200"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 241,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 202,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L202"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 232,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 193,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L193"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 237,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the incoming stock quantity of an inventory item at the given location ID"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 198,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L198"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 233,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 194,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L194"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 234,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the item location ID"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 195,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L195"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 238,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 199,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L199"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 236,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the reserved stock quantity of an inventory item at the given location ID"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 197,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L197"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 235,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the total stock quantity of an inventory item at the given location ID"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 196,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L196"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 240,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 201,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L201"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								239,
								241,
								232,
								237,
								233,
								234,
								238,
								236,
								235,
								240
							]
						}
					],
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 192,
							"character": 32,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L192"
						}
					]
				}
			}
		},
		{
			"id": 319,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "joiner/index.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L1"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 320,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 321,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "joiner/index.ts",
									"line": 2,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L2"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 328,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "joiner/index.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L22"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 322,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "joiner/index.ts",
									"line": 3,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L3"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 326,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "joiner/index.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 325,
							"name": "isInternalService",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the relationship is an internal service from the medusa core\nTODO: Remove when there are no more \"internal\" services"
									}
								]
							},
							"sources": [
								{
									"fileName": "joiner/index.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L10"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 327,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "joiner/index.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 323,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "joiner/index.ts",
									"line": 4,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L4"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 324,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "joiner/index.ts",
									"line": 5,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L5"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								321,
								328,
								322,
								326,
								325,
								327,
								323,
								324
							]
						}
					],
					"sources": [
						{
							"fileName": "joiner/index.ts",
							"line": 1,
							"character": 33,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/joiner/index.ts#L1"
						}
					]
				}
			}
		},
		{
			"id": 133,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "modules-sdk/index.ts",
					"line": 132,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L132"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 285,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 134,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 150,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "modules-sdk/index.ts",
											"line": 167,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L167"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 151,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 154,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "modules-sdk/index.ts",
															"line": 176,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L176"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 155,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 157,
																			"name": "defaultValue",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "modules-sdk/index.ts",
																					"line": 201,
																					"character": 8,
																					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L201"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 158,
																			"name": "nullable",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "modules-sdk/index.ts",
																					"line": 202,
																					"character": 8,
																					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L202"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "boolean"
																			}
																		},
																		{
																			"id": 159,
																			"name": "options",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"comment": {
																				"summary": [
																					{
																						"kind": "text",
																						"text": "Mikro-orm options for the column"
																					}
																				]
																			},
																			"sources": [
																				{
																					"fileName": "modules-sdk/index.ts",
																					"line": 206,
																					"character": 8,
																					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L206"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Record"
																				},
																				"typeArguments": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "unknown"
																					}
																				],
																				"name": "Record",
																				"package": "typescript"
																			}
																		},
																		{
																			"id": 156,
																			"name": "type",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "modules-sdk/index.ts",
																					"line": 179,
																					"character": 8,
																					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L179"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "date"
																					},
																					{
																						"type": "literal",
																						"value": "time"
																					},
																					{
																						"type": "literal",
																						"value": "datetime"
																					},
																					{
																						"type": "literal",
																						"value": "bigint"
																					},
																					{
																						"type": "literal",
																						"value": "blob"
																					},
																					{
																						"type": "literal",
																						"value": "uint8array"
																					},
																					{
																						"type": "literal",
																						"value": "array"
																					},
																					{
																						"type": "literal",
																						"value": "enumArray"
																					},
																					{
																						"type": "literal",
																						"value": "enum"
																					},
																					{
																						"type": "literal",
																						"value": "json"
																					},
																					{
																						"type": "literal",
																						"value": "integer"
																					},
																					{
																						"type": "literal",
																						"value": "smallint"
																					},
																					{
																						"type": "literal",
																						"value": "tinyint"
																					},
																					{
																						"type": "literal",
																						"value": "mediumint"
																					},
																					{
																						"type": "literal",
																						"value": "float"
																					},
																					{
																						"type": "literal",
																						"value": "double"
																					},
																					{
																						"type": "literal",
																						"value": "boolean"
																					},
																					{
																						"type": "literal",
																						"value": "decimal"
																					},
																					{
																						"type": "literal",
																						"value": "string"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "text"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				157,
																				158,
																				159,
																				156
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "modules-sdk/index.ts",
																			"line": 178,
																			"character": 6,
																			"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L178"
																		}
																	]
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 153,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "modules-sdk/index.ts",
															"line": 175,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L175"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 152,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "modules-sdk/index.ts",
															"line": 171,
															"character": 4,
															"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L171"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														154,
														153,
														152
													]
												}
											],
											"sources": [
												{
													"fileName": "modules-sdk/index.ts",
													"line": 167,
													"character": 19,
													"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L167"
												}
											]
										}
									}
								},
								{
									"id": 137,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "modules-sdk/index.ts",
											"line": 141,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L141"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 138,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 140,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "modules-sdk/index.ts",
																"line": 143,
																"character": 4,
																"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L143"
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 141,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 143,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "modules-sdk/index.ts",
																								"line": 148,
																								"character": 10,
																								"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L148"
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 142,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "modules-sdk/index.ts",
																								"line": 147,
																								"character": 10,
																								"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L147"
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							143,
																							142
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "modules-sdk/index.ts",
																						"line": 146,
																						"character": 8,
																						"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L146"
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 144,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "modules-sdk/index.ts",
																"line": 151,
																"character": 4,
																"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L151"
															}
														],
														"type": {
															"type": "reference",
															"target": 299,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 139,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "modules-sdk/index.ts",
																"line": 142,
																"character": 4,
																"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L142"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															140,
															144,
															139
														]
													}
												],
												"sources": [
													{
														"fileName": "modules-sdk/index.ts",
														"line": 141,
														"character": 12,
														"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L141"
													}
												]
											}
										}
									}
								},
								{
									"id": 147,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "modules-sdk/index.ts",
											"line": 158,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L158"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 149,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "modules-sdk/index.ts",
											"line": 166,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L166"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 148,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "modules-sdk/index.ts",
											"line": 162,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L162"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 146,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "modules-sdk/index.ts",
											"line": 154,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L154"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 136,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "modules-sdk/index.ts",
											"line": 140,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L140"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 299,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 135,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "modules-sdk/index.ts",
											"line": 139,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L139"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 145,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "modules-sdk/index.ts",
											"line": 153,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L153"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										150,
										137,
										147,
										149,
										148,
										146,
										136,
										135,
										145
									]
								}
							],
							"sources": [
								{
									"fileName": "modules-sdk/index.ts",
									"line": 135,
									"character": 4,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L135"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 299,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "modules-sdk/index.ts",
					"line": 212,
					"character": 20,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L212"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 319,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 300,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 302,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "modules-sdk/index.ts",
											"line": 220,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L220"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 301,
									"name": "isInternalService",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the relationship is an internal service from the medusa core TODO: Remove when there are no more \"internal\" services"
											}
										]
									},
									"sources": [
										{
											"fileName": "modules-sdk/index.ts",
											"line": 216,
											"character": 2,
											"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L216"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										302,
										301
									]
								}
							],
							"sources": [
								{
									"fileName": "modules-sdk/index.ts",
									"line": 212,
									"character": 68,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/modules-sdk/index.ts#L212"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 211,
			"name": "ReservationItemDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a reservation of an inventory item at a stock location"
					}
				],
				"modifierTags": [
					"@interface"
				]
			},
			"sources": [
				{
					"fileName": "inventory/common.ts",
					"line": 139,
					"character": 12,
					"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L139"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 212,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 221,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was created."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 148,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L148"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 219,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "UserId of user who created the reservation item"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 146,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L146"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 223,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was deleted."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 150,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L150"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 218,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Description of the reservation item"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 145,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L145"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 213,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the reservation item"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 140,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L140"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 215,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the inventory item the reservation relates to"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 142,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L142"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 217,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 144,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L144"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 214,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the location of the reservation"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 141,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L141"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 220,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An optional key-value map with additional details"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 147,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L147"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 216,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the reservation item"
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L143"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 222,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date with timezone at which the resource was updated."
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/common.ts",
									"line": 149,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L149"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								221,
								219,
								223,
								218,
								213,
								215,
								217,
								214,
								220,
								216,
								222
							]
						}
					],
					"sources": [
						{
							"fileName": "inventory/common.ts",
							"line": 139,
							"character": 33,
							"url": "https://github.com/medusajs/medusa/blob/fb0e733c8/packages/types/src/inventory/common.ts#L139"
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				272,
				251,
				266,
				242,
				160,
				224,
				202,
				168,
				1,
				285,
				316,
				311,
				199,
				303,
				277,
				280
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				179,
				230,
				319,
				133,
				299,
				211
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"0": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService"
		},
		"4": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"5": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"6": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"7": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"8": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"9": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"10": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"11": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"12": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"13": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"14": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"15": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"16": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"17": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"18": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"19": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"20": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"21": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"22": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"23": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"24": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"25": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"26": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"27": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"28": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"29": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"30": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"31": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "reservationId"
		},
		"32": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"33": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItem"
		},
		"34": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItem"
		},
		"35": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"36": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"37": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"38": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"39": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"40": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"41": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItem"
		},
		"42": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItem"
		},
		"43": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"44": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"45": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"46": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"47": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"48": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"49": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevel"
		},
		"50": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevel"
		},
		"51": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"52": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"53": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"54": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"55": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"56": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"57": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"58": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"59": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"60": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"61": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevel"
		},
		"62": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevel"
		},
		"63": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"64": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"65": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "update"
		},
		"66": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"67": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItem"
		},
		"68": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItem"
		},
		"69": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"70": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"71": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"72": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItem"
		},
		"73": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItem"
		},
		"74": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "reservationItemId"
		},
		"75": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"76": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"77": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"78": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"79": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"80": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"81": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItem"
		},
		"82": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItem"
		},
		"83": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "reservationItemId"
		},
		"84": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"85": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItem"
		},
		"86": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItem"
		},
		"87": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"88": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"89": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItem"
		},
		"90": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItem"
		},
		"91": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"92": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"93": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"94": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"95": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"96": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"97": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"98": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"99": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"100": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"101": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"102": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"103": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"104": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"105": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"106": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"107": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"108": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"109": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"110": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "adjustment"
		},
		"111": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"112": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"113": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"114": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"115": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"116": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "quantity"
		},
		"117": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"118": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"119": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"120": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"121": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"122": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"123": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"124": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"125": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"126": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"127": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"128": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"129": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"130": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"131": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"132": {
			"sourceFileName": "../../../packages/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"133": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"134": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"135": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"136": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"137": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"138": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"139": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"140": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"141": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"142": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"143": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"144": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"145": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"146": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"147": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"148": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"149": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"150": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"151": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"152": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"153": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"154": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"155": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"156": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"157": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"158": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"159": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"160": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "FilterableInventoryItemProps"
		},
		"161": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"162": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"163": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.q"
		},
		"164": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.sku"
		},
		"165": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.origin_country"
		},
		"166": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.hs_code"
		},
		"167": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.requires_shipping"
		},
		"168": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"169": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"170": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"171": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"172": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"173": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"174": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"175": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"177": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"178": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"179": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "InventoryItemDTO"
		},
		"180": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type"
		},
		"181": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"182": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.sku"
		},
		"183": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.origin_country"
		},
		"184": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.hs_code"
		},
		"185": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.requires_shipping"
		},
		"186": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.mid_code"
		},
		"187": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.material"
		},
		"188": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.weight"
		},
		"189": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.length"
		},
		"190": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.height"
		},
		"191": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.width"
		},
		"192": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.title"
		},
		"193": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.description"
		},
		"194": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.thumbnail"
		},
		"195": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"196": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"197": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"198": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"199": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "SharedContext"
		},
		"200": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"201": {
			"sourceFileName": "../../../packages/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"202": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "FilterableReservationItemProps"
		},
		"203": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"205": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.line_item_id"
		},
		"206": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"207": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"208": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.description"
		},
		"209": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_by"
		},
		"210": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.quantity"
		},
		"211": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "ReservationItemDTO"
		},
		"212": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type"
		},
		"213": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"214": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"215": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"216": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.quantity"
		},
		"217": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.line_item_id"
		},
		"218": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.description"
		},
		"219": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_by"
		},
		"220": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"221": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"222": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"223": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"224": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "FilterableInventoryLevelProps"
		},
		"225": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"226": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"227": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.stocked_quantity"
		},
		"228": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.reserved_quantity"
		},
		"229": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.incoming_quantity"
		},
		"230": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "InventoryLevelDTO"
		},
		"231": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type"
		},
		"232": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.id"
		},
		"233": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"234": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"235": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.stocked_quantity"
		},
		"236": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.reserved_quantity"
		},
		"237": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.incoming_quantity"
		},
		"238": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"239": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"240": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"241": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"242": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "CreateReservationItemInput"
		},
		"243": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.line_item_id"
		},
		"244": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"245": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"246": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.quantity"
		},
		"247": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.description"
		},
		"248": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.created_by"
		},
		"249": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.external_id"
		},
		"250": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"251": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "CreateInventoryItemInput"
		},
		"252": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.sku"
		},
		"253": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.origin_country"
		},
		"254": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.mid_code"
		},
		"255": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.material"
		},
		"256": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.weight"
		},
		"257": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.length"
		},
		"258": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.height"
		},
		"259": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.width"
		},
		"260": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.title"
		},
		"261": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.description"
		},
		"262": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.thumbnail"
		},
		"263": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"264": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.hs_code"
		},
		"265": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.requires_shipping"
		},
		"266": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "CreateInventoryLevelInput"
		},
		"267": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"268": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"269": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.stocked_quantity"
		},
		"270": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.reserved_quantity"
		},
		"271": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.incoming_quantity"
		},
		"272": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "BulkUpdateInventoryLevelInput"
		},
		"273": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"274": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"275": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.stocked_quantity"
		},
		"276": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.incoming_quantity"
		},
		"277": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "UpdateInventoryLevelInput"
		},
		"278": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.stocked_quantity"
		},
		"279": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.incoming_quantity"
		},
		"280": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "UpdateReservationItemInput"
		},
		"281": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.quantity"
		},
		"282": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.location_id"
		},
		"283": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.description"
		},
		"284": {
			"sourceFileName": "../../../packages/types/src/inventory/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"285": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"286": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"287": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"288": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"289": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"290": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"291": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"292": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"293": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"294": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"295": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"296": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"297": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"298": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"299": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"300": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"301": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"302": {
			"sourceFileName": "../../../packages/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"303": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"304": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"305": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"306": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"307": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"308": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"309": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"310": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"311": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"312": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"313": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"314": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"315": {
			"sourceFileName": "../../../packages/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"316": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"317": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"318": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"319": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"320": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"321": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"322": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"323": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"324": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"325": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isInternalService"
		},
		"326": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"327": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"328": {
			"sourceFileName": "../../../packages/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		}
	}
}